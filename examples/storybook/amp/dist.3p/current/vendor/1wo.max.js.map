{
  "version": 3,
  "sources": ["../../../src/polyfills/math-sign.js", "../../../src/polyfills/object-assign.js", "../../../src/polyfills/object-values.js", "../../../node_modules/promise-pjs/promise.mjs", "../../../src/polyfills/promise.js", "../../../src/polyfills/string-starts-with.js", "../../../3p/polyfills.js", "../../../src/core/constants/amp-events.js", "../../../src/core/data-structures/promise.js", "../../../src/core/types/array.js", "../../../src/core/types/string/index.js", "../../../src/core/types/object/index.js", "../../../src/core/types/index.js", "../../../src/core/error/message-helpers.js", "../../../src/core/assert/base.js", "../../../src/core/error/index.js", "../../../src/internal-version.js", "../../../src/core/types/string/url.js", "../../../src/mode.js", "../../../src/core/types/function/index.js", "../../../src/config.js", "../../../src/log.js", "../../../src/core/dom/event-helper-listen.js", "../../../src/core/types/object/json.js", "../../../src/3p-frame-messaging.js", "../../../src/core/data-structures/observable.js", "../../../third_party/css-escape/css-escape.js", "../../../src/event-helper.js", "../../../3p/iframe-messaging-client.js", "../../../src/core/data-structures/lru-cache.js", "../../../src/url.js", "../../../3p/ampcontext.js", "../../../3p/3p.js", "../../../3p/ampcontext-integration.js", "../../../3p/frame-metadata.js", "../../../3p/messaging.js", "../../../3p/environment.js", "../../../3p/integration-lib.js", "../../../ads/vendors/1wo.js", "../../../3p/vendors/1wo.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Parses the number x and returns its sign. For positive x returns 1, for\n * negative, -1. For 0 and -0, returns 0 and -0 respectively. For any number\n * that parses to NaN, returns NaN.\n *\n * @param {number} x\n * @return {number}\n */\nexport function sign(x) {\n  x = Number(x);\n\n  // If x is 0, -0, or NaN, return it.\n  if (!x) {\n    return x;\n  }\n\n  return x > 0 ? 1 : -1;\n}\n\n/**\n * Sets the Math.sign polyfill if it does not exist.\n * @param {!Window} win\n */\nexport function install(win) {\n  if (!win.Math.sign) {\n    win.Object.defineProperty(win.Math, 'sign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: sign,\n    });\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {hasOwnProperty} = Object.prototype;\n\n/**\n * Copies values of all enumerable own properties from one or more source\n * objects (provided as extended arguments to the function) to a target object.\n *\n * @param {!Object} target\n * @param {...Object} var_args\n * @return {!Object}\n */\nexport function assign(target, var_args) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1; i < arguments.length; i++) {\n    const source = arguments[i];\n    if (source != null) {\n      for (const key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n}\n\n/**\n * Sets the Object.assign polyfill if it does not exist.\n * @param {!Window} win\n */\nexport function install(win) {\n  if (!win.Object.assign) {\n    win.Object.defineProperty(win.Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign,\n    });\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Implements `Object.values` API.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Object/values.\n *\n * @param {!Object} target\n * @return {!Array<*>}\n */\nexport function values(target) {\n  return Object.keys(target).map((k) => target[k]);\n}\n\n/**\n * Sets the Object.values polyfill if it does not exist.\n * @param {!Window} win\n */\nexport function install(win) {\n  if (!win.Object.values) {\n    win.Object.defineProperty(win.Object, 'values', {\n      configurable: true,\n      writable: true,\n      value: values,\n    });\n  }\n}\n", "'use strict';\n\n/**\n * Constructs a ES6/Promises A+ Promise instance.\n *\n * @constructor\n * @param {function(function(*=), function (*=))} resolver\n */\nfunction Promise(resolver) {\n  if (!(this instanceof Promise)) {\n    throw new TypeError('Constructor Promise requires `new`');\n  }\n  if (!isFunction(resolver)) {\n    throw new TypeError('Must pass resolver function');\n  }\n\n  /**\n   * @type {function(this:Promise,*=,function(*=),function(*=),Deferred):!Promise}\n   * @private\n   */\n  this._state = PendingPromise;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  this._value = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this._isChainEnd = true;\n\n  doResolve(\n    this,\n    adopter(this, FulfilledPromise),\n    adopter(this, RejectedPromise),\n    { then: resolver }\n  );\n}\n\n/****************************\n  Public Instance Methods\n ****************************/\n\n/**\n * Creates a new promise instance that will receive the result of this promise\n * as inputs to the onFulfilled or onRejected callbacks.\n *\n * @param {function(*)} onFulfilled\n * @param {function(*)} onRejected\n */\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  onFulfilled = isFunction(onFulfilled) ? onFulfilled : void 0;\n  onRejected = isFunction(onRejected) ? onRejected : void 0;\n\n  if (onFulfilled || onRejected) {\n    this._isChainEnd = false;\n  }\n\n  return this._state(\n    this._value,\n    onFulfilled,\n    onRejected\n  );\n};\n\n/**\n * Creates a new promise that will handle the rejected state of this promise.\n *\n * @param {function(*)} onRejected\n * @returns {!Promise}\n */\nPromise.prototype.catch = function(onRejected) {\n  return this.then(void 0, onRejected);\n};\n\n/****************************\n  Public Static Methods\n ****************************/\n\n/**\n * Creates a fulfilled Promise of value. If value is itself a then-able,\n * resolves with the then-able's value.\n *\n * @this {!Promise}\n * @param {*=} value\n * @returns {!Promise}\n */\nPromise.resolve = function(value) {\n  var Constructor = this;\n  var promise;\n\n  if (isObject(value) && value instanceof this) {\n    promise = value;\n  } else {\n    promise = new Constructor(function(resolve) {\n      resolve(value);\n    });\n  }\n\n  return /** @type {!Promise} */(promise);\n};\n\n/**\n * Creates a rejected Promise of reason.\n *\n * @this {!Promise}\n * @param {*=} reason\n * @returns {!Promise}\n */\nPromise.reject = function(reason) {\n  var Constructor = this;\n  var promise = new Constructor(function(_, reject) {\n    reject(reason);\n  });\n\n  return /** @type {!Promise} */(promise);\n};\n\n/**\n * Creates a Promise that will resolve with an array of the values of the\n * passed in promises. If any promise rejects, the returned promise will\n * reject.\n *\n * @this {!Promise}\n * @param {!Array<Promise|*>} promises\n * @returns {!Promise}\n */\nPromise.all = function(promises) {\n  var Constructor = this;\n  var promise = new Constructor(function(resolve, reject) {\n    var length = promises.length;\n    var values = new Array(length);\n\n    if (length === 0) {\n      return resolve(values);\n    }\n\n    each(promises, function(promise, index) {\n      Constructor.resolve(promise).then(function(value) {\n        values[index] = value;\n        if (--length === 0) {\n          resolve(values);\n        }\n      }, reject);\n    });\n  });\n\n  return /** @type {!Promise} */(promise);\n};\n\n/**\n * Creates a Promise that will resolve or reject based on the first\n * resolved or rejected promise.\n *\n * @this {!Promise}\n * @param {!Array<Promise|*>} promises\n * @returns {!Promise}\n */\nPromise.race = function(promises) {\n  var Constructor = this;\n  var promise = new Constructor(function(resolve, reject) {\n    for (var i = 0; i < promises.length; i++) {\n      Constructor.resolve(promises[i]).then(resolve, reject);\n    }\n  });\n\n  return /** @type {!Promise} */(promise);\n};\n\nvar onPossiblyUnhandledRejection = function(reason, promise) {\n  throw reason;\n};\n\n/**\n * An internal use static function.\n */\nPromise._overrideUnhandledExceptionHandler = function(handler) {\n  onPossiblyUnhandledRejection = handler;\n};\n\n/****************************\n  Private functions\n ****************************/\n\n/**\n * The Fulfilled Promise state. Calls onFulfilled with the resolved value of\n * this promise, creating a new promise.\n *\n * If there is no onFulfilled, returns the current promise to avoid a promise\n * instance.\n *\n * @this {!Promise} The current promise\n * @param {*=} value The current promise's resolved value.\n * @param {function(*=)=} onFulfilled\n * @param {function(*=)=} unused\n * @param {Deferred} deferred A deferred object that holds a promise and its\n *     resolve and reject functions. It IS NOT passed when called from\n *     Promise#then to save an object instance (since we may return the current\n *     promise). It IS passed in when adopting the Fulfilled state from the\n *     Pending state.\n * @returns {!Promise}\n */\nfunction FulfilledPromise(value, onFulfilled, unused, deferred) {\n  if (!onFulfilled) {\n    deferredAdopt(deferred, FulfilledPromise, value);\n    return this;\n  }\n  if (!deferred) {\n    deferred = new Deferred(this.constructor);\n  }\n  defer(tryCatchDeferred(deferred, onFulfilled, value));\n  return deferred.promise;\n}\n\n/**\n * The Rejected Promise state. Calls onRejected with the resolved value of\n * this promise, creating a new promise.\n *\n * If there is no onRejected, returns the current promise to avoid a promise\n * instance.\n *\n * @this {!Promise} The current promise\n * @param {*=} reason The current promise's rejection reason.\n * @param {function(*=)=} unused\n * @param {function(*=)=} onRejected\n * @param {Deferred} deferred A deferred object that holds a promise and its\n *     resolve and reject functions. It IS NOT passed when called from\n *     Promise#then to save an object instance (since we may return the current\n *     promise). It IS passed in when adopting the Rejected state from the\n *     Pending state.\n * @returns {!Promise}\n */\nfunction RejectedPromise(reason, unused, onRejected, deferred) {\n  if (!onRejected) {\n    deferredAdopt(deferred, RejectedPromise, reason);\n    return this;\n  }\n  if (!deferred) {\n    deferred = new Deferred(this.constructor);\n  }\n  defer(tryCatchDeferred(deferred, onRejected, reason));\n  return deferred.promise;\n}\n\n/**\n * The Pending Promise state. Eventually calls onFulfilled once the promise has\n * resolved, or onRejected once the promise rejects.\n *\n * If there is no onFulfilled and no onRejected, returns the current promise to\n * avoid a promise instance.\n *\n * @this {!Promise} The current promise\n * @param {*=} queue The current promise's pending promises queue.\n * @param {function(*=)=} onFulfilled\n * @param {function(*=)=} onRejected\n * @param {Deferred} deferred A deferred object that holds a promise and its\n *     resolve and reject functions. It IS NOT passed when called from\n *     Promise#then to save an object instance (since we may return the current\n *     promise). It IS passed in when adopting the Pending state from the\n *     Pending state of another promise.\n * @returns {!Promise}\n */\nfunction PendingPromise(queue, onFulfilled, onRejected, deferred) {\n  if (!deferred) {\n    if (!onFulfilled && !onRejected) { return this; }\n    deferred = new Deferred(this.constructor);\n  }\n  queue.push({\n    deferred: deferred,\n    onFulfilled: onFulfilled || deferred.resolve,\n    onRejected: onRejected || deferred.reject\n  });\n  return deferred.promise;\n}\n\n/**\n * Constructs a deferred instance that holds a promise and its resolve and\n * reject functions.\n *\n * @constructor\n */\nfunction Deferred(Promise) {\n  var deferred = this;\n  /** @type {!Promise} */\n  this.promise = new Promise(function(resolve, reject) {\n    /** @type {function(*=)} */\n    deferred.resolve = resolve;\n\n    /** @type {function(*=)} */\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n\n/**\n * Transitions the state of promise to another state. This is only ever called\n * on with a promise that is currently in the Pending state.\n *\n * @param {!Promise} promise\n * @param {function(this:Promise,*=,function(*=),function(*=),Deferred):!Promise} state\n * @param {*=} value\n */\nfunction adopt(promise, state, value, adoptee) {\n  var queue = promise._value;\n  promise._state = state;\n  promise._value = value;\n\n  if (adoptee && state === PendingPromise) {\n    adoptee._state(value, void 0, void 0, {\n      promise: promise,\n      resolve: void 0,\n      reject: void 0\n    });\n  }\n\n  for (var i = 0; i < queue.length; i++) {\n    var next = queue[i];\n    promise._state(\n      value,\n      next.onFulfilled,\n      next.onRejected,\n      next.deferred\n    );\n  }\n  queue.length = 0;\n\n  // If we're adopting another promise, it's not the end of the promise chain,\n  // the new promise is.\n  if (adoptee) {\n    adoptee._isChainEnd = false;\n  }\n\n  // Determine if this rejected promise will be \"handled\".\n  if (state === RejectedPromise && promise._isChainEnd) {\n    setTimeout(function() {\n      if (promise._isChainEnd) {\n        onPossiblyUnhandledRejection(value, promise);\n      }\n    }, 0);\n  }\n}\n\n/**\n * A partial application of adopt.\n *\n * @param {!Promise} promise\n * @param {function(this:Promise,*=,function(*=),function(*=),Deferred):!Promise} state\n * @returns {function(*=)}\n */\nfunction adopter(promise, state) {\n  return function(value) {\n    adopt(promise, state, value);\n  };\n}\n\n/**\n * Updates a deferred promises state. Necessary for updating an adopting\n * promise's state when the adoptee resolves.\n *\n * @param {?Deferred} deferred\n * @param {function(this:Promise,*=,function(*=),function(*=),Deferred):!Promise} state\n * @param {*=} value\n */\nfunction deferredAdopt(deferred, state, value) {\n  if (deferred) {\n    var promise = deferred.promise;\n    promise._state = state;\n    promise._value = value;\n  }\n}\n\n/**\n * A no-op function to prevent double resolving.\n */\nfunction noop() {}\n\n/**\n * Tests if fn is a Function\n *\n * @param {*} fn\n * @returns {boolean}\n */\nfunction isFunction(fn) {\n  return typeof fn === 'function';\n}\n\n/**\n * Tests if fn is an Object\n *\n * @param {*} obj\n * @returns {boolean}\n */\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n/**\n * Iterates over each element of an array, calling the iterator with the\n * element and its index.\n *\n * @param {!Array} collection\n * @param {function(*=,number)} iterator\n */\nfunction each(collection, iterator) {\n  for (var i = 0; i < collection.length; i++) {\n    iterator(collection[i], i);\n  }\n}\n\n/**\n * Creates a function that will attempt to resolve the deferred with the return\n * of fn. If any error is raised, rejects instead.\n *\n * @param {!Deferred} deferred\n * @param {function(*=)} fn\n * @param {*} arg\n * @returns {function()}\n */\nfunction tryCatchDeferred(deferred, fn, arg) {\n  var promise = deferred.promise;\n  var resolve = deferred.resolve;\n  var reject = deferred.reject;\n  return function() {\n    try {\n      var result = fn(arg);\n      doResolve(promise, resolve, reject, result, result);\n    } catch (e) {\n      reject(e);\n    }\n  };\n}\n\n/**\n * Queues and executes multiple deferred functions on another run loop.\n */\nvar defer = (function() {\n  /**\n   * Defers fn to another run loop.\n   */\n  var scheduleFlush;\n  if (typeof window !== 'undefined' && window.postMessage) {\n    window.addEventListener('message', flush);\n    scheduleFlush = function() {\n      window.postMessage('macro-task', '*');\n    };\n  } else {\n    scheduleFlush = function() {\n      setTimeout(flush, 0);\n    };\n  }\n\n  var queue = new Array(16);\n  var length = 0;\n\n  function flush() {\n    for (var i = 0; i < length; i++) {\n      var fn = queue[i];\n      queue[i] = null;\n      fn();\n    }\n    length = 0;\n  }\n\n  /**\n   * @param {function()} fn\n   */\n  function defer(fn) {\n    if (length === 0) { scheduleFlush(); }\n    queue[length++] = fn;\n  }\n\n  return defer;\n})();\n\n/**\n * The Promise resolution procedure.\n * https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n *\n * @param {!Promise} promise\n * @param {function(*=)} resolve\n * @param {function(*=)} reject\n * @param {*} value\n * @param {*=} context\n */\nfunction doResolve(promise, resolve, reject, value, context) {\n  var _reject = reject;\n  var then;\n  var _resolve;\n  try {\n    if (value === promise) {\n      throw new TypeError('Cannot fulfill promise with itself');\n    }\n    var isObj = isObject(value);\n    if (isObj && value instanceof promise.constructor) {\n      adopt(promise, value._state, value._value, value);\n    } else if (isObj && (then = value.then) && isFunction(then)) {\n      _resolve = function(value) {\n        _resolve = _reject = noop;\n        doResolve(promise, resolve, reject, value, value);\n      };\n      _reject = function(reason) {\n        _resolve = _reject = noop;\n        reject(reason);\n      };\n      then.call(\n        context,\n        function(value) { _resolve(value); },\n        function(reason) { _reject(reason); }\n      );\n    } else {\n      resolve(value);\n    }\n  } catch (e) {\n    _reject(e);\n  }\n}\n\nexport default Promise;\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Promise from 'promise-pjs';\n\n/**\n * Sets the Promise polyfill if it does not exist.\n * @param {!Window} win\n */\nexport function install(win) {\n  if (!win.Promise) {\n    win.Promise = Promise;\n    // In babel the * export is an Object with a default property.\n    // In closure compiler it is the Promise function itself.\n    if (Promise.default) {\n      win.Promise = Promise.default;\n    }\n    // We copy the individual static methods, because closure\n    // compiler flattens the polyfill namespace.\n    win.Promise.resolve = Promise.resolve;\n    win.Promise.reject = Promise.reject;\n    win.Promise.all = Promise.all;\n    win.Promise.race = Promise.race;\n  }\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Return true if string begins with the characters of the specified string.\n * Polyfill copied from MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/string/startsWith\n *\n * @param {string} search\n * @param {number=} rawPos\n * @return {boolean}\n * @this {string}\n */\nfunction startsWith(search, rawPos) {\n  const pos = rawPos > 0 ? rawPos | 0 : 0;\n  // eslint-disable-next-line local/no-invalid-this\n  return this.substr(pos, search.length) === search;\n}\n\n/**\n * Sets the String.startsWith polyfill if it does not exist.\n * @param {!Window} win\n */\nexport function install(win) {\n  if (!win.String.prototype.startsWith) {\n    win.Object.defineProperty(win.String.prototype, 'startsWith', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: startsWith,\n    });\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Loads all polyfills needed by the AMP 3p integration frame.\n */\n\n// This list should not get longer without a very good reason.\nimport {install as installMathSign} from '../src/polyfills/math-sign';\nimport {install as installObjectAssign} from '../src/polyfills/object-assign';\nimport {install as installObjectValues} from '../src/polyfills/object-values';\nimport {install as installPromise} from '../src/polyfills/promise';\nimport {install as installStringStartsWith} from '../src/polyfills/string-starts-with';\n\nif (!IS_ESM) {\n  installMathSign(self);\n  installObjectAssign(self);\n  installObjectValues(self);\n  installPromise(self);\n  installStringStartsWith(self);\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/main/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load-start',\n  LOAD_END: 'amp:load-end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n  UNLOAD: 'amp:unload',\n};\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty?.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (const arg of arguments) {\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n    // It may not exist for Bento components without the runtime.\n    self.__AMP_REPORT_ERROR?.(error);\n    throw error;\n  });\n}\n\n/**\n * Executes the provided callback in a try/catch and rethrows any errors\n * asynchronously.\n *\n * @param {function(...*):T} callback\n * @param {...*} args\n * @return {T}\n * @template T\n */\nexport function tryCallback(callback, ...args) {\n  try {\n    return callback.apply(null, args);\n  } catch (e) {\n    rethrowAsync(e);\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @fileoverview Helpers to wrap functions. */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function throttle(win, callback, minInterval) {\n  let locker = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {!Object} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    // Lock the fire for minInterval milliseconds\n    locker = win.setTimeout(waiter, minInterval);\n\n    callback.apply(null, args);\n  }\n\n  /**\n   * Waiter function\n   */\n  function waiter() {\n    locker = 0;\n    // If during the period there're invocations queued up, fire once.\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function debounce(win, callback, minInterval) {\n  let locker = 0;\n  let timestamp = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {?Array} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n\n  /**\n   * Wait function for debounce\n   */\n  function waiter() {\n    locker = 0;\n    const remaining = minInterval - (win.Date.now() - timestamp);\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    timestamp = win.Date.now();\n    nextCallArgs = args;\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isArray} from '../array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {tryParseJson} from './core/types/object/json';\n\n/** @const */\nconst AMP_MESSAGE_PREFIX = 'amp-';\nexport const CONSTANTS = {\n  responseTypeSuffix: '-result',\n  messageIdFieldName: 'messageId',\n  payloadFieldName: 'payload',\n  contentFieldName: 'content',\n};\n\n/** @enum {string} */\nexport const MessageType = {\n  // For amp-ad\n  SEND_EMBED_STATE: 'send-embed-state',\n  EMBED_STATE: 'embed-state',\n  SEND_EMBED_CONTEXT: 'send-embed-context',\n  EMBED_CONTEXT: 'embed-context',\n  SEND_INTERSECTIONS: 'send-intersections',\n  INTERSECTION: 'intersection',\n  EMBED_SIZE: 'embed-size',\n  EMBED_SIZE_CHANGED: 'embed-size-changed',\n  EMBED_SIZE_DENIED: 'embed-size-denied',\n  NO_CONTENT: 'no-content',\n  GET_HTML: 'get-html',\n  GET_CONSENT_STATE: 'get-consent-state',\n  SIGNAL_INTERACTIVE: 'signal-interactive',\n\n  // For the frame to be placed in full overlay mode for lightboxes\n  FULL_OVERLAY_FRAME: 'full-overlay-frame',\n  FULL_OVERLAY_FRAME_RESPONSE: 'full-overlay-frame-response',\n  CANCEL_FULL_OVERLAY_FRAME: 'cancel-full-overlay-frame',\n  CANCEL_FULL_OVERLAY_FRAME_RESPONSE: 'cancel-full-overlay-frame-response',\n\n  // For amp-inabox\n  SEND_POSITIONS: 'send-positions',\n  POSITION: 'position',\n\n  // For amp-analytics' iframe-transport\n  SEND_IFRAME_TRANSPORT_EVENTS: 'send-iframe-transport-events',\n  IFRAME_TRANSPORT_EVENTS: 'iframe-transport-events',\n  IFRAME_TRANSPORT_RESPONSE: 'iframe-transport-response',\n\n  // For user-error-in-iframe\n  USER_ERROR_IN_IFRAME: 'user-error-in-iframe',\n\n  // For amp-iframe\n  SEND_CONSENT_DATA: 'send-consent-data',\n  CONSENT_DATA: 'consent-data',\n};\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Serialize an AMP post message. Output looks like:\n * 'amp-011481323099490{\"type\":\"position\",\"sentinel\":\"12345\",\"foo\":\"bar\"}'\n * @param {string} type\n * @param {string} sentinel\n * @param {JsonObject=} data\n * @param {?string=} rtvVersion\n * @return {string}\n */\nexport function serializeMessage(\n  type,\n  sentinel,\n  data = dict(),\n  rtvVersion = null\n) {\n  // TODO: consider wrap the data in a \"data\" field. { type, sentinal, data }\n  const message = data;\n  message['type'] = type;\n  message['sentinel'] = sentinel;\n  return AMP_MESSAGE_PREFIX + (rtvVersion || '') + JSON.stringify(message);\n}\n\n/**\n * Deserialize an AMP post message.\n * Returns null if it's not valid AMP message format.\n *\n * @param {*} message\n * @return {?JsonObject|undefined}\n */\nexport function deserializeMessage(message) {\n  if (!isAmpMessage(message)) {\n    return null;\n  }\n  const startPos = message.indexOf('{');\n  devAssert(startPos != -1, 'JSON missing in %s', message);\n  return tryParseJson(message.substr(startPos), (e) =>\n    dev().error('MESSAGING', 'Failed to parse message: ' + message, e)\n  );\n}\n\n/**\n *  Returns true if message looks like it is an AMP postMessage\n *  @param {*} message\n *  @return {boolean}\n */\nexport function isAmpMessage(message) {\n  return (\n    typeof message == 'string' &&\n    message.indexOf(AMP_MESSAGE_PREFIX) == 0 &&\n    message.indexOf('{') != -1\n  );\n}\n\n/** @typedef {{creativeId: string, message: string}} */\nexport let IframeTransportEvent;\n// An event, and the transport ID of the amp-analytics tags that\n// generated it. For instance if the creative with transport\n// ID 2 sends \"hi\", then an IframeTransportEvent would look like:\n// { creativeId: \"2\", message: \"hi\" }\n// If the creative with transport ID 2 sent that, and also sent \"hello\",\n// and the creative with transport ID 3 sends \"goodbye\" then an *array* of 3\n// AmpAnalyticsIframeTransportEvent would be sent to the 3p frame like so:\n// [\n//   { creativeId: \"2\", message: \"hi\" }, // An AmpAnalyticsIframeTransportEvent\n//   { creativeId: \"2\", message: \"hello\" }, // Another\n//   { creativeId: \"3\", message: \"goodbye\" } // And another\n// ]\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {removeItem} from '../types/array';\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    removeItem(this.handlers_, handler);\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    for (const handler of this.handlers_) {\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    return this.handlers_?.length ?? 0;\n  }\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {lastChildElement} from './core/dom/query';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  CONSTANTS,\n  deserializeMessage,\n  listen,\n  serializeMessage,\n} from '../src/3p-frame-messaging';\nimport {Observable} from '../src/core/data-structures/observable';\nimport {dev} from '../src/log';\nimport {dict, map} from '../src/core/types/object';\nimport {getData} from '../src/event-helper';\nimport {getMode} from '../src/mode';\n\nexport class IframeMessagingClient {\n  /**\n   * @param {!Window} win A window object.\n   * @param {Window=} hostWindow The host window to send messages to. If not set\n   * then we'll broadcast our messages to all parent windows and choose the\n   * first one with a valid response to be the host window.\n   */\n  constructor(win, hostWindow) {\n    /** @private {!Window} */\n    this.win_ = win;\n    /** @private {?string} */\n    this.rtvVersion_ = getMode().rtvVersion || null;\n    /** @private {?Window} */\n    this.hostWindow_ = hostWindow || null;\n    /** @private {?string} */\n    this.sentinel_ = null;\n    /** @type {number} */\n    this.nextMessageId_ = 1;\n    /**\n     * Map messageType keys to observables to be fired when messages of that\n     * type are received.\n     * @private {!Object}\n     */\n    this.observableFor_ = map();\n    this.setupEventListener_();\n  }\n\n  /**\n   * Retrieves data from host.\n   *\n   * @param {string} requestType\n   * @param {?Object} payload\n   * @param {function(*)} callback\n   */\n  getData(requestType, payload, callback) {\n    const responseType = requestType + CONSTANTS.responseTypeSuffix;\n    const messageId = this.nextMessageId_++;\n    const unlisten = this.registerCallback(responseType, (result) => {\n      if (result[CONSTANTS.messageIdFieldName] === messageId) {\n        unlisten();\n        callback(result[CONSTANTS.contentFieldName]);\n      }\n    });\n    const data = dict();\n    data[CONSTANTS.payloadFieldName] = payload;\n    data[CONSTANTS.messageIdFieldName] = messageId;\n    this.sendMessage(requestType, data);\n  }\n\n  /**\n   * Make an event listening request.\n   *\n   * @param {string} requestType The type of the request message.\n   * @param {string} responseType The type of the response message.\n   * @param {function(JsonObject)} callback The callback function to call\n   *   when a message with type responseType is received.\n   * @return {function()}\n   */\n  makeRequest(requestType, responseType, callback) {\n    const unlisten = this.registerCallback(responseType, callback);\n    this.sendMessage(requestType);\n    return unlisten;\n  }\n\n  /**\n   * Make a one time event listening request.\n   * Will unlisten after response is received.\n   *\n   * @param {string} requestType The type of the request message.\n   * @param {string} responseType The type of the response message.\n   * @param {function(Object)} callback The callback function to call\n   *   when a message with type responseType is received.\n   * @return {*} TODO(#23582): Specify return type\n   */\n  requestOnce(requestType, responseType, callback) {\n    const unlisten = this.registerCallback(responseType, (event) => {\n      unlisten();\n      callback(event);\n    });\n    this.sendMessage(requestType);\n    return unlisten;\n  }\n\n  /**\n   * Register callback function for message with type messageType.\n   * @param {string} messageType The type of the message.\n   * @param {function(?JsonObject)} callback The callback function to call\n   *   when a message with type messageType is received.\n   * @return {function()}\n   */\n  registerCallback(messageType, callback) {\n    // NOTE : no validation done here. any callback can be register\n    // for any callback, and then if that message is received, this\n    // class *will execute* that callback\n    return this.getOrCreateObservableFor_(messageType).add(callback);\n  }\n\n  /**\n   * Send a postMessage to Host Window, or all parent windows if host window is\n   * not set.\n   * @param {string} type The type of message to send.\n   * @param {JsonObject=} opt_payload The payload of message to send.\n   */\n  sendMessage(type, opt_payload) {\n    const msg = serializeMessage(\n      type,\n      dev().assertString(this.sentinel_),\n      opt_payload,\n      this.rtvVersion_\n    );\n\n    if (!this.hostWindow_) {\n      for (\n        let j = 0, hostWin = this.win_;\n        j < 10 && hostWin != this.win_.top;\n        j++\n      ) {\n        hostWin = hostWin.parent;\n        this.sendMessageInternal_(hostWin, msg);\n        j++;\n      }\n    } else {\n      this.sendMessageInternal_(this.hostWindow_, msg);\n    }\n  }\n\n  /**\n   * @param {!Window} win\n   * @param {string} msg\n   * private\n   */\n  sendMessageInternal_(win, msg) {\n    // opt in the userActivation feature\n    // see https://github.com/dtapuska/useractivation\n    if (this.isMessageOptionsSupported_(win)) {\n      this.postMessageWithUserActivation_(win, msg);\n    } else {\n      win./*OK*/ postMessage(msg, '*');\n    }\n  }\n\n  /**\n   * @param {!Window} win\n   * @param {string} msg\n   * @suppress {checkTypes} // Can be removed after closure compiler update their externs.\n   */\n  postMessageWithUserActivation_(win, msg) {\n    win./*OK*/ postMessage(\n      msg,\n      dict({\n        'targetOrigin': '*',\n        'includeUserActivation': true,\n      })\n    );\n  }\n\n  /**\n   * Sets up event listener for post messages of the desired type.\n   *   The actual implementation only uses a single event listener for all of\n   *   the different messages, and simply diverts the message to be handled\n   *   by different callbacks.\n   *   To add new messages to listen for, call registerCallback with the\n   *   messageType to listen for, and the callback function.\n   * @private\n   */\n  setupEventListener_() {\n    listen(this.win_, 'message', (event) => {\n      // If we have set a host window, strictly check that it's from it.\n      if (this.hostWindow_ && event.source != this.hostWindow_) {\n        return;\n      }\n\n      // Does it look like a message from AMP?\n      const message = deserializeMessage(getData(event));\n      if (!message || message['sentinel'] != this.sentinel_) {\n        return;\n      }\n\n      // At this point the message is valid; serialize necessary information and\n      // set its source as the host window if we don't have it set (aka in\n      // broadcast mode).\n      message['origin'] = event.origin;\n\n      if (!this.hostWindow_) {\n        this.hostWindow_ = event.source;\n      }\n\n      this.fireObservable_(message['type'], message);\n    });\n  }\n\n  /**\n   * @param {string} sentinel\n   */\n  setSentinel(sentinel) {\n    this.sentinel_ = sentinel;\n  }\n\n  /**\n   * @param {string} messageType\n   * @return {!Observable<?JsonObject>}\n   */\n  getOrCreateObservableFor_(messageType) {\n    if (!(messageType in this.observableFor_)) {\n      this.observableFor_[messageType] = new Observable();\n    }\n    return this.observableFor_[messageType];\n  }\n\n  /**\n   * @param {string} messageType\n   * @param {Object} message\n   */\n  fireObservable_(messageType, message) {\n    if (messageType in this.observableFor_) {\n      this.observableFor_[messageType].fire(message);\n    }\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {boolean}\n   */\n  isMessageOptionsSupported_(win) {\n    // Learned from https://github.com/dtapuska/useractivation\n    return win.postMessage.length == 1;\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './core/data-structures/lru-cache';\nimport {dict, hasOwn} from './core/types/object';\nimport {endsWith} from './core/types/string';\nimport {getMode} from './mode';\nimport {isArray} from './core/types';\nimport {parseQueryString} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {?} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {AmpEvents} from '../src/core/constants/amp-events';\nimport {Deferred} from '../src/core/data-structures/promise';\nimport {IframeMessagingClient} from './iframe-messaging-client';\nimport {MessageType} from '../src/3p-frame-messaging';\nimport {dev, devAssert} from '../src/log';\nimport {dict, map} from '../src/core/types/object';\nimport {isObject} from '../src/core/types';\nimport {parseUrlDeprecated} from '../src/url';\nimport {tryParseJson} from '../src/core/types/object/json';\n\nexport class AbstractAmpContext {\n  /**\n   *  @param {!Window} win The window that the instance is built inside.\n   */\n  constructor(win) {\n    devAssert(\n      !this.isAbstractImplementation_(),\n      'Should not construct AbstractAmpContext instances directly'\n    );\n\n    /** @protected {!Window} */\n    this.win_ = win;\n\n    // This value is cached since it could be overwritten by the master frame\n    // check using a value of a different type.\n    /** @private {?string} */\n    this.cachedFrameName_ = this.win_.name || null;\n\n    /** @protected {?string} */\n    this.embedType_ = null;\n\n    // ----------------------------------------------------\n    // Please keep public attributes alphabetically sorted.\n    // ----------------------------------------------------\n\n    /** @public {?string|undefined} */\n    this.canary = null;\n\n    /** @type {?string} */\n    this.canonicalUrl = null;\n\n    /** @type {?string} */\n    this.clientId = null;\n\n    /** @type {?string|undefined} */\n    this.container = null;\n\n    /** @type {?Object} */\n    this.consentSharedData = null;\n\n    /** @type {?Object<string, *>} */\n    this.data = null;\n\n    /** @type {?string} */\n    this.domFingerprint = null;\n\n    /** @type {?boolean} */\n    this.hidden = null;\n\n    /** @type {?number} */\n    this.initialConsentState = null;\n\n    /** @type {?string} */\n    this.initialConsentValue = null;\n\n    /** @type {?Object} */\n    this.initialConsentMetadata = null;\n\n    /** @type {?Object} */\n    this.initialLayoutRect = null;\n\n    /** @type {?Object} */\n    this.initialIntersection = null;\n\n    /** @type {?Location} */\n    this.location = null;\n\n    /** @type {?Object} */\n    this.mode = null;\n\n    /** @type {?string} */\n    this.pageViewId = null;\n\n    /** @type {?string} */\n    this.referrer = null;\n\n    /** @type {?string} */\n    this.sentinel = null;\n\n    /** @type {?string} */\n    this.sourceUrl = null;\n\n    /** @type {?number} */\n    this.startTime = null;\n\n    /** @type {?string} */\n    this.tagName = null;\n\n    /** @type {!Object<number, Deferred>} */\n    this.resizeIdToDeferred_ = map();\n\n    /** @type {number} */\n    this.nextResizeRequestId_ = 0;\n\n    this.findAndSetMetadata_();\n\n    /** @protected {!IframeMessagingClient} */\n    this.client_ = new IframeMessagingClient(win, this.getHostWindow_());\n    this.client_.setSentinel(devAssert(this.sentinel));\n\n    this.listenForPageVisibility_();\n    this.listenToResizeResponse_();\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  isAbstractImplementation_() {\n    return true;\n  }\n\n  /** Registers an general handler for page visibility. */\n  listenForPageVisibility_() {\n    this.client_.makeRequest(\n      MessageType.SEND_EMBED_STATE,\n      MessageType.EMBED_STATE,\n      (data) => {\n        this.hidden = data['pageHidden'];\n        this.dispatchVisibilityChangeEvent_();\n      }\n    );\n  }\n\n  /**\n   * TODO(alanorozco): Deprecate native event mechanism.\n   * @private\n   */\n  dispatchVisibilityChangeEvent_() {\n    const event = this.win_.document.createEvent('Event');\n    event.data = {hidden: this.hidden};\n    event.initEvent(AmpEvents.VISIBILITY_CHANGE, true, true);\n    this.win_.dispatchEvent(event);\n  }\n\n  /**\n   *  Listen to page visibility changes.\n   *  @param {function({hidden: boolean})} callback Function to call every time\n   *    we receive a page visibility message.\n   *  @return {function()} that when called stops triggering the callback\n   *    every time we receive a page visibility message.\n   */\n  onPageVisibilityChange(callback) {\n    return this.client_.registerCallback(MessageType.EMBED_STATE, (data) => {\n      callback({hidden: data['pageHidden']});\n    });\n  }\n\n  /**\n   *  Send message to runtime to start sending intersection messages.\n   *  @param {function(Array<Object>)} callback Function to call every time we\n   *    receive an intersection message.\n   *  @return {function()} that when called stops triggering the callback\n   *    every time we receive an intersection message.\n   */\n  observeIntersection(callback) {\n    return this.client_.makeRequest(\n      MessageType.SEND_INTERSECTIONS,\n      MessageType.INTERSECTION,\n      (intersection) => {\n        callback(intersection['changes']);\n      }\n    );\n  }\n\n  /**\n   *  Requests HTML snippet from the parent window.\n   *  @param {string} selector CSS selector\n   *  @param {!Array<string>} attributes permissible attributes to be kept\n   *    in the returned HTML string\n   *  @param {function(*)} callback to be invoked with the HTML string\n   */\n  getHtml(selector, attributes, callback) {\n    this.client_.getData(\n      MessageType.GET_HTML,\n      dict({\n        'selector': selector,\n        'attributes': attributes,\n      }),\n      callback\n    );\n  }\n\n  /**\n   * Requests consent state from the parent window.\n   *\n   * @param {function(*)} callback\n   */\n  getConsentState(callback) {\n    this.client_.getData(MessageType.GET_CONSENT_STATE, null, callback);\n  }\n\n  /**\n   *  Send message to runtime requesting to resize ad to height and width.\n   *    This is not guaranteed to succeed. All this does is make the request.\n   *  @param {number|undefined} width The new width for the ad we are requesting.\n   *  @param {number|undefined} height The new height for the ad we are requesting.\n   *  @param {boolean=} hasOverflow Whether the ad handles its own overflow ele\n   *  @return {Promise} Signify the success/failure of the request.\n   */\n  requestResize(width, height, hasOverflow) {\n    const requestId = this.nextResizeRequestId_++;\n    this.client_.sendMessage(\n      MessageType.EMBED_SIZE,\n      dict({\n        'id': requestId,\n        'width': width,\n        'height': height,\n        'hasOverflow': hasOverflow,\n      })\n    );\n    const deferred = new Deferred();\n    this.resizeIdToDeferred_[requestId] = deferred;\n    return deferred.promise;\n  }\n\n  /**\n   *  Set up listeners to handle responses from request size.\n   */\n  listenToResizeResponse_() {\n    this.client_.registerCallback(MessageType.EMBED_SIZE_CHANGED, (data) => {\n      const id = data['id'];\n      if (id !== undefined) {\n        this.resizeIdToDeferred_[id].resolve();\n        delete this.resizeIdToDeferred_[id];\n      }\n    });\n\n    this.client_.registerCallback(MessageType.EMBED_SIZE_DENIED, (data) => {\n      const id = data['id'];\n      if (id !== undefined) {\n        this.resizeIdToDeferred_[id].reject('Resizing is denied');\n        delete this.resizeIdToDeferred_[id];\n      }\n    });\n  }\n\n  /**\n   * @param {string} endpoint Method being called\n   * @private\n   */\n  sendDeprecationNotice_(endpoint) {\n    this.client_.sendMessage(\n      MessageType.USER_ERROR_IN_IFRAME,\n      dict({\n        'message': `${endpoint} is deprecated`,\n        'expected': true,\n      })\n    );\n  }\n\n  /**\n   *  Allows a creative to set the callback function for when the resize\n   *    request returns a success. The callback should be set before resizeAd\n   *    is ever called.\n   *  @param {function(number, number)} callback Function to call if the resize\n   *    request succeeds.\n   */\n  onResizeSuccess(callback) {\n    this.client_.registerCallback(MessageType.EMBED_SIZE_CHANGED, (obj) => {\n      callback(obj['requestedHeight'], obj['requestedWidth']);\n    });\n    this.sendDeprecationNotice_('onResizeSuccess');\n  }\n\n  /**\n   *  Allows a creative to set the callback function for when the resize\n   *    request is denied. The callback should be set before resizeAd\n   *    is ever called.\n   *  @param {function(number, number)} callback Function to call if the resize\n   *    request is denied.\n   */\n  onResizeDenied(callback) {\n    this.client_.registerCallback(MessageType.EMBED_SIZE_DENIED, (obj) => {\n      callback(obj['requestedHeight'], obj['requestedWidth']);\n    });\n    this.sendDeprecationNotice_('onResizeDenied');\n  }\n\n  /**\n   *  Make the ad interactive.\n   */\n  signalInteractive() {\n    this.client_.sendMessage(MessageType.SIGNAL_INTERACTIVE);\n  }\n\n  /**\n   *  Takes the current name on the window, and attaches it to\n   *  the name of the iframe.\n   *  @param {HTMLIFrameElement} iframe The iframe we are adding the context to.\n   */\n  addContextToIframe(iframe) {\n    // TODO(alanorozco): consider the AMP_CONTEXT_DATA case\n    iframe.name = dev().assertString(this.cachedFrameName_);\n  }\n\n  /**\n   *  Notifies the parent document of no content available inside embed.\n   */\n  noContentAvailable() {\n    this.client_.sendMessage(MessageType.NO_CONTENT);\n  }\n\n  /**\n   *  Parse the metadata attributes from the name and add them to\n   *  the class instance.\n   *  @param {!Object|string} data\n   *  @private\n   */\n  setupMetadata_(data) {\n    // TODO(alanorozco): Use metadata utils in 3p/frame-metadata\n    const dataObject = devAssert(\n      typeof data === 'string' ? tryParseJson(data) : data,\n      'Could not setup metadata.'\n    );\n\n    const context = dataObject._context || dataObject.attributes._context;\n\n    this.data = dataObject.attributes || dataObject;\n\n    // TODO(alanorozco, #10576): This is really ugly. Find a better structure\n    // than passing context values via data.\n    if ('_context' in this.data) {\n      delete this.data['_context'];\n    }\n\n    this.canary = context.canary;\n    this.canonicalUrl = context.canonicalUrl;\n    this.clientId = context.clientId;\n    this.consentSharedData = context.consentSharedData;\n    this.container = context.container;\n    this.domFingerprint = context.domFingerprint;\n    this.hidden = context.hidden;\n    this.initialConsentState = context.initialConsentState;\n    this.initialConsentValue = context.initialConsentValue;\n    this.initialConsentMetadata = context.initialConsentMetadata;\n    this.initialLayoutRect = context.initialLayoutRect;\n    this.initialIntersection = context.initialIntersection;\n    this.location = parseUrlDeprecated(context.location.href);\n    this.mode = context.mode;\n    this.pageViewId = context.pageViewId;\n    this.referrer = context.referrer;\n    this.sentinel = context.sentinel;\n    this.sourceUrl = context.sourceUrl;\n    this.startTime = context.startTime;\n    this.tagName = context.tagName;\n\n    this.embedType_ = dataObject.type || null;\n  }\n\n  /**\n   * Calculate the hostWindow\n   * @private\n   * @return {!Window}\n   */\n  getHostWindow_() {\n    const sentinelMatch = this.sentinel.match(/((\\d+)-\\d+)/);\n    devAssert(sentinelMatch, 'Incorrect sentinel format');\n    const depth = Number(sentinelMatch[2]);\n    const ancestors = [];\n    for (let win = this.win_; win && win != win.parent; win = win.parent) {\n      // Add window keeping the top-most one at the front.\n      ancestors.push(win.parent);\n    }\n    return ancestors[ancestors.length - 1 - depth];\n  }\n\n  /**\n   *  Checks to see if there is a window variable assigned with the\n   *  sentinel value, sets it, and returns true if so.\n   *  @private\n   */\n  findAndSetMetadata_() {\n    // If the context data is set on window, that means we don't need\n    // to check the name attribute as it has been bypassed.\n    // TODO(alanorozco): why the heck could AMP_CONTEXT_DATA be two different\n    // types? FIX THIS.\n    if (isObject(this.win_.sf_) && this.win_.sf_.cfg) {\n      this.setupMetadata_(/** @type {string}*/ (this.win_.sf_.cfg));\n    } else if (this.win_.AMP_CONTEXT_DATA) {\n      if (typeof this.win_.AMP_CONTEXT_DATA == 'string') {\n        this.sentinel = this.win_.AMP_CONTEXT_DATA;\n      } else if (isObject(this.win_.AMP_CONTEXT_DATA)) {\n        this.setupMetadata_(this.win_.AMP_CONTEXT_DATA);\n      }\n    } else {\n      this.setupMetadata_(this.win_.name);\n    }\n  }\n\n  /**\n   * Send 3p error to parent iframe\n   * @param {!Error} e\n   */\n  report3pError(e) {\n    if (!e.message) {\n      return;\n    }\n    this.client_.sendMessage(\n      MessageType.USER_ERROR_IN_IFRAME,\n      dict({\n        'message': e.message,\n      })\n    );\n  }\n}\n\nexport class AmpContext extends AbstractAmpContext {\n  /** @override */\n  isAbstractImplementation_() {\n    return false;\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility functions for scripts running inside of a third\n * party iframe.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\n\nimport {devAssert, userAssert} from '../src/log';\nimport {hasOwn, map} from '../src/core/types/object';\nimport {isArray} from '../src/core/types';\nimport {rethrowAsync} from '../src/core/error';\n\n/** @typedef {function(!Window, !Object)}  */\nlet ThirdPartyFunctionDef;\n\n/**\n * @const {!Object<ThirdPartyFunctionDef>}\n * @visibleForTesting\n */\nlet registrations;\n\n/** @type {number} */\nlet syncScriptLoads = 0;\n\n/**\n * Returns the registration map\n * @return {*} TODO(#23582): Specify return type\n */\nexport function getRegistrations() {\n  if (!registrations) {\n    registrations = map();\n  }\n  return registrations;\n}\n\n/**\n * @param {string} id The specific 3p integration.\n * @param {ThirdPartyFunctionDef} draw Function that draws the 3p integration.\n */\nexport function register(id, draw) {\n  const registrations = getRegistrations();\n  devAssert(!registrations[id], 'Double registration %s', id);\n  registrations[id] = draw;\n}\n\n/**\n * Execute the 3p integration with the given id.\n * @param {string} id\n * @param {!Window} win\n * @param {!Object} data\n */\nexport function run(id, win, data) {\n  const fn = registrations[id];\n  userAssert(fn, 'Unknown 3p: ' + id);\n  fn(win, data);\n}\n\n/**\n * Synchronously load the given script URL. Only use this if you need a sync\n * load. Otherwise use {@link loadScript}.\n * Supports taking a callback that will be called synchronously after the given\n * script was executed.\n * @param {!Window} win\n * @param {string} url\n * @param {function()=} opt_cb\n */\nexport function writeScript(win, url, opt_cb) {\n  win.document.write(\n    // eslint-disable-next-line no-useless-concat\n    '<' + 'script src=\"' + encodeURI(url) + '\"><' + '/script>'\n  );\n  if (opt_cb) {\n    executeAfterWriteScript(win, opt_cb);\n  }\n}\n\n/**\n * Asynchronously load the given script URL.\n * @param {!Window} win\n * @param {string} url\n * @param {function()=} opt_cb\n * @param {function()=} opt_errorCb\n */\nexport function loadScript(win, url, opt_cb, opt_errorCb) {\n  /** @const {!Element} */\n  const s = win.document.createElement('script');\n  s.src = url;\n  if (opt_cb) {\n    s.onload = opt_cb;\n  }\n  if (opt_errorCb) {\n    s.onerror = opt_errorCb;\n  }\n  win.document.body.appendChild(s);\n}\n\n/**\n * Call function in micro task or timeout as a fallback.\n * This is a lightweight helper, because we cannot guarantee that\n * Promises are available inside the 3p frame.\n * @param {!Window} win\n * @param {function()} fn\n */\nexport function nextTick(win, fn) {\n  const P = win.Promise;\n  if (P) {\n    P.resolve()./*OK*/ then(fn);\n  } else {\n    win.setTimeout(fn, 0);\n  }\n}\n\n/**\n * Run the function after all currently waiting sync scripts have been\n * executed.\n * @param {!Window} win\n * @param {function()} fn\n */\nfunction executeAfterWriteScript(win, fn) {\n  const index = syncScriptLoads++;\n  win['__runScript' + index] = fn;\n  // eslint-disable-next-line no-useless-concat\n  win.document.write('<' + 'script>__runScript' + index + '()<' + '/script>');\n}\n\n/**\n * Throws if the given src doesn't start with prefix(es).\n * @param {!Array<string>|string} prefix\n * @param {string} src\n */\nexport function validateSrcPrefix(prefix, src) {\n  if (!isArray(prefix)) {\n    prefix = [prefix];\n  }\n  if (src !== undefined) {\n    for (let p = 0; p < prefix.length; p++) {\n      const protocolIndex = src.indexOf(prefix[p]);\n      if (protocolIndex == 0) {\n        return;\n      }\n    }\n  }\n  throw new Error('Invalid src ' + src);\n}\n\n/**\n * Throws if the given src doesn't contain the string\n * @param {string} string\n * @param {string} src\n */\nexport function validateSrcContains(string, src) {\n  if (src.indexOf(string) === -1) {\n    throw new Error('Invalid src ' + src);\n  }\n}\n\n/**\n * Utility function to perform a potentially asynchronous task\n * exactly once for all frames of a given type and the provide the respective\n * value to all frames.\n * @param {!Window} global Your window\n * @param {string} taskId Must be not conflict with any other global variable\n *     you use. Must be the same for all callers from all frames that want\n *     the same result.\n * @param {function(function(*))} work Function implementing the work that\n *     is to be done. Receives a second function that should be called with\n *     the result when the work is done.\n * @param {function(*)} cb Callback function that is called when the work is\n *     done. The first argument is the result.\n */\nexport function computeInMasterFrame(global, taskId, work, cb) {\n  const {master} = global.context;\n  let tasks = master.__ampMasterTasks;\n  if (!tasks) {\n    tasks = master.__ampMasterTasks = {};\n  }\n  let cbs = tasks[taskId];\n  if (!tasks[taskId]) {\n    cbs = tasks[taskId] = [];\n  }\n  cbs.push(cb);\n  if (!global.context.isMaster) {\n    return; // Only do work in master.\n  }\n  work((result) => {\n    for (let i = 0; i < cbs.length; i++) {\n      cbs[i].call(null, result);\n    }\n    tasks[taskId] = {\n      push(cb) {\n        cb(result);\n      },\n    };\n  });\n}\n\n/**\n * Validates given data. Throws an exception if the data does not\n * contains a mandatory field. If called with the optional param\n * opt_optionalFields, it also validates that the data contains no fields other\n * than mandatory and optional fields.\n *\n * Mandatory fields also accept a string Array as an item. All items in that\n * array are considered as alternatives to each other. So the validation checks\n * that the data contains exactly one of those alternatives.\n *\n * @param {!Object} data\n * @param {!Array<string|!Array<string>>} mandatoryFields\n * @param {Array<string>=} opt_optionalFields\n */\nexport function validateData(data, mandatoryFields, opt_optionalFields) {\n  let allowedFields = opt_optionalFields || [];\n  for (let i = 0; i < mandatoryFields.length; i++) {\n    const field = mandatoryFields[i];\n    if (Array.isArray(field)) {\n      validateExactlyOne(data, field);\n      allowedFields = allowedFields.concat(field);\n    } else {\n      userAssert(\n        // Allow zero values for height, width etc.\n        data[field] != null,\n        'Missing attribute for %s: %s.',\n        data.type,\n        field\n      );\n      allowedFields.push(field);\n    }\n  }\n  if (opt_optionalFields) {\n    validateAllowedFields(data, allowedFields);\n  }\n}\n\n/**\n * Throws an exception if data does not contains exactly one field\n * mentioned in the alternativeFields array.\n * @param {!Object} data\n * @param {!Array<string>} alternativeFields\n */\nfunction validateExactlyOne(data, alternativeFields) {\n  userAssert(\n    alternativeFields.filter((field) => data[field]).length === 1,\n    '%s must contain exactly one of attributes: %s.',\n    data.type,\n    alternativeFields.join(', ')\n  );\n}\n\n/**\n * Throws a non-interrupting exception if data contains a field not supported\n * by this embed type.\n * @param {!Object} data\n * @param {!Array<string>} allowedFields\n */\nfunction validateAllowedFields(data, allowedFields) {\n  const defaultAvailableFields = {\n    width: true,\n    height: true,\n    type: true,\n    referrer: true,\n    canonicalUrl: true,\n    pageViewId: true,\n    location: true,\n    mode: true,\n    consentNotificationId: true,\n    blockOnConsent: true,\n    ampSlotIndex: true,\n    adHolderText: true,\n    loadingStrategy: true,\n    htmlAccessAllowed: true,\n    adContainerId: true,\n  };\n\n  for (const field in data) {\n    if (!hasOwn(data, field) || field in defaultAvailableFields) {\n      continue;\n    }\n    if (allowedFields.indexOf(field) < 0) {\n      // Throw in a timeout, because we do not want to interrupt execution,\n      // because that would make each removal an instant backward incompatible\n      // change.\n      rethrowAsync(new Error(`Unknown attribute for ${data.type}: ${field}.`));\n    }\n  }\n}\n\n/** @private {!Object<string, boolean>} */\nlet experimentToggles = {};\n\n/**\n * Returns true if an experiment is enabled.\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(experimentId) {\n  return experimentToggles && !!experimentToggles[experimentId];\n}\n\n/**\n * Set experiment toggles.\n * @param {!Object<string, boolean>} toggles\n */\nexport function setExperimentToggles(toggles) {\n  experimentToggles = toggles;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {AbstractAmpContext} from './ampcontext';\nimport {computeInMasterFrame} from './3p';\nimport {dev, user, userAssert} from '../src/log';\nimport {dict} from '../src/core/types/object';\n\n/**\n * Returns the \"master frame\" for all widgets of a given type.\n * This frame should be used to e.g. fetch scripts that can\n * be reused across frames.\n * once experiment is removed.\n * @param {!Window} win\n * @param {string} type\n * @return {!Window}\n */\nexport function masterSelection(win, type) {\n  type = type.toLowerCase();\n  // The master has a special name.\n  const masterName = 'frame_' + type + '_master';\n  let master;\n  try {\n    // Try to get the master from the parent. If it does not\n    // exist yet we get a security exception that we catch\n    // and ignore.\n    master = win.parent.frames[masterName];\n  } catch (expected) {\n    /* ignore */\n  }\n  if (!master) {\n    // No master yet, rename ourselves to be master. Yaihh.\n    win.name = masterName;\n    master = win;\n  }\n  return master;\n}\n\nexport class IntegrationAmpContext extends AbstractAmpContext {\n  /** @override */\n  isAbstractImplementation_() {\n    return false;\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  updateDimensionsEnabled_() {\n    // Only make this available to selected embeds until the generic solution is\n    // available.\n    return (\n      this.embedType_ === 'facebook' ||\n      this.embedType_ === 'twitter' ||\n      this.embedType_ === 'github' ||\n      this.embedType_ === 'mathml' ||\n      this.embedType_ === 'reddit' ||\n      this.embedType_ === 'yotpo' ||\n      this.embedType_ === 'embedly'\n    );\n  }\n\n  /** @return {!Window} */\n  get master() {\n    return this.master_();\n  }\n\n  /** @return {!Window} */\n  master_() {\n    return masterSelection(this.win_, dev().assertString(this.embedType_));\n  }\n\n  /** @return {boolean} */\n  get isMaster() {\n    return this.isMaster_();\n  }\n\n  /** @return {boolean} */\n  isMaster_() {\n    return this.master == this.win_;\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   */\n  updateDimensions(width, height) {\n    userAssert(this.updateDimensionsEnabled_(), 'Not available.');\n    this.requestResize(width, height);\n  }\n\n  /**\n   * Sends bootstrap loaded message.\n   */\n  bootstrapLoaded() {\n    this.client_.sendMessage('bootstrap-loaded');\n  }\n\n  /**\n   * @param {!JsonObject=} opt_data Fields: width, height\n   */\n  renderStart(opt_data) {\n    this.client_.sendMessage('render-start', opt_data);\n  }\n\n  /**\n   * Reports the \"entity\" that was rendered to this frame to the parent for\n   * reporting purposes.\n   * The entityId MUST NOT contain user data or personal identifiable\n   * information. One example for an acceptable data item would be the\n   * creative id of an ad, while the user's location would not be\n   * acceptable.\n   * TODO(alanorozco): Remove duplicate in 3p/integration.js once this\n   * implementation becomes canonical.\n   * @param {string} entityId See comment above for content.\n   */\n  reportRenderedEntityIdentifier(entityId) {\n    this.client_.sendMessage(\n      'entity-id',\n      dict({\n        'id': user().assertString(entityId),\n      })\n    );\n  }\n\n  /**\n   * Performs a potentially asynchronous task exactly once for all frames of a\n   * given type and the provide the respective value to all frames.\n   * @param {!Window} global Your window\n   * @param {string} taskId Must be not conflict with any other global variable\n   *     you use. Must be the same for all callers from all frames that want\n   *     the same result.\n   * @param {function(function(*))} work Function implementing the work that\n   *     is to be done. Receives a second function that should be called with\n   *     the result when the work is done.\n   * @param {function(*)} cb Callback function that is called when the work is\n   *     done. The first argument is the result.\n   */\n  computeInMasterFrame(global, taskId, work, cb) {\n    computeInMasterFrame(global, taskId, work, cb);\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../src/log';\nimport {dict} from '../src/core/types/object';\nimport {getMode} from '../src/mode';\nimport {once} from '../src/core/types/function';\nimport {parseJson} from '../src/core/types/object/json';\nimport {parseUrlDeprecated} from '../src/url';\n\n/**\n * @typedef {{\n *  ampcontextFilepath: ?string,\n *  ampcontextVersion: ?string,\n *  canary: ?boolean,\n *  canonicalUrl: ?string,\n *  clientId: ?string,\n *  container: ?string,\n *  domFingerprint: ?string,\n *  hidden: ?boolean,\n *  initialIntersection: ?IntersectionObserverEntry,\n *  initialLayoutRect:\n *      ?{left: number, top: number, width: number, height: number},\n *  mode: ?../src/mode.ModeDef,\n *  pageViewId: ?string,\n *  referrer: ?string,\n *  sentinel: ?string,\n *  sourceUrl: ?string,\n *  startTime: ?number,\n *  tagName: ?string,\n * }}\n */\nexport let ContextStateDef;\n\n/** @const {!JsonObject} */\nconst FALLBACK = dict({\n  'attributes': dict({\n    '_context': dict(),\n  }),\n});\n\n/**\n * Gets metadata encoded in iframe name attribute.\n * @return {!JsonObject}\n */\nconst allMetadata = once(() => {\n  const iframeName = window.name;\n\n  try {\n    // TODO(bradfrizzell@): Change the data structure of the attributes\n    //    to make it less terrible.\n    return parseJson(iframeName);\n  } catch (err) {\n    if (!getMode().test) {\n      dev().info('INTEGRATION', 'Could not parse context from:', iframeName);\n    }\n    return FALLBACK;\n  }\n});\n\n/**\n * @return {{mode: !Object, experimentToggles: !Object}}\n */\nexport function getAmpConfig() {\n  const metadata = allMetadata();\n\n  return {\n    mode: metadata['attributes']['_context'].mode,\n    experimentToggles: metadata['attributes']['_context'].experimentToggles,\n  };\n}\n\n/**\n * @return {!JsonObject}\n */\nconst getAttributeDataImpl_ = once(() => {\n  const data = Object.assign(dict({}), allMetadata()['attributes']);\n\n  // TODO(alanorozco): don't delete _context. refactor data object structure.\n  if ('_context' in data) {\n    delete data['_context'];\n  }\n\n  return data;\n});\n\n/**\n * @return {!JsonObject}\n */\nexport function getAttributeData() {\n  // using indirect invocation to prevent no-export-side-effect issue\n  return getAttributeDataImpl_();\n}\n\n/**\n * @return {!Location}\n */\nconst getLocationImpl_ = once(() => {\n  const href = allMetadata()['attributes']['_context']['location']['href'];\n  return parseUrlDeprecated(href);\n});\n\n/**\n * @return {!Location}\n */\nexport function getLocation() {\n  // using indirect invocation to prevent no-export-side-effect issue\n  return getLocationImpl_();\n}\n\n/**\n * @return {!ContextStateDef}\n */\nexport function getContextState() {\n  const rawContext = allMetadata()['attributes']['_context'];\n\n  return {\n    ampcontextFilepath: rawContext['ampcontextFilepath'],\n    ampcontextVersion: rawContext['ampcontextVersion'],\n    canary: rawContext['canary'],\n    canonicalUrl: rawContext['canonicalUrl'],\n    clientId: rawContext['clientId'],\n    container: rawContext['container'],\n    domFingerprint: rawContext['domFingerprint'],\n    hidden: rawContext['hidden'],\n    initialIntersection: rawContext['initialIntersection'],\n    initialLayoutRect: rawContext['initialLayoutRect'],\n    mode: rawContext['mode'],\n    pageViewId: rawContext['pageViewId'],\n    referrer: rawContext['referrer'],\n    sentinel: rawContext['sentinel'],\n    sourceUrl: rawContext['sourceUrl'],\n    startTime: rawContext['startTime'],\n    tagName: rawContext['tagName'],\n  };\n}\n\n/**\n * @return {string}\n */\nexport function getEmbedType() {\n  return getAttributeData()['type'];\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getData} from '../src/event-helper';\nimport {parseJson} from '../src/core/types/object/json';\n\n/**\n * Send messages to parent frame. These should not contain user data.\n * @param {string} type Type of messages\n * @param {!JsonObject=} opt_object Data for the message.\n * @deprecated Use iframe-messaging-client.js\n */\nexport function nonSensitiveDataPostMessage(type, opt_object) {\n  if (window.parent == window) {\n    return; // Nothing to do.\n  }\n  const object = opt_object || /** @type {JsonObject} */ ({});\n  object['type'] = type;\n  object['sentinel'] = window.context.sentinel;\n  window.parent./*OK*/ postMessage(object, window.context.location.origin);\n}\n\n/**\n * Message event listeners.\n * @const {!Array<{type: string, cb: function(!JsonObject)}>}\n */\nconst listeners = [];\n\n/**\n * Listen to message events from document frame.\n * @param {!Window} win\n * @param {string} type Type of messages\n * @param {function(!JsonObject)} callback Called with data payload of message.\n * @return {function()} function to unlisten for messages.\n * @deprecated Use iframe-messaging-client.js\n */\nexport function listenParent(win, type, callback) {\n  const listener = {\n    type,\n    cb: callback,\n  };\n  listeners.push(listener);\n  startListening(win);\n  return function () {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n  };\n}\n\n/**\n * Listens for message events and dispatches to listeners registered\n * via listenParent.\n * @param {!Window} win\n */\nfunction startListening(win) {\n  if (win.AMP_LISTENING) {\n    return;\n  }\n  win.AMP_LISTENING = true;\n  win.addEventListener('message', function (event) {\n    // Cheap operations first, so we don't parse JSON unless we have to.\n    const eventData = getData(event);\n    if (\n      event.source != win.parent ||\n      event.origin != win.context.location.origin ||\n      typeof eventData != 'string' ||\n      eventData.indexOf('amp-') != 0\n    ) {\n      return;\n    }\n    // Parse JSON only once per message.\n    const data = /** @type {!JsonObject} */ (\n      parseJson(/**@type {string} */ (getData(event)).substr(4))\n    );\n    if (win.context.sentinel && data['sentinel'] != win.context.sentinel) {\n      return;\n    }\n    // Don't let other message handlers interpret our events.\n    if (event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    }\n    // Find all the listeners for this type.\n    for (let i = 0; i < listeners.length; i++) {\n      if (listeners[i].type != data['type']) {\n        continue;\n      }\n      const {cb} = listeners[i];\n      try {\n        cb(data);\n      } catch (e) {\n        // Do not interrupt execution.\n        setTimeout(() => {\n          throw e;\n        });\n      }\n    }\n  });\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {listenParent} from './messaging';\n\n/**\n * Info about the current document/iframe.\n * @type {boolean}\n */\nlet inViewport = true;\n\n/**\n * @param {boolean} inV\n */\nexport function setInViewportForTesting(inV) {\n  inViewport = inV;\n}\n\n// Active intervals. Must be global, because people clear intervals\n// with clearInterval from a different window.\nconst intervals = {};\nlet intervalId = 1;\n\n/**\n * Add instrumentation to a window and all child iframes.\n * @param {!Window} win\n */\nexport function manageWin(win) {\n  try {\n    manageWin_(win);\n  } catch (e) {\n    // We use a try block, because the ad integrations often swallow errors.\n    console./*OK*/ error(e.message, e.stack);\n  }\n}\n\n/**\n * @param {!Window} win\n */\nfunction manageWin_(win) {\n  if (win.ampSeen) {\n    return;\n  }\n  win.ampSeen = true;\n  // Instrument window.\n  instrumentEntryPoints(win);\n\n  // Watch for new iframes.\n  installObserver(win);\n  // Existing iframes.\n  maybeInstrumentsNodes(win, win.document.querySelectorAll('iframe'));\n  blockSyncPopups(win);\n}\n\n/**\n * Add instrumentation code to doc.write.\n * @param {!Window} parent\n * @param {!Window} win\n */\nfunction instrumentDocWrite(parent, win) {\n  const doc = win.document;\n  const {close} = doc;\n  doc.close = function () {\n    parent.ampManageWin = function (win) {\n      manageWin(win);\n    };\n    if (!parent.ampSeen) {\n      // .call does not work in Safari with document.write.\n      doc.write('<script>window.parent.ampManageWin(window)</script>');\n    }\n    doc._close = close;\n    return doc._close();\n  };\n}\n\n/**\n * Add instrumentation code to iframe's srcdoc.\n * @param {!Window} parent\n * @param {!Element} iframe\n */\nfunction instrumentSrcdoc(parent, iframe) {\n  let srcdoc = iframe.getAttribute('srcdoc');\n  parent.ampManageWin = function (win) {\n    manageWin(win);\n  };\n  srcdoc += '<script>window.parent.ampManageWin(window)</script>';\n  iframe.setAttribute('srcdoc', srcdoc);\n}\n\n/**\n * Instrument added nodes if they are instrumentable iframes.\n * @param {!Window} win\n * @param {!Array<!Node>|NodeList<!Node>|NodeList<!Element>|null} addedNodes\n */\nfunction maybeInstrumentsNodes(win, addedNodes) {\n  for (let n = 0; n < addedNodes.length; n++) {\n    const node = addedNodes[n];\n    try {\n      if (node.tagName != 'IFRAME') {\n        continue;\n      }\n      const src = node.getAttribute('src');\n      const srcdoc = node.getAttribute('srcdoc');\n      if (src == null || /^(about:|javascript:)/i.test(src.trim()) || srcdoc) {\n        if (node.contentWindow) {\n          instrumentIframeWindow(node, win, node.contentWindow);\n          node.addEventListener('load', () => {\n            try {\n              instrumentIframeWindow(node, win, node.contentWindow);\n            } catch (e) {\n              console./*OK*/ error(e.message, e.stack);\n            }\n          });\n        } else if (srcdoc) {\n          instrumentSrcdoc(parent, node);\n        }\n      }\n    } catch (e) {\n      console./*OK*/ error(e.message, e.stack);\n    }\n  }\n}\n\n/**\n * Installs a mutation observer in a window to look for iframes.\n * @param {!Element} node\n * @param {!Window} parent\n * @param {!Window} win\n */\nfunction instrumentIframeWindow(node, parent, win) {\n  if (win.ampSeen) {\n    return;\n  }\n  const doc = win.document;\n  instrumentDocWrite(parent, win);\n  if (doc.body && doc.body.childNodes.length) {\n    manageWin(win);\n  }\n}\n\n/**\n * Installs a mutation observer in a window to look for iframes.\n * @param {!Window} win\n */\nfunction installObserver(win) {\n  if (!window.MutationObserver) {\n    return;\n  }\n  const observer = new MutationObserver(function (mutations) {\n    for (let i = 0; i < mutations.length; i++) {\n      maybeInstrumentsNodes(win, mutations[i].addedNodes);\n    }\n  });\n  observer.observe(win.document.documentElement, {\n    subtree: true,\n    childList: true,\n  });\n}\n\n/**\n * Replace timers with variants that can be throttled.\n * @param {!Window} win\n */\nfunction instrumentEntryPoints(win) {\n  // Change setTimeout to respect a minimum timeout.\n  const {setTimeout} = win;\n  win.setTimeout = function (fn, time) {\n    time = minTime(time);\n    arguments[1] = time;\n    return setTimeout.apply(this, arguments);\n  };\n  // Implement setInterval in terms of setTimeout to make\n  // it respect the same rules\n  win.setInterval = function (fn) {\n    const id = intervalId++;\n    const args = Array.prototype.slice.call(arguments);\n    /**\n     * @return {*}\n     * @suppress {uselessCode}\n     */\n    function wrapper() {\n      next();\n      if (typeof fn == 'string') {\n        // Handle rare and dangerous string arg case.\n        return (0, win.eval) /*NOT OK but whatcha gonna do.*/\n          .call(win, fn); // lgtm [js/useless-expression]\n      } else {\n        return fn.apply(this, arguments);\n      }\n    }\n    args[0] = wrapper;\n    /**\n     *\n     */\n    function next() {\n      intervals[id] = win.setTimeout.apply(win, args);\n    }\n    next();\n    return id;\n  };\n  const {clearInterval} = win;\n  win.clearInterval = function (id) {\n    clearInterval(id);\n    win.clearTimeout(intervals[id]);\n    delete intervals[id];\n  };\n}\n\n/**\n * Blackhole the legacy popups since they should never be used for anything.\n * @param {!Window} win\n */\nfunction blockSyncPopups(win) {\n  let count = 0;\n  /**\n   * Checks for security error.\n   */\n  function maybeThrow() {\n    // Prevent deep recursion.\n    if (count++ > 2) {\n      throw new Error('security error');\n    }\n  }\n  try {\n    win.alert = maybeThrow;\n    win.prompt = function () {\n      maybeThrow();\n      return '';\n    };\n    win.confirm = function () {\n      maybeThrow();\n      return false;\n    };\n  } catch (e) {\n    console./*OK*/ error(e.message, e.stack);\n  }\n}\n\n/**\n * Calculates the minimum time that a timeout should have right now.\n * @param {number|undefined} time\n * @return {number|undefined}\n */\nfunction minTime(time) {\n  if (!inViewport) {\n    time += 1000;\n  }\n  // Eventually this should throttle like this:\n  // - for timeouts in the order of a frame use requestAnimationFrame\n  //   instead.\n  // - only allow about 2-4 short timeouts (< 16ms) in a 16ms time frame.\n  //   Throttle further timeouts to requestAnimationFrame.\n  return time;\n}\n\n/**\n * Installs embed state listener.\n */\nexport function installEmbedStateListener() {\n  listenParent(window, 'embed-state', function (data) {\n    inViewport = data['inViewport'];\n  });\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {IntegrationAmpContext} from './ampcontext-integration';\nimport {dict} from '../src/core/types/object';\nimport {endsWith} from '../src/core/types/string';\nimport {getAmpConfig, getEmbedType, getLocation} from './frame-metadata';\nimport {getSourceUrl, isProxyOrigin, parseUrlDeprecated} from '../src/url';\nimport {\n  initLogConstructor,\n  isUserErrorMessage,\n  setReportError,\n  userAssert,\n} from '../src/log';\nimport {installEmbedStateListener, manageWin} from './environment';\nimport {internalRuntimeVersion} from '../src/internal-version';\nimport {parseJson} from '../src/core/types/object/json';\nimport {run, setExperimentToggles} from './3p';\nimport {urls} from '../src/config';\n\n/**\n * Whether the embed type may be used with amp-embed tag.\n * @const {!Object<string, boolean>}\n */\nconst AMP_EMBED_ALLOWED = {\n  _ping_: true,\n  '1wo': true,\n  '24smi': true,\n  adsloom: true,\n  adstyle: true,\n  bringhub: true,\n  dable: true,\n  engageya: true,\n  epeex: true,\n  firstimpression: true,\n  forkmedia: true,\n  glomex: true,\n  idealmedia: true,\n  insticator: true,\n  jubna: true,\n  kuadio: true,\n  'mantis-recommend': true,\n  mediaad: true,\n  mgid: true,\n  miximedia: true,\n  mywidget: true,\n  nativery: true,\n  lentainform: true,\n  opinary: true,\n  outbrain: true,\n  plista: true,\n  postquare: true,\n  ppstudio: true,\n  pubexchange: true,\n  pulse: true,\n  rbinfox: true,\n  rcmwidget: true,\n  readmo: true,\n  recreativ: true,\n  runative: true,\n  smartclip: true,\n  smi2: true,\n  speakol: true,\n  strossle: true,\n  svknative: true,\n  taboola: true,\n  temedya: true,\n  vlyby: true,\n  whopainfeed: true,\n  yahoofedads: true,\n  yahoonativeads: true,\n  yektanet: true,\n  zen: true,\n  zergnet: true,\n};\n\n// For backward compat, we always allow these types without the iframe\n// opting in.\nconst defaultAllowedTypesInCustomFrame = [\n  // Entries must be reasonably safe and not allow overriding the injected\n  // JS URL.\n  // Each custom iframe can override this through the second argument to\n  // draw3p. See amp-ad docs.\n  'facebook',\n  'twitter',\n  'doubleclick',\n  'yieldbot',\n  '_ping_',\n];\n\n/**\n * Initialize 3p frame.\n * @param {!Window} win\n */\nexport function init(win) {\n  initLogConstructor();\n  const config = getAmpConfig();\n\n  // Overriding to short-circuit src/mode#getMode()\n  win.__AMP_MODE = config.mode;\n\n  setReportError(console.error.bind(console));\n\n  setExperimentToggles(config.experimentToggles);\n}\n\n/**\n * Visible for testing.\n * Draws a 3p embed to the window. Expects the data to include the 3p type.\n * @param {!Window} win\n * @param {!Object} data\n * @param {function(!Object, function(!Object))|undefined} configCallback\n *     Optional callback that allows user code to manipulate the incoming\n *     configuration. See\n *     https://github.com/ampproject/amphtml/issues/1210 for some context\n *     on this.\n */\nexport function draw3pInternal(win, data, configCallback) {\n  const type = data['type'];\n\n  userAssert(\n    isTagNameAllowed(type, win.context.tagName),\n    'Embed type %s not allowed with tag %s',\n    type,\n    win.context.tagName\n  );\n  if (configCallback) {\n    configCallback(data, (data) => {\n      userAssert(data, 'Expected configuration to be passed as first argument');\n      run(type, win, data);\n    });\n  } else {\n    run(type, win, data);\n  }\n}\n\n/**\n * Draws an embed, optionally synchronously, to the DOM.\n * @param {function(!Object, function(!Object))} opt_configCallback If provided\n *     will be invoked with two arguments:\n *     1. The configuration parameters supplied to this embed.\n *     2. A callback that MUST be called for rendering to proceed. It takes\n *        no arguments. Configuration is expected to be modified in-place.\n * @param {!Array<string>=} opt_allowed3pTypes List of advertising network\n *     types you expect.\n * @param {!Array<string>=} opt_allowedEmbeddingOrigins List of domain suffixes\n *     that are allowed to embed this frame.\n */\nexport function draw3p(\n  opt_configCallback,\n  opt_allowed3pTypes,\n  opt_allowedEmbeddingOrigins\n) {\n  try {\n    const location = getLocation();\n\n    ensureFramed(window);\n    validateParentOrigin(window, location);\n    validateAllowedTypes(window, getEmbedType(), opt_allowed3pTypes);\n    if (opt_allowedEmbeddingOrigins) {\n      validateAllowedEmbeddingOrigins(window, opt_allowedEmbeddingOrigins);\n    }\n    window.context = new IntegrationAmpContext(window);\n    manageWin(window);\n    installEmbedStateListener();\n\n    // Ugly type annotation is due to Event.prototype.data being denylisted\n    // and the compiler not being able to discern otherwise\n    // TODO(alanorozco): Do this more elegantly once old impl is cleaned up.\n    draw3pInternal(\n      window,\n      /** @type {!IntegrationAmpContext} */ (window.context).data || {},\n      opt_configCallback\n    );\n\n    window.context.bootstrapLoaded();\n  } catch (e) {\n    if (window.context && window.context.report3pError) {\n      // window.context has initiated yet\n      if (e.message && isUserErrorMessage(e.message)) {\n        // report user error to parent window\n        window.context.report3pError(e);\n      }\n    }\n\n    const c = window.context || {mode: {test: false}};\n    if (!c.mode.test) {\n      lightweightErrorReport(e, c.canary);\n      throw e;\n    }\n  }\n}\n\n/**\n * Throws if the current frame's parent origin is not equal to\n * the claimed origin.\n * Only check for browsers that support ancestorOrigins\n * @param {!Window} window\n * @param {!Location} parentLocation\n * @visibleForTesting\n */\nexport function validateParentOrigin(window, parentLocation) {\n  const ancestors = window.location.ancestorOrigins;\n  // Currently only webkit and blink based browsers support\n  // ancestorOrigins. In that case we proceed but mark the origin\n  // as non-validated.\n  if (!ancestors || !ancestors.length) {\n    return;\n  }\n  userAssert(\n    ancestors[0] == parentLocation.origin,\n    'Parent origin mismatch: %s, %s',\n    ancestors[0],\n    parentLocation.origin\n  );\n}\n\n/**\n * Check that this iframe intended this particular ad type to run.\n * @param {!Window} window\n * @param {string} type 3p type\n * @param {!Array<string>|undefined} allowedTypes May be undefined.\n * @visibleForTesting\n */\nexport function validateAllowedTypes(window, type, allowedTypes) {\n  const thirdPartyHost = parseUrlDeprecated(urls.thirdParty).hostname;\n\n  // Everything allowed in default iframe.\n  if (window.location.hostname == thirdPartyHost) {\n    return;\n  }\n  if (urls.thirdPartyFrameRegex.test(window.location.hostname)) {\n    return;\n  }\n  if (window.location.hostname == 'ads.localhost') {\n    return;\n  }\n  if (defaultAllowedTypesInCustomFrame.indexOf(type) != -1) {\n    return;\n  }\n  userAssert(\n    allowedTypes && allowedTypes.indexOf(type) != -1,\n    '3p type for custom iframe not allowed: %s',\n    type\n  );\n}\n\n/**\n * Check that parent host name was allowed.\n * @param {!Window} window\n * @param {!Array<string>} allowedHostnames Suffixes of allowed host names.\n * @visibleForTesting\n */\nexport function validateAllowedEmbeddingOrigins(window, allowedHostnames) {\n  if (!window.document.referrer) {\n    throw new Error('Referrer expected: ' + window.location.href);\n  }\n  const ancestors = window.location.ancestorOrigins;\n  // We prefer the unforgable ancestorOrigins, but referrer is better than\n  // nothing.\n  const ancestor = ancestors ? ancestors[0] : window.document.referrer;\n  let {hostname} = parseUrlDeprecated(ancestor);\n  if (isProxyOrigin(ancestor)) {\n    // If we are on the cache domain, parse the source hostname from\n    // the referrer. The referrer is used because it should be\n    // trustable.\n    hostname = parseUrlDeprecated(\n      getSourceUrl(window.document.referrer)\n    ).hostname;\n  }\n  for (let i = 0; i < allowedHostnames.length; i++) {\n    // Either the hostname is allowed\n    if (allowedHostnames[i] == hostname) {\n      return;\n    }\n    // Or it ends in .$hostname (aka is a sub domain of an allowed domain.\n    if (endsWith(hostname, '.' + allowedHostnames[i])) {\n      return;\n    }\n  }\n  throw new Error(\n    'Invalid embedding hostname: ' + hostname + ' not in ' + allowedHostnames\n  );\n}\n\n/**\n * Throws if this window is a top level window.\n * @param {!Window} window\n * @visibleForTesting\n */\nexport function ensureFramed(window) {\n  if (window == window.parent) {\n    throw new Error('Must be framed: ' + window.location.href);\n  }\n}\n\n/**\n * Expects the fragment to contain JSON.\n * @param {string} fragment Value of location.fragment\n * @return {?JsonObject}\n * @visibleForTesting\n */\nexport function parseFragment(fragment) {\n  try {\n    let json = fragment.substr(1);\n    // Some browser, notably Firefox produce an encoded version of the fragment\n    // while most don't. Since we know how the string should start, this is easy\n    // to detect.\n    if (json.startsWith('{%22')) {\n      json = decodeURIComponent(json);\n    }\n    return /** @type {!JsonObject} */ (json ? parseJson(json) : dict());\n  } catch (err) {\n    return null;\n  }\n}\n\n/**\n * Not all types of embeds are allowed to be used with all tag names on the\n * AMP side. This function checks whether the current usage is permissible.\n * @param {string} type\n * @param {string|undefined} tagName The tagName that was used to embed this\n *     3p-frame.\n * @return {boolean}\n */\nexport function isTagNameAllowed(type, tagName) {\n  if (tagName == 'AMP-EMBED') {\n    return !!AMP_EMBED_ALLOWED[type];\n  }\n  return true;\n}\n\n/**\n * Reports an error to the server. Must only be called once per page.\n * Not for use in event handlers.\n *\n * We don't use the default error in error.js handler because it has\n * too many deps for this small JS binary.\n *\n * @param {!Error} e\n * @param {boolean} isCanary\n */\nfunction lightweightErrorReport(e, isCanary) {\n  new Image().src =\n    urls.errorReporting +\n    '?3p=1&v=' +\n    encodeURIComponent(internalRuntimeVersion()) +\n    '&m=' +\n    encodeURIComponent(e.message) +\n    '&ca=' +\n    (isCanary ? 1 : 0) +\n    '&r=' +\n    encodeURIComponent(document.referrer) +\n    '&s=' +\n    encodeURIComponent(e.stack || '');\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {loadScript, validateData} from '../../3p/3p';\n\n/**\n * @param {!Window} global\n * @param {!Object} data\n */\nexport function _1wo(global, data) {\n  validateData(data, ['src', 'owoType', 'owoCode', 'owoMode']);\n  const {src} = data;\n  createContainer(global, data);\n  loadScript(global, src);\n}\n\n/**\n * @param {!Window} global\n * @param {!Object} data\n */\nfunction createContainer(global, data) {\n  const d = global.document.createElement('div');\n  d.setAttribute('data-owo-type', data['owoType']);\n  d.setAttribute('data-owo-code', data['owoCode']);\n  d.setAttribute('data-owo-mode', data['owoMode']);\n  global.document.getElementById('c').appendChild(d);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// src/polyfills.js must be the first import.\nimport '../polyfills';\n\nimport {draw3p, init} from '../integration-lib';\nimport {register} from '../3p';\n\nimport {_1wo} from '../../ads/vendors/1wo';\n\ninit(window);\nregister('1wo', _1wo);\n\nwindow.draw3p = draw3p;\n"],
  "mappings": ";;AAwBO,gBAAc,GAAG;AACtB,QAAI,OAAO;AAGX,QAAI,CAAC,GAAG;AACN,aAAO;;AAGT,WAAO,IAAI,IAAI,IAAI;;AAOd,mBAAiB,KAAK;AAC3B,QAAI,CAAC,IAAI,KAAK,MAAM;AAClB,UAAI,OAAO,eAAe,IAAI,MAAM,QAAQ;QAC1C,YAAY;QACZ,cAAc;QACd,UAAU;QACV,OAAO;;;;;;AC7Bb,MAAO,iBAAkB,OAAO,UAAzB;AAUA,kBAAgB,QAAQ,UAAU;AACvC,QAAI,UAAU,MAAM;AAClB,YAAM,IAAI,UAAU;;AAGtB,QAAM,SAAS,OAAO;AACtB,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAM,SAAS,UAAU;AACzB,UAAI,UAAU,MAAM;AAClB,iBAAW,OAAO,QAAQ;AACxB,cAAI,eAAe,KAAK,QAAQ,MAAM;AACpC,mBAAO,OAAO,OAAO;;;;;AAK7B,WAAO;;AAOF,oBAAiB,KAAK;AAC3B,QAAI,CAAC,IAAI,OAAO,QAAQ;AACtB,UAAI,OAAO,eAAe,IAAI,QAAQ,UAAU;QAC9C,YAAY;QACZ,cAAc;QACd,UAAU;QACV,OAAO;;;;;;AChCN,kBAAgB,QAAQ;AAC7B,WAAO,OAAO,KAAK,QAAQ,IAAI,SAAC,GAAD;AAAA,aAAO,OAAO;;;AAOxC,oBAAiB,KAAK;AAC3B,QAAI,CAAC,IAAI,OAAO,QAAQ;AACtB,UAAI,OAAO,eAAe,IAAI,QAAQ,UAAU;QAC9C,cAAc;QACd,UAAU;QACV,OAAO;;;;;;ACpCb;AAQA,oBAAiB,UAAU;AACzB,QAAI,CAAE,iBAAgB,WAAU;AAC9B,YAAM,IAAI,UAAU;;AAEtB,QAAI,CAAC,WAAW,WAAW;AACzB,YAAM,IAAI,UAAU;;AAOtB,SAAK,SAAS;AAMd,SAAK,SAAS;AAMd,SAAK,cAAc;AAEnB,cACE,MACA,QAAQ,MAAM,mBACd,QAAQ,MAAM,kBACd;MAAE,MAAM;;;AAeZ,WAAQ,UAAU,OAAO,SAAS,aAAa,YAAY;AACzD,kBAAc,WAAW,eAAe,cAAc;AACtD,iBAAa,WAAW,cAAc,aAAa;AAEnD,QAAI,eAAe,YAAY;AAC7B,WAAK,cAAc;;AAGrB,WAAO,KAAK,OACV,KAAK,QACL,aACA;;AAUJ,WAAQ,UAAU,QAAQ,SAAS,YAAY;AAC7C,WAAO,KAAK,KAAK,QAAQ;;AAe3B,WAAQ,UAAU,SAAS,OAAO;AAChC,QAAI,cAAc;AAClB,QAAI;AAEJ,QAAI,SAAS,UAAU,iBAAiB,MAAM;AAC5C,gBAAU;WACL;AACL,gBAAU,IAAI,YAAY,SAAS,SAAS;AAC1C,gBAAQ;;;AAIZ,WAA+B;;AAUjC,WAAQ,SAAS,SAAS,QAAQ;AAChC,QAAI,cAAc;AAClB,QAAI,UAAU,IAAI,YAAY,SAAS,GAAG,QAAQ;AAChD,aAAO;;AAGT,WAA+B;;AAYjC,WAAQ,MAAM,SAAS,UAAU;AAC/B,QAAI,cAAc;AAClB,QAAI,UAAU,IAAI,YAAY,SAAS,SAAS,QAAQ;AACtD,UAAI,SAAS,SAAS;AACtB,UAAI,UAAS,IAAI,MAAM;AAEvB,UAAI,WAAW,GAAG;AAChB,eAAO,QAAQ;;AAGjB,WAAK,UAAU,SAAS,UAAS,OAAO;AACtC,oBAAY,QAAQ,UAAS,KAAK,SAAS,OAAO;AAChD,kBAAO,SAAS;AAChB,cAAI,EAAE,WAAW,GAAG;AAClB,oBAAQ;;WAET;;;AAIP,WAA+B;;AAWjC,WAAQ,OAAO,SAAS,UAAU;AAChC,QAAI,cAAc;AAClB,QAAI,UAAU,IAAI,YAAY,SAAS,SAAS,QAAQ;AACtD,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,oBAAY,QAAQ,SAAS,IAAI,KAAK,SAAS;;;AAInD,WAA+B;;AAGjC,MAAI,+BAA+B,uCAAS,QAAQ,SAAS;AAC3D,UAAM;;AAMR,WAAQ,qCAAqC,SAAS,SAAS;AAC7D,mCAA+B;;AAyBjC,4BAA0B,OAAO,aAAa,QAAQ,UAAU;AAC9D,QAAI,CAAC,aAAa;AAChB,oBAAc,UAAU,kBAAkB;AAC1C,aAAO;;AAET,QAAI,CAAC,UAAU;AACb,iBAAW,IAAI,SAAS,KAAK;;AAE/B,UAAM,iBAAiB,UAAU,aAAa;AAC9C,WAAO,SAAS;;AAqBlB,2BAAyB,QAAQ,QAAQ,YAAY,UAAU;AAC7D,QAAI,CAAC,YAAY;AACf,oBAAc,UAAU,iBAAiB;AACzC,aAAO;;AAET,QAAI,CAAC,UAAU;AACb,iBAAW,IAAI,SAAS,KAAK;;AAE/B,UAAM,iBAAiB,UAAU,YAAY;AAC7C,WAAO,SAAS;;AAqBlB,0BAAwB,OAAO,aAAa,YAAY,UAAU;AAChE,QAAI,CAAC,UAAU;AACb,UAAI,CAAC,eAAe,CAAC,YAAY;AAAE,eAAO;;AAC1C,iBAAW,IAAI,SAAS,KAAK;;AAE/B,UAAM,KAAK;MACT,UAAU;MACV,aAAa,eAAe,SAAS;MACrC,YAAY,cAAc,SAAS;;AAErC,WAAO,SAAS;;AASlB,oBAAkB,UAAS;AACzB,QAAI,WAAW;AAEf,SAAK,UAAU,IAAI,SAAQ,SAAS,SAAS,QAAQ;AAEnD,eAAS,UAAU;AAGnB,eAAS,SAAS;;AAEpB,WAAO;;AAWT,iBAAe,SAAS,OAAO,OAAO,SAAS;AAC7C,QAAI,QAAQ,QAAQ;AACpB,YAAQ,SAAS;AACjB,YAAQ,SAAS;AAEjB,QAAI,WAAW,UAAU,gBAAgB;AACvC,cAAQ,OAAO,OAAO,QAAQ,QAAQ;QACpC,SAAS;QACT,SAAS;QACT,QAAQ;;;AAIZ,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAI,OAAO,MAAM;AACjB,cAAQ,OACN,OACA,KAAK,aACL,KAAK,YACL,KAAK;;AAGT,UAAM,SAAS;AAIf,QAAI,SAAS;AACX,cAAQ,cAAc;;AAIxB,QAAI,UAAU,mBAAmB,QAAQ,aAAa;AACpD,iBAAW,WAAW;AACpB,YAAI,QAAQ,aAAa;AACvB,uCAA6B,OAAO;;SAErC;;;AAWP,mBAAiB,SAAS,OAAO;AAC/B,WAAO,SAAS,OAAO;AACrB,YAAM,SAAS,OAAO;;;AAY1B,yBAAuB,UAAU,OAAO,OAAO;AAC7C,QAAI,UAAU;AACZ,UAAI,UAAU,SAAS;AACvB,cAAQ,SAAS;AACjB,cAAQ,SAAS;;;AAOrB,kBAAgB;;AAQhB,sBAAoB,IAAI;AACtB,WAAO,OAAO,OAAO;;AASvB,oBAAkB,KAAK;AACrB,WAAO,QAAQ,OAAO;;AAUxB,gBAAc,YAAY,UAAU;AAClC,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,eAAS,WAAW,IAAI;;;AAa5B,4BAA0B,UAAU,IAAI,KAAK;AAC3C,QAAI,UAAU,SAAS;AACvB,QAAI,UAAU,SAAS;AACvB,QAAI,SAAS,SAAS;AACtB,WAAO,WAAW;AAChB,UAAI;AACF,YAAI,SAAS,GAAG;AAChB,kBAAU,SAAS,SAAS,QAAQ,QAAQ;eACrC,GAAP;AACA,eAAO;;;;AAQb,MAAI,QAAS,WAAW;AAItB,QAAI;AACJ,QAAI,OAAO,WAAW,eAAe,OAAO,aAAa;AACvD,aAAO,iBAAiB,WAAW;AACnC,sBAAgB,0BAAW;AACzB,eAAO,YAAY,cAAc;;WAE9B;AACL,sBAAgB,0BAAW;AACzB,mBAAW,OAAO;;;AAItB,QAAI,QAAQ,IAAI,MAAM;AACtB,QAAI,SAAS;AAEb,qBAAiB;AACf,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,YAAI,KAAK,MAAM;AACf,cAAM,KAAK;AACX;;AAEF,eAAS;;AAMX,oBAAe,IAAI;AACjB,UAAI,WAAW,GAAG;AAAE;;AACpB,YAAM,YAAY;;AAGpB,WAAO;;AAaT,qBAAmB,SAAS,SAAS,QAAQ,OAAO,SAAS;AAC3D,QAAI,WAAU;AACd,QAAI;AACJ,QAAI;AACJ,QAAI;AACF,UAAI,UAAU,SAAS;AACrB,cAAM,IAAI,UAAU;;AAEtB,UAAI,QAAQ,SAAS;AACrB,UAAI,SAAS,iBAAiB,QAAQ,aAAa;AACjD,cAAM,SAAS,MAAM,QAAQ,MAAM,QAAQ;iBAClC,SAAU,QAAO,MAAM,SAAS,WAAW,OAAO;AAC3D,oBAAW,kBAAS,QAAO;AACzB,sBAAW,WAAU;AACrB,oBAAU,SAAS,SAAS,QAAQ,QAAO;;AAE7C,mBAAU,iBAAS,QAAQ;AACzB,sBAAW,WAAU;AACrB,iBAAO;;AAET,aAAK,KACH,SACA,SAAS,QAAO;AAAE,oBAAS;WAC3B,SAAS,QAAQ;AAAE,mBAAQ;;aAExB;AACL,gBAAQ;;aAEH,GAAP;AACA,eAAQ;;;AAIZ,MAAA,kBAAe;;;AClfR,oBAAiB,KAAK;AAC3B,QAAI,CAAC,IAAI,SAAS;AAChB,UAAI,UAAU;AAGd,UAAI,gBAAQ,SAAS;AACnB,YAAI,UAAU,gBAAQ;;AAIxB,UAAI,QAAQ,UAAU,gBAAQ;AAC9B,UAAI,QAAQ,SAAS,gBAAQ;AAC7B,UAAI,QAAQ,MAAM,gBAAQ;AAC1B,UAAI,QAAQ,OAAO,gBAAQ;;;;;ACV/B,sBAAoB,QAAQ,QAAQ;AAClC,QAAM,MAAM,SAAS,IAAI,SAAS,IAAI;AAEtC,WAAO,KAAK,OAAO,KAAK,OAAO,YAAY;;AAOtC,oBAAiB,KAAK;AAC3B,QAAI,CAAC,IAAI,OAAO,UAAU,YAAY;AACpC,UAAI,OAAO,eAAe,IAAI,OAAO,WAAW,cAAc;QAC5D,YAAY;QACZ,cAAc;QACd,UAAU;QACV,OAAO;;;;;;ACdb,MAAI,MAAS;AACX,YAAgB;AAChB,aAAoB;AACpB,aAAoB;AACpB,aAAe;AACf,aAAwB;;;;ACZnB,MAAM,YAAY;IACvB,YAAY;IACZ,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IAGnB,UAAU;IACV,SAAS;IACT,YAAY;IACZ,UAAU;IACV,OAAO;IACP,cAAc;IACd,QAAQ;;;;;;;;;ACyBV,MAAa,YAEX,qBAAc;AAAA,QAAA,QAAA;AAAA,oBAAA,MAAA;AAEZ,SAAK,UAAU,IAAW,QAAQ,SAAC,KAAK,KAAQ;AAE9C,YAAK,UAAU;AAEf,YAAK,SAAS;;;;;ACnCb,MAAO,UAAW,MAAX;AAkDP,kBAAgB,OAAO,cAAc;AAC1C,QAAM,UAAU;AAChB,QAAI,QAAQ;AACZ,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAM,OAAO,MAAM;AACnB,UAAI,aAAa,MAAM,GAAG,QAAQ;AAChC,gBAAQ,KAAK;aACR;AACL,YAAI,QAAQ,GAAG;AACb,gBAAM,SAAS;;AAEjB;;;AAGJ,QAAI,QAAQ,MAAM,QAAQ;AACxB,YAAM,SAAS;;AAEjB,WAAO;;AA6DF,sBAAoB,OAAO,MAAM;AACtC,QAAM,QAAQ,MAAM,QAAQ;AAC5B,QAAI,SAAS,IAAI;AACf,aAAO;;AAET,UAAM,OAAO,OAAO;AACpB,WAAO;;;;ACnGF,oBAAkB,QAAQ,QAAQ;AACvC,QAAM,QAAQ,OAAO,SAAS,OAAO;AACrC,WAAO,SAAS,KAAK,OAAO,QAAQ,QAAQ,UAAU;;AAUjD,oBAAkB,QAAQ,WAAW,OAAO;AACjD,QAAI,OAAO,UAAU,UAAU;AAC7B,cAAQ;;AAEV,QAAI,QAAQ,UAAU,SAAS,OAAO,QAAQ;AAC5C,aAAO;;AAET,WAAO,OAAO,QAAQ,WAAW,WAAW;;AAqIvC,oBAAkB,GAAG;AAC1B,WAAO,OAAO,KAAK;;;;AC1MrB,MAAA,oBAAuD,OAAO;AAA9D,MAAuB,UAAvB,kBAAO;AAAP,MAA0C,YAA1C,kBAAgC;AAOzB,qBAAkB,OAAO;AAC9B,WAAO,UAAU,KAAK,WAAW;;AAW5B,eAAa,aAAa;AAC/B,QAAM,MAAM,OAAO,OAAO;AAC1B,QAAI,aAAa;AACf,aAAO,OAAO,KAAK;;AAErB,WAAO;;AAcF,gBAAc,aAAa;AAGhC,WAAmC,eAAe;;AAW7C,kBAAgB,KAAK,KAAK;AAC/B,WAAO,QAAQ,KAAK,KAAK;;;;AC3CpB,qBAAmB,OAAO;AAC/B,WAAO,UAAK,OAAL,SAAA,MAAO,aAAoC;;;;ACD7C,MAAM,sBAAsB;AAQ5B,mCAAiC,KAAK;AAE3C,QAAI,UAAU,MAAM;AAClB,YAA8B;AAC9B,aAAO,IAAI,QAAQ,gBAAiB,KAAI,KAAJ,MAAa,IAAI,KAAO;;AAE9D,WAAO;;AAQF,8BAA4B,SAAS;AAC1C,WAAO,QAAQ,QAAQ,wBAAwB;;;;ACA1C,kBACL,UACA,gBACA,aACA,UACA;AAAA,QAFA,gBAEA,QAAA;AAFA,oBAAc;;AAGd,QAAI,gBAAgB;AAClB,aAAO;;AAIT,QAAI,YAAY,CAAC,SAAS,aAAa,WAAW;AAChD,qBAAe;;AAMjB,QAAI,IAAI;AAGR,QAAM,eAAe,YAAY,MAAM;AACvC,QAAI,UAAU,aAAa;AAC3B,QAAM,eAAe,CAAC;AAEtB,WAAO,aAAa,QAAQ;AAC1B,UAAM,WAAW,UAAU;AAC3B,UAAM,eAAe,aAAa;AAElC,iBAAW,wBAAwB,YAAY;AAC/C,mBAAa,KAAK,UAAU,aAAa;;AAG3C,QAAM,QAAQ,IAAI,MAAM;AACxB,UAAM,eAAe,OAAO,cAAc,SAAC,GAAD;AAAA,aAAO,MAAM;;AAIvD,SAAK,sBAAL,OAAA,SAAA,KAAK,mBAAqB;AAC1B,UAAM;;AAoBR,uBACE,UACA,SACA,gBACA,gBACA,aACA;AACA,QAAI,QAAQ,cAAc;AACxB,eACE,gBACuB,YAAa,OAAO,CAAC;WAEzC;AACL,eAAS,gBAAmB,gBAAe,kBAAnC,QAAyD;;AAGnE,WAAO;;AAeF,yBAAuB,UAAU,iBAAiB,aAAa;AACpE,WACE,YACE,UACA,iBACA,UAAU,kBACV,oBACA;;AAkBC,wBAAsB,UAAU,gBAAgB,aAAa;AAClE,WACE,YACE,UACA,gBACA,SAAS,iBACT,mBACA;;AAmBC,wBAAsB,UAAU,gBAAgB,aAAa;AAClE,WACE,YACE,UACA,gBACA,OAAO,kBAAkB,UACzB,mBACA;;AAkBC,uBAAqB,UAAU,eAAe,aAAa;AAChE,WACE,YACE,UACA,eACA,QAAQ,gBACR,kBACA;;AAiBC,yBAAuB,UAAU,iBAAiB,aAAa;AACpE,WACE,YACE,UACA,iBACA,CAAC,CAAC,oBAAoB,iBACtB,oBACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClOC,qCAAmC,OAAO;AAC/C,QAAM,kBAAkB,OAAO,yBAAyB,OAAO;AAC/D,QAAI,mBAAJ,QAAI,gBAAiB,UAAU;AAC7B,aAAO;;AAGT,QAAO,UAAkB,MAAlB,SAAS,QAAS,MAAT;AAChB,QAAM,IAAI,IAAI,MAAM;AAEpB,aAAW,QAAQ,OAAO;AACxB,QAAE,QAAQ,MAAM;;AAGlB,MAAE,QAAQ;AACV,WAAO;;AAQF,4BAA0B,UAAU;AACzC,QAAI,QAAQ;AACZ,QAAI,UAAU;AACd,aAAA,YAAA,gCAAkB,YAAlB,OAAA,CAAA,SAAA,aAAA,QAA6B;AAAA,UAAlB,MAAkB,MAAA;AAC3B,UAAI,eAAe,SAAS,CAAC,OAAO;AAClC,gBAAQ,0BAA0B;aAC7B;AACL,YAAI,SAAS;AACX,qBAAW;;AAEb,mBAAW;;;AAIf,QAAI,CAAC,OAAO;AACV,cAAQ,IAAI,MAAM;eACT,SAAS;AAClB,YAAM,UAAU,UAAU,OAAO,MAAM;;AAEzC,WAAO;;AAQF,wBAAsB,UAAU;AACrC,QAAM,QAAQ,iBAAiB,MAAM,MAAM;AAC3C,eAAW,WAAM;AAGf,WAAK,sBAAL,OAAA,SAAA,KAAK,mBAAqB;AAC1B,YAAM;;;;;ACnDH,oCAAkC;AACvC,WAAO;;;;ACRT,MAAM,qBAAqB;AAUpB,iCAA+B,WAAW,UAAe;AAAA,QAAf,aAAe,QAAA;AAAf,iBAAW;;AAC1D,QAAI;AACF,aAAO,mBAAmB;aACnB,GAAP;AACA,aAAO;;;AAWJ,4BAA0B,aAAa;AAC5C,QAAM,SAAS;AACf,QAAI,CAAC,aAAa;AAChB,aAAO;;AAGT,QAAI;AACJ,WAAQ,QAAQ,mBAAmB,KAAK,cAAe;AACrD,UAAM,OAAO,sBAAsB,MAAM,IAAI,MAAM;AACnD,UAAM,QAAQ,MAAM,KAChB,sBAAsB,MAAM,GAAG,QAAQ,OAAO,MAAM,MAAM,MAC1D;AACJ,aAAO,QAAQ;;AAEjB,WAAO;;;;AChBT,MAAI,aAAa;AAOV,mBAAiB,SAAS;AAC/B,QAAM,MAAM,WAAW;AACvB,QAAI,IAAI,YAAY;AAClB,aAAO,IAAI;;AAEb,WAAQ,IAAI,aAAa,SAAS;;AAQpC,oBAAkB,KAAK;AAErB,QAAM,aAAa,KAAK,cAAc;AAMtC,QAAM,gBAAgB;AACtB,QAAM,cAAc;AAEpB,QAAM,eACJ,iBAAiB,CAAC,CAAE,YAAW,QAAQ,IAAI,cAAc,IAAI;AAC/D,QAAM,aAAa,iBAAkB,EAAC,CAAC,WAAW,YAAY;AAC9D,QAAM,YAAY,iBAGhB,IAAI,SAAS,mBAAmB,IAAI,SAAS;AAG/C,QAAI,CAAC,YAAY;AACf,mBAAa,cAAc;;AAO7B,WAAO;MACL,UAAU;MACV,aAAa,kBAAkB;MAC/B,UAAU,UAAU,kBAAkB;MACtC,KAAG;MAEH,aAAa,UAAU;MACvB,UAAU;MACV,MAAM;MACN,KAAK,UAAU;MACf,SAAS;MACT,YAAA;;;AAWJ,yBAAuB,KAAK;AAC1B,QAAI,IAAI,cAAc,IAAI,WAAW,GAAG;AACtC,aAAO,IAAI,WAAW;;AAQxB,WAAA,OAAY;;AAUP,6BAA2B,KAAK;AACrC,QAAM,YAAY,iBAChB,IAAI,SAAS,mBAAmB,IAAI,SAAS;AAE/C,WAAO,CAAC,CACN,EAAC,KAAK,WAAW,OAAO,WAAW,aAAa,SAC9C,UAAU,mBACP,IAAI;;;;AC5GN,gBAAc,IAAI;AACvB,QAAI,YAAY;AAChB,QAAI,WAAW;AACf,QAAI,WAAW;AACf,WAAO,WAAa;AAClB,UAAI,CAAC,WAAW;AAAA,iBAAA,OAAA,UAAA,QADP,OACO,IAAA,MAAA,OAAA,OAAA,GAAA,OAAA,MAAA,QAAA;AADP,eACO,QAAA,UAAA;;AACd,mBAAW,SAAS,MAAM,MAAM;AAChC,oBAAY;AACZ,mBAAW;;AAEb,aAAO;;;;;ACjBX,MAAM,MAAM,KAAK,cAAc;AAE/B,MAAM,uBACH,QAAO,IAAI,2BAA2B,WACnC,IAAI,OAAO,IAAI,2BACf,IAAI,4BAA4B;AAEtC,MAAM,gBACH,QAAO,IAAI,oBAAoB,WAC5B,IAAI,OAAO,IAAI,oBACf,IAAI,qBACR;AAYF,sBAAoB,MAAM;AAExB,QAAI,CAAC,KAAK,YAAY,CAAC,KAAK,SAAS,MAAM;AACzC,aAAO;;AAIT,QAAI,KAAK,YAAY,cAAc,KAAK,KAAK,SAAS,SAAS;AAC7D,aAAO;;AAGT,QAAM,SAAS,KAAK,SAAS,KAAY,cAA1B,gBACC,OADD;AAGf,WAAQ,UAAU,OAAO,aAAa,cAAe;;AAkBhD,MAAM,OAAO;IAClB,YAAY,IAAI,oBAAoB;IACpC,qBAAqB,IAAI,0BAA0B;IACnD,sBAAA;IACA,KACE,IAAI,aAAa,WAAW,mBAAmB;IAIjD,eAAA;IACA,gBAAgB;IAChB,gBACE,IAAI,wBACJ;IACF,oBACE,IAAI,4BACJ;IACF,UAAU,IAAI,eAAe;IAU7B,oBAAoB,CAClB,qDACA;IAGF,QAAQ,IAAI,gBAAgB,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;AChFzC,MAAM,QAAO,iBAAM;;AAWZ,MAAM,4BAA4B;AAalC,MAAM,WAAW;IACtB,KAAK;IACL,OAAO;IACP,MAAM;IACN,MAAM;IACN,MAAM;;AAQD,0BAAwB,IAAI;AACjC,SAAK,qBAAqB;;AAO5B,MAAI,iBAAiB;AAerB,MAAM,gBAAgB,0BAAA;AAAA,WAAA,OAAW;;AAQjC,MAAM,qBAAqB,6BAAC,IAAI,mBAAL;AAAA,WACzB,kBAAkB,OAChB,SAAC,QAAQ,KAAT;AAAA,aAAoB,SAApB,UAAkC,6BAA6B;OADjE,4BAE4B,kBAF5B,SAEkD,mBAAmB;;AAQvE,MAAM,iCAAiC,2CAAA;AAAA,WAClC,KAAK,MAD6B,UAClB,kBADkB;;AAOvC,MAAM,+BAA+B,uCAAC,KAAD;AAAA,WACnC,mBAAmB,OAAO,wBAAwB;;AAYpD,MAAa,MAAb,2BAAA;AAYE,kBAAY,KAAK,WAAW,YAAiB;AAAA,UAAA,QAAA;AAAA,UAAjB,eAAiB,QAAA;AAAjB,qBAAa;;AAAI,uBAAA,MAAA;AAM3C,WAAK,MAAM,UAAU,QAAQ,IAAI,oBAAoB,IAAI,SAAS;AAGlE,WAAK,aAAa;AAGlB,WAAK,SAAS,KAAK;AAGnB,WAAK,UAAU;AAGf,WAAK,YAAY;AAEjB,WAAK,6BAA6B,KAAK,WAAM;AAC3C,YACG,MAAM,kCACN,KAAK,SAAC,UAAD;AAAA,iBAAc,SAAS;WAAQ,OACpC,KAAK,SAAC,cAAiB;AACtB,cAAI,cAAc;AAChB,kBAAK,YAAwC;;;;AAUrD,WAAK,iBACH,KAAK,OAAO,KAAK;;AAjDvB,iBAAA,MAAA,CAAA;MAAA,KAAA;MAAA,OAyDE,qBAAY;AACV,eAAO,mBAAmB,SAAY,iBAAiB,KAAK;;OA1DhE;MAAA,KAAA;MAAA,OAiEE,yBAAgB;AAEd,YAAI,CAAC,KAAK,IAAI,WAAW,CAAC,KAAK,IAAI,QAAQ,KAAK;AAC9C,iBAAO,SAAS;;AAIlB,YAAI,UAAU,OAAO,KAAK;AACxB,iBAAO,SAAS;;AAIlB,YAAI,UAAU,QAAQ,KAAK,IAAI,YAAY;AACzC,iBAAO,SAAS;;AAIlB,YAAI,UAAU,YAAY,CAAC,UAAU,KAAK;AACxC,iBAAO,SAAS;;AAGlB,eAAO,KAAK;;OAtFhB;MAAA,KAAA;MAAA,OA6FE,iCAAwB;AAEtB,eAAO,KAAK,WAAW,SAAS,UAAU,KAAK,KAAK,UAAU;;OA/FlE;MAAA,KAAA;MAAA,OAwGE,cAAK,KAAK,OAAO,UAAU;AACzB,YAAI,KAAK,cAAc,OAAO;AAC5B,iBAAO;;AAET,YAAI,KAAK,KAAK,IAAI,QAAQ;AAC1B,YAAI,SAAS,SAAS,OAAO;AAC3B,eAAK,KAAK,IAAI,QAAQ,SAAS;mBACtB,SAAS,SAAS,MAAM;AACjC,eAAK,KAAK,IAAI,QAAQ,QAAQ;mBACrB,SAAS,SAAS,MAAM;AACjC,eAAK,KAAK,IAAI,QAAQ,QAAQ;;AAEhC,YAAM,OAAO,KAAK,wBAAwB;AAE1C,YAAM,SAAM,MAAO,MAAP;AACZ,YAAI,OAAO,KAAK,OAAO,UAAU;AAE/B,eAAK,KAAK,SAAS,MAAM,KAAK;eACzB;AACL,eAAK,QAAQ;;AAEf,WAAG,MAAM,KAAK,IAAI,SAAS;AAC3B,eAAO;;OA9HX;MAAA,KAAA;MAAA,OAqIE,qBAAY;AACV,eAAO,KAAK,eAAe,SAAS;;OAtIxC;MAAA,KAAA;MAAA,OA8IE,cAAK,KAAc;AAAA,iBAAA,OAAA,UAAA,QAAN,OAAM,IAAA,MAAA,OAAA,IAAA,OAAA,IAAA,IAAA,OAAA,GAAA,OAAA,MAAA,QAAA;AAAN,eAAM,OAAA,KAAA,UAAA;;AACjB,aAAK,KAAK,KAAK,SAAS,MAAM;;OA/IlC;MAAA,KAAA;MAAA,OAuJE,cAAK,KAAc;AAAA,iBAAA,QAAA,UAAA,QAAN,OAAM,IAAA,MAAA,QAAA,IAAA,QAAA,IAAA,IAAA,QAAA,GAAA,QAAA,OAAA,SAAA;AAAN,eAAM,QAAA,KAAA,UAAA;;AACjB,aAAK,KAAK,KAAK,SAAS,MAAM;;OAxJlC;MAAA,KAAA;MAAA,OAgKE,cAAK,KAAc;AAAA,iBAAA,QAAA,UAAA,QAAN,OAAM,IAAA,MAAA,QAAA,IAAA,QAAA,IAAA,IAAA,QAAA,GAAA,QAAA,OAAA,SAAA;AAAN,eAAM,QAAA,KAAA,UAAA;;AACjB,aAAK,KAAK,KAAK,SAAS,MAAM;;OAjKlC;MAAA,KAAA;MAAA,OA4KE,gBAAO,KAAc;AAAA,iBAAA,QAAA,UAAA,QAAN,OAAM,IAAA,MAAA,QAAA,IAAA,QAAA,IAAA,IAAA,QAAA,GAAA,QAAA,OAAA,SAAA;AAAN,eAAM,QAAA,KAAA,UAAA;;AACnB,YAAI,CAAC,KAAK,KAAK,KAAK,SAAS,OAAO,OAAO;AACzC,iBAAO,KAAK,YAAY,MAAM,MAAM;;;OA9K1C;MAAA,KAAA;MAAA,OAuLE,eAAM,KAAK,UAAU;AACnB,YAAM,SAAQ,KAAK,OAAO,MAAM,MAAM;AACtC,YAAI,QAAO;AAET,iBAAM,OAAO,OAAO,OAAM;AAE1B,eAAK,mBAAmB;;;OA7L9B;MAAA,KAAA;MAAA,OAuME,uBAAc,WAAW,UAAU;AACjC,YAAM,QAAQ,KAAK,OAAO,MAAM,MAAM;AACtC,YAAI,OAAO;AACT,gBAAM,WAAW;AAEjB,eAAK,mBAAmB;;;OA5M9B;MAAA,KAAA;MAAA,OAqNE,qBAAY,UAAU;AACpB,YAAM,QAAQ,iBAAiB,MAAM,MAAM;AAC3C,aAAK,cAAc;AACnB,eAAO;;OAxNX;MAAA,KAAA;MAAA,OAgOE,6BAAoB,UAAU;AAC5B,YAAM,QAAQ,iBAAiB,MAAM,MAAM;AAC3C,aAAK,cAAc;AACnB,cAAM,WAAW;AACjB,eAAO;;OApOX;MAAA,KAAA;MAAA,OA4PE,iBAAO,iBAAiB,aAAa,UAAU;AAC7C,YAAI,QAAQ,cAAc;AACxB,iBAAO,KAAK,OAAO,MACjB,MACA,CAAC,iBAAiB,OAChB,KAAK,mBAA0C;;AAKrD,eAAO,AAAW,OAAO,MACvB,MACA,CAAC,KAAK,SAAS,OAAO,MAAM,UAAU,MAAM,KAAK;;OAxQvD;MAAA,KAAA;MAAA,OAsRE,wBAAc,iBAAiB,aAAa;AAC1C,eAAO,AAAW,cAChB,KAAK,gBACL,iBACA;;OA1RN;MAAA,KAAA;MAAA,OAySE,uBAAa,gBAAgB,aAAa;AACxC,eAAO,AAAW,aAChB,KAAK,gBACL,gBACA;;OA7SN;MAAA,KAAA;MAAA,OA6TE,uBAAa,gBAAgB,aAAa;AACxC,eAAO,AAAW,aAChB,KAAK,gBACL,gBACA;;OAjUN;MAAA,KAAA;MAAA,OA8UE,sBAAY,eAAe,aAAa;AACtC,eAAO,AAAW,YAChB,KAAK,gBACL,eACA;;OAlVN;MAAA,KAAA;MAAA,OAgWE,wBAAc,iBAAiB,aAAa;AAC1C,eAAO,AAAW,cAChB,KAAK,gBACL,iBACA;;OApWN;MAAA,KAAA;MAAA,OA4WE,uBAAc,OAAO;AACnB,gBAAQ,0BAA0B;AAElC,YAAI,KAAK,SAAS;AAChB,cAAI,CAAC,MAAM,SAAS;AAClB,kBAAM,UAAU,KAAK;qBACZ,MAAM,QAAQ,QAAQ,KAAK,YAAY,IAAI;AACpD,kBAAM,WAAW,KAAK;;mBAEf,mBAAmB,MAAM,UAAU;AAC5C,gBAAM,UAAU,MAAM,QAAQ,QAAQ,qBAAqB;;;OAtXjE;MAAA,KAAA;MAAA,OA+XE,iCAAwB,MAAM;AAC5B,YAAI,QAAQ,KAAK,KAAK;AACpB,iBAAO,KAAK,mBAA0C,KAAK;;AAE7D,eAAO;;OAnYX;MAAA,KAAA;MAAA,OAkZE,4BAAmB,OAAO;AAExB,YAAM,KAAK,MAAM;AAKjB,YAAI,QAAQ,KAAK,KAAK,aAAa;AACjC,eAAK;;AAEP,YAAI,KAAK,aAAa,MAAM,KAAK,WAAW;AAC1C,iBAAO,CAAC,KAAK,UAAU,KAAK,OAAO;;AAErC,eAAO,CAAA,kBAAiB,mBAAmB,IAAI;;;AA/ZnD,WAAA;;AAwaA,OAAK,YAAY,KAAK,aAAa;IACjC,MAAM;IACN,KAAK;IACL,cAAc;;AAGhB,MAAM,OAAO,KAAK;AAQlB,MAAI,iBAAiB;AAKd,gCAA8B;AACnC,qBAAiB;AASjB;AACA;;AAsBK,gBAAc,aAAa;AAChC,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,cAAc;;AAE5B,QAAI,CAAC,YAAY,KAAK,KAAK,KAAK,cAAc;AAC5C,aAAO,KAAK;WACP;AACL,UAAI,KAAK,cAAc;AACrB,eAAO,KAAK;;AAEd,aAAQ,KAAK,eAAe,cAAc;;;AAS9C,yBAAuB,QAAQ;AAC7B,QAAI,CAAC,gBAAgB;AACnB,YAAM,IAAI,MAAM;;AAElB,WAAO,IAAI,eACT,MACA,SAAC,QAAQ,aAAgB;AACvB,UAAI,eAAe,UAAU,GAAG;AAC9B,eAAO,SAAS;;AAElB,aAAO,SAAS;OAElB;;AAgBG,iBAAe;AACpB,QAAI,KAAK,KAAK;AACZ,aAAO,KAAK;;AAEd,QAAI,CAAC,gBAAgB;AACnB,YAAM,IAAI,MAAM;;AAElB,WAAQ,KAAK,MAAM,IAAI,eAAe,MAAM,SAAC,QAAW;AACtD,UAAI,UAAU,GAAG;AACf,eAAO,SAAS;;AAElB,UAAI,UAAU,GAAG;AACf,eAAO,SAAS;;AAElB,aAAO,SAAS;;;AASb,uBAAqB,KAAK,aAAa;AAC5C,QAAI,CAAC,aAAa;AAChB,aAAO;;AAET,WAAO,YAAY,cAAc,eAAe;;AAgC3C,qBACL,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;AACA,QAAI,UAAU,UAAU;AACtB,aAAO;;AAET,QAAI,KAAK,uBAAuB;AAK9B,cACG,IAAI;;AAGT,WAAO,MAAoB,OACzB,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;;AAiCG,sBACL,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;AACA,WAAO,OAAqB,OAC1B,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;;;;AC/wBJ,MAAI;AAgCG,wCACL,SACA,WACA,UACA,qBACA;AACA,QAAI,eAAe;AACnB,QAAI,gBAAgB;AAEpB,QAAI,UAAU,kBAAC,OAAU;AACvB,UAAI;AACF,eAAO,cAAc;eACd,GAAP;AAEA,aAAK,sBAAL,OAAA,SAAA,KAAK,mBAAqB;AAC1B,cAAM;;;AAGV,QAAM,iBAAgB;AACtB,QAAM,UAAU,CAAC,CAAC,wBAAD,QAAC,oBAAqB;AAEvC,iBAAa,iBACX,WACA,SACA,iBAAgB,sBAAsB;AAExC,WAAO,WAAM;AAAA,UAAA;AACX,MAAA,iBAAA,iBAAY,OAAZ,SAAA,cAAc,oBACZ,WACA,SACA,iBAAgB,sBAAsB;AAGxC,sBAAgB;AAChB,qBAAe;AACf,gBAAU;;;AAUP,0CAAwC;AAE7C,QAAI,kBAAkB,QAAW;AAC/B,aAAO;;AAGT,oBAAgB;AAChB,QAAI;AAEF,UAAM,UAAU;YACV,UAAU;AACZ,0BAAgB;;;AAGpB,WAAK,iBAAiB,gBAAgB,MAAM;AAC5C,WAAK,oBAAoB,gBAAgB,MAAM;aACxC,KAAP;;AAGF,WAAO;;;;ACnDF,qBAAmB,MAAM;AAC9B,WAAmC,KAAK,MAAM;;AAYzC,wBAAsB,MAAM,cAAc;AAC/C,QAAI;AACF,aAAO,UAAU;aACV,GAAP;AACA,sBAAY,OAAZ,SAAA,aAAe;AACf,aAAO;;;;;AC9DX,MAAM,qBAAqB;AACpB,MAAM,YAAY;IACvB,oBAAoB;IACpB,oBAAoB;IACpB,kBAAkB;IAClB,kBAAkB;;AAIb,MAAM,cAAc;IAEzB,kBAAkB;IAClB,aAAa;IACb,oBAAoB;IACpB,eAAe;IACf,oBAAoB;IACpB,cAAc;IACd,YAAY;IACZ,oBAAoB;IACpB,mBAAmB;IACnB,YAAY;IACZ,UAAU;IACV,mBAAmB;IACnB,oBAAoB;IAGpB,oBAAoB;IACpB,6BAA6B;IAC7B,2BAA2B;IAC3B,oCAAoC;IAGpC,gBAAgB;IAChB,UAAU;IAGV,8BAA8B;IAC9B,yBAAyB;IACzB,2BAA2B;IAG3B,sBAAsB;IAGtB,mBAAmB;IACnB,cAAc;;AAWT,kBAAgB,SAAS,WAAW,UAAU,qBAAqB;AACxE,WAAO,6BACL,SACA,WACA,UACA;;AAaG,4BACL,MACA,UACA,MACA,aACA;AAAA,QAFA,SAEA,QAAA;AAFA,aAAO;;AAEP,QADA,gBACA,QAAA;AADA,oBAAa;;AAGb,QAAM,UAAU;AAChB,YAAQ,UAAU;AAClB,YAAQ,cAAc;AACtB,WAAO,qBAAsB,gBAAc,MAAM,KAAK,UAAU;;AAU3D,8BAA4B,SAAS;AAC1C,QAAI,CAAC,aAAa,UAAU;AAC1B,aAAO;;AAET,QAAM,WAAW,QAAQ,QAAQ;AACjC,cAAU,YAAY,IAAI,sBAAsB;AAChD,WAAO,aAAa,QAAQ,OAAO,WAAW,SAAC,GAAD;AAAA,aAC5C,MAAM,MAAM,aAAa,8BAA8B,SAAS;;;AAS7D,wBAAsB,SAAS;AACpC,WACE,OAAO,WAAW,YAClB,QAAQ,QAAQ,uBAAuB,KACvC,QAAQ,QAAQ,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjH5B,MAAa,aAAb,2BAAA;AAIE,2BAAc;AAAA,uBAAA,MAAA;AAEZ,WAAK,YAAY;;AANrB,kBAAA,aAAA,CAAA;MAAA,KAAA;MAAA,OAcE,aAAI,SAAS;AAAA,YAAA,QAAA;AACX,YAAI,CAAC,KAAK,WAAW;AACnB,eAAK,YAAY;;AAEnB,aAAK,UAAU,KAAK;AACpB,eAAO,WAAM;AACX,gBAAK,OAAO;;;OApBlB;MAAA,KAAA;MAAA,OA4BE,iBAAO,SAAS;AACd,YAAI,CAAC,KAAK,WAAW;AACnB;;AAEF,mBAAW,KAAK,WAAW;;OAhC/B;MAAA,KAAA;MAAA,OAsCE,qBAAY;AACV,YAAI,CAAC,KAAK,WAAW;AACnB;;AAEF,aAAK,UAAU,SAAS;;OA1C5B;MAAA,KAAA;MAAA,OAiDE,cAAK,WAAW;AACd,YAAI,CAAC,KAAK,WAAW;AACnB;;AAEF,iBAAA,YAAA,iCAAsB,KAAK,YAA3B,OAAA,CAAA,SAAA,aAAA,QAAsC;AAAA,cAA3B,UAA2B,MAAA;AACpC,kBAAQ;;;OAtDd;MAAA,KAAA;MAAA,OA8DE,2BAAkB;AAAA,YAAA,uBAAA;AAChB,eAAA,yBAAA,mBAAO,KAAK,cAAZ,OAAA,SAAO,gBAAgB,WAAvB,OAAA,wBAAiC;;;AA/DrC,WAAA;;ACvBA;;AC4EO,mBAAiB,OAAO;AAC7B,WAAoD,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;AClD5D,MAAa,wBAAb,2BAAA;AAOE,oCAAY,KAAK,YAAY;AAAA,uBAAA,MAAA;AAE3B,WAAK,OAAO;AAEZ,WAAK,cAAc,UAAU,cAAc;AAE3C,WAAK,cAAc,cAAc;AAEjC,WAAK,YAAY;AAEjB,WAAK,iBAAiB;AAMtB,WAAK,iBAAiB;AACtB,WAAK;;AAxBT,kBAAA,wBAAA,CAAA;MAAA,KAAA;MAAA,OAkCE,kBAAQ,aAAa,SAAS,UAAU;AACtC,YAAM,eAAe,cAAc,UAAU;AAC7C,YAAM,YAAY,KAAK;AACvB,YAAM,WAAW,KAAK,iBAAiB,cAAc,SAAC,QAAW;AAC/D,cAAI,OAAO,UAAU,wBAAwB,WAAW;AACtD;AACA,qBAAS,OAAO,UAAU;;;AAG9B,YAAM,OAAO;AACb,aAAK,UAAU,oBAAoB;AACnC,aAAK,UAAU,sBAAsB;AACrC,aAAK,YAAY,aAAa;;OA9ClC;MAAA,KAAA;MAAA,OA0DE,qBAAY,aAAa,cAAc,UAAU;AAC/C,YAAM,WAAW,KAAK,iBAAiB,cAAc;AACrD,aAAK,YAAY;AACjB,eAAO;;OA7DX;MAAA,KAAA;MAAA,OA0EE,qBAAY,aAAa,cAAc,UAAU;AAC/C,YAAM,WAAW,KAAK,iBAAiB,cAAc,SAAC,OAAU;AAC9D;AACA,mBAAS;;AAEX,aAAK,YAAY;AACjB,eAAO;;OAhFX;MAAA,KAAA;MAAA,OA0FE,0BAAiB,aAAa,UAAU;AAItC,eAAO,KAAK,0BAA0B,aAAa,IAAI;;OA9F3D;MAAA,KAAA;MAAA,OAuGE,qBAAY,MAAM,aAAa;AAC7B,YAAM,MAAM,iBACV,MACA,MAAM,aAAa,KAAK,YACxB,aACA,KAAK;AAGP,YAAI,CAAC,KAAK,aAAa;AACrB,mBACM,IAAI,GAAG,UAAU,KAAK,MAC1B,IAAI,MAAM,WAAW,KAAK,KAAK,KAC/B,KACA;AACA,sBAAU,QAAQ;AAClB,iBAAK,qBAAqB,SAAS;AACnC;;eAEG;AACL,eAAK,qBAAqB,KAAK,aAAa;;;OA1HlD;MAAA,KAAA;MAAA,OAmIE,8BAAqB,KAAK,KAAK;AAG7B,YAAI,KAAK,2BAA2B,MAAM;AACxC,eAAK,+BAA+B,KAAK;eACpC;AACL,cAAW,YAAY,KAAK;;;OAzIlC;MAAA,KAAA;MAAA,OAkJE,wCAA+B,KAAK,KAAK;AACvC,YAAW,YACT,KACA,KAAK;UACH,gBAAgB;UAChB,yBAAyB;;;OAvJjC;MAAA,KAAA;MAAA,OAqKE,+BAAsB;AAAA,YAAA,QAAA;AACpB,eAAO,KAAK,MAAM,WAAW,SAAC,OAAU;AAEtC,cAAI,MAAK,eAAe,MAAM,UAAU,MAAK,aAAa;AACxD;;AAIF,cAAM,UAAU,mBAAmB,QAAQ;AAC3C,cAAI,CAAC,WAAW,QAAQ,eAAe,MAAK,WAAW;AACrD;;AAMF,kBAAQ,YAAY,MAAM;AAE1B,cAAI,CAAC,MAAK,aAAa;AACrB,kBAAK,cAAc,MAAM;;AAG3B,gBAAK,gBAAgB,QAAQ,SAAS;;;OA3L5C;MAAA,KAAA;MAAA,OAkME,qBAAY,UAAU;AACpB,aAAK,YAAY;;OAnMrB;MAAA,KAAA;MAAA,OA0ME,mCAA0B,aAAa;AACrC,YAAI,CAAE,gBAAe,KAAK,iBAAiB;AACzC,eAAK,eAAe,eAAe,IAAI;;AAEzC,eAAO,KAAK,eAAe;;OA9M/B;MAAA,KAAA;MAAA,OAqNE,yBAAgB,aAAa,SAAS;AACpC,YAAI,eAAe,KAAK,gBAAgB;AACtC,eAAK,eAAe,aAAa,KAAK;;;OAvN5C;MAAA,KAAA;MAAA,OA+NE,oCAA2B,KAAK;AAE9B,eAAO,IAAI,YAAY,UAAU;;;AAjOrC,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA,MAAa,WAAb,2BAAA;AAIE,uBAAY,UAAU;AAAA,uBAAA,MAAA;AAEpB,WAAK,YAAY;AAGjB,WAAK,QAAQ;AAMb,WAAK,UAAU;AAGf,WAAK,SAAS;;AAlBlB,kBAAA,WAAA,CAAA;MAAA,KAAA;MAAA,OA2BE,aAAI,KAAK;AACP,eAAO,CAAC,CAAC,KAAK,OAAO;;OA5BzB;MAAA,KAAA;MAAA,OAmCE,aAAI,KAAK;AACP,YAAM,YAAY,KAAK,OAAO;AAC9B,YAAI,WAAW;AACb,oBAAU,SAAS,EAAE,KAAK;AAC1B,iBAAO,UAAU;;AAEnB,eAAO;;OAzCX;MAAA,KAAA;MAAA,OAgDE,aAAI,KAAK,SAAS;AAChB,YAAI,CAAC,KAAK,IAAI,MAAM;AAClB,eAAK;;AAEP,aAAK,OAAO,OAAO;UAAC,SAAA;UAAS,QAAQ,KAAK;;AAC1C,aAAK;;OArDT;MAAA,KAAA;MAAA,OA2DE,kBAAS;AACP,YAAI,KAAK,SAAS,KAAK,WAAW;AAChC;;AAGF,YAAM,SAAQ,KAAK;AACnB,YAAI,SAAS,KAAK,UAAU;AAC5B,YAAI;AACJ,iBAAW,OAAO,QAAO;AACvB,cAAO,SAAU,OAAM,KAAhB;AACP,cAAI,SAAS,QAAQ;AACnB,qBAAS;AACT,wBAAY;;;AAIhB,YAAI,cAAc,QAAW;AAC3B,iBAAO,OAAM;AACb,eAAK;;;;AA7EX,WAAA;;;;ACOA,MAAM,sBAAsB,KAAK;IAE/B,KAAK;IAEL,KAAK;IAEL,KAAK;IAEL,MAAM;;AAOR,MAAI;AAQJ,MAAI;AAGJ,MAAM,sBAAsB;AAG5B,MAAM,uBAAuB;AAG7B,MAAM,qBAAqB;AAG3B,MAAM,uBAAuB;AAG7B,MAAM,iCAAiC;AA8BhC,8BAA4B,KAAK,aAAa;AACnD,QAAI,CAAC,GAAG;AACN,UAAuC,KAAK,SAAS,cAAc;AACnE,cAAQ,QACJ,OACA,KAAK,mBAAoB,MAAK,kBAAkB,IAAI,SAAS;;AAGnE,WAAO,cAAc,GAAG,KAAK,AAAU,cAAc,OAAO;;AAevD,yBAAuB,IAAG,KAAK,WAAW;AAC/C,QAAA,OAAY;AACV,SAAE,OAAO;AACT,aAAyB,IAAI,IAAI,KAAK,GAAE;;AAG1C,QAAI,aAAa,UAAU,IAAI,MAAM;AACnC,aAAO,UAAU,IAAI;;AAGvB,OAAE,OAAO;AAIT,QAAI,CAAC,GAAE,UAAU;AACf,SAAE,OAAO,GAAE;;AAGb,QAAM,OAAiC;MACrC,MAAM,GAAE;MACR,UAAU,GAAE;MACZ,MAAM,GAAE;MACR,UAAU,GAAE;MACZ,MAAM,GAAE,QAAQ,MAAM,KAAK,GAAE;MAC7B,UAAU,GAAE;MACZ,QAAQ,GAAE;MACV,MAAM,GAAE;MACR,QAAQ;;AAKV,QAAI,KAAK,SAAS,OAAO,KAAK;AAC5B,WAAK,WAAW,MAAM,KAAK;;AAK7B,QACG,KAAK,YAAY,WAAW,KAAK,QAAQ,MACzC,KAAK,YAAY,YAAY,KAAK,QAAQ,KAC3C;AACA,WAAK,OAAO;AACZ,WAAK,OAAO,KAAK;;AAKnB,QAAI;AACJ,QAAI,GAAE,UAAU,GAAE,UAAU,QAAQ;AAClC,eAAS,GAAE;eACF,KAAK,YAAY,WAAW,CAAC,KAAK,MAAM;AACjD,eAAS,KAAK;WACT;AACL,eAAS,KAAK,WAAW,OAAO,KAAK;;AAEvC,SAAK,SAAS;AAGd,QAAM,SAAS,UAAU,QAAQ,OAAO,SAAS,OAAO,OAAO,QAAQ;AAEvE,QAAI,WAAW;AACb,gBAAU,IAAI,KAAK;;AAGrB,WAAO;;AA0MF,yBAAuB,KAAK;AACjC,QAAI,OAAO,OAAO,UAAU;AAC1B,YAAM,mBAAmB;;AAE3B,WAAO,KAAK,cAAc,KAAK,IAAI;;AAwFrC,uCAAqC,WAAW;AAC9C,QAAI,CAAC,aAAa,aAAa,KAAK;AAClC,aAAO;;AAET,QAAM,SAAS,UACZ,QAAQ,qBAAqB,IAC7B,QAAQ,sBAAsB,IAC9B,QAAQ,oBAAoB,IAC5B,QAAQ,sBAAsB,IAC9B,QAAQ,gCAAgC,IACxC,QAAQ,SAAS;AACpB,WAAO,SAAS,MAAM,SAAS;;AA0B1B,wBAAsB,KAAK;AAChC,QAAI,OAAO,OAAO,UAAU;AAC1B,YAAM,mBAAmB;;AAI3B,QAAI,CAAC,cAAc,MAAM;AACvB,aAAO,IAAI;;AAOb,QAAM,OAAO,IAAI,SAAS,MAAM;AAChC,QAAM,SAAS,KAAK;AACpB,eACE,oBAAoB,SACpB,iCACA,IAAI;AAEN,QAAM,sBAAsB,KAAK;AACjC,QAAM,SACJ,uBAAuB,MACnB,aAAa,mBAAmB,KAAK,MACrC,YAAY,mBAAmB;AAErC,eAAW,OAAO,QAAQ,OAAO,GAAG,6BAA6B;AACjE,SAAK,OAAO,GAAG,uBAAuB,MAAM,IAAI;AAChD,WACE,SACA,KAAK,KAAK,OACV,4BAA4B,IAAI,UAC/B,KAAI,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;AC3gBjB,MAAa,qBAAb,2BAAA;AAIE,iCAAY,KAAK;AAAA,uBAAA,MAAA;AACf,gBACE,CAAC,KAAK,6BACN;AAIF,WAAK,OAAO;AAKZ,WAAK,mBAAmB,KAAK,KAAK,QAAQ;AAG1C,WAAK,aAAa;AAOlB,WAAK,SAAS;AAGd,WAAK,eAAe;AAGpB,WAAK,WAAW;AAGhB,WAAK,YAAY;AAGjB,WAAK,oBAAoB;AAGzB,WAAK,OAAO;AAGZ,WAAK,iBAAiB;AAGtB,WAAK,SAAS;AAGd,WAAK,sBAAsB;AAG3B,WAAK,sBAAsB;AAG3B,WAAK,yBAAyB;AAG9B,WAAK,oBAAoB;AAGzB,WAAK,sBAAsB;AAG3B,WAAK,WAAW;AAGhB,WAAK,OAAO;AAGZ,WAAK,aAAa;AAGlB,WAAK,WAAW;AAGhB,WAAK,WAAW;AAGhB,WAAK,YAAY;AAGjB,WAAK,YAAY;AAGjB,WAAK,UAAU;AAGf,WAAK,sBAAsB;AAG3B,WAAK,uBAAuB;AAE5B,WAAK;AAGL,WAAK,UAAU,IAAI,sBAAsB,KAAK,KAAK;AACnD,WAAK,QAAQ,YAAY,UAAU,KAAK;AAExC,WAAK;AACL,WAAK;;AArGT,kBAAA,qBAAA,CAAA;MAAA,KAAA;MAAA,OA4GE,qCAA4B;AAC1B,eAAO;;OA7GX;MAAA,KAAA;MAAA,OAiHE,oCAA2B;AAAA,YAAA,QAAA;AACzB,aAAK,QAAQ,YACX,YAAY,kBACZ,YAAY,aACZ,SAAC,MAAS;AACR,gBAAK,SAAS,KAAK;AACnB,gBAAK;;;OAvHb;MAAA,KAAA;MAAA,OAgIE,0CAAiC;AAC/B,YAAM,QAAQ,KAAK,KAAK,SAAS,YAAY;AAC7C,cAAM,OAAO;UAAC,QAAQ,KAAK;;AAC3B,cAAM,UAAU,UAAU,mBAAmB,MAAM;AACnD,aAAK,KAAK,cAAc;;OApI5B;MAAA,KAAA;MAAA,OA8IE,gCAAuB,UAAU;AAC/B,eAAO,KAAK,QAAQ,iBAAiB,YAAY,aAAa,SAAC,MAAS;AACtE,mBAAS;YAAC,QAAQ,KAAK;;;;OAhJ7B;MAAA,KAAA;MAAA,OA2JE,6BAAoB,UAAU;AAC5B,eAAO,KAAK,QAAQ,YAClB,YAAY,oBACZ,YAAY,cACZ,SAAC,cAAiB;AAChB,mBAAS,aAAa;;;OAhK9B;MAAA,KAAA;MAAA,OA4KE,iBAAQ,UAAU,YAAY,UAAU;AACtC,aAAK,QAAQ,QACX,YAAY,UACZ,KAAK;UACH,YAAY;UACZ,cAAc;YAEhB;;OAnLN;MAAA,KAAA;MAAA,OA4LE,yBAAgB,UAAU;AACxB,aAAK,QAAQ,QAAQ,YAAY,mBAAmB,MAAM;;OA7L9D;MAAA,KAAA;MAAA,OAwME,uBAAc,OAAO,QAAQ,aAAa;AACxC,YAAM,YAAY,KAAK;AACvB,aAAK,QAAQ,YACX,YAAY,YACZ,KAAK;UACH,MAAM;UACN,SAAS;UACT,UAAU;UACV,eAAe;;AAGnB,YAAM,WAAW,IAAI;AACrB,aAAK,oBAAoB,aAAa;AACtC,eAAO,SAAS;;OArNpB;MAAA,KAAA;MAAA,OA2NE,mCAA0B;AAAA,YAAA,SAAA;AACxB,aAAK,QAAQ,iBAAiB,YAAY,oBAAoB,SAAC,MAAS;AACtE,cAAM,KAAK,KAAK;AAChB,cAAI,OAAO,QAAW;AACpB,mBAAK,oBAAoB,IAAI;AAC7B,mBAAO,OAAK,oBAAoB;;;AAIpC,aAAK,QAAQ,iBAAiB,YAAY,mBAAmB,SAAC,MAAS;AACrE,cAAM,KAAK,KAAK;AAChB,cAAI,OAAO,QAAW;AACpB,mBAAK,oBAAoB,IAAI,OAAO;AACpC,mBAAO,OAAK,oBAAoB;;;;OAxOxC;MAAA,KAAA;MAAA,OAiPE,gCAAuB,UAAU;AAC/B,aAAK,QAAQ,YACX,YAAY,sBACZ,KAAK;UACH,WAAc,WAAd;UACA,YAAY;;;OAtPpB;MAAA,KAAA;MAAA,OAkQE,yBAAgB,UAAU;AACxB,aAAK,QAAQ,iBAAiB,YAAY,oBAAoB,SAAC,KAAQ;AACrE,mBAAS,IAAI,oBAAoB,IAAI;;AAEvC,aAAK,uBAAuB;;OAtQhC;MAAA,KAAA;MAAA,OAgRE,wBAAe,UAAU;AACvB,aAAK,QAAQ,iBAAiB,YAAY,mBAAmB,SAAC,KAAQ;AACpE,mBAAS,IAAI,oBAAoB,IAAI;;AAEvC,aAAK,uBAAuB;;OApRhC;MAAA,KAAA;MAAA,OA0RE,6BAAoB;AAClB,aAAK,QAAQ,YAAY,YAAY;;OA3RzC;MAAA,KAAA;MAAA,OAmSE,4BAAmB,QAAQ;AAEzB,eAAO,OAAO,MAAM,aAAa,KAAK;;OArS1C;MAAA,KAAA;MAAA,OA2SE,8BAAqB;AACnB,aAAK,QAAQ,YAAY,YAAY;;OA5SzC;MAAA,KAAA;MAAA,OAqTE,wBAAe,MAAM;AAEnB,YAAM,aAAa,UACjB,OAAO,SAAS,WAAW,aAAa,QAAQ,MAChD;AAGF,YAAM,UAAU,WAAW,YAAY,WAAW,WAAW;AAE7D,aAAK,OAAO,WAAW,cAAc;AAIrC,YAAI,cAAc,KAAK,MAAM;AAC3B,iBAAO,KAAK,KAAK;;AAGnB,aAAK,SAAS,QAAQ;AACtB,aAAK,eAAe,QAAQ;AAC5B,aAAK,WAAW,QAAQ;AACxB,aAAK,oBAAoB,QAAQ;AACjC,aAAK,YAAY,QAAQ;AACzB,aAAK,iBAAiB,QAAQ;AAC9B,aAAK,SAAS,QAAQ;AACtB,aAAK,sBAAsB,QAAQ;AACnC,aAAK,sBAAsB,QAAQ;AACnC,aAAK,yBAAyB,QAAQ;AACtC,aAAK,oBAAoB,QAAQ;AACjC,aAAK,sBAAsB,QAAQ;AACnC,aAAK,WAAW,mBAAmB,QAAQ,SAAS;AACpD,aAAK,OAAO,QAAQ;AACpB,aAAK,aAAa,QAAQ;AAC1B,aAAK,WAAW,QAAQ;AACxB,aAAK,WAAW,QAAQ;AACxB,aAAK,YAAY,QAAQ;AACzB,aAAK,YAAY,QAAQ;AACzB,aAAK,UAAU,QAAQ;AAEvB,aAAK,aAAa,WAAW,QAAQ;;OA3VzC;MAAA,KAAA;MAAA,OAmWE,0BAAiB;AACf,YAAM,gBAAgB,KAAK,SAAS,MAAM;AAC1C,kBAAU,eAAe;AACzB,YAAM,QAAQ,OAAO,cAAc;AACnC,YAAM,YAAY;AAClB,iBAAS,MAAM,KAAK,MAAM,OAAO,OAAO,IAAI,QAAQ,MAAM,IAAI,QAAQ;AAEpE,oBAAU,KAAK,IAAI;;AAErB,eAAO,UAAU,UAAU,SAAS,IAAI;;OA5W5C;MAAA,KAAA;MAAA,OAoXE,+BAAsB;AAKpB,YAAI,UAAS,KAAK,KAAK,QAAQ,KAAK,KAAK,IAAI,KAAK;AAChD,eAAK,eAAqC,KAAK,KAAK,IAAI;mBAC/C,KAAK,KAAK,kBAAkB;AACrC,cAAI,OAAO,KAAK,KAAK,oBAAoB,UAAU;AACjD,iBAAK,WAAW,KAAK,KAAK;qBACjB,UAAS,KAAK,KAAK,mBAAmB;AAC/C,iBAAK,eAAe,KAAK,KAAK;;eAE3B;AACL,eAAK,eAAe,KAAK,KAAK;;;OAlYpC;MAAA,KAAA;MAAA,OA0YE,uBAAc,GAAG;AACf,YAAI,CAAC,EAAE,SAAS;AACd;;AAEF,aAAK,QAAQ,YACX,YAAY,sBACZ,KAAK;UACH,WAAW,EAAE;;;;AAjZrB,WAAA;;;;ACUA,MAAI;AASG,8BAA4B;AACjC,QAAI,CAAC,eAAe;AAClB,sBAAgB;;AAElB,WAAO;;AAOF,oBAAkB,IAAI,MAAM;AACjC,QAAM,iBAAgB;AACtB,cAAU,CAAC,eAAc,KAAK,0BAA0B;AACxD,mBAAc,MAAM;;AASf,eAAa,IAAI,KAAK,MAAM;AACjC,QAAM,KAAK,cAAc;AACzB,eAAW,IAAI,iBAAiB;AAChC,OAAG,KAAK;;AA6BH,sBAAoB,KAAK,KAAK,QAAQ,aAAa;AAExD,QAAM,IAAI,IAAI,SAAS,cAAc;AACrC,MAAE,MAAM;AACR,QAAI,QAAQ;AACV,QAAE,SAAS;;AAEb,QAAI,aAAa;AACf,QAAE,UAAU;;AAEd,QAAI,SAAS,KAAK,YAAY;;AA6EzB,gCAA8B,QAAQ,QAAQ,MAAM,IAAI;AAC7D,QAAO,SAAU,OAAO,QAAjB;AACP,QAAI,QAAQ,OAAO;AACnB,QAAI,CAAC,OAAO;AACV,cAAQ,OAAO,mBAAmB;;AAEpC,QAAI,MAAM,MAAM;AAChB,QAAI,CAAC,MAAM,SAAS;AAClB,YAAM,MAAM,UAAU;;AAExB,QAAI,KAAK;AACT,QAAI,CAAC,OAAO,QAAQ,UAAU;AAC5B;;AAEF,SAAK,SAAC,QAAW;AACf,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,YAAI,GAAG,KAAK,MAAM;;AAEpB,YAAM,UAAU;QACd,MADc,cACT,KAAI;AACP,cAAG;;;;;AAoBJ,wBAAsB,MAAM,iBAAiB,oBAAoB;AACtE,QAAI,gBAAgB,sBAAsB;AAC1C,aAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,UAAM,QAAQ,gBAAgB;AAC9B,UAAI,MAAM,QAAQ,QAAQ;AACxB,2BAAmB,MAAM;AACzB,wBAAgB,cAAc,OAAO;aAChC;AACL,mBAEE,KAAK,UAAU,MACf,iCACA,KAAK,MACL;AAEF,sBAAc,KAAK;;;AAGvB,QAAI,oBAAoB;AACtB,4BAAsB,MAAM;;;AAUhC,8BAA4B,MAAM,mBAAmB;AACnD,eACE,kBAAkB,OAAO,SAAC,OAAD;AAAA,aAAW,KAAK;OAAQ,WAAW,GAC5D,kDACA,KAAK,MACL,kBAAkB,KAAK;;AAU3B,iCAA+B,MAAM,eAAe;AAClD,QAAM,yBAAyB;MAC7B,OAAO;MACP,QAAQ;MACR,MAAM;MACN,UAAU;MACV,cAAc;MACd,YAAY;MACZ,UAAU;MACV,MAAM;MACN,uBAAuB;MACvB,gBAAgB;MAChB,cAAc;MACd,cAAc;MACd,iBAAiB;MACjB,mBAAmB;MACnB,eAAe;;AAGjB,aAAW,SAAS,MAAM;AACxB,UAAI,CAAC,OAAO,MAAM,UAAU,SAAS,wBAAwB;AAC3D;;AAEF,UAAI,cAAc,QAAQ,SAAS,GAAG;AAIpC,qBAAa,IAAI,MAAJ,2BAAmC,KAAK,OAAxC,OAAiD,QAAjD;;;;AAMnB,MAAI,oBAAoB;AAejB,gCAA8B,SAAS;AAC5C,wBAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClSf,2BAAyB,KAAK,MAAM;AACzC,WAAO,KAAK;AAEZ,QAAM,aAAa,WAAW,OAAO;AACrC,QAAI;AACJ,QAAI;AAIF,eAAS,IAAI,OAAO,OAAO;aACpB,UAAP;;AAGF,QAAI,CAAC,QAAQ;AAEX,UAAI,OAAO;AACX,eAAS;;AAEX,WAAO;;AAGT,MAAa,wBAAb,yBAAA,qBAAA;AAAA,cAAA,wBAAA;AAAA,QAAA,SAAA,aAAA;AAAA,sCAAA;AAAA,uBAAA,MAAA;AAAA,aAAA,OAAA,MAAA,MAAA;;AAAA,kBAAA,wBAAA,CAAA;MAAA,KAAA;MAAA,OAEE,qCAA4B;AAC1B,eAAO;;OAHX;MAAA,KAAA;MAAA,OAUE,oCAA2B;AAGzB,eACE,KAAK,eAAe,cACpB,KAAK,eAAe,aACpB,KAAK,eAAe,YACpB,KAAK,eAAe,YACpB,KAAK,eAAe,YACpB,KAAK,eAAe,WACpB,KAAK,eAAe;;OApB1B;MAAA,KAAA;MAAA,KAyBE,eAAa;AACX,eAAO,KAAK;;OA1BhB;MAAA,KAAA;MAAA,OA8BE,mBAAU;AACR,eAAO,gBAAgB,KAAK,MAAM,MAAM,aAAa,KAAK;;OA/B9D;MAAA,KAAA;MAAA,KAmCE,eAAe;AACb,eAAO,KAAK;;OApChB;MAAA,KAAA;MAAA,OAwCE,qBAAY;AACV,eAAO,KAAK,UAAU,KAAK;;OAzC/B;MAAA,KAAA;MAAA,OAgDE,0BAAiB,OAAO,QAAQ;AAC9B,mBAAW,KAAK,4BAA4B;AAC5C,aAAK,cAAc,OAAO;;OAlD9B;MAAA,KAAA;MAAA,OAwDE,2BAAkB;AAChB,aAAK,QAAQ,YAAY;;OAzD7B;MAAA,KAAA;MAAA,OA+DE,qBAAY,UAAU;AACpB,aAAK,QAAQ,YAAY,gBAAgB;;OAhE7C;MAAA,KAAA;MAAA,OA8EE,wCAA+B,UAAU;AACvC,aAAK,QAAQ,YACX,aACA,KAAK;UACH,MAAM,OAAO,aAAa;;;OAlFlC;MAAA,KAAA;MAAA,OAoGE,+BAAqB,QAAQ,QAAQ,MAAM,IAAI;AAC7C,6BAAqB,QAAQ,QAAQ,MAAM;;;AArG/C,WAAA;IAA2C;;;ACF3C,MAAM,WAAW,KAAK;IACpB,cAAc,KAAK;MACjB,YAAY;;;AAQhB,MAAM,cAAc,KAAK,WAAM;AAC7B,QAAM,aAAa,OAAO;AAE1B,QAAI;AAGF,aAAO,UAAU;aACV,KAAP;AACA,UAAI,CAAC,UAAU,MAAM;AACnB,cAAM,KAAK,eAAe,iCAAiC;;AAE7D,aAAO;;;AAOJ,0BAAwB;AAC7B,QAAM,WAAW;AAEjB,WAAO;MACL,MAAM,SAAS,cAAc,YAAY;MACzC,mBAAmB,SAAS,cAAc,YAAY;;;AAO1D,MAAM,wBAAwB,KAAK,WAAM;AACvC,QAAM,OAAO,OAAO,OAAO,KAAK,KAAK,cAAc;AAGnD,QAAI,cAAc,MAAM;AACtB,aAAO,KAAK;;AAGd,WAAO;;AAMF,8BAA4B;AAEjC,WAAO;;AAMT,MAAM,mBAAmB,KAAK,WAAM;AAClC,QAAM,OAAO,cAAc,cAAc,YAAY,YAAY;AACjE,WAAO,mBAAmB;;AAMrB,yBAAuB;AAE5B,WAAO;;AAiCF,0BAAwB;AAC7B,WAAO,mBAAmB;;;;ACnH5B,MAAM,YAAY;AAUX,wBAAsB,KAAK,MAAM,UAAU;AAChD,QAAM,WAAW;MACf,MAAA;MACA,IAAI;;AAEN,cAAU,KAAK;AACf,mBAAe;AACf,WAAO,WAAY;AACjB,UAAM,QAAQ,UAAU,QAAQ;AAChC,UAAI,QAAQ,IAAI;AACd,kBAAU,OAAO,OAAO;;;;AAU9B,0BAAwB,KAAK;AAC3B,QAAI,IAAI,eAAe;AACrB;;AAEF,QAAI,gBAAgB;AACpB,QAAI,iBAAiB,WAAW,SAAU,OAAO;AAE/C,UAAM,YAAY,QAAQ;AAC1B,UACE,MAAM,UAAU,IAAI,UACpB,MAAM,UAAU,IAAI,QAAQ,SAAS,UACrC,OAAO,aAAa,YACpB,UAAU,QAAQ,WAAW,GAC7B;AACA;;AAGF,UAAM,OACJ,UAAgC,QAAQ,OAAQ,OAAO;AAEzD,UAAI,IAAI,QAAQ,YAAY,KAAK,eAAe,IAAI,QAAQ,UAAU;AACpE;;AAGF,UAAI,MAAM,0BAA0B;AAClC,cAAM;;AAGR,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,YAAI,UAAU,GAAG,QAAQ,KAAK,SAAS;AACrC;;AAEF,YAAO,KAAM,UAAU,GAAhB;AACP,YAAI;AACF,aAAG;iBACI,GAAP;AAEA,qBAAW,WAAM;AACf,kBAAM;;;;;;;;ACrFhB,MAAI,aAAa;AAWjB,MAAM,YAAY;AAClB,MAAI,aAAa;AAMV,qBAAmB,KAAK;AAC7B,QAAI;AACF,iBAAW;aACJ,GAAP;AAEA,cAAe,MAAM,EAAE,SAAS,EAAE;;;AAOtC,sBAAoB,KAAK;AACvB,QAAI,IAAI,SAAS;AACf;;AAEF,QAAI,UAAU;AAEd,0BAAsB;AAGtB,oBAAgB;AAEhB,0BAAsB,KAAK,IAAI,SAAS,iBAAiB;AACzD,oBAAgB;;AAQlB,8BAA4B,SAAQ,KAAK;AACvC,QAAM,MAAM,IAAI;AAChB,QAAO,QAAS,IAAT;AACP,QAAI,QAAQ,WAAY;AACtB,cAAO,eAAe,SAAU,MAAK;AACnC,kBAAU;;AAEZ,UAAI,CAAC,QAAO,SAAS;AAEnB,YAAI,MAAM;;AAEZ,UAAI,SAAS;AACb,aAAO,IAAI;;;AASf,4BAA0B,SAAQ,QAAQ;AACxC,QAAI,SAAS,OAAO,aAAa;AACjC,YAAO,eAAe,SAAU,KAAK;AACnC,gBAAU;;AAEZ,cAAU;AACV,WAAO,aAAa,UAAU;;AAQhC,iCAA+B,KAAK,YAAY;AAAA,QAAA,QAAA,gBACrC,IADqC;AAE5C,UAAM,OAAO,WAAW;AACxB,UAAI;AACF,YAAI,KAAK,WAAW,UAAU;AAC5B,iBAAA;;AAEF,YAAM,MAAM,KAAK,aAAa;AAC9B,YAAM,SAAS,KAAK,aAAa;AACjC,YAAI,OAAO,QAAQ,yBAAyB,KAAK,IAAI,WAAW,QAAQ;AACtE,cAAI,KAAK,eAAe;AACtB,mCAAuB,MAAM,KAAK,KAAK;AACvC,iBAAK,iBAAiB,QAAQ,WAAM;AAClC,kBAAI;AACF,uCAAuB,MAAM,KAAK,KAAK;uBAChC,GAAP;AACA,wBAAe,MAAM,EAAE,SAAS,EAAE;;;qBAG7B,QAAQ;AACjB,6BAAiB,QAAQ;;;eAGtB,GAAP;AACA,gBAAe,MAAM,EAAE,SAAS,EAAE;;;AAvBtC,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAAA,UAAA,OAAA,MAAnC;AAAmC,UAAA,SAAA;AAItC;;;AA8BR,kCAAgC,MAAM,SAAQ,KAAK;AACjD,QAAI,IAAI,SAAS;AACf;;AAEF,QAAM,MAAM,IAAI;AAChB,uBAAmB,SAAQ;AAC3B,QAAI,IAAI,QAAQ,IAAI,KAAK,WAAW,QAAQ;AAC1C,gBAAU;;;AAQd,2BAAyB,KAAK;AAC5B,QAAI,CAAC,OAAO,kBAAkB;AAC5B;;AAEF,QAAM,WAAW,IAAI,iBAAiB,SAAU,WAAW;AACzD,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,8BAAsB,KAAK,UAAU,GAAG;;;AAG5C,aAAS,QAAQ,IAAI,SAAS,iBAAiB;MAC7C,SAAS;MACT,WAAW;;;AAQf,iCAA+B,KAAK;AAElC,QAAO,cAAc,IAAd;AACP,QAAI,aAAa,SAAU,IAAI,MAAM;AACnC,aAAO,QAAQ;AACf,gBAAU,KAAK;AACf,aAAO,YAAW,MAAM,MAAM;;AAIhC,QAAI,cAAc,SAAU,IAAI;AAC9B,UAAM,KAAK;AACX,UAAM,OAAO,MAAM,UAAU,MAAM,KAAK;AAKxC,yBAAmB;AACjB;AACA,YAAI,OAAO,MAAM,UAAU;AAEzB,iBAAQ,IAAG,IAAI,MACZ,KAAK,KAAK;eACR;AACL,iBAAO,GAAG,MAAM,MAAM;;;AAG1B,WAAK,KAAK;AAIV,sBAAgB;AACd,kBAAU,MAAM,IAAI,WAAW,MAAM,KAAK;;AAE5C;AACA,aAAO;;AAET,QAAO,gBAAiB,IAAjB;AACP,QAAI,gBAAgB,SAAU,IAAI;AAChC,oBAAc;AACd,UAAI,aAAa,UAAU;AAC3B,aAAO,UAAU;;;AAQrB,2BAAyB,KAAK;AAC5B,QAAI,QAAQ;AAIZ,0BAAsB;AAEpB,UAAI,UAAU,GAAG;AACf,cAAM,IAAI,MAAM;;;AAGpB,QAAI;AACF,UAAI,QAAQ;AACZ,UAAI,SAAS,WAAY;AACvB;AACA,eAAO;;AAET,UAAI,UAAU,WAAY;AACxB;AACA,eAAO;;aAEF,GAAP;AACA,cAAe,MAAM,EAAE,SAAS,EAAE;;;AAStC,mBAAiB,MAAM;AACrB,QAAI,CAAC,YAAY;AACf,cAAQ;;AAOV,WAAO;;AAMF,uCAAqC;AAC1C,iBAAa,QAAQ,eAAe,SAAU,MAAM;AAClD,mBAAa,KAAK;;;;;AC5OtB,MAAM,oBAAoB;IACxB,QAAQ;IACR,OAAO;IACP,SAAS;IACT,SAAS;IACT,SAAS;IACT,UAAU;IACV,OAAO;IACP,UAAU;IACV,OAAO;IACP,iBAAiB;IACjB,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,YAAY;IACZ,OAAO;IACP,QAAQ;IACR,oBAAoB;IACpB,SAAS;IACT,MAAM;IACN,WAAW;IACX,UAAU;IACV,UAAU;IACV,aAAa;IACb,SAAS;IACT,UAAU;IACV,QAAQ;IACR,WAAW;IACX,UAAU;IACV,aAAa;IACb,OAAO;IACP,SAAS;IACT,WAAW;IACX,QAAQ;IACR,WAAW;IACX,UAAU;IACV,WAAW;IACX,MAAM;IACN,SAAS;IACT,UAAU;IACV,WAAW;IACX,SAAS;IACT,SAAS;IACT,OAAO;IACP,aAAa;IACb,aAAa;IACb,gBAAgB;IAChB,UAAU;IACV,KAAK;IACL,SAAS;;AAKX,MAAM,mCAAmC;IAKvC;IACA;IACA;IACA;IACA;;AAOK,gBAAc,KAAK;AACxB;AACA,QAAM,SAAS;AAGf,QAAI,aAAa,OAAO;AAExB,mBAAe,QAAQ,MAAM,KAAK;AAElC,yBAAqB,OAAO;;AAcvB,0BAAwB,KAAK,MAAM,gBAAgB;AACxD,QAAM,OAAO,KAAK;AAElB,eACE,iBAAiB,MAAM,IAAI,QAAQ,UACnC,yCACA,MACA,IAAI,QAAQ;AAEd,QAAI,gBAAgB;AAClB,qBAAe,MAAM,SAAC,OAAS;AAC7B,mBAAW,OAAM;AACjB,YAAI,MAAM,KAAK;;WAEZ;AACL,UAAI,MAAM,KAAK;;;AAgBZ,kBACL,oBACA,oBACA,6BACA;AACA,QAAI;AACF,UAAM,WAAW;AAEjB,mBAAa;AACb,2BAAqB,QAAQ;AAC7B,2BAAqB,QAAQ,gBAAgB;AAC7C,UAAI,6BAA6B;AAC/B,wCAAgC,QAAQ;;AAE1C,aAAO,UAAU,IAAI,sBAAsB;AAC3C,gBAAU;AACV;AAKA,qBACE,QACuC,OAAO,QAAS,QAAQ,IAC/D;AAGF,aAAO,QAAQ;aACR,GAAP;AACA,UAAI,OAAO,WAAW,OAAO,QAAQ,eAAe;AAElD,YAAI,EAAE,WAAW,mBAAmB,EAAE,UAAU;AAE9C,iBAAO,QAAQ,cAAc;;;AAIjC,UAAM,IAAI,OAAO,WAAW;QAAC,MAAM;UAAC,MAAM;;;AAC1C,UAAI,CAAC,EAAE,KAAK,MAAM;AAChB,+BAAuB,GAAG,EAAE;AAC5B,cAAM;;;;AAaL,gCAA8B,SAAQ,gBAAgB;AAC3D,QAAM,YAAY,QAAO,SAAS;AAIlC,QAAI,CAAC,aAAa,CAAC,UAAU,QAAQ;AACnC;;AAEF,eACE,UAAU,MAAM,eAAe,QAC/B,kCACA,UAAU,IACV,eAAe;;AAWZ,gCAA8B,SAAQ,MAAM,cAAc;AAC/D,QAAM,iBAAiB,mBAAmB,KAAK,YAAY;AAG3D,QAAI,QAAO,SAAS,YAAY,gBAAgB;AAC9C;;AAEF,QAAI,KAAK,qBAAqB,KAAK,QAAO,SAAS,WAAW;AAC5D;;AAEF,QAAI,QAAO,SAAS,YAAY,iBAAiB;AAC/C;;AAEF,QAAI,iCAAiC,QAAQ,SAAS,IAAI;AACxD;;AAEF,eACE,gBAAgB,aAAa,QAAQ,SAAS,IAC9C,6CACA;;AAUG,2CAAyC,SAAQ,kBAAkB;AACxE,QAAI,CAAC,QAAO,SAAS,UAAU;AAC7B,YAAM,IAAI,MAAM,wBAAwB,QAAO,SAAS;;AAE1D,QAAM,YAAY,QAAO,SAAS;AAGlC,QAAM,WAAW,YAAY,UAAU,KAAK,QAAO,SAAS;AAC5D,QAAA,sBAAiB,mBAAmB,WAA/B,WAAL,oBAAK;AACL,QAAI,cAAc,WAAW;AAI3B,iBAAW,mBACT,aAAa,QAAO,SAAS,WAC7B;;AAEJ,aAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAEhD,UAAI,iBAAiB,MAAM,UAAU;AACnC;;AAGF,UAAI,SAAS,UAAU,MAAM,iBAAiB,KAAK;AACjD;;;AAGJ,UAAM,IAAI,MACR,iCAAiC,WAAW,aAAa;;AAStD,wBAAsB,SAAQ;AACnC,QAAI,WAAU,QAAO,QAAQ;AAC3B,YAAM,IAAI,MAAM,qBAAqB,QAAO,SAAS;;;AAiClD,4BAA0B,MAAM,SAAS;AAC9C,QAAI,WAAW,aAAa;AAC1B,aAAO,CAAC,CAAC,kBAAkB;;AAE7B,WAAO;;AAaT,kCAAgC,GAAG,UAAU;AAC3C,QAAI,QAAQ,MACV,KAAK,iBACL,aACA,mBAAmB,4BACnB,QACA,mBAAmB,EAAE,WACrB,SACC,YAAW,IAAI,KAChB,QACA,mBAAmB,SAAS,YAC5B,QACA,mBAAmB,EAAE,SAAS;;;;ACzV3B,gBAAc,QAAQ,MAAM;AACjC,iBAAa,MAAM,CAAC,OAAO,WAAW,WAAW;AACjD,QAAO,MAAO,KAAP;AACP,oBAAgB,QAAQ;AACxB,eAAW,QAAQ;;AAOrB,2BAAyB,QAAQ,MAAM;AACrC,QAAM,IAAI,OAAO,SAAS,cAAc;AACxC,MAAE,aAAa,iBAAiB,KAAK;AACrC,MAAE,aAAa,iBAAiB,KAAK;AACrC,MAAE,aAAa,iBAAiB,KAAK;AACrC,WAAO,SAAS,eAAe,KAAK,YAAY;;;;ACdlD,OAAK;AACL,WAAS,OAAO;AAEhB,SAAO,SAAS;",
  "names": []
}
