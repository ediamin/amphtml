{
  "version": 3,
  "sources": ["../src/examiner/examiner.js"],
  "sourcesContent": ["/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {!Window} win\n */\nfunction detectLongTasks(win) {\n  const observer = new win.PerformanceObserver((entryList) => {\n    /** @type {!Array<!PerformanceLongTaskTiming>} */\n    const entries = entryList.getEntries();\n    for (const entry of entries) {\n      const {attribution, duration, entryType, name} = entry;\n\n      if (entryType != 'longtask' || name != 'cross-origin-descendant') {\n        continue;\n      }\n      const attr = attribution[0];\n      if (!attr?.containerSrc) {\n        continue;\n      }\n\n      let culprit = attr.containerSrc;\n      if (attr.containerName) {\n        const match = attr.containerName.match(/\"type\":\"([^\\\"]*)\"/);\n        if (match.length > 1) {\n          culprit = `<amp-ad type=\"${match[1]}\">`;\n        }\n      }\n      console./*OK*/ log(\n        `%c LONG TASK %c ${duration}ms from ${culprit}`,\n        'background: red; color: white',\n        'background: #fff; color: #000'\n      );\n    }\n  });\n  observer.observe({entryTypes: ['longtask']});\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isLongTaskApiSupported(win) {\n  return (\n    !!win.PerformanceObserver &&\n    !!win.TaskAttributionTiming &&\n    'containerName' in win.TaskAttributionTiming.prototype\n  );\n}\n\nif (isLongTaskApiSupported(self)) {\n  detectLongTasks(self);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,2BAAyB,KAAK;AAC5B,QAAM,WAAW,IAAI,IAAI,oBAAoB,SAAC,WAAc;AAE1D,UAAM,UAAU,UAAU;AAC1B,eAAA,YAAA,gCAAoB,UAApB,OAAA,CAAA,SAAA,aAAA,QAA6B;AAAA,YAAlB,QAAkB,MAAA;AAC3B,YAAO,cAA0C,MAA1C,aAAa,WAA6B,MAA7B,UAAU,YAAmB,MAAnB,WAAW,OAAQ,MAAR;AAEzC,YAAI,aAAa,cAAc,QAAQ,2BAA2B;AAChE;;AAEF,YAAM,OAAO,YAAY;AACzB,YAAI,CAAC,SAAD,QAAC,KAAM,eAAc;AACvB;;AAGF,YAAI,UAAU,KAAK;AACnB,YAAI,KAAK,eAAe;AACtB,cAAM,QAAQ,KAAK,cAAc,MAAM;AACvC,cAAI,MAAM,SAAS,GAAG;AACpB,sBAAO,mBAAoB,MAAM,KAA1B;;;AAGX,gBAAe,IAAf,qBACqB,WADrB,aACwC,SACtC,iCACA;;;AAIN,aAAS,QAAQ;MAAC,YAAY,CAAC;;;AAOjC,kCAAgC,KAAK;AACnC,WACE,CAAC,CAAC,IAAI,uBACN,CAAC,CAAC,IAAI,yBACN,mBAAmB,IAAI,sBAAsB;;AAIjD,MAAI,uBAAuB,OAAO;AAChC,oBAAgB;;",
  "names": []
}
