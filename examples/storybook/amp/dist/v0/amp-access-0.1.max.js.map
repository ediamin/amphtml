{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../src/core/types/array.js", "../../src/core/types/enum.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/config.js", "../../src/log.js", "../../src/core/window/index.js", "../../src/service.js", "../../src/core/minified-mode.js", "../../src/core/assert/dev.js", "../../src/core/assert/user.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/css-selectors.js", "../../src/dom.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../extensions/amp-access/0.1/amp-access-client.js", "../../extensions/amp-access/0.1/iframe-api/messenger.js", "../../src/core/types/object/json.js", "../../src/style.js", "../../extensions/amp-access/0.1/amp-access-iframe.js", "../../extensions/amp-access/0.1/amp-access-other.js", "../../src/experiments/index.js", "../../src/form-data-wrapper.js", "../../src/utils/xhr-utils.js", "../../src/document-fetcher.js", "../../extensions/amp-access/0.1/amp-access-server.js", "../../src/core/types/string/bytes.js", "../../src/core/types/string/base64.js", "../../extensions/amp-access/0.1/jwt.js", "../../extensions/amp-access/0.1/amp-access-server-jwt.js", "../../extensions/amp-access/0.1/amp-access-vendor.js", "../../src/core/dom/event-helper-listen.js", "../../src/event-helper.js", "../../extensions/amp-access/0.1/login-dialog.js", "../../src/analytics.js", "../../extensions/amp-access/0.1/amp-access-source.js", "../../extensions/amp-access/0.1/access-vars.js", "../../src/core/constants/action-constants.js", "../../build/parsers/access-expr-impl.js", "../../extensions/amp-access/0.1/access-expr.js", "../../src/core/constants/amp-events.js", "../../build/amp-access-0.1.css.js", "../../src/core/data-structures/observable.js", "../../src/core/constants/enums.js", "../../src/style-installer.js", "../../src/error-reporting.js", "../../extensions/amp-access/0.1/amp-access.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks whether `val` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} val\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, val) {\n  for (const k in enumObj) {\n    if (enumObj[k] === val) {\n      return true;\n    }\n  }\n  return false;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Magic constant that is replaced by babel.\n// IS_MINIFIED is always replaced with true when closure compiler is used\nconst IS_MINIFIED = false;\n\n/**\n * Returns true whenever closure compiler is used.\n * @return {boolean}\n */\nexport function isMinifiedMode() {\n  return IS_MINIFIED;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {isMinifiedMode} from '../minified-mode';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (isMinifiedMode()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {USER_ERROR_SENTINEL} from '../error/message-helpers';\n\n/**\n * @fileoverview This file provides the entrypoint for user assertions. It's\n * designed so all functions are pure function calls to improve inlining.\n */\n\n/**\n * Throws a user error if the first argument isn't trueish. Mirrors userAssert\n * in src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {UserError} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return assertions.assert(\n    USER_ERROR_SENTINEL,\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertElement(shouldBeElement, opt_message) {\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertString(shouldBeString, opt_message) {\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertNumber(shouldBeNumber, opt_message) {\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertArray(shouldBeArray, opt_message) {\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertBoolean(shouldBeBoolean, opt_message) {\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../../../third_party/css-escape/css-escape';\nimport {devAssert} from '../assert';\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n * @suppress {uselessCode}\n */\nexport function escapeCssSelectorIdent(ident) {\n  // This gets rewritten to true/false during compilation. It will trigger an\n  // JSC_UNREACHABLE_CODE warning, but that's intentional for DCE.\n  if (IS_ESM) {\n    return CSS.escape(ident);\n  }\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './core/data-structures/lru-cache';\nimport {dict, hasOwn} from './core/types/object';\nimport {endsWith} from './core/types/string';\nimport {getMode} from './mode';\nimport {isArray} from './core/types';\nimport {parseQueryString} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {?} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {assertHttpsUrl} from '../../../src/url';\nimport {dev, devAssert, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {getMode} from '../../../src/mode';\n\n/** @const {string} */\nconst TAG = 'amp-access-client';\n\n/** @const {number} */\nconst DEFAULT_AUTHORIZATION_TIMEOUT = 3000;\n\n/** @implements {./amp-access-source.AccessTypeAdapterDef} */\nexport class AccessClientAdapter {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!JsonObject} configJson\n   * @param {!./amp-access-source.AccessTypeAdapterContextDef} context\n   */\n  constructor(ampdoc, configJson, context) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /** @const @private {!./amp-access-source.AccessTypeAdapterContextDef} */\n    this.context_ = context;\n\n    /** @const @private {string} */\n    this.authorizationUrl_ = userAssert(\n      configJson['authorization'],\n      '\"authorization\" URL must be specified'\n    );\n    assertHttpsUrl(this.authorizationUrl_, '\"authorization\"');\n\n    /** @const @private {boolean} */\n    this.isPingbackEnabled_ = !configJson['noPingback'];\n\n    /** @const @private {string} */\n    this.pingbackUrl_ = configJson['pingback'];\n    if (this.isPingbackEnabled_) {\n      userAssert(this.pingbackUrl_, '\"pingback\" URL must be specified');\n      assertHttpsUrl(this.pingbackUrl_, '\"pingback\"');\n    }\n\n    /** @const @private {number} */\n    this.authorizationTimeout_ =\n      this.buildConfigAuthorizationTimeout_(configJson);\n\n    /** @const @private {!../../../src/service/xhr-impl.Xhr} */\n    this.xhr_ = Services.xhrFor(ampdoc.win);\n\n    /** @const @private {!../../../src/service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(ampdoc.win);\n  }\n\n  /**\n   * @param {!JsonObject} configJson\n   * @return {number}\n   */\n  buildConfigAuthorizationTimeout_(configJson) {\n    if (!configJson['authorizationTimeout']) {\n      return DEFAULT_AUTHORIZATION_TIMEOUT;\n    }\n\n    let timeout = configJson['authorizationTimeout'];\n    userAssert(\n      typeof timeout == 'number',\n      '\"authorizationTimeout\" must be a number'\n    );\n    if (!(getMode().localDev || getMode().development)) {\n      timeout = Math.min(timeout, DEFAULT_AUTHORIZATION_TIMEOUT);\n    }\n    return timeout;\n  }\n\n  /** @override */\n  getConfig() {\n    return {\n      'authorizationUrl': this.authorizationUrl_,\n      'pingbackEnabled': this.isPingbackEnabled_,\n      'pingbackUrl': this.pingbackUrl_,\n      'authorizationTimeout': this.authorizationTimeout_,\n    };\n  }\n\n  /**\n   * @return {string}\n   */\n  getAuthorizationUrl() {\n    return this.authorizationUrl_;\n  }\n\n  /** @override */\n  isAuthorizationEnabled() {\n    return true;\n  }\n\n  /**\n   * @return {number}\n   */\n  getAuthorizationTimeout() {\n    return this.authorizationTimeout_;\n  }\n\n  /** @override */\n  authorize() {\n    dev().fine(TAG, 'Start authorization via ', this.authorizationUrl_);\n    const urlPromise = this.context_.buildUrl(\n      this.authorizationUrl_,\n      /* useAuthData */ false\n    );\n    return urlPromise.then((url) => {\n      dev().fine(TAG, 'Authorization URL: ', url);\n      return this.timer_\n        .timeoutPromise(\n          this.authorizationTimeout_,\n          this.xhr_.fetchJson(url, {\n            credentials: 'include',\n          })\n        )\n        .then((res) => res.json());\n    });\n  }\n\n  /** @override */\n  isPingbackEnabled() {\n    return this.isPingbackEnabled_;\n  }\n\n  /** @override */\n  pingback() {\n    const promise = this.context_.buildUrl(\n      devAssert(this.pingbackUrl_),\n      /* useAuthData */ true\n    );\n    return promise.then((url) => {\n      dev().fine(TAG, 'Pingback URL: ', url);\n      return this.xhr_.sendSignal(url, {\n        method: 'POST',\n        credentials: 'include',\n        headers: dict({\n          'Content-Type': 'application/x-www-form-urlencoded',\n        }),\n        body: '',\n      });\n    });\n  }\n\n  /** @override */\n  postAction() {\n    // Nothing to do.\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview The messaging protocol is intentionally kept close to\n * Web Activities (https://github.com/google/web-activities). We may switch\n * the exact WA version at some in the future.\n *\n * Notice! As much as possible, keep this module dependency-free.\n */\n\nconst SENTINEL = '__AMP__';\n\nexport class Messenger {\n  /**\n   * @param {!Window} win\n   * @param {!Window|function():?Window} targetOrCallback\n   * @param {?string} targetOrigin\n   */\n  constructor(win, targetOrCallback, targetOrigin) {\n    /** @private @const {!Window} */\n    this.win_ = win;\n    /** @private @const {!Window|function():?Window} */\n    this.targetOrCallback_ = targetOrCallback;\n\n    /**\n     * May start as unknown (`null`) until received in the first message.\n     * @private {?string}\n     */\n    this.targetOrigin_ = targetOrigin;\n\n    /** @private {?Window} */\n    this.target_ = null;\n\n    /** @private {?function(string, ?Object):*} */\n    this.onCommand_ = null;\n\n    /** @private @const */\n    this.boundHandleEvent_ = this.handleEvent_.bind(this);\n\n    /** @private {number} */\n    this.requestId_ = 0;\n\n    /**\n     * @private\n     * {!Object<string, {resolve: function(*), promise: !Promise<*>}>}\n     */\n    this.waiting_ = {};\n  }\n\n  /**\n   * Connect the port to the host or vice versa.\n   * @param {function(string, ?Object):*} onCommand\n   */\n  connect(onCommand) {\n    if (this.onCommand_) {\n      throw new Error('already connected');\n    }\n    this.onCommand_ = onCommand;\n    this.win_.addEventListener('message', this.boundHandleEvent_);\n  }\n\n  /**\n   * Disconnect messenger.\n   */\n  disconnect() {\n    if (this.onCommand_) {\n      this.onCommand_ = null;\n      this.win_.removeEventListener('message', this.boundHandleEvent_);\n    }\n  }\n\n  /**\n   * Returns whether the messenger has been connected already.\n   * @return {boolean}\n   */\n  isConnected() {\n    return this.targetOrigin_ != null;\n  }\n\n  /**\n   * Returns the messaging target. Only available when connection has been\n   * establihsed.\n   * @return {!Window}\n   */\n  getTarget() {\n    const target = this.getOptionalTarget_();\n    if (!target) {\n      throw new Error('not connected');\n    }\n    return target;\n  }\n\n  /**\n   * @return {?Window}\n   * @private\n   */\n  getOptionalTarget_() {\n    if (this.onCommand_ && !this.target_) {\n      if (typeof this.targetOrCallback_ == 'function') {\n        this.target_ = this.targetOrCallback_();\n      } else {\n        this.target_ = /** @type {!Window} */ (this.targetOrCallback_);\n      }\n    }\n    return this.target_;\n  }\n\n  /**\n   * Returns the messaging origin. Only available when connection has been\n   * establihsed.\n   * @return {string}\n   */\n  getTargetOrigin() {\n    if (this.targetOrigin_ == null) {\n      throw new Error('not connected');\n    }\n    return this.targetOrigin_;\n  }\n\n  /**\n   * Sends the specified command from the port to the host or vice versa.\n   * @param {string} cmd\n   * @param {?Object=} opt_payload\n   */\n  sendCommand(cmd, opt_payload) {\n    this.sendCommand_(/* rsvpId */ undefined, cmd, opt_payload);\n  }\n\n  /**\n   * Sends the specified command from the port to the host or vice versa.\n   * @param {string} cmd\n   * @param {?Object=} opt_payload\n   * @return {!Promise}\n   */\n  sendCommandRsvp(cmd, opt_payload) {\n    const rsvpId = String(++this.requestId_);\n    let resolver = null;\n    const promise = new Promise((resolve) => {\n      resolver = resolve;\n    });\n    this.waiting_[rsvpId] = {\n      promise,\n      resolver,\n    };\n    this.sendCommand_(rsvpId, cmd, opt_payload);\n    return promise;\n  }\n\n  /**\n   * @param {string|undefined} rsvpId\n   * @param {string} cmd\n   * @param {?Object=} opt_payload\n   * @private\n   */\n  sendCommand_(rsvpId, cmd, opt_payload) {\n    const target = this.getTarget();\n    // Only \"connect\" command is allowed to use `targetOrigin == '*'`\n    const targetOrigin =\n      cmd == 'connect'\n        ? this.targetOrigin_ != null\n          ? this.targetOrigin_\n          : '*'\n        : this.getTargetOrigin();\n    target./*OK*/ postMessage(\n      /** @type {!JsonObject} */ ({\n        'sentinel': SENTINEL,\n        '_rsvp': rsvpId,\n        'cmd': cmd,\n        'payload': opt_payload || null,\n      }),\n      targetOrigin\n    );\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  handleEvent_(e) {\n    const event = /** @type {!MessageEvent} */ (e);\n    const {data} = event;\n    if (!data || data['sentinel'] != SENTINEL) {\n      return;\n    }\n    const origin = /** @type {string} */ (event.origin);\n    const cmd = data['cmd'];\n    const payload = data['payload'] || null;\n    if (this.targetOrigin_ == null && cmd == 'start') {\n      this.targetOrigin_ = origin;\n    }\n    if (this.targetOrigin_ == null && event.source) {\n      if (this.getOptionalTarget_() == event.source) {\n        this.targetOrigin_ = origin;\n      }\n    }\n    // Notice that event.source may differ from the target because of\n    // friendly-iframe intermediaries.\n    if (origin != this.targetOrigin_) {\n      return;\n    }\n    const rsvpId = data['_rsvp'];\n    const rsvp = !!rsvpId && cmd != 'rsvp';\n    const result = this.handleCommand_(rsvpId, cmd, payload);\n    if (rsvp) {\n      Promise.resolve(result).then(\n        (result) => {\n          this.sendCommand_(rsvpId, 'rsvp', {\n            'result': result,\n          });\n        },\n        (reason) => {\n          this.sendCommand_(rsvpId, 'rsvp', {\n            'error': String(reason),\n          });\n        }\n      );\n    }\n  }\n\n  /**\n   * @param {string|undefined} rsvpId\n   * @param {string} cmd\n   * @param {?Object} payload\n   * @return {*}\n   * @private\n   */\n  handleCommand_(rsvpId, cmd, payload) {\n    if (cmd == 'rsvp') {\n      const waiting = rsvpId && this.waiting_[rsvpId];\n      if (waiting) {\n        if ('error' in payload) {\n          waiting.resolver(Promise.reject(new Error(payload['error'])));\n        } else {\n          waiting.resolver(payload['result']);\n        }\n        delete this.waiting_[rsvpId];\n      }\n      return;\n    }\n    return this.onCommand_(cmd, payload);\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isArray} from '../array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from '../../../src/core/data-structures/promise';\nimport {Messenger} from './iframe-api/messenger';\nimport {Services} from '../../../src/services';\nimport {assertHttpsUrl, parseUrlDeprecated} from '../../../src/url';\nimport {dev, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {getMode} from '../../../src/mode';\nimport {isArray} from '../../../src/core/types';\nimport {parseJson} from '../../../src/core/types/object/json';\nimport {toggle} from '../../../src/style';\n\nconst AUTHORIZATION_TIMEOUT = 3000;\nconst EXPIRATION_TIMEOUT = 1000 * 60 * 60 * 24 * 7; // 7 days\nconst TAG = 'amp-access-iframe';\n\n/** @implements {./amp-access-source.AccessTypeAdapterDef} */\nexport class AccessIframeAdapter {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!JsonObject} configJson\n   * @param {!./amp-access-source.AccessTypeAdapterContextDef} context\n   */\n  constructor(ampdoc, configJson, context) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /** @const @private {!./amp-access-source.AccessTypeAdapterContextDef} */\n    this.context_ = context;\n\n    /** @const @private {!JsonObject} */\n    this.configJson_ = configJson;\n\n    /** @const @private {!../../../src/service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(ampdoc.win);\n\n    /** @const @private {string} */\n    this.iframeSrc_ = userAssert(\n      configJson['iframeSrc'],\n      '\"iframeSrc\" URL must be specified'\n    );\n    assertHttpsUrl(this.iframeSrc_, '\"iframeSrc\"');\n\n    /** @const @private {?Array} */\n    this.iframeVars_ = configJson['iframeVars'] || null;\n    if (this.iframeVars_) {\n      userAssert(isArray(this.iframeVars_), '\"iframeVars\" must be an array');\n    }\n\n    /** @const @private {!JsonObject} */\n    this.defaultResponse_ = userAssert(\n      configJson['defaultResponse'],\n      '\"defaultResponse\" must be specified'\n    );\n\n    /** @private @const {string} */\n    this.targetOrigin_ = parseUrlDeprecated(this.iframeSrc_).origin;\n\n    /** @private {?function()} */\n    this.connectedResolver_ = null;\n\n    /** @private {?Promise} */\n    this.connectedPromise_ = null;\n\n    /** @private @const {!Element} */\n    this.iframe_ = ampdoc.win.document.createElement('iframe');\n    toggle(this.iframe_, false);\n\n    /** @private @const {!Messenger} */\n    this.messenger_ = new Messenger(\n      this.ampdoc.win,\n      () => this.iframe_.contentWindow,\n      this.targetOrigin_\n    );\n\n    /** @private {?Promise<!JsonObject>} */\n    this.configPromise_ = null;\n  }\n\n  /**\n   * Disconnect the client.\n   */\n  disconnect() {\n    this.messenger_.disconnect();\n    this.ampdoc.getBody().removeChild(this.iframe_);\n  }\n\n  /** @override */\n  getConfig() {\n    return {\n      'iframeSrc': this.iframeSrc_,\n      'iframeVars': this.iframeVars_,\n    };\n  }\n\n  /** @override */\n  isAuthorizationEnabled() {\n    return true;\n  }\n\n  /** @override */\n  authorize() {\n    return Promise.race([this.authorizeLocal_(), this.authorizeRemote_()]);\n  }\n\n  /** @override */\n  isPingbackEnabled() {\n    return true;\n  }\n\n  /** @override */\n  pingback() {\n    return this.connect().then(() => {\n      return this.messenger_.sendCommandRsvp('pingback', {});\n    });\n  }\n\n  /** @override */\n  postAction() {\n    // Reset the storage.\n    this.store_(null);\n  }\n\n  /**\n   * @return {!Promise}\n   * @package Visible for testing only.\n   */\n  connect() {\n    if (!this.connectedPromise_) {\n      const deferred = new Deferred();\n      this.connectedPromise_ = deferred.promise;\n      this.connectedResolver_ = deferred.resolve;\n\n      this.configPromise_ = this.resolveConfig_();\n      // Connect.\n      this.messenger_.connect(this.handleCommand_.bind(this));\n      this.ampdoc.getBody().appendChild(this.iframe_);\n      this.iframe_.src = this.iframeSrc_;\n    }\n    return this.connectedPromise_;\n  }\n\n  /**\n   * @return {!Promise<!JsonObject>}\n   * @private\n   */\n  resolveConfig_() {\n    return new Promise((resolve) => {\n      const configJson = parseJson(JSON.stringify(this.configJson_));\n      if (this.iframeVars_) {\n        const varsString = this.iframeVars_.join('&');\n        const varsPromise = this.context_.collectUrlVars(\n          varsString,\n          /* useAuthData */ false\n        );\n        resolve(\n          varsPromise.then((vars) => {\n            configJson['iframeVars'] = vars;\n            return configJson;\n          })\n        );\n      } else {\n        resolve(configJson);\n      }\n    });\n  }\n\n  /**\n   * @return {!Promise<!JsonObject>}\n   * @private\n   */\n  authorizeLocal_() {\n    const timeout = AUTHORIZATION_TIMEOUT * (getMode().development ? 2 : 1);\n    return this.timer_.promise(timeout).then(() => {\n      return this.restore_() || this.defaultResponse_;\n    });\n  }\n\n  /**\n   * @return {!Promise<!JsonObject>}\n   * @private\n   */\n  authorizeRemote_() {\n    return this.connect()\n      .then(() => {\n        return this.messenger_.sendCommandRsvp('authorize', {});\n      })\n      .then((data) => {\n        if (data) {\n          // Store the value in a non-blocking microtask.\n          Promise.resolve().then(() => this.store_(data));\n        }\n        return data;\n      });\n  }\n\n  /**\n   * @return {?JsonObject} data\n   * @private\n   */\n  restore_() {\n    const {win} = this.ampdoc;\n    const storage = win.sessionStorage || win.localStorage;\n    if (!storage) {\n      return null;\n    }\n    try {\n      const raw = storage.getItem(TAG);\n      if (!raw) {\n        return null;\n      }\n      const parsed = parseJson(raw);\n      const time = parsed['t'];\n      if (time + EXPIRATION_TIMEOUT < this.ampdoc.win.Date.now()) {\n        // Already expired.\n        return null;\n      }\n      return parsed['d'] || null;\n    } catch (e) {\n      dev().error(TAG, 'failed to restore access response: ', e);\n      try {\n        // Remove the poisoned value.\n        storage.removeItem(TAG);\n      } catch (e) {\n        // Ignore.\n      }\n      return null;\n    }\n  }\n\n  /**\n   * @param {?JsonObject} data\n   * @private\n   */\n  store_(data) {\n    const {win} = this.ampdoc;\n    const storage = win.sessionStorage || win.localStorage;\n    if (!storage) {\n      return;\n    }\n    try {\n      if (data) {\n        storage.setItem(\n          TAG,\n          JSON.stringify(\n            dict({\n              't': this.ampdoc.win.Date.now(),\n              'd': data,\n            })\n          )\n        );\n      } else {\n        storage.removeItem(TAG);\n      }\n    } catch (e) {\n      dev().error(TAG, 'failed to store access response: ', e);\n    }\n  }\n\n  /**\n   * @param {string} cmd\n   * @param {?Object} unusedPayload\n   * @return {*}\n   * @private\n   */\n  handleCommand_(cmd, unusedPayload) {\n    if (cmd == 'connect') {\n      // First ever message. Indicates that the receiver is listening.\n      this.configPromise_.then((configJson) => {\n        this.messenger_\n          .sendCommandRsvp('start', {\n            'protocol': 'amp-access',\n            'config': configJson,\n          })\n          .then(() => {\n            // Confirmation that connection has been successful.\n            if (this.connectedResolver_) {\n              this.connectedResolver_();\n              this.connectedResolver_ = null;\n            }\n          });\n      });\n      return;\n    }\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev, devAssert} from '../../../src/log';\nimport {isProxyOrigin} from '../../../src/url';\n\n/** @const {string} */\nconst TAG = 'amp-access-other';\n\n/** @implements {./amp-access-source.AccessTypeAdapterDef} */\nexport class AccessOtherAdapter {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!JsonObject} configJson\n   * @param {!./amp-access-source.AccessTypeAdapterContextDef} context\n   */\n  constructor(ampdoc, configJson, context) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /** @const @protected {!./amp-access-source.AccessTypeAdapterContextDef} */\n    this.context_ = context;\n\n    /** @private {?JsonObject} */\n    this.authorizationResponse_ =\n      configJson['authorizationFallbackResponse'] || null;\n\n    /** @const @private {boolean} */\n    this.isProxyOrigin_ = isProxyOrigin(ampdoc.win.location);\n  }\n\n  /** @override */\n  getConfig() {\n    return {\n      'authorizationResponse': this.authorizationResponse_,\n    };\n  }\n\n  /** @override */\n  isAuthorizationEnabled() {\n    // The `type=other` is allowed to use the authorization fallback, but\n    // only if it's not on `cdn.ampproject.org`.\n    return !!this.authorizationResponse_ && !this.isProxyOrigin_;\n  }\n\n  /** @override */\n  authorize() {\n    dev().fine(TAG, 'Use the authorization fallback for type=other');\n    // Disallow authorization for proxy origin (`cdn.ampproject.org`).\n    devAssert(!this.isProxyOrigin_, 'Cannot authorize for proxy origin');\n    const response = devAssert(this.authorizationResponse_);\n    return Promise.resolve(response);\n  }\n\n  /** @override */\n  isPingbackEnabled() {\n    return false;\n  }\n\n  /** @override */\n  pingback() {\n    dev().fine(TAG, 'Ignore pingback');\n    return Promise.resolve();\n  }\n\n  /** @override */\n  postAction() {\n    // Nothing to do.\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from '../log';\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service';\nimport {hasOwn, map} from '../core/types/object';\nimport {isArray} from '../core/types';\nimport {parseQueryString} from '../core/types/string/url';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {getFormAsObject, getSubmitButtonUsed} from './form';\nimport {iterateCursor} from './dom';\nimport {map} from './core/types/object';\n\n/**\n * Create a form data wrapper. The wrapper is necessary to provide a common\n * API for FormData objects on all browsers. For example, not all browsers\n * support the FormData#entries or FormData#delete functions.\n *\n * @param {!Window} win\n * @param {!HTMLFormElement=} opt_form\n * @return {!FormDataWrapperInterface}\n */\nexport function createFormDataWrapper(win, opt_form) {\n  const platform = Services.platformFor(win);\n\n  if (platform.isIos() && platform.getMajorVersion() == 11) {\n    return new Ios11NativeFormDataWrapper(opt_form);\n  } else if (FormData.prototype.entries && FormData.prototype.delete) {\n    return new NativeFormDataWrapper(opt_form);\n  } else {\n    return new PolyfillFormDataWrapper(opt_form);\n  }\n}\n\n/**\n * Check if the given object is a FormDataWrapper instance\n * @param {*} o\n * @return {boolean} True if the object is a FormDataWrapper instance.\n */\nexport function isFormDataWrapper(o) {\n  // instanceof doesn't work as expected, so we detect with duck-typing.\n  return !!o && typeof o.getFormData == 'function';\n}\n\n/**\n * A polyfill wrapper for a `FormData` object.\n *\n * If there's no native `FormData#entries`, chances are there are no native\n * methods to read the content of the `FormData` after construction, so the\n * only way to implement `entries` in this class is to capture the fields in\n * the form passed to the constructor (and the arguments passed to the\n * `append` method).\n *\n * For more details on this, see http://mdn.io/FormData.\n *\n * @implements {FormDataWrapperInterface}\n * @visibleForTesting\n */\nexport class PolyfillFormDataWrapper {\n  /** @override */\n  constructor(opt_form = undefined) {\n    /** @private @const {!Object<string, !Array<string>>} */\n    this.fieldValues_ = opt_form ? getFormAsObject(opt_form) : map();\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    // Coercion to string is required to match\n    // the native FormData.append behavior\n    const nameString = String(name);\n    this.fieldValues_[nameString] = this.fieldValues_[nameString] || [];\n    this.fieldValues_[nameString].push(String(value));\n  }\n\n  /** @override */\n  delete(name) {\n    delete this.fieldValues_[name];\n  }\n\n  /** @override */\n  entries() {\n    const fieldEntries = [];\n    Object.keys(this.fieldValues_).forEach((name) => {\n      const values = this.fieldValues_[name];\n      values.forEach((value) => fieldEntries.push([name, value]));\n    });\n\n    // Generator functions are not supported by the current Babel configuration,\n    // so we must manually implement the iterator interface.\n    let nextIndex = 0;\n    return /** @type {!Iterator<!Array<string>>} */ ({\n      next() {\n        return nextIndex < fieldEntries.length\n          ? {value: fieldEntries[nextIndex++], done: false}\n          : {value: undefined, done: true};\n      },\n    });\n  }\n\n  /** @override */\n  getFormData() {\n    const formData = new FormData();\n\n    Object.keys(this.fieldValues_).forEach((name) => {\n      const values = this.fieldValues_[name];\n      values.forEach((value) => formData.append(name, value));\n    });\n\n    return formData;\n  }\n}\n\n/**\n * Wrap the native `FormData` implementation.\n *\n * NOTE: This differs from the standard `FormData` constructor. This constructor\n * includes a submit button if it was used to submit the `opt_form`, where\n * the native `FormData` constructor does not include the submit button used to\n * submit the form.\n * {@link https://xhr.spec.whatwg.org/#dom-formdata}\n * @implements {FormDataWrapperInterface}\n */\nclass NativeFormDataWrapper {\n  /** @override */\n  constructor(opt_form) {\n    /** @private @const {!FormData} */\n    this.formData_ = new FormData(opt_form);\n\n    this.maybeIncludeSubmitButton_(opt_form);\n  }\n\n  /**\n   * If a submit button is focused (because it was used to submit the form),\n   * or was the first submit button present, add its name and value to the\n   * `FormData`, since publishers expect the submit button to be present.\n   * @param {!HTMLFormElement=} opt_form\n   * @private\n   */\n  maybeIncludeSubmitButton_(opt_form) {\n    // If a form is not passed to the constructor,\n    // we are not in a submitting code path.\n    if (!opt_form) {\n      return;\n    }\n\n    const button = getSubmitButtonUsed(opt_form);\n    if (button && button.name) {\n      this.append(button.name, button.value);\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    this.formData_.append(name, value);\n  }\n\n  /** @override */\n  delete(name) {\n    this.formData_.delete(name);\n  }\n\n  /** @override */\n  entries() {\n    return this.formData_.entries();\n  }\n\n  /** @override */\n  getFormData() {\n    return this.formData_;\n  }\n}\n\n/**\n * iOS 11 has a bug when submitting empty file inputs.\n * This works around the bug by replacing the empty files with Blob objects.\n */\nclass Ios11NativeFormDataWrapper extends NativeFormDataWrapper {\n  /** @override */\n  constructor(opt_form) {\n    super(opt_form);\n\n    if (opt_form) {\n      iterateCursor(opt_form.elements, (input) => {\n        if (input.type == 'file' && input.files.length == 0) {\n          this.formData_.delete(input.name);\n          this.formData_.append(input.name, new Blob([]), '');\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|!File} value\n   * @param {string=} opt_filename\n   * @override\n   */\n  append(name, value, opt_filename) {\n    // Safari 11 breaks on submitting empty File values.\n    if (value && typeof value == 'object' && isEmptyFile(value)) {\n      this.formData_.append(name, new Blob([]), opt_filename || '');\n    } else {\n      this.formData_.append(name, value);\n    }\n  }\n}\n\n/**\n * A wrapper for a native `FormData` object that allows the retrieval of entries\n * in the form data after construction even on browsers that don't natively\n * support `FormData.prototype.entries`.\n *\n * @interface\n * Subclassing `FormData` doesn't work in this case as the transpiler\n *     generates code that calls the super constructor directly using\n *     `Function.prototype.call`. WebKit (Safari) doesn't allow this and\n *     enforces that constructors be called with the `new` operator.\n */\nclass FormDataWrapperInterface {\n  /**\n   * Creates a new wrapper for a `FormData` object.\n   *\n   * If there's no native `FormData#entries`, chances are there are no native\n   * methods to read the content of the `FormData` after construction, so the\n   * only way to implement `entries` in this class is to capture the fields in\n   * the form passed to the constructor (and the arguments passed to the\n   * `append` method).\n   *\n   * This constructor should also add the submitter element as defined in the\n   * HTML spec for Form Submission Algorithm, but is not defined by the standard\n   * when using the `FormData` constructor directly.\n   *\n   * For more details on this, see http://mdn.io/FormData.\n   *\n   * @param {!HTMLFormElement=} opt_form An HTML `<form>` element \u2014 when\n   *     specified, the `FormData` object will be populated with the form's\n   *     current keys/values using the name property of each element for the\n   *     keys and their submitted value for the values. It will also encode file\n   *     input content.\n   */\n  constructor(opt_form) {}\n\n  /**\n   * Appends a new value onto an existing key inside a `FormData` object, or\n   * adds the key if it does not already exist.\n   *\n   * Appending a `File` object is not yet supported and the `filename`\n   * parameter is ignored for this wrapper.\n   *\n   * For more details on this, see http://mdn.io/FormData/append.\n   *\n   * TODO(cvializ): Update file support\n   *\n   * @param {string} unusedName The name of the field whose data is contained in\n   *     `value`.\n   * @param {string|!File} unusedValue The field's value.\n   * @param {string=} opt_filename The filename to use if the value is a file.\n   */\n  append(unusedName, unusedValue, opt_filename) {}\n\n  /**\n   * Remove the given value from the FormData.\n   *\n   * For more details on this, see http://mdn.io/FormData/delete.\n   *\n   * @param {string} unusedName The name of the field to remove from the FormData.\n   */\n  delete(unusedName) {}\n\n  /**\n   * Returns an iterator of all key/value pairs contained in this object.\n   *\n   * For more details on this, see http://mdn.io/FormData/entries.\n   *\n   * @return {!Iterator<!Array<string|!File>>}\n   */\n  entries() {}\n\n  /**\n   * Returns the wrapped native `FormData` object.\n   *\n   * @return {!FormData}\n   */\n  getFormData() {}\n}\n\n/**\n * Check if the given file is an empty file, which is the result of submitting\n * an empty `<input type=\"file\">`. These cause errors when submitting forms\n * in Safari 11.\n *\n * @param {!File} file\n * @return {boolean}\n */\nfunction isEmptyFile(file) {\n  return file.name == '' && file.size == 0;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../services';\nimport {devAssert, userAssert} from '../core/assert';\nimport {dict, isObject, map} from '../core/types/object';\nimport {fromIterator, isArray} from '../core/types/array';\nimport {\n  getCorsUrl,\n  getWinOrigin,\n  isProxyOrigin,\n  parseUrlDeprecated,\n  serializeQueryString,\n} from '../url';\nimport {getMode} from '../mode';\nimport {user} from '../log';\n\nimport {isExperimentOn} from '../experiments';\nimport {isFormDataWrapper} from '../form-data-wrapper';\n\n/** @private @const {!Array<string>} */\nconst allowedMethods_ = ['GET', 'POST'];\n\n/** @private @const {!Array<function(*):boolean>} */\nconst allowedJsonBodyTypes_ = [isArray, isObject];\n\n/**\n * Serializes a fetch request so that it can be passed to `postMessage()`,\n * i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The request is serialized in the following way:\n *\n * 1. If the `init.body` is a `FormData`, set content-type header to\n * `multipart/form-data` and transform `init.body` into an\n * `!Array<!Array<string>>` holding the list of form entries, where each\n * element in the array is a form entry (key-value pair) represented as a\n * 2-element array.\n *\n * 2. Return a new object having properties `input` and the transformed\n * `init`.\n *\n * The serialized request is assumed to be de-serialized in the following way:\n *\n * 1.If content-type header starts with `multipart/form-data`\n * (case-insensitive), transform the entry array in `init.body` into a\n * `FormData` object.\n *\n * 2. Pass `input` and transformed `init` to `fetch` (or the constructor of\n * `Request`).\n *\n * Currently only `FormData` used in `init.body` is handled as it's the only\n * type being used in AMP runtime that needs serialization. The `Headers` type\n * also needs serialization, but callers should not be passing `Headers`\n * object in `init`, as that fails `fetchPolyfill` on browsers that don't\n * support fetch. Some serialization-needing types for `init.body` such as\n * `ArrayBuffer` and `Blob` are already supported by the structured clone\n * algorithm. Other serialization-needing types such as `URLSearchParams`\n * (which is not supported in IE and Safari) and `FederatedCredentials` are\n * not used in AMP runtime.\n *\n * @param {string} input The URL of the XHR to convert to structured\n *     cloneable.\n * @param {!FetchInitDef} init The options of the XHR to convert to structured\n *     cloneable.\n * @return {{input: string, init: !FetchInitDef}} The serialized structurally-\n *     cloneable request.\n */\nexport function toStructuredCloneable(input, init) {\n  const newInit = /** @type {!FetchInitDef} */ ({...init});\n  if (isFormDataWrapper(init.body)) {\n    const wrapper = /** @type {!FormDataWrapperInterface} */ (init.body);\n    newInit.headers['Content-Type'] = 'multipart/form-data;charset=utf-8';\n    newInit.body = fromIterator(wrapper.entries());\n  }\n  return {input, init: newInit};\n}\n\n/**\n * De-serializes a fetch response that was made possible to be passed to\n * `postMessage()`, i.e., can be cloned using the\n * [structured clone algorithm](http://mdn.io/Structured_clone_algorithm).\n *\n * The response is assumed to be serialized in the following way:\n *\n * 1. Transform the entries in the headers of the response into an\n * `!Array<!Array<string>>` holding the list of header entries, where each\n * element in the array is a header entry (key-value pair) represented as a\n * 2-element array. The header key is case-insensitive.\n *\n * 2. Include the header entry list and `status` and `statusText` properties\n * of the response in as `headers`, `status` and `statusText` properties of\n * `init`.\n *\n * 3. Include the body of the response serialized as string in `body`.\n *\n * 4. Return a new object having properties `body` and `init`.\n *\n * The response is de-serialized in the following way:\n *\n * 1. If the `Response` type is supported and `responseType` is not\n * document, pass `body` and `init` directly to the constructor of `Response`.\n *\n * 2. Otherwise, populate a fake XHR object to pass to `FetchResponse` as if\n * the response is returned by the fetch polyfill.\n *\n * 3. If `responseType` is `document`, also parse the body and populate\n * `responseXML` as a `Document` type.\n *\n * @param {JsonObject|string|undefined} response The structurally-cloneable\n *     response to convert back to a regular Response.\n * @param {string|undefined} responseType The original response type used to\n *     initiate the XHR.\n * @return {!Response} The deserialized regular response.\n * @private\n */\nexport function fromStructuredCloneable(response, responseType) {\n  userAssert(isObject(response), 'Object expected: %s', response);\n\n  const isDocumentType = responseType == 'document';\n  if (!isDocumentType) {\n    // Use native `Response` type if available for performance. If response\n    // type is `document`, we must fall back to `FetchResponse` polyfill\n    // because callers would then rely on the `responseXML` property being\n    // present, which is not supported by the Response type.\n    return new Response(response['body'], response['init']);\n  }\n\n  const lowercasedHeaders = map();\n  const data = {\n    status: 200,\n    statusText: 'OK',\n    /**\n     * @param {string} name\n     * @return {string}\n     */\n    getResponseHeader(name) {\n      return lowercasedHeaders[String(name).toLowerCase()] || null;\n    },\n  };\n\n  if (response['init']) {\n    const init = response['init'];\n    if (isArray(init.headers)) {\n      /** @type {!Array} */ (init.headers).forEach((entry) => {\n        const headerName = entry[0];\n        const headerValue = entry[1];\n        lowercasedHeaders[String(headerName).toLowerCase()] =\n          String(headerValue);\n      });\n    }\n    if (init.status) {\n      data.status = parseInt(init.status, 10);\n    }\n    if (init.statusText) {\n      data.statusText = String(init.statusText);\n    }\n  }\n\n  return new Response(response['body'] ? String(response['body']) : '', data);\n}\n\n/**\n * Intercepts the XHR and proxies it through the viewer if necessary.\n *\n * XHRs are intercepted if all of the following are true:\n * - The AMP doc is in single doc mode\n * - The requested resource is not a 1p request.\n * - The viewer has the `xhrInterceptor` capability\n * - The Viewer is a trusted viewer or AMP is currently in developement mode\n * - The AMP doc is opted-in for XHR interception (`<html>` tag has\n *   `allow-xhr-interception` attribute)\n *\n * @param {!Window} win\n * @param {?../service/ampdoc-impl.AmpDoc} ampdocSingle\n * @param {string} input The URL of the XHR which may get intercepted.\n * @param {!FetchInitDef} init The options of the XHR which may get\n *     intercepted.\n * @return {!Promise<!Response|undefined>}\n *     A response returned by the interceptor if XHR is intercepted or\n *     `Promise<undefined>` otherwise.\n */\nexport function getViewerInterceptResponse(win, ampdocSingle, input, init) {\n  if (!ampdocSingle) {\n    return Promise.resolve();\n  }\n\n  const whenUnblocked = init.prerenderSafe\n    ? Promise.resolve()\n    : ampdocSingle.whenFirstVisible();\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  const urlIsProxy = isProxyOrigin(input);\n  const viewerCanIntercept = viewer.hasCapability('xhrInterceptor');\n  const interceptorDisabledForLocalDev =\n    init.bypassInterceptorForDev && getMode(win).localDev;\n  if (urlIsProxy || !viewerCanIntercept || interceptorDisabledForLocalDev) {\n    return whenUnblocked;\n  }\n\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('allow-xhr-interception');\n  if (!docOptedIn) {\n    return whenUnblocked;\n  }\n\n  return whenUnblocked\n    .then(() => viewer.isTrustedViewer())\n    .then((viewerTrusted) => {\n      if (\n        !(\n          viewerTrusted ||\n          getMode(win).localDev ||\n          isExperimentOn(win, 'untrusted-xhr-interception')\n        )\n      ) {\n        return;\n      }\n      const messagePayload = dict({\n        'originalRequest': toStructuredCloneable(input, init),\n      });\n      return viewer\n        .sendMessageAwaitResponse('xhr', messagePayload)\n        .then((response) =>\n          fromStructuredCloneable(response, init.responseType)\n        );\n    });\n}\n\n/**\n * Sets up URL based on ampCors\n * @param {!Window} win\n * @param {string} input\n * @param {!FetchInitDef} init The options of the XHR which may get\n * intercepted.\n * @return {string}\n */\nexport function setupInput(win, input, init) {\n  devAssert(typeof input == 'string', 'Only URL supported: %s', input);\n  if (init.ampCors !== false) {\n    input = getCorsUrl(win, input);\n  }\n  return input;\n}\n\n/**\n * Sets up and normalizes the FetchInitDef\n *\n * @param {?FetchInitDef=} opt_init Fetch options object.\n * @param {string=} opt_accept The HTTP Accept header value.\n * @return {!FetchInitDef}\n */\nexport function setupInit(opt_init, opt_accept) {\n  const init = opt_init || {};\n\n  // In particular, Firefox does not tolerate `null` values for\n  // `credentials`.\n  const creds = init.credentials;\n  devAssert(\n    creds === undefined || creds == 'include' || creds == 'omit',\n    'Only credentials=include|omit support: %s',\n    creds\n  );\n\n  init.method = normalizeMethod_(init.method);\n  init.headers = init.headers || dict({});\n  if (opt_accept) {\n    init.headers['Accept'] = opt_accept;\n  }\n\n  // In edge a `TypeMismatchError` is thrown when body is set to null.\n  devAssert(init.body !== null, 'fetch `body` can not be `null`');\n\n  return init;\n}\n\n/**\n *\n * Sets up AMPSpecific CORS headers.\n * @param {!Window} win\n * @param {string} input\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\nexport function setupAMPCors(win, input, init) {\n  init = init || {};\n  // For some same origin requests, add AMP-Same-Origin: true header to allow\n  // publishers to validate that this request came from their own origin.\n  const currentOrigin = getWinOrigin(win);\n  const targetOrigin = parseUrlDeprecated(input).origin;\n  if (currentOrigin == targetOrigin) {\n    init['headers'] = init['headers'] || {};\n    init['headers']['AMP-Same-Origin'] = 'true';\n  }\n  return init;\n}\n\n/**\n * @param {?FetchInitDef=} init\n * @return {!FetchInitDef}\n */\nexport function setupJsonFetchInit(init) {\n  const fetchInit = setupInit(init, 'application/json');\n  if (fetchInit.method == 'POST' && !isFormDataWrapper(fetchInit.body)) {\n    // Assume JSON strict mode where only objects or arrays are allowed\n    // as body.\n    devAssert(\n      allowedJsonBodyTypes_.some((test) => test(fetchInit.body)),\n      'body must be of type object or array. %s',\n      fetchInit.body\n    );\n\n    // Content should be 'text/plain' to avoid CORS preflight.\n    fetchInit.headers['Content-Type'] =\n      fetchInit.headers['Content-Type'] || 'text/plain;charset=utf-8';\n    const headerContentType = fetchInit.headers['Content-Type'];\n    // Cast is valid, because we checked that it is not form data above.\n    if (headerContentType === 'application/x-www-form-urlencoded') {\n      fetchInit.body = serializeQueryString(\n        /** @type {!JsonObject} */ (fetchInit.body)\n      );\n    } else {\n      fetchInit.body = JSON.stringify(\n        /** @type {!JsonObject} */ (fetchInit.body)\n      );\n    }\n  }\n  return fetchInit;\n}\n\n/**\n * Normalized method name by uppercasing.\n * @param {string|undefined} method\n * @return {string}\n * @private\n */\nfunction normalizeMethod_(method) {\n  if (method === undefined) {\n    return 'GET';\n  }\n  method = method.toUpperCase();\n  devAssert(\n    allowedMethods_.includes(method),\n    'Only one of %s is currently allowed. Got %s',\n    allowedMethods_.join(', '),\n    method\n  );\n  return method;\n}\n\n/**\n * If 415 or in the 5xx range.\n * @param {number} status\n * @return {boolean}\n */\nfunction isRetriable(status) {\n  return status == 415 || (status >= 500 && status < 600);\n}\n\n/**\n * Returns the response if successful or otherwise throws an error.\n * @param {!Response} response\n * @return {!Promise<!Response>}\n */\nexport function assertSuccess(response) {\n  return new Promise((resolve) => {\n    if (response.ok) {\n      return resolve(response);\n    }\n\n    const {status} = response;\n    const err = user().createError(`HTTP error ${status}`);\n    err['retriable'] = isRetriable(status);\n    // TODO(@jridgewell, #9448): Callers who need the response should\n    // skip processing.\n    err['response'] = response;\n    throw err;\n  });\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Services} from './services';\nimport {\n  assertSuccess,\n  getViewerInterceptResponse,\n  setupAMPCors,\n  setupInit,\n  setupInput,\n} from './utils/xhr-utils';\nimport {dict} from './core/types/object';\nimport {user} from './log';\n\n/**\n *\n *\n * @param {!Window} win\n * @param {string} input\n * @param {?FetchInitDef=} opt_init\n * @return {!Promise<!Document>}\n * @ignore\n */\nexport function fetchDocument(win, input, opt_init) {\n  let init = setupInit(opt_init, 'text/html');\n  init = setupAMPCors(win, input, init);\n  input = setupInput(win, input, init);\n  const ampdocService = Services.ampdocServiceFor(win);\n  const ampdocSingle = ampdocService.isSingleDoc()\n    ? ampdocService.getSingleDoc()\n    : null;\n  init.responseType = 'document';\n  return getViewerInterceptResponse(win, ampdocSingle, input, init).then(\n    (interceptorResponse) => {\n      if (interceptorResponse) {\n        return interceptorResponse\n          .text()\n          .then((body) => new DOMParser().parseFromString(body, 'text/html'));\n      }\n      return xhrRequest(input, init).then((resp) => {\n        const {xhr} = resp;\n        return xhr.responseXML;\n      });\n    }\n  );\n}\n\n/**\n *\n *\n * @param {string} input\n * @param {!FetchInitDef} init\n * @return {!Promise<!{response: !Response, xhr: !XMLHttpRequest}>}\n * @private\n */\nfunction xhrRequest(input, init) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(init.method || 'GET', input, true);\n    xhr.withCredentials = init.credentials == 'include';\n    xhr.responseType = 'document';\n    // Incoming headers are in fetch format,\n    // so we need to convert them into xhr.\n    for (const header in init.headers) {\n      xhr.setRequestHeader(header, init.headers[header]);\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState < /* STATUS_RECEIVED */ 2) {\n        return;\n      }\n      if (xhr.status < 100 || xhr.status > 599) {\n        xhr.onreadystatechange = null;\n        reject(user().createExpectedError(`Unknown HTTP status ${xhr.status}`));\n        return;\n      }\n      // TODO(dvoytenko): This is currently simplified: we will wait for the\n      // whole document loading to complete. This is fine for the use cases\n      // we have now, but may need to be reimplemented later.\n      if (xhr.readyState == /* COMPLETE */ 4) {\n        const options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders()),\n        };\n        const response = new Response(\n          '',\n          /** @type {!ResponseInit} */ (options)\n        );\n        const promise = assertSuccess(response).then((response) => ({\n          response,\n          xhr,\n        }));\n        resolve(promise);\n      }\n    };\n    xhr.onerror = () => {\n      reject(user().createExpectedError('Request failure'));\n    };\n    xhr.onabort = () => {\n      reject(user().createExpectedError('Request aborted'));\n    };\n    if (init.method == 'POST') {\n      xhr.send(/** @type {!FormData} */ (init.body));\n    } else {\n      xhr.send();\n    }\n  });\n}\n\n/**\n * Parses XHR's response headers into JSONObject.\n * @param {string} rawHeaders\n * @return {!JsonObject}\n */\nfunction parseHeaders(rawHeaders) {\n  const headers = dict({});\n  // Replace instances of \\r\\n and \\n followed by at least one space or\n  // horizontal tab with a space.\n  const preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n    const parts = line.split(':');\n    const key = parts.shift().trim();\n    if (key) {\n      const value = parts.join(':').trim();\n      headers[key] = value;\n    }\n  });\n  return headers;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AccessClientAdapter} from './amp-access-client';\nimport {Services} from '../../../src/services';\nimport {dev, devAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {escapeCssSelectorIdent} from '../../../src/core/dom/css-selectors';\nimport {fetchDocument} from '../../../src/document-fetcher';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {isProxyOrigin, removeFragment} from '../../../src/url';\nimport {parseJson} from '../../../src/core/types/object/json';\n\n/** @const {string} */\nconst TAG = 'amp-access-server';\n\n/**\n * This class implements server-side authorization protocol. In this approach\n * only immediately visible sections are downloaded. For authorization, the\n * CDN calls the authorization endpoint directly and returns back to the\n * authorization response and the authorized content fragments, which are\n * merged into the document.\n *\n * The approximate diagram looks like this:\n *\n *        Initial GET\n *            ||\n *            ||   [Limited document: fragments requiring\n *            ||      authorization are exlcuded]\n *            ||\n *            \\/\n *    Authorize request to CDN\n *            ||\n *            ||   [Authorization response]\n *            ||   [Authorized fragments]\n *            ||\n *            \\/\n *    Merge authorized fragments\n *            ||\n *            ||\n *            \\/\n *    Apply authorization response\n *\n * @implements {./amp-access-source.AccessTypeAdapterDef}\n */\nexport class AccessServerAdapter {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!JsonObject} configJson\n   * @param {!./amp-access-source.AccessTypeAdapterContextDef} context\n   */\n  constructor(ampdoc, configJson, context) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /** @const @private {!./amp-access-source.AccessTypeAdapterContextDef} */\n    this.context_ = context;\n\n    /** @private @const */\n    this.clientAdapter_ = new AccessClientAdapter(ampdoc, configJson, context);\n\n    /** @const @protected {!../../../src/service/xhr-impl.Xhr} */\n    this.xhr_ = Services.xhrFor(ampdoc.win);\n\n    /** @const @private {!../../../src/service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(ampdoc.win);\n\n    /** @const @private {!../../../src/service/vsync-impl.Vsync} */\n    this.vsync_ = Services.vsyncFor(ampdoc.win);\n\n    /** @private @const {?string} */\n    this.serverState_ = ampdoc.getMetaByName('i-amphtml-access-state');\n\n    const isInExperiment = isExperimentOn(ampdoc.win, 'amp-access-server');\n\n    /** @private @const {boolean} */\n    this.isProxyOrigin_ = isProxyOrigin(ampdoc.win.location) || isInExperiment;\n\n    const serviceUrlOverride = isInExperiment\n      ? ampdoc.getParam('serverAccessService')\n      : null;\n\n    /** @private @const {string} */\n    this.serviceUrl_ =\n      serviceUrlOverride || removeFragment(ampdoc.win.location.href);\n  }\n\n  /** @override */\n  getConfig() {\n    return {\n      'client': this.clientAdapter_.getConfig(),\n      'proxy': this.isProxyOrigin_,\n      'serverState': this.serverState_,\n    };\n  }\n\n  /** @override */\n  isAuthorizationEnabled() {\n    return true;\n  }\n\n  /** @override */\n  authorize() {\n    dev().fine(\n      TAG,\n      'Start authorization with ',\n      this.isProxyOrigin_ ? 'proxy' : 'non-proxy',\n      this.serverState_,\n      this.clientAdapter_.getAuthorizationUrl()\n    );\n    if (!this.isProxyOrigin_ || !this.serverState_) {\n      dev().fine(TAG, 'Proceed via client protocol');\n      return this.clientAdapter_.authorize();\n    }\n\n    dev().fine(TAG, 'Proceed via server protocol');\n\n    const varsPromise = this.context_.collectUrlVars(\n      this.clientAdapter_.getAuthorizationUrl(),\n      /* useAuthData */ false\n    );\n    return varsPromise\n      .then((vars) => {\n        const requestVars = {};\n        for (const k in vars) {\n          if (vars[k] != null) {\n            requestVars[k] = String(vars[k]);\n          }\n        }\n        const request = dict({\n          'url': removeFragment(this.ampdoc.win.location.href),\n          'state': this.serverState_,\n          'vars': requestVars,\n        });\n        dev().fine(TAG, 'Authorization request: ', this.serviceUrl_, request);\n        // Note that `application/x-www-form-urlencoded` is used to avoid\n        // CORS preflight request.\n        return this.timer_.timeoutPromise(\n          this.clientAdapter_.getAuthorizationTimeout(),\n          fetchDocument(this.ampdoc.win, this.serviceUrl_, {\n            method: 'POST',\n            body: 'request=' + encodeURIComponent(JSON.stringify(request)),\n            headers: dict({\n              'Content-Type': 'application/x-www-form-urlencoded',\n            }),\n          })\n        );\n      })\n      .then((responseDoc) => {\n        dev().fine(TAG, 'Authorization response: ', responseDoc);\n        const accessDataString = devAssert(\n          responseDoc.querySelector('script[id=\"amp-access-data\"]'),\n          'No authorization data available'\n        ).textContent;\n        const accessData = parseJson(accessDataString);\n        dev().fine(TAG, '- access data: ', accessData);\n\n        return this.replaceSections_(responseDoc).then(() => {\n          return accessData;\n        });\n      });\n  }\n\n  /** @override */\n  isPingbackEnabled() {\n    return this.clientAdapter_.isPingbackEnabled();\n  }\n\n  /** @override */\n  pingback() {\n    return this.clientAdapter_.pingback();\n  }\n\n  /** @override */\n  postAction() {\n    // Nothing to do.\n  }\n\n  /**\n   * @param {!Document} doc\n   * @return {!Promise}\n   */\n  replaceSections_(doc) {\n    const sections = doc.querySelectorAll('[i-amphtml-access-id]');\n    dev().fine(TAG, '- access sections: ', sections);\n    return this.vsync_.mutatePromise(() => {\n      for (let i = 0; i < sections.length; i++) {\n        const section = sections[i];\n        const sectionId = section.getAttribute('i-amphtml-access-id');\n        const target = this.ampdoc\n          .getRootNode()\n          .querySelector(\n            `[i-amphtml-access-id=\"${escapeCssSelectorIdent(sectionId)}\"]`\n          );\n        if (!target) {\n          dev().warn(TAG, 'Section not found: ', sectionId);\n          continue;\n        }\n        target.parentElement.replaceChild(\n          this.ampdoc.win.document.importNode(section, /* deep */ true),\n          target\n        );\n      }\n    });\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../../assert';\n\n/**\n * Interpret a byte array as a UTF-8 string.\n * @param {!BufferSource} bytes\n * @return {string}\n */\nexport function utf8Decode(bytes) {\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder('utf-8').decode(bytes);\n  }\n  const asciiString = bytesToString(new Uint8Array(bytes.buffer || bytes));\n  return decodeURIComponent(escape(asciiString));\n}\n\n/**\n * Turn a string into UTF-8 bytes.\n * @param {string} string\n * @return {!Uint8Array}\n */\nexport function utf8Encode(string) {\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder('utf-8').encode(string);\n  }\n  return stringToBytes(unescape(encodeURIComponent(string)));\n}\n\n/**\n * Converts a string which holds 8-bit code points, such as the result of atob,\n * into a Uint8Array with the corresponding bytes.\n * If you have a string of characters, you probably want to be using utf8Encode.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function stringToBytes(str) {\n  const bytes = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    const charCode = str.charCodeAt(i);\n    devAssert(charCode <= 255, 'Characters must be in range [0,255]');\n    bytes[i] = charCode;\n  }\n  return bytes;\n}\n\n/**\n * Converts a 8-bit bytes array into a string\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function bytesToString(bytes) {\n  // Intentionally avoids String.fromCharCode.apply so we don't suffer a\n  // stack overflow. #10495, https://jsperf.com/bytesToString-2\n  const array = new Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = String.fromCharCode(bytes[i]);\n  }\n  return array.join('');\n}\n\n/**\n * Converts a 4-item byte array to an unsigned integer.\n * Assumes bytes are big endian.\n * @param {!Uint8Array} bytes\n * @return {number}\n */\nexport function bytesToUInt32(bytes) {\n  if (bytes.length != 4) {\n    throw new Error('Received byte array with length != 4');\n  }\n  const val =\n    ((bytes[0] & 0xff) << 24) |\n    ((bytes[1] & 0xff) << 16) |\n    ((bytes[2] & 0xff) << 8) |\n    (bytes[3] & 0xff);\n  // Convert to unsigned.\n  return val >>> 0;\n}\n\n/**\n * Generate a random bytes array with specific length using\n * win.crypto.getRandomValues. Return null if it is not available.\n * @param {!Window} win\n * @param {number} length\n * @return {?Uint8Array}\n */\nexport function getCryptoRandomBytesArray(win, length) {\n  let {crypto} = win;\n\n  // Support IE 11\n  if (!IS_ESM) {\n    crypto = /** @type {!webCrypto.Crypto|undefined} */ (\n      crypto || win.msCrypto\n    );\n    if (!crypto || !crypto.getRandomValues) {\n      return null;\n    }\n  }\n\n  // Widely available in browsers we support:\n  // http://caniuse.com/#search=getRandomValues\n  const uint8array = new Uint8Array(length);\n  crypto.getRandomValues(uint8array);\n  return uint8array;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {bytesToString, stringToBytes, utf8Decode, utf8Encode} from './bytes';\n\n/**\n * Character mapping from base64url to base64.\n * @const {!Object<string, string>}\n */\nconst base64UrlDecodeSubs = {'-': '+', '_': '/', '.': '='};\n\n/**\n * Character mapping from base64 to base64url.\n * @const {!Object<string, string>}\n */\nconst base64UrlEncodeSubs = {'+': '-', '/': '_', '=': '.'};\n\n/**\n * Converts a string which is in base64url encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64UrlDecodeToBytes(str) {\n  const encoded = atob(str.replace(/[-_.]/g, (ch) => base64UrlDecodeSubs[ch]));\n  return stringToBytes(encoded);\n}\n\n/**\n * Converts a string which is in base64 encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64DecodeToBytes(str) {\n  return stringToBytes(atob(str));\n}\n\n/**\n * Converts a bytes array into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64UrlEncodeFromBytes(bytes) {\n  const str = bytesToString(bytes);\n  return btoa(str).replace(/[+/=]/g, (ch) => base64UrlEncodeSubs[ch]);\n}\n\n/**\n * Converts a string into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlEncodeFromString(str) {\n  const bytes = utf8Encode(str);\n  return base64UrlEncodeFromBytes(bytes);\n}\n\n/**\n * Decode a base64url encoded string by `base64UrlEncodeFromString`\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlDecodeFromString(str) {\n  const bytes = base64UrlDecodeToBytes(str);\n  return utf8Decode(bytes);\n}\n\n/**\n * Converts a bytes array into base64 encoded string.\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64EncodeFromBytes(bytes) {\n  return btoa(bytesToString(bytes));\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  base64DecodeToBytes,\n  base64UrlDecodeToBytes,\n} from '../../../src/core/types/string/base64';\nimport {stringToBytes, utf8Decode} from '../../../src/core/types/string/bytes';\nimport {tryParseJson} from '../../../src/core/types/object/json';\n\n/**\n * @typedef {{\n *   header: (?JsonObject|undefined),\n *   payload: (?JsonObject|undefined),\n *   verifiable: string,\n *   sig: string,\n * }}\n */\nlet JwtTokenInternalDef;\n\n/**\n * Converts a text in PEM format into a binary array buffer.\n * @param {string} pem\n * @return {!Uint8Array}\n * @visibleForTesting\n */\nexport function pemToBytes(pem) {\n  const key = pem\n    .trim()\n    // Remove pem prefix, e.g. \"----BEGIN PUBLIC KEY----\".\n    .replace(/^-+BEGIN[^-]*-+/, '')\n    // Remove pem suffix, e.g. \"----END PUBLIC KEY----\".\n    .replace(/-+END[^-]*-+$/, '')\n    // Remove line breaks.\n    .replace(/[\\r\\n]/g, '')\n    // Remove surrounding whitespace.\n    .trim();\n  return base64DecodeToBytes(key);\n}\n\n/**\n * Provides helper methods to decode and verify JWT tokens.\n */\nexport class JwtHelper {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @const {!Window} */\n    this.win = win;\n\n    /**\n     * Might be `null` if the platform does not support Crypto Subtle.\n     * @const @private {?webCrypto.SubtleCrypto}\n     */\n    this.subtle_ =\n      (win.crypto && (win.crypto.subtle || win.crypto.webkitSubtle)) || null;\n  }\n\n  /**\n   * Decodes JWT token and returns its payload.\n   * @param {string} encodedToken\n   * @return {?JsonObject|undefined}\n   */\n  decode(encodedToken) {\n    return this.decodeInternal_(encodedToken).payload;\n  }\n\n  /**\n   * Whether the signature-verification supported on this platform.\n   * @return {boolean}\n   */\n  isVerificationSupported() {\n    return !!this.subtle_;\n  }\n\n  /**\n   * Decodes HWT token and verifies its signature.\n   * @param {string} encodedToken\n   * @param {!Promise<string>} pemPromise\n   * @return {!Promise<!JsonObject>}\n   */\n  decodeAndVerify(encodedToken, pemPromise) {\n    if (!this.subtle_) {\n      throw new Error('Crypto is not supported on this platform');\n    }\n    const decodedPromise = new Promise((resolve) =>\n      resolve(this.decodeInternal_(encodedToken))\n    );\n    return decodedPromise.then((decoded) => {\n      const alg = decoded.header['alg'];\n      if (!alg || alg != 'RS256') {\n        // TODO(dvoytenko@): Support other RS* algos.\n        throw new Error('Only alg=RS256 is supported');\n      }\n      return this.importKey_(pemPromise)\n        .then((key) => {\n          const sig = base64UrlDecodeToBytes(decoded.sig);\n          return this.subtle_.verify(\n            /* options */ {name: 'RSASSA-PKCS1-v1_5'},\n            key,\n            sig,\n            stringToBytes(decoded.verifiable)\n          );\n        })\n        .then((isValid) => {\n          if (isValid) {\n            return decoded.payload;\n          }\n          throw new Error('Signature verification failed');\n        });\n    });\n  }\n\n  /**\n   * @param {string} encodedToken\n   * @return {!JwtTokenInternalDef}\n   * @private\n   */\n  decodeInternal_(encodedToken) {\n    /**\n     * See https://jwt.io/introduction/\n     */\n    function invalidToken() {\n      throw new Error(`Invalid token: \"${encodedToken}\"`);\n    }\n\n    // Encoded token has three parts: header.payload.sig\n    // Note! The padding is not allowed by JWT spec:\n    // http://self-issued.info/docs/draft-goland-json-web-token-00.html#rfc.section.5\n    const parts = encodedToken.split('.');\n    if (parts.length != 3) {\n      invalidToken();\n    }\n    const headerUtf8Bytes = base64UrlDecodeToBytes(parts[0]);\n    const payloadUtf8Bytes = base64UrlDecodeToBytes(parts[1]);\n    return {\n      header: tryParseJson(utf8Decode(headerUtf8Bytes), invalidToken),\n      payload: tryParseJson(utf8Decode(payloadUtf8Bytes), invalidToken),\n      verifiable: `${parts[0]}.${parts[1]}`,\n      sig: parts[2],\n    };\n  }\n\n  /**\n   * @param {!Promise<string>} pemPromise\n   * @return {!Promise<!webCrypto.CryptoKey>}\n   */\n  importKey_(pemPromise) {\n    return pemPromise.then((pem) => {\n      return this.subtle_.importKey(\n        /* format */ 'spki',\n        pemToBytes(pem),\n        /* algo options */ {\n          name: 'RSASSA-PKCS1-v1_5',\n          hash: {name: 'SHA-256'},\n        },\n        /* extractable */ false,\n        /* uses */ ['verify']\n      );\n    });\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AccessClientAdapter} from './amp-access-client';\nimport {JwtHelper} from './jwt';\nimport {Services} from '../../../src/services';\nimport {\n  assertHttpsUrl,\n  isProxyOrigin,\n  removeFragment,\n  serializeQueryString,\n} from '../../../src/url';\nimport {dev, user, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {escapeCssSelectorIdent} from '../../../src/core/dom/css-selectors';\nimport {fetchDocument} from '../../../src/document-fetcher';\nimport {getMode} from '../../../src/mode';\nimport {isArray} from '../../../src/core/types';\nimport {isExperimentOn} from '../../../src/experiments';\n\n/** @const {string} */\nconst TAG = 'amp-access-server-jwt';\n\n/** @const {number} */\nconst AUTHORIZATION_TIMEOUT = 3000;\n\n/** @const {string} */\nconst AMP_AUD = 'ampproject.org';\n\n/**\n * This class implements server-side authorization protocol with JWT. In this\n * approach only immediately visible sections are downloaded. For authorization,\n * the client calls the authorization endpoint, which returns a signed JWT\n * token with `amp_authdata` field. The client calls CDN with this JWT token,\n * and CDN returns back the authorized content fragments.\n *\n * The approximate diagram looks like this:\n *\n *        Initial GET\n *            ||\n *            ||   [Limited document: fragments requiring\n *            ||      authorization are exlcuded]\n *            ||\n *            \\/\n *    Authorize request to Publisher\n *            ||\n *            ||   [Authorization response as JWT]\n *            ||\n *            \\/\n *    Authorize request to CDN w/JWT\n *            ||\n *            ||   [Authorized fragments]\n *            ||\n *            \\/\n *    Merge authorized fragments\n *            ||\n *            ||\n *            \\/\n *    Apply authorization response\n *\n * @implements {./amp-access-source.AccessTypeAdapterDef}\n */\nexport class AccessServerJwtAdapter {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!JsonObject} configJson\n   * @param {!./amp-access-source.AccessTypeAdapterContextDef} context\n   */\n  constructor(ampdoc, configJson, context) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /** @const @private {!./amp-access-source.AccessTypeAdapterContextDef} */\n    this.context_ = context;\n\n    /** @private @const */\n    this.clientAdapter_ = new AccessClientAdapter(ampdoc, configJson, context);\n\n    /** @const @private {!../../../src/service/xhr-impl.Xhr} */\n    this.xhr_ = Services.xhrFor(ampdoc.win);\n\n    /** @const @private {!../../../src/service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(ampdoc.win);\n\n    /** @const @private {!../../../src/service/vsync-impl.Vsync} */\n    this.vsync_ = Services.vsyncFor(ampdoc.win);\n\n    /** @private @const {?string} */\n    this.serverState_ = ampdoc.getMetaByName('i-amphtml-access-state');\n\n    const isInExperiment = isExperimentOn(ampdoc.win, 'amp-access-server-jwt');\n\n    /** @private @const {boolean} */\n    this.isProxyOrigin_ = isProxyOrigin(ampdoc.win.location) || isInExperiment;\n\n    const serviceUrlOverride = isInExperiment\n      ? ampdoc.getParam('serverAccessService')\n      : null;\n\n    /** @private @const {string} */\n    this.serviceUrl_ =\n      serviceUrlOverride || removeFragment(ampdoc.win.location.href);\n\n    /** @const @private {?string} */\n    this.key_ = configJson['publicKey'] || null;\n\n    /** @const @private {?string} */\n    this.keyUrl_ = configJson['publicKeyUrl'] || null;\n\n    userAssert(\n      this.key_ || this.keyUrl_,\n      '\"publicKey\" or \"publicKeyUrl\" must be specified'\n    );\n    if (this.keyUrl_) {\n      assertHttpsUrl(this.keyUrl_, '\"publicKeyUrl\"');\n    }\n    if (this.key_ && this.keyUrl_) {\n      // TODO(dvoytenko): Remove \"publicKey\" option eventually.\n      user().warn(\n        TAG,\n        'Both \"publicKey\" and \"publicKeyUrl\" specified. ' +\n          'The \"publicKeyUrl\" will be ignored.'\n      );\n    }\n\n    /** @private @const {!JwtHelper} */\n    this.jwtHelper_ = new JwtHelper(ampdoc.win);\n  }\n\n  /** @override */\n  getConfig() {\n    return {\n      'client': this.clientAdapter_.getConfig(),\n      'proxy': this.isProxyOrigin_,\n      'serverState': this.serverState_,\n      'publicKey': this.key_,\n      'publicKeyUrl': this.keyUrl_,\n    };\n  }\n\n  /** @override */\n  isAuthorizationEnabled() {\n    return true;\n  }\n\n  /** @override */\n  authorize() {\n    dev().fine(\n      TAG,\n      'Start authorization with ',\n      this.isProxyOrigin_ ? 'proxy' : 'non-proxy',\n      this.serverState_,\n      this.clientAdapter_.getAuthorizationUrl()\n    );\n    if (!this.isProxyOrigin_ || !this.serverState_) {\n      return this.authorizeOnClient_();\n    }\n    return this.authorizeOnServer_();\n  }\n\n  /** @override */\n  isPingbackEnabled() {\n    return this.clientAdapter_.isPingbackEnabled();\n  }\n\n  /** @override */\n  pingback() {\n    return this.clientAdapter_.pingback();\n  }\n\n  /** @override */\n  postAction() {\n    // Nothing to do.\n  }\n\n  /**\n   * @return {!Promise<{encoded:string, jwt:!JsonObject}>}\n   * @private\n   */\n  fetchJwt_() {\n    const urlPromise = this.context_.buildUrl(\n      this.clientAdapter_.getAuthorizationUrl(),\n      /* useAuthData */ false\n    );\n    let jwtPromise = urlPromise\n      .then((url) => {\n        dev().fine(TAG, 'Authorization URL: ', url);\n        return this.timer_.timeoutPromise(\n          AUTHORIZATION_TIMEOUT,\n          this.xhr_.fetchText(url, {\n            credentials: 'include',\n          })\n        );\n      })\n      .then((resp) => {\n        return resp.text();\n      })\n      .then((encoded) => {\n        const jwt = this.jwtHelper_.decode(encoded);\n        userAssert(\n          jwt['amp_authdata'],\n          '\"amp_authdata\" must be present in JWT'\n        );\n        return {encoded, jwt};\n      });\n    if (this.shouldBeValidated_()) {\n      // Validate JWT in the development mode.\n      if (this.jwtHelper_.isVerificationSupported()) {\n        jwtPromise = jwtPromise.then((resp) => {\n          return this.jwtHelper_\n            .decodeAndVerify(resp.encoded, this.loadKeyPem_())\n            .then(() => resp);\n        });\n      } else {\n        user().warn(\n          TAG,\n          'Cannot verify signature on this browser since' +\n            \" it doesn't support WebCrypto APIs\"\n        );\n      }\n      jwtPromise = jwtPromise.then((resp) => {\n        this.validateJwt_(resp.jwt);\n        return resp;\n      });\n    }\n    return jwtPromise.catch((reason) => {\n      throw user().createError('JWT fetch or validation failed: ', reason);\n    });\n  }\n\n  /**\n   * @return {!Promise<string>}\n   * @private\n   */\n  loadKeyPem_() {\n    if (this.key_) {\n      return Promise.resolve(this.key_);\n    }\n    return this.xhr_\n      .fetchText(dev().assertString(this.keyUrl_))\n      .then((res) => res.text());\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  shouldBeValidated_() {\n    return getMode().development;\n  }\n\n  /**\n   * @param {!JsonObject} jwt\n   * @private\n   */\n  validateJwt_(jwt) {\n    const now = Date.now();\n\n    // exp: expiration time.\n    const exp = jwt['exp'];\n    userAssert(exp, '\"exp\" field must be specified');\n    userAssert(parseFloat(exp) * 1000 > now, 'token has expired: %s', exp);\n\n    // aud: audience.\n    const aud = jwt['aud'];\n    userAssert(aud, '\"aud\" field must be specified');\n    let audForAmp = false;\n    if (isArray(aud)) {\n      for (let i = 0; i < aud.length; i++) {\n        if (aud[i] == AMP_AUD) {\n          audForAmp = true;\n          break;\n        }\n      }\n    } else {\n      audForAmp = aud == AMP_AUD;\n    }\n    userAssert(audForAmp, '\"aud\" must be \"%s\": %s', AMP_AUD, aud);\n  }\n\n  /**\n   * @return {!Promise<!JsonObject>}\n   * @private\n   */\n  authorizeOnClient_() {\n    dev().fine(\n      TAG,\n      'Proceed via client protocol via ',\n      this.clientAdapter_.getAuthorizationUrl()\n    );\n    return this.fetchJwt_().then((resp) => {\n      return resp.jwt['amp_authdata'];\n    });\n  }\n\n  /**\n   * @return {!Promise<!JsonObject>}\n   * @private\n   */\n  authorizeOnServer_() {\n    dev().fine(TAG, 'Proceed via server protocol');\n    return this.fetchJwt_().then((resp) => {\n      const {encoded, jwt} = resp;\n      const accessData = jwt['amp_authdata'];\n      const request = serializeQueryString(\n        dict({\n          'url': removeFragment(this.ampdoc.win.location.href),\n          'state': this.serverState_,\n          'jwt': encoded,\n        })\n      );\n      dev().fine(TAG, 'Authorization request: ', this.serviceUrl_, request);\n      dev().fine(TAG, '- access data: ', accessData);\n      // Note that `application/x-www-form-urlencoded` is used to avoid\n      // CORS preflight request.\n      return this.timer_\n        .timeoutPromise(\n          AUTHORIZATION_TIMEOUT,\n          fetchDocument(this.ampdoc.win, this.serviceUrl_, {\n            method: 'POST',\n            body: request,\n            headers: dict({\n              'Content-Type': 'application/x-www-form-urlencoded',\n            }),\n          })\n        )\n        .then((response) => {\n          dev().fine(TAG, 'Authorization response: ', response);\n          return this.replaceSections_(response);\n        })\n        .then(() => accessData);\n    });\n  }\n\n  /**\n   * @param {!Document} doc\n   * @return {!Promise}\n   */\n  replaceSections_(doc) {\n    const sections = doc.querySelectorAll('[i-amphtml-access-id]');\n    dev().fine(TAG, '- access sections: ', sections);\n    return this.vsync_.mutatePromise(() => {\n      for (let i = 0; i < sections.length; i++) {\n        const section = sections[i];\n        const sectionId = section.getAttribute('i-amphtml-access-id');\n        const target = this.ampdoc\n          .getRootNode()\n          .querySelector(\n            `[i-amphtml-access-id=\"${escapeCssSelectorIdent(sectionId)}\"]`\n          );\n        if (!target) {\n          dev().warn(TAG, 'Section not found: ', sectionId);\n          continue;\n        }\n        target.parentElement.replaceChild(\n          this.ampdoc.win.document.importNode(section, /* deep */ true),\n          target\n        );\n      }\n    });\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport './access-vendor';\nimport {Deferred} from '../../../src/core/data-structures/promise';\nimport {dev, userAssert} from '../../../src/log';\n\n/** @const {string} */\nconst TAG = 'amp-access-vendor';\n\n/**\n * The adapter for a vendor implementation that implements `AccessVendor`\n * interface and delivered via a separate extension. The vendor implementation\n * mainly requires two method: `authorize` and `pingback`. The actual\n * extension is registered via `registerVendor` method.\n * @implements {./amp-access-source.AccessTypeAdapterDef}\n */\nexport class AccessVendorAdapter {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!JsonObject} configJson\n   */\n  constructor(ampdoc, configJson) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /** @const @private {string} */\n    this.vendorName_ = userAssert(\n      configJson['vendor'],\n      '\"vendor\" name must be specified'\n    );\n\n    /** @const @private {!JsonObject} */\n    this.vendorConfig_ = configJson[this.vendorName_] || {};\n\n    /** @const @private {boolean} */\n    this.isPingbackEnabled_ = !configJson['noPingback'];\n\n    const deferred = new Deferred();\n\n    /** @const @private {!Promise<!./access-vendor.AccessVendor>} */\n    this.vendorPromise_ = deferred.promise;\n\n    /** @private {?function(!./access-vendor.AccessVendor)} */\n    this.vendorResolve_ = deferred.resolve;\n  }\n\n  /** @return {string} */\n  getVendorName() {\n    return this.vendorName_;\n  }\n\n  /** @override */\n  getConfig() {\n    return this.vendorConfig_;\n  }\n\n  /**\n   * @param {!./access-vendor.AccessVendor} vendor\n   */\n  registerVendor(vendor) {\n    userAssert(this.vendorResolve_, 'Vendor has already been registered');\n    this.vendorResolve_(vendor);\n    this.vendorResolve_ = null;\n  }\n\n  /** @override */\n  isAuthorizationEnabled() {\n    return true;\n  }\n\n  /** @override */\n  authorize() {\n    dev().fine(TAG, 'Start authorization via ', this.vendorName_);\n    return this.vendorPromise_.then((vendor) => {\n      return vendor.authorize();\n    });\n  }\n\n  /** @override */\n  isPingbackEnabled() {\n    return this.isPingbackEnabled_;\n  }\n\n  /** @override */\n  pingback() {\n    dev().fine(TAG, 'Pingback via ', this.vendorName_);\n    return this.vendorPromise_.then((vendor) => {\n      return vendor.pingback();\n    });\n  }\n\n  /** @override */\n  postAction() {\n    // TODO(dvoytenko): delegate to vendor adapter.\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {lastChildElement} from './core/dom/query';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {dev, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {getData, listen} from '../../../src/event-helper';\nimport {getMode} from '../../../src/mode';\nimport {openWindowDialog} from '../../../src/dom';\nimport {parseUrlDeprecated} from '../../../src/url';\nimport {urls} from '../../../src/config';\n\n/** @const */\nconst TAG = 'amp-access-login';\n\n/** @const {!RegExp} */\nconst RETURN_URL_REGEX = new RegExp('RETURN_URL');\n\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string|!Promise<string>} urlOrPromise\n * @return {!WebLoginDialog|!ViewerLoginDialog}\n */\nexport function createLoginDialog(ampdoc, urlOrPromise) {\n  const viewer = Services.viewerForDoc(ampdoc);\n  const overrideDialog = parseInt(ampdoc.getParam('dialog'), 10);\n  if (overrideDialog) {\n    return new ViewerLoginDialog(viewer, urlOrPromise);\n  }\n  return new WebLoginDialog(ampdoc.win, viewer, urlOrPromise);\n}\n\n/**\n * Opens the login dialog for the specified URL. If the login dialog succeeds,\n * the returned promised is resolved with the dialog's response. Otherwise, the\n * returned promise is rejected.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string|!Promise<string>} urlOrPromise\n * @return {!Promise<string>}\n */\nexport function openLoginDialog(ampdoc, urlOrPromise) {\n  return createLoginDialog(ampdoc, urlOrPromise).open();\n}\n\n/**\n * Gets the final login URL with all the performed replacements.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string|!Promise<string>} urlOrPromise\n * @return {!Promise<string>}\n */\nexport function getLoginUrl(ampdoc, urlOrPromise) {\n  return createLoginDialog(ampdoc, urlOrPromise).getLoginUrl();\n}\n\n/**\n * The implementation of the Login Dialog delegated via Viewer.\n */\nclass ViewerLoginDialog {\n  /**\n   * @param {!../../../src/service/viewer-interface.ViewerInterface} viewer\n   * @param {string|!Promise<string>} urlOrPromise\n   */\n  constructor(viewer, urlOrPromise) {\n    /** @const {!../../../src/service/viewer-interface.ViewerInterface} */\n    this.viewer = viewer;\n\n    /** @const {string|!Promise<string>} */\n    this.urlOrPromise = urlOrPromise;\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  getLoginUrl() {\n    let urlPromise;\n    if (typeof this.urlOrPromise == 'string') {\n      urlPromise = Promise.resolve(this.urlOrPromise);\n    } else {\n      urlPromise = this.urlOrPromise;\n    }\n    return urlPromise.then((url) => {\n      return buildLoginUrl(url, 'RETURN_URL');\n    });\n  }\n\n  /**\n   * Opens the dialog. Returns the promise that will yield with the dialog's\n   * result or will be rejected if dialog fails. The dialog's result is\n   * typically a hash string from the return URL.\n   * @return {!Promise<string>}\n   */\n  open() {\n    return this.getLoginUrl().then((loginUrl) => {\n      dev().fine(TAG, 'Open viewer dialog: ', loginUrl);\n      return this.viewer.sendMessageAwaitResponse(\n        'openDialog',\n        dict({\n          'url': loginUrl,\n        })\n      );\n    });\n  }\n}\n\n/**\n * Web-based implementation of the Login Dialog.\n * @visibleForTesting\n */\nexport class WebLoginDialog {\n  /**\n   * @param {!Window} win\n   * @param {!../../../src/service/viewer-interface.ViewerInterface} viewer\n   * @param {string|!Promise<string>} urlOrPromise\n   */\n  constructor(win, viewer, urlOrPromise) {\n    /** @const {!Window} */\n    this.win = win;\n\n    /** @const {!../../../src/service/viewer-interface.ViewerInterface} */\n    this.viewer = viewer;\n\n    /** @const {string|!Promise<string>} */\n    this.urlOrPromise = urlOrPromise;\n\n    /** @private {?function(?string)} */\n    this.resolve_ = null;\n\n    /** @private {?function(*)} */\n    this.reject_ = null;\n\n    /** @private {?Window} */\n    this.dialog_ = null;\n\n    /** @private {?Promise} */\n    this.dialogReadyPromise_ = null;\n\n    /** @private {?number} */\n    this.heartbeatInterval_ = null;\n\n    /** @private {?UnlistenDef} */\n    this.messageUnlisten_ = null;\n  }\n\n  /**\n   * Opens the dialog. Returns the promise that will yield with the dialog's\n   * result or will be rejected if dialog fails.\n   * @return {!Promise<string>}\n   */\n  open() {\n    userAssert(!this.resolve_, 'Dialog already opened');\n    return new Promise((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      // Must always be called synchronously.\n      this.openInternal_();\n    }).then(\n      (result) => {\n        this.cleanup_();\n        return result;\n      },\n      (error) => {\n        this.cleanup_();\n        throw error;\n      }\n    );\n  }\n\n  /** @private */\n  cleanup_() {\n    this.resolve_ = null;\n    this.reject_ = null;\n\n    if (this.dialog_) {\n      try {\n        this.dialog_.close();\n      } catch (e) {\n        // Ignore.\n      }\n      this.dialog_ = null;\n    }\n\n    if (this.heartbeatInterval_) {\n      this.win.clearInterval(this.heartbeatInterval_);\n      this.heartbeatInterval_ = null;\n    }\n\n    if (this.messageUnlisten_) {\n      this.messageUnlisten_();\n      this.messageUnlisten_ = null;\n    }\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  getLoginUrl() {\n    let urlPromise;\n    if (typeof this.urlOrPromise == 'string') {\n      urlPromise = Promise.resolve(this.urlOrPromise);\n    } else {\n      urlPromise = this.urlOrPromise;\n    }\n    return urlPromise.then((url) => {\n      return buildLoginUrl(url, this.getReturnUrl_());\n    });\n  }\n\n  /** @private */\n  openInternal_() {\n    const {screen} = this.win;\n    const w = Math.floor(Math.min(700, screen.width * 0.9));\n    const h = Math.floor(Math.min(450, screen.height * 0.9));\n    const x = Math.floor((screen.width - w) / 2);\n    const y = Math.floor((screen.height - h) / 2);\n    const sizing = `height=${h},width=${w},left=${x},top=${y}`;\n    const options = `${sizing},resizable=yes,scrollbars=yes`;\n    const returnUrl = this.getReturnUrl_();\n\n    this.dialogReadyPromise_ = null;\n    if (typeof this.urlOrPromise == 'string') {\n      const loginUrl = buildLoginUrl(this.urlOrPromise, returnUrl);\n      dev().fine(TAG, 'Open dialog: ', loginUrl, returnUrl, w, h, x, y);\n      this.dialog_ = openWindowDialog(this.win, loginUrl, '_blank', options);\n      if (this.dialog_) {\n        this.dialogReadyPromise_ = Promise.resolve();\n      }\n    } else {\n      dev().fine(TAG, 'Open dialog: ', 'about:blank', returnUrl, w, h, x, y);\n      this.dialog_ = openWindowDialog(this.win, '', '_blank', options);\n      if (this.dialog_) {\n        this.dialogReadyPromise_ = this.urlOrPromise.then(\n          (url) => {\n            const loginUrl = buildLoginUrl(url, returnUrl);\n            dev().fine(TAG, 'Set dialog url: ', loginUrl);\n            this.dialog_.location.replace(loginUrl);\n          },\n          (error) => {\n            throw new Error('failed to resolve url: ' + error);\n          }\n        );\n      }\n    }\n\n    if (this.dialogReadyPromise_) {\n      this.dialogReadyPromise_.then(\n        () => {\n          this.setupDialog_(returnUrl);\n        },\n        (error) => {\n          this.loginDone_(/* result */ null, error);\n        }\n      );\n    } else {\n      this.loginDone_(/* result */ null, new Error('failed to open dialog'));\n    }\n  }\n\n  /**\n   * @param {string} returnUrl\n   * @private\n   */\n  setupDialog_(returnUrl) {\n    const returnOrigin = parseUrlDeprecated(returnUrl).origin;\n\n    this.heartbeatInterval_ = this.win.setInterval(() => {\n      if (this.dialog_.closed) {\n        this.win.clearInterval(this.heartbeatInterval_);\n        this.heartbeatInterval_ = null;\n        // Give a chance for the result to arrive, but otherwise consider the\n        // responce to be empty.\n        this.win.setTimeout(() => {\n          this.loginDone_('');\n        }, 3000);\n      }\n    }, 500);\n\n    this.messageUnlisten_ = listen(this.win, 'message', (e) => {\n      dev().fine(TAG, 'MESSAGE:', e);\n      if (e.origin != returnOrigin) {\n        return;\n      }\n      if (!getData(e) || getData(e)['sentinel'] != 'amp') {\n        return;\n      }\n      dev().fine(TAG, 'Received message from dialog: ', getData(e));\n      if (getData(e)['type'] == 'result') {\n        if (this.dialog_) {\n          this.dialog_./*OK*/ postMessage(\n            dict({\n              'sentinel': 'amp',\n              'type': 'result-ack',\n            }),\n            returnOrigin\n          );\n        }\n        this.loginDone_(getData(e)['result']);\n      }\n    });\n  }\n\n  /**\n   * @param {?string} result\n   * @param {*=} opt_error\n   * @private\n   */\n  loginDone_(result, opt_error) {\n    if (!this.resolve_) {\n      return;\n    }\n    dev().fine(TAG, 'Login done: ', result, opt_error);\n    if (opt_error) {\n      this.reject_(opt_error);\n    } else {\n      this.resolve_(result);\n    }\n    this.cleanup_();\n  }\n\n  /**\n   * @return {string}\n   * @private\n   */\n  getReturnUrl_() {\n    const currentUrl = this.viewer.getResolvedViewerUrl();\n    let returnUrl;\n    if (getMode().localDev) {\n      const loc = this.win.location;\n      returnUrl =\n        loc.protocol +\n        '//' +\n        loc.host +\n        '/extensions/amp-access/0.1/amp-login-done.html';\n    } else {\n      returnUrl = `${urls.cdn}/v0/amp-login-done-0.1.html`;\n    }\n    return returnUrl + '?url=' + encodeURIComponent(currentUrl);\n  }\n}\n\n/**\n * @param {string} url\n * @param {string} returnUrl\n * @return {string}\n * @private\n */\nfunction buildLoginUrl(url, returnUrl) {\n  // RETURN_URL has to arrive here unreplaced by UrlReplacements for two\n  // reasons: (1) sync replacement and (2) if we need to propagate this\n  // replacement to the viewer.\n  if (RETURN_URL_REGEX.test(url)) {\n    return url.replace(RETURN_URL_REGEX, encodeURIComponent(returnUrl));\n  }\n  return (\n    url +\n    (url.indexOf('?') == -1 ? '?' : '&') +\n    'return=' +\n    encodeURIComponent(returnUrl)\n  );\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {dict} from './core/types/object';\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject} vars A map of vars and their values.\n * @param {boolean} enableDataVars A boolean to indicate if data-vars-*\n * attribute value from target element should be included.\n */\nexport function triggerAnalyticsEvent(\n  target,\n  eventType,\n  vars = dict(),\n  enableDataVars = true\n) {\n  Services.analyticsForDocOrNull(target).then((analytics) => {\n    if (!analytics) {\n      return;\n    }\n    analytics.triggerEventForTarget(target, eventType, vars, enableDataVars);\n  });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AccessClientAdapter} from './amp-access-client';\nimport {AccessIframeAdapter} from './amp-access-iframe';\nimport {AccessOtherAdapter} from './amp-access-other';\nimport {AccessServerAdapter} from './amp-access-server';\nimport {AccessServerJwtAdapter} from './amp-access-server-jwt';\nimport {AccessVendorAdapter} from './amp-access-vendor';\nimport {Deferred} from '../../../src/core/data-structures/promise';\nimport {Services} from '../../../src/services';\nimport {assertHttpsUrl} from '../../../src/url';\nimport {dev, user, userAssert} from '../../../src/log';\nimport {dict, getValueForExpr} from '../../../src/core/types/object';\nimport {getLoginUrl, openLoginDialog} from './login-dialog';\nimport {isEnumValue, isObject} from '../../../src/core/types';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {parseQueryString} from '../../../src/core/types/string/url';\nimport {triggerAnalyticsEvent} from '../../../src/analytics';\n\n/** @const */\nconst TAG = 'amp-access';\n\n/**\n * The type of access flow.\n * @enum {string}\n */\nexport const AccessType = {\n  CLIENT: 'client',\n  IFRAME: 'iframe',\n  SERVER: 'server',\n  VENDOR: 'vendor',\n  OTHER: 'other',\n};\n\n/**\n * AccessSource represents a single source of authentication information for a\n * page. These sources are constructed, unified and attached to the document by\n * AccessService.\n */\nexport class AccessSource {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!JsonObject} configJson\n   * @param {function():!Promise<string>} readerIdFn\n   * @param {function(time)} scheduleViewFn\n   * @param {function(!Promise)} onReauthorizeFn\n   * @param {!Element} accessElement\n   */\n  constructor(\n    ampdoc,\n    configJson,\n    readerIdFn,\n    scheduleViewFn,\n    onReauthorizeFn,\n    accessElement\n  ) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /** @const */\n    this.getReaderId_ = readerIdFn;\n\n    /** @const */\n    this.scheduleView_ = scheduleViewFn;\n\n    /** @const */\n    this.onReauthorize_ = onReauthorizeFn;\n\n    /** @const */\n    this.accessElement_ = accessElement;\n\n    /** @const @private {boolean} */\n    this.isServerEnabled_ = isExperimentOn(ampdoc.win, 'amp-access-server');\n\n    /** @const @private {boolean} */\n    this.isJwtEnabled_ = isExperimentOn(ampdoc.win, 'amp-access-jwt');\n\n    /** @const {!AccessType} */\n    this.type_ = this.buildConfigType_(configJson);\n\n    /** @const {!JsonObject} */\n    this.loginConfig_ = this.buildConfigLoginMap_(configJson);\n\n    /** @const {?JsonObject} */\n    this.authorizationFallbackResponse_ =\n      configJson['authorizationFallbackResponse'];\n\n    /** @const {?string} */\n    this.namespace_ = configJson['namespace'] || null;\n\n    /** @const {!AccessTypeAdapterDef} */\n    this.adapter_ = this.createAdapter_(configJson);\n\n    /** @const @private {!../../../src/service/url-replacements-impl.UrlReplacements} */\n    this.urlReplacements_ = Services.urlReplacementsForDoc(accessElement);\n\n    /** @private @const {function(string):Promise<string>} */\n    this.openLoginDialog_ = openLoginDialog.bind(null, ampdoc);\n\n    /** @private {?JsonObject} */\n    this.authResponse_ = null;\n\n    const deferred = new Deferred();\n\n    /**\n     * This pattern allows AccessService to attach behavior to authorization\n     * before runAuthorization() is actually called.\n     * @const @private {!Promise}\n     */\n    this.firstAuthorizationPromise_ = deferred.promise;\n\n    /** @private {?Function} */\n    this.firstAuthorizationResolver_ = deferred.resolve;\n\n    /** @private {!Object<string, string>} */\n    this.loginUrlMap_ = {};\n\n    /** @private {?Promise} */\n    this.loginPromise_ = null;\n\n    /** @private {!time} */\n    this.loginStartTime_ = 0;\n  }\n\n  /**\n   * @return {?string}\n   */\n  getNamespace() {\n    return this.namespace_;\n  }\n\n  /** @return {!AccessType} */\n  getType() {\n    return this.type_;\n  }\n\n  /** @return {!AccessTypeAdapterDef} */\n  getAdapter() {\n    return this.adapter_;\n  }\n\n  /** @return {?JsonObject} */\n  getAuthResponse() {\n    return this.authResponse_;\n  }\n\n  /**\n   * @param {!JsonObject} configJson\n   * @return {!AccessTypeAdapterDef}\n   * @private\n   */\n  createAdapter_(configJson) {\n    const context = /** @type {!AccessTypeAdapterContextDef} */ ({\n      buildUrl: this.buildUrl.bind(this),\n      collectUrlVars: this.collectUrlVars.bind(this),\n    });\n    const isJwt = this.isJwtEnabled_ && configJson['jwt'] === true;\n    switch (this.type_) {\n      case AccessType.CLIENT:\n        if (isJwt) {\n          return new AccessServerJwtAdapter(this.ampdoc, configJson, context);\n        }\n        return new AccessClientAdapter(this.ampdoc, configJson, context);\n      case AccessType.IFRAME:\n        return new AccessIframeAdapter(this.ampdoc, configJson, context);\n      case AccessType.SERVER:\n        if (isJwt) {\n          return new AccessServerJwtAdapter(this.ampdoc, configJson, context);\n        }\n        return new AccessServerAdapter(this.ampdoc, configJson, context);\n      case AccessType.VENDOR:\n        return new AccessVendorAdapter(this.ampdoc, configJson);\n      case AccessType.OTHER:\n        return new AccessOtherAdapter(this.ampdoc, configJson, context);\n    }\n    throw dev().createError('Unsupported access type: ', this.type_);\n  }\n\n  /**\n   * @return {!JsonObject}\n   */\n  getAdapterConfig() {\n    return this.adapter_.getConfig();\n  }\n\n  /**\n   * @return {!Promise} Returns a promise for the initial authorization.\n   */\n  whenFirstAuthorized() {\n    return this.firstAuthorizationPromise_;\n  }\n\n  /**\n   * @param {!JsonObject} configJson\n   * @return {!AccessType}\n   */\n  buildConfigType_(configJson) {\n    let {'type': type} = configJson;\n    userAssert(\n      !type || isEnumValue(AccessType, type),\n      `Unknown access type: ${type}`\n    );\n    if (!type) {\n      if (configJson['vendor']) {\n        type = AccessType.VENDOR;\n      } else {\n        type = AccessType.CLIENT;\n      }\n    }\n    if (type == AccessType.SERVER && !this.isServerEnabled_) {\n      user().warn(TAG, 'Experiment \"amp-access-server\" is not enabled.');\n      type = AccessType.CLIENT;\n    }\n    if (type == AccessType.CLIENT && this.isServerEnabled_) {\n      user().info(TAG, 'Forcing access type: SERVER');\n      type = AccessType.SERVER;\n    }\n    return type;\n  }\n\n  /**\n   * @param {!JsonObject} configJson\n   * @return {!JsonObject}\n   * @private\n   */\n  buildConfigLoginMap_(configJson) {\n    const loginConfig = configJson['login'];\n    const loginMap = dict();\n    if (!loginConfig) {\n      // Ignore: in some cases login config is not necessary.\n    } else if (typeof loginConfig == 'string') {\n      loginMap[''] = loginConfig;\n    } else if (isObject(loginConfig)) {\n      for (const k in loginConfig) {\n        loginMap[k] = loginConfig[k];\n      }\n    } else {\n      userAssert(false, '\"login\" must be either a single URL or a map of URLs');\n    }\n\n    // Check that all URLs are valid.\n    for (const k in loginMap) {\n      assertHttpsUrl(loginMap[k], this.accessElement_);\n    }\n    return loginMap;\n  }\n\n  /**\n   * @return {!Element}\n   * @private\n   */\n  getRootElement_() {\n    const root = this.ampdoc.getRootNode();\n    return dev().assertElement(root.documentElement || root.body || root);\n  }\n\n  /**\n   * @param {string} eventType\n   * @private\n   */\n  analyticsEvent_(eventType) {\n    triggerAnalyticsEvent(\n      this.getRootElement_(),\n      eventType,\n      /** vars */ undefined,\n      /** enableDataVars */ false\n    );\n  }\n\n  /**\n   * Do some initial setup.\n   */\n  start() {\n    dev().fine(\n      TAG,\n      'config:',\n      this.type_,\n      this.loginConfig_,\n      this.adapter_.getConfig()\n    );\n\n    // Calculate login URLs right away.\n    this.buildLoginUrls_();\n  }\n\n  /**\n   * @param {string} url\n   * @param {boolean} useAuthData Allows `AUTH(field)` URL var substitutions.\n   * @return {!Promise<string>}\n   */\n  buildUrl(url, useAuthData) {\n    return this.prepareUrlVars_(useAuthData).then((vars) => {\n      return this.urlReplacements_.expandUrlAsync(url, vars);\n    });\n  }\n\n  /**\n   * @param {string} url\n   * @param {boolean} useAuthData Allows `AUTH(field)` URL var substitutions.\n   * @return {!Promise<!Object<string, *>>}\n   */\n  collectUrlVars(url, useAuthData) {\n    return this.prepareUrlVars_(useAuthData).then((vars) => {\n      return this.urlReplacements_.collectVars(url, vars);\n    });\n  }\n\n  /**\n   * @param {boolean} useAuthData Allows `AUTH(field)` URL var substitutions.\n   * @return {!Promise<!Object<string, *>>}\n   * @private\n   */\n  prepareUrlVars_(useAuthData) {\n    return this.getReaderId_().then((readerId) => {\n      const vars = {\n        'READER_ID': readerId,\n        'ACCESS_READER_ID': readerId, // A synonym.\n      };\n      if (useAuthData) {\n        vars['AUTHDATA'] = (field) => {\n          if (this.authResponse_) {\n            return getValueForExpr(this.authResponse_, field);\n          }\n          return undefined;\n        };\n      }\n      return vars;\n    });\n  }\n\n  /**\n   * Returns the promise that resolves when authorization call has completed.\n   * Note that this promise never fails.\n   * @param {boolean=} opt_disableFallback\n   * @return {!Promise}\n   */\n  runAuthorization(opt_disableFallback) {\n    if (!this.adapter_.isAuthorizationEnabled()) {\n      dev().fine(TAG, 'Ignore authorization for type=', this.type_);\n      this.firstAuthorizationResolver_();\n      return Promise.resolve();\n    }\n\n    const responsePromise = this.adapter_.authorize().catch((error) => {\n      this.analyticsEvent_('access-authorization-failed');\n      if (this.authorizationFallbackResponse_ && !opt_disableFallback) {\n        // Use fallback.\n        user().error(TAG, 'Authorization failed: ', error);\n        return this.authorizationFallbackResponse_;\n      } else {\n        // Rethrow the error, it will be processed in the bottom `catch`.\n        throw error;\n      }\n    });\n\n    const promise = responsePromise\n      .then((response) => {\n        dev().fine(TAG, 'Authorization response: ', response);\n        this.setAuthResponse_(response);\n        this.buildLoginUrls_();\n        return response;\n      })\n      .catch((error) => {\n        user().error(TAG, 'Authorization failed: ', error);\n        this.firstAuthorizationResolver_();\n        throw error;\n      });\n\n    return promise;\n  }\n\n  /**\n   * @param {!JsonObject} authResponse\n   * @private\n   */\n  setAuthResponse_(authResponse) {\n    this.authResponse_ = authResponse;\n    this.firstAuthorizationResolver_();\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  reportViewToServer() {\n    return this.adapter_\n      .pingback()\n      .then(() => {\n        dev().fine(TAG, 'Pingback complete');\n        this.analyticsEvent_('access-pingback-sent');\n      })\n      .catch((error) => {\n        this.analyticsEvent_('access-pingback-failed');\n        throw user().createError('Pingback failed: ', error);\n      });\n  }\n\n  /**\n   * Expose the getLoginUrl method with the current ampdoc context\n   * @param {string|!Promise<string>} urlOrPromise\n   * @return {!Promise<string>}\n   */\n  getLoginUrl(urlOrPromise) {\n    return getLoginUrl(this.ampdoc, urlOrPromise);\n  }\n\n  /**\n   * Runs the login flow using one of the predefined urls in the amp-access\n   * config\n   *\n   * @param {string} type Type of login defined in the config\n   * @return {!Promise}\n   */\n  loginWithType(type) {\n    userAssert(\n      this.loginConfig_[type],\n      'Login URL is not configured: %s',\n      type\n    );\n    // Login URL should always be available at this time.\n    const loginUrl = userAssert(\n      this.loginUrlMap_[type],\n      'Login URL is not ready: %s',\n      type\n    );\n    return this.login_(loginUrl, type);\n  }\n\n  /**\n   * Runs the login flow opening the given url in the login window.\n   *\n   * @param {string} url\n   * @param {string} eventLabel A label used for the analytics event for this action\n   * @return {!Promise}\n   */\n  loginWithUrl(url, eventLabel = '') {\n    return this.login_(url, eventLabel);\n  }\n\n  /**\n   * Runs the Login flow. Returns a promise that is resolved if login succeeds\n   * or is rejected if login fails. Login flow is performed as an external\n   * 1st party Web dialog. It's goal is to authenticate the reader.\n   *\n   * Type can be either an empty string for a default login or a name of the\n   * login URL.\n   *\n   * @private\n   * @param {string} loginUrl\n   * @param {string} eventLabel A label used for the analytics event for this action\n   * @return {!Promise}\n   */\n  login_(loginUrl, eventLabel) {\n    const now = Date.now();\n\n    // If login is pending, block a new one from starting for 1 second. After\n    // 1 second, however, the new login request will be allowed to proceed,\n    // given that we cannot always determine fully if the previous attempt is\n    // \"stuck\".\n    if (this.loginPromise_ && now - this.loginStartTime_ < 1000) {\n      return this.loginPromise_;\n    }\n\n    dev().fine(TAG, 'Start login: ', loginUrl, eventLabel);\n\n    this.loginAnalyticsEvent_(eventLabel, 'started');\n    const dialogPromise = this.openLoginDialog_(loginUrl);\n    const loginPromise = dialogPromise\n      .then((result) => {\n        dev().fine(TAG, 'Login dialog completed: ', eventLabel, result);\n        this.loginPromise_ = null;\n        const query = parseQueryString(result);\n        const s = query['success'];\n        const success = s == 'true' || s == 'yes' || s == '1';\n        if (success) {\n          this.loginAnalyticsEvent_(eventLabel, 'success');\n        } else {\n          this.loginAnalyticsEvent_(eventLabel, 'rejected');\n        }\n        if (success || !s) {\n          // In case of a success, repeat the authorization and pingback flows.\n          // Also do this for an empty response to avoid false negatives.\n          // Pingback is repeated in this case since this could now be a new\n          // \"view\" with a different access profile.\n          this.adapter_.postAction();\n          const authorizationPromise = this.runAuthorization(\n            /* disableFallback */ true\n          );\n          this.onReauthorize_(authorizationPromise);\n          return authorizationPromise.then(() => {\n            this.scheduleView_(/* timeToView */ 0);\n          });\n        }\n      })\n      .catch((reason) => {\n        dev().fine(TAG, 'Login dialog failed: ', eventLabel, reason);\n        this.loginAnalyticsEvent_(eventLabel, 'failed');\n        if (this.loginPromise_ == loginPromise) {\n          this.loginPromise_ = null;\n        }\n        throw reason;\n      });\n    this.loginPromise_ = loginPromise;\n    this.loginStartTime_ = now;\n    return this.loginPromise_;\n  }\n\n  /**\n   * @param {string} type\n   * @param {string} event\n   * @private\n   */\n  loginAnalyticsEvent_(type, event) {\n    this.analyticsEvent_(`access-login-${event}`);\n    if (type) {\n      this.analyticsEvent_(`access-login-${type}-${event}`);\n    }\n  }\n\n  /**\n   * @return {?Promise<!Array<!{type: string, url: string}>>}\n   * @private\n   */\n  buildLoginUrls_() {\n    if (Object.keys(this.loginConfig_).length == 0) {\n      return null;\n    }\n    const promises = [];\n    for (const k in this.loginConfig_) {\n      promises.push(\n        this.buildUrl(this.loginConfig_[k], /* useAuthData */ true).then(\n          (url) => {\n            this.loginUrlMap_[k] = url;\n            return {type: k, url};\n          }\n        )\n      );\n    }\n    return Promise.all(promises);\n  }\n}\n\n/**\n * @typedef {{\n *   buildUrl: function(string, boolean):!Promise<string>,\n *   collectUrlVars: function(string, boolean):\n *       !Promise<!Object<string, *>>\n * }}\n */\nexport let AccessTypeAdapterContextDef;\n\n/**\n * @interface\n */\nexport class AccessTypeAdapterDef {\n  /**\n   * @return {!JsonObject}\n   */\n  getConfig() {}\n\n  /**\n   * @return {boolean}\n   */\n  isAuthorizationEnabled() {}\n\n  /**\n   * @return {!Promise<!JsonObject>}\n   */\n  authorize() {}\n\n  /**\n   * @return {boolean}\n   */\n  isPingbackEnabled() {}\n\n  /**\n   * @return {!Promise}\n   */\n  pingback() {}\n\n  /**\n   * Called after an action (login/subscribe/etc) is complete.\n   */\n  postAction() {}\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Exports the substitution variables for access services.\n *\n * @interface\n */\nexport class AccessVars {\n  /**\n   * Returns the promise that will yield the access READER_ID.\n   *\n   * This is a restricted API.\n   *\n   * @return {?Promise<string>}\n   */\n  getAccessReaderId() {}\n\n  /**\n   * Returns the promise that will yield the value of the specified field from\n   * the authorization response. This method will wait for the most recent\n   * authorization request to complete. It will return null values for failed\n   * requests with no fallback, but could be modified to block indefinitely.\n   *\n   * This is a restricted API.\n   *\n   * @param {string} unusedField\n   * @return {?Promise<*>}\n   */\n  getAuthdataField(unusedField) {}\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nexport const RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n\n/**\n * Identifier for an element's default action.\n *\n * @const {string}\n */\nexport const DEFAULT_ACTION = 'activate';\n\n/**\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\nexport const ActionTrust = {\n  /**\n   * Events that are triggered without a user gesture, or triggered by a user\n   * gesture with weak intent (e.g. scroll) are \"low trust\".\n   *\n   * Actions that have low impact on the page's visual state should require\n   * \"low trust\" (e.g. pausing a video).\n   */\n  LOW: 1,\n  /**\n   * Events that are triggered nearly immediately (up to a few seconds) after\n   * a user gesture with strong intent (e.g. tap or swipe) are \"default trust\".\n   *\n   * Actions that can modify the page's visual state (e.g. content jumping)\n   * should require \"default trust\". This is the default required trust level\n   * for actions.\n   */\n  DEFAULT: 2,\n  /**\n   * Events that are triggered immediately after a user gesture with\n   * strong intent (e.g. tap or swipe) are \"high trust\".\n   *\n   * There are no actions yet that require high trust.\n   */\n  HIGH: 3,\n};\n\n/**\n * @param {!ActionTrust} actionTrust\n * @return {string}\n */\nexport function actionTrustToString(actionTrust) {\n  switch (actionTrust) {\n    case ActionTrust.LOW:\n      return 'low';\n    case ActionTrust.HIGH:\n      return 'high';\n    default:\n      devAssert(actionTrust === ActionTrust.DEFAULT);\n      return 'default';\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** @fileoverview @suppress {checkTypes, suspiciousCode, uselessCode} */\n\n\n\n/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,3],$V1=[1,4],$V2=[1,18],$V3=[1,19],$V4=[1,14],$V5=[1,15],$V6=[1,16],$V7=[1,17],$V8=[1,21],$V9=[1,22],$Va=[5,6,7,10],$Vb=[5,6,7,10,15,16,17,18,19,20,21],$Vc=[5,6,7,10,15,16,17,18,19,20,21,25,27];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"result\":3,\"search_condition\":4,\"EOF\":5,\"OR\":6,\"AND\":7,\"NOT\":8,\"(\":9,\")\":10,\"predicate\":11,\"comparison_predicate\":12,\"truthy_predicate\":13,\"scalar_exp\":14,\"EQ\":15,\"DEQ\":16,\"NEQ\":17,\"LT\":18,\"LTE\":19,\"GT\":20,\"GTE\":21,\"atom\":22,\"field_ref\":23,\"literal\":24,\"DOT\":25,\"field_name\":26,\"[\":27,\"string\":28,\"]\":29,\"NAME\":30,\"STRING\":31,\"NUMERIC\":32,\"TRUE\":33,\"FALSE\":34,\"NULL\":35,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",6:\"OR\",7:\"AND\",8:\"NOT\",9:\"(\",10:\")\",15:\"EQ\",16:\"DEQ\",17:\"NEQ\",18:\"LT\",19:\"LTE\",20:\"GT\",21:\"GTE\",25:\"DOT\",27:\"[\",29:\"]\",30:\"NAME\",31:\"STRING\",32:\"NUMERIC\",33:\"TRUE\",34:\"FALSE\",35:\"NULL\"},\nproductions_: [0,[3,2],[4,3],[4,3],[4,2],[4,3],[4,1],[11,1],[11,1],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[13,1],[14,1],[14,1],[22,1],[23,3],[23,4],[23,1],[26,1],[28,1],[24,1],[24,1],[24,1],[24,1],[24,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn $$[$0-1];\nbreak;\ncase 2:\nthis.$ = $$[$0-2] || $$[$0];\nbreak;\ncase 3:\nthis.$ = $$[$0-2] && $$[$0];\nbreak;\ncase 4:\nthis.$ = !$$[$0];\nbreak;\ncase 5:\nthis.$ = $$[$0-1];\nbreak;\ncase 6: case 7: case 8: case 17: case 18: case 19:\nthis.$ = $$[$0];\nbreak;\ncase 9:\nthis.$ = $$[$0-2] === $$[$0];\nbreak;\ncase 10:\nthrow new Error('\"==\" is not allowed, use \"=\"');\nbreak;\ncase 11:\nthis.$ = $$[$0-2] !== $$[$0];\nbreak;\ncase 12:\nthis.$ = typeof $$[$0-2] == typeof $$[$0] && $$[$0-2] < $$[$0];\nbreak;\ncase 13:\nthis.$ = typeof $$[$0-2] == typeof $$[$0] && $$[$0-2] <= $$[$0];\nbreak;\ncase 14:\nthis.$ = typeof $$[$0-2] == typeof $$[$0] && $$[$0-2] > $$[$0];\nbreak;\ncase 15:\nthis.$ = typeof $$[$0-2] == typeof $$[$0] && $$[$0-2] >= $$[$0];\nbreak;\ncase 16:\nthis.$ = ($$[$0] !== undefined && $$[$0] !== null\n                && $$[$0] !== '' && $$[$0] !== 0 && $$[$0] !== false);\nbreak;\ncase 20:\nthis.$ = Object.prototype.toString.call($$[$0-2]) == '[object Object]' && $$[$0-2].hasOwnProperty($$[$0]) ? $$[$0-2][$$[$0]] : null;\nbreak;\ncase 21:\nthis.$ = Object.prototype.toString.call($$[$0-3]) == '[object Object]' && $$[$0-3].hasOwnProperty($$[$0-1]) ? $$[$0-3][$$[$0-1]] : null;\nbreak;\ncase 22:\nthis.$ = yy[$$[$0]] !== undefined ? yy[$$[$0]] : null;\nbreak;\ncase 23:\nthis.$ = yytext;\nbreak;\ncase 24:\nthis.$ = yytext.substring(1, yytext.length - 1);\nbreak;\ncase 26:\nthis.$ = Number(yytext);\nbreak;\ncase 27:\nthis.$ = true\nbreak;\ncase 28:\nthis.$ = false\nbreak;\ncase 29:\nthis.$ = null\nbreak;\n}\n},\ntable: [{3:1,4:2,8:$V0,9:$V1,11:5,12:6,13:7,14:8,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},{1:[3]},{5:[1,20],6:$V8,7:$V9},{4:23,8:$V0,9:$V1,11:5,12:6,13:7,14:8,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},{4:24,8:$V0,9:$V1,11:5,12:6,13:7,14:8,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},o($Va,[2,6]),o($Va,[2,7]),o($Va,[2,8]),o($Va,[2,16],{15:[1,25],16:[1,26],17:[1,27],18:[1,28],19:[1,29],20:[1,30],21:[1,31]}),o($Vb,[2,17]),o($Vb,[2,18],{25:[1,32],27:[1,33]}),o($Vb,[2,19]),o($Vc,[2,22]),o($Vb,[2,25]),o($Vb,[2,26]),o($Vb,[2,27]),o($Vb,[2,28]),o($Vb,[2,29]),o($Vc,[2,23]),o([5,6,7,10,15,16,17,18,19,20,21,29],[2,24]),{1:[2,1]},{4:34,8:$V0,9:$V1,11:5,12:6,13:7,14:8,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},{4:35,8:$V0,9:$V1,11:5,12:6,13:7,14:8,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},o($Va,[2,4]),{6:$V8,7:$V9,10:[1,36]},{14:37,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},{14:38,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},{14:39,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},{14:40,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},{14:41,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},{14:42,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},{14:43,22:9,23:10,24:11,26:12,28:13,30:$V2,31:$V3,32:$V4,33:$V5,34:$V6,35:$V7},{26:44,30:$V2},{28:45,31:$V3},o([5,6,10],[2,2],{7:$V9}),o($Va,[2,3]),o($Va,[2,5]),o($Va,[2,9]),o($Va,[2,10]),o($Va,[2,11]),o($Va,[2,12]),o($Va,[2,13]),o($Va,[2,14]),o($Va,[2,15]),o($Vc,[2,20]),{29:[1,46]},o($Vc,[2,21])],\ndefaultActions: {20:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 7\nbreak;\ncase 2:return 6\nbreak;\ncase 3:return 8\nbreak;\ncase 4:return 35\nbreak;\ncase 5:return 33\nbreak;\ncase 6:return 33\nbreak;\ncase 7:return 34\nbreak;\ncase 8:return 34\nbreak;\ncase 9:return 9\nbreak;\ncase 10:return 10\nbreak;\ncase 11:return 27\nbreak;\ncase 12:return 29\nbreak;\ncase 13:return '|'\nbreak;\ncase 14:return 19\nbreak;\ncase 15:return 18\nbreak;\ncase 16:return 21\nbreak;\ncase 17:return 20\nbreak;\ncase 18:return 17\nbreak;\ncase 19:return 16\nbreak;\ncase 20:return 15\nbreak;\ncase 21:return 32\nbreak;\ncase 22:return 30\nbreak;\ncase 23:return 31\nbreak;\ncase 24:return 31\nbreak;\ncase 25:return 25\nbreak;\ncase 26:return 'INVALID'\nbreak;\ncase 27:return 5\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:AND\\b)/,/^(?:OR\\b)/,/^(?:NOT\\b)/,/^(?:NULL\\b)/,/^(?:TRUE\\b)/,/^(?:true\\b)/,/^(?:FALSE\\b)/,/^(?:false\\b)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\|)/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!=)/,/^(?:==)/,/^(?:=)/,/^(?:-?[0-9]+(\\.[0-9]+)?\\b)/,/^(?:[a-zA-Z_][a-zA-Z0-9_]*)/,/^(?:'[^\\']*')/,/^(?:\"[^\\\"]*\")/,/^(?:\\.)/,/^(?:.)/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\nexport const accessParser = parser;\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {hasOwn, map} from '../../../src/core/types/object';\nimport {accessParser as parser} from '../../../build/parsers/access-expr-impl';\n\n/**\n * Evaluates access expressions.\n *\n * The grammar is defined in the `access-expr-impl.jison` and compiled using\n * (Jison)[https://zaach.github.io/jison/] parser. The compilation steps are\n * built into the `amp build` and `amp dist` tasks.\n *\n * Grammar highlights:\n * - Shorthand truthy expressions are allowed, such as `field`. Truthy value\n *   is defined as `X !== null && X !== '' && X !== 0 && X !== false`.\n * - Basic equality expressions: `X = 1`, `X = true`, `X = \"A\"`. And also,\n *   non-equality: `X != 1` and so on.\n * - Basic comparison expressions only defined for numbers: `X < 1`,\n *   `X >= 10`.\n * - Boolean logic: `X = 1 OR Y = 1`, `X = 1 AND Y = 2`, `NOT X`, `NOT (X = 1)`.\n *\n * @param {string} expr\n * @param {!JsonObject} data\n * @return {boolean}\n */\nexport function evaluateAccessExpr(expr, data) {\n  try {\n    parser.yy = data;\n    return !!parser.parse(expr);\n  } finally {\n    parser.yy = null;\n  }\n}\n\n/**\n * AmpAccessEvaluator evaluates amp-access expressions.\n * It uses a cache to speed up repeated evals for the same expression.\n */\nexport class AmpAccessEvaluator {\n  /** */\n  constructor() {\n    /** @type {Object<string, boolean>} */\n    this.cache = null;\n\n    /** @private @type {JsonObject} */\n    this.lastData_ = null;\n  }\n\n  /**\n   * Evaluate access expressions, but turn to a cache first.\n   * Cache is invalidated when given new data.\n   *\n   * @param {string} expr\n   * @param {!JsonObject} data\n   * @return {boolean}\n   */\n  evaluate(expr, data) {\n    if (this.lastData_ !== data) {\n      this.lastData_ = data;\n      this.cache = map();\n    }\n\n    if (!hasOwn(this.cache, expr)) {\n      this.cache[expr] = evaluateAccessExpr(expr, data);\n    }\n\n    return this.cache[expr];\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/main/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load-start',\n  LOAD_END: 'amp:load-end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n  UNLOAD: 'amp:unload',\n};\n", "export const CSS = \"\\n/*# sourceURL=/extensions/amp-access/0.1/amp-access.css*/\";\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {removeItem} from '../types/array';\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    removeItem(this.handlers_, handler);\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    for (const handler of this.handlers_) {\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    return this.handlers_?.length ?? 0;\n  }\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Registred singleton on AMP doc.\n * @enum {number}\n */\nexport const AMPDOC_SINGLETON_NAME = {\n  TRACKING_IFRAME: 1,\n  LINKER: 2,\n};\n\n/**\n * Enum for tick labels (used by Performance service)\n * @enum {string}\n */\nexport const TickLabel = {\n  ACCESS_AUTHORIZATION: 'aaa',\n  ACCESS_AUTHORIZATION_VISIBLE: 'aaav',\n  ADS_LAYOUT_DELAY: 'adld',\n  BAD_FRAMES: 'bf',\n  BATTERY_DROP: 'bd',\n  CONTENT_LAYOUT_DELAY: 'cld',\n  CUMULATIVE_LAYOUT_SHIFT: 'cls',\n  CUMULATIVE_LAYOUT_SHIFT_2: 'cls-2',\n  // TODO(#33207): Remove after data collection\n  CUMULATIVE_LAYOUT_SHIFT_BEFORE_FCP: 'cls-fcp',\n  CUMULATIVE_LAYOUT_SHIFT_BEFORE_VISIBLE: 'cls-ofv',\n  DOCUMENT_READY: 'dr',\n  END_INSTALL_STYLES: 'e_is',\n  FIRST_CONTENTFUL_PAINT: 'fcp',\n  FIRST_CONTENTFUL_PAINT_VISIBLE: 'fcpv',\n  FIRST_PAINT: 'fp',\n  FIRST_INPUT_DELAY: 'fid',\n  FIRST_INPUT_DELAY_POLYFILL: 'fid-polyfill',\n  FIRST_VIEWPORT_READY: 'pc',\n  GOOD_FRAME_PROBABILITY: 'gfp',\n  INSTALL_STYLES: 'is',\n  LARGEST_CONTENTFUL_PAINT_VISIBLE: 'lcpv',\n  LARGEST_CONTENTFUL_PAINT_LOAD: 'lcpl',\n  LARGEST_CONTENTFUL_PAINT_RENDER: 'lcpr',\n  LONG_TASKS_CHILD: 'ltc',\n  LONG_TASKS_SELF: 'lts',\n  MAKE_BODY_VISIBLE: 'mbv',\n  MESSAGING_READY: 'msr',\n  ON_FIRST_VISIBLE: 'ofv',\n  ON_LOAD: 'ol',\n  TIME_ORIGIN: 'timeOrigin',\n  VIDEO_CACHE_STATE: 'vcs',\n  VIDEO_ERROR: 'verr',\n  VIDEO_ON_FIRST_PAGE: 'vofp',\n  VIDEO_JOINT_LATENCY: 'vjl',\n  VIDEO_MEAN_TIME_BETWEEN_REBUFFER: 'vmtbrb',\n  VIDEO_REBUFFERS: 'vrb',\n  VIDEO_REBUFFER_RATE: 'vrbr',\n  VIDEO_WATCH_TIME: 'vwt',\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './core/constants/common-signals';\nimport {Services} from './services';\nimport {TickLabel} from './core/constants/enums';\nimport {dev, devAssert} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './core/types/object';\nimport {rethrowAsync} from './core/error';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch((reason) => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then((services) => {\n      bodyMadeVisible = true;\n      if (INI_LOAD_INOB) {\n        // Force sync measurement to ensure that style recalc is complete\n        // before showing body, which would trigger FCP. This should reduce\n        // make it less likely that a CLS would be triggered after FCP.\n        doc.body./*OK*/ getBoundingClientRect();\n      }\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick(TickLabel.MAKE_BODY_VISIBLE);\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from './core/constants/amp-events';\nimport {Services} from './services';\nimport {\n  USER_ERROR_SENTINEL,\n  dev,\n  isUserErrorEmbed,\n  isUserErrorMessage,\n} from './log';\nimport {dict} from './core/types/object';\nimport {duplicateErrorIfNecessary} from './core/error';\nimport {experimentTogglesOrNull, getBinaryType, isCanary} from './experiments';\nimport {exponentialBackoff} from './core/types/function/exponential-backoff';\nimport {findIndex} from './core/types/array';\nimport {getMode} from './mode';\nimport {isLoadErrorMessage} from './event-helper';\nimport {isProxyOrigin} from './url';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport {triggerAnalyticsEvent} from './analytics';\nimport {urls} from './config';\n\n/**\n * @const {string}\n */\nconst CANCELLED = 'CANCELLED';\n\n/**\n * @const {string}\n */\nconst BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n\n/**\n * @const {string}\n */\nconst ABORTED = 'AbortError';\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n\n/**\n * Chance to post to the new error reporting endpoint.\n * @const {number}\n */\nconst BETA_ERROR_REPORT_URL_FREQ = 0.1;\n\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\nlet accumulatedErrorMessages = self.__AMP_ERRORS || [];\n// Use a true global, to avoid multi-module inclusion issues.\nself.__AMP_ERRORS = accumulatedErrorMessages;\n\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n  array.push(element);\n}\n\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\nlet reportingBackoff = function (work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  reportingBackoff = exponentialBackoff(1.5);\n  return reportingBackoff(work);\n};\n\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(/** @type {!JsonObject} */ (value));\n  } catch (e) {\n    return String(value);\n  }\n}\n\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\nexport function reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n  if (\n    error &&\n    !!win &&\n    isUserErrorMessage(error.message) &&\n    !isUserErrorEmbed(error.message)\n  ) {\n    reportErrorToAnalytics(/** @type {!Error} */ (error), win);\n  }\n}\n\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\nexport function reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    let isValidError;\n    if (error) {\n      if (error.message !== undefined) {\n        error = duplicateErrorIfNecessary(/** @type {!Error} */ (error));\n        isValidError = true;\n      } else {\n        const origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    }\n    // Report if error is not an expected type.\n    if (!isValidError && getMode().localDev && !getMode().test) {\n      setTimeout(function () {\n        const rethrow = new Error(\n          '_reported_ Error reported incorrectly: ' + error\n        );\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return /** @type {!Error} */ (error);\n    }\n    error.reported = true;\n\n    // `associatedElement` is used to add the i-amphtml-error class; in\n    // `#development=1` mode, it also adds `i-amphtml-element-error` to the\n    // element and sets the `error-message` attribute.\n    if (error.messageArray) {\n      const elIndex = findIndex(error.messageArray, (item) => item?.tagName);\n      if (elIndex > -1) {\n        error.associatedElement = error.messageArray[elIndex];\n      }\n    }\n    // Update element.\n    const element = opt_associatedElement || error.associatedElement;\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n      if (getMode().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    }\n\n    // Report to console.\n    if (\n      self.console &&\n      (isUserErrorMessage(error.message) ||\n        !error.expected ||\n        getMode().localDev)\n    ) {\n      const output = console.error || console.log;\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!getMode().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(AmpEvents.ERROR, error.message);\n    }\n\n    // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n    onError['call'](self, undefined, undefined, undefined, undefined, error);\n  } catch (errorReportingError) {\n    setTimeout(function () {\n      throw errorReportingError;\n    });\n  }\n  return /** @type {!Error} */ (error);\n}\n\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\nexport function cancellation() {\n  return new Error(CANCELLED);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(CANCELLED);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(CANCELLED);\n  }\n  return false;\n}\n\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\nexport function blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(BLOCK_BY_CONSENT);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(BLOCK_BY_CONSENT);\n  }\n  return false;\n}\n\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\nexport function installErrorReporting(win) {\n  win.onerror = /** @type {!Function} */ (onError);\n  win.addEventListener('unhandledrejection', (event) => {\n    if (\n      event.reason &&\n      (event.reason.message === CANCELLED ||\n        event.reason.message === BLOCK_BY_CONSENT ||\n        event.reason.message === ABORTED)\n    ) {\n      event.preventDefault();\n      return;\n    }\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\nfunction onError(message, filename, line, col, error) {\n  // Make an attempt to unhide the body but don't if the error is actually expected.\n  // eslint-disable-next-line local/no-invalid-this\n  if (this && this.document && (!error || !error.expected)) {\n    // eslint-disable-next-line local/no-invalid-this\n    makeBodyVisibleRecovery(this.document);\n  }\n  if (getMode().localDev || getMode().development || getMode().test) {\n    return;\n  }\n  let hasNonAmpJs = false;\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {\n    // Ignore errors during error report generation.\n  }\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n  const data = getErrorReportData(\n    message,\n    filename,\n    line,\n    col,\n    error,\n    hasNonAmpJs\n  );\n  if (data) {\n    reportingBackoff(() => {\n      try {\n        return reportErrorToServerOrViewer(\n          // eslint-disable-next-line local/no-invalid-this\n          this,\n          /** @type {!JsonObject} */\n          (data)\n        ).catch(() => {\n          // catch async errors to avoid recursive errors.\n        });\n      } catch (e) {\n        // catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n\n/**\n * Determines the error reporting endpoint which should be used.\n * If changing this URL, keep `docs/spec/amp-errors.md` in sync.\n * @return {string} error reporting endpoint URL.\n */\nfunction chooseReportingUrl_() {\n  return Math.random() < BETA_ERROR_REPORT_URL_FREQ\n    ? urls.betaErrorReporting\n    : urls.errorReporting;\n}\n\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\nexport function reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n\n  // Throttle reports from Stable by 90%.\n  if (data['pt'] && Math.random() < 0.9) {\n    return Promise.resolve();\n  }\n\n  return maybeReportErrorToViewer(win, data).then((reportedErrorToViewer) => {\n    if (!reportedErrorToViewer) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', chooseReportingUrl_(), true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\nexport function maybeReportErrorToViewer(win, data) {\n  const ampdocService = Services.ampdocServiceFor(win);\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n  const ampdocSingle = ampdocService.getSingleDoc();\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n  return viewer.isTrustedViewer().then((viewerTrusted) => {\n    if (!viewerTrusted) {\n      return false;\n    }\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\nexport function errorReportingDataForViewer(errorReportData) {\n  return dict({\n    'm': errorReportData['m'], // message\n    'a': errorReportData['a'], // isUserError\n    's': errorReportData['s'], // error stack\n    'el': errorReportData['el'], // tagName\n    'ex': errorReportData['ex'], // expected error?\n    'v': errorReportData['v'], // runtime\n    'pt': errorReportData['pt'], // is pre-throttled\n  });\n}\n\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\nexport function getErrorReportData(\n  message,\n  filename,\n  line,\n  col,\n  error,\n  hasNonAmpJs\n) {\n  message = buildErrorMessage_(message, error);\n  // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n  let expected = !!(error && error.expected);\n  if (/_reported_/.test(message)) {\n    return;\n  }\n  if (message == CANCELLED) {\n    return;\n  }\n\n  const detachedWindow = !(self && self.window);\n  const throttleBase = Math.random();\n\n  // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n  if (\n    isLoadErrorMessage(message) ||\n    // See https://github.com/ampproject/amphtml/issues/7353\n    // for context.\n    message == 'Script error.' ||\n    // Window has become detached, really anything can happen\n    // at this point.\n    detachedWindow\n  ) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  const isUserError = isUserErrorMessage(message);\n\n  // Only report a subset of user errors.\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  }\n\n  // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n  const data = /** @type {!JsonObject} */ (Object.create(null));\n  data['v'] = getMode().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0';\n\n  // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n\n  let runtime = '1p';\n  if (IS_SXG) {\n    runtime = 'sxg';\n    data['sxg'] = '1';\n  } else if (IS_ESM) {\n    runtime = 'esm';\n    data['esm'] = '1';\n  } else if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if (getMode().runtime) {\n    runtime = getMode().runtime;\n  }\n\n  data['rt'] = runtime;\n\n  // Add our a4a id if we are inabox\n  if (runtime === 'inabox') {\n    data['adid'] = getMode().a4aId;\n  }\n\n  // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n  data['ca'] = isCanary(self) ? '1' : '0';\n\n  // Pass binary type.\n  data['bt'] = getBinaryType(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  }\n  // Is embedded?\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    const resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    const messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  const exps = [];\n  const experiments = experimentTogglesOrNull(self);\n  for (const exp in experiments) {\n    const on = experiments[exp];\n    exps.push(`${exp}=${on ? '1' : '0'}`);\n  }\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    data['el'] = error.associatedElement?.tagName || 'u'; // Unknown\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    }\n\n    // TODO(jridgewell, #18574); Make sure error is always an object.\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location['originalHash'] || self.location.hash;\n\n  // TODO(https://github.com/ampproject/error-tracker/issues/129): Remove once\n  // all clients are serving a version with pre-throttling.\n  if (data['bt'] === 'production') {\n    // Setting this field allows the error reporting service to know that this\n    // error has already been pre-throttled for Stable, so it doesn't need to\n    // throttle again.\n    data['pt'] = '1';\n  }\n\n  pushLimit(accumulatedErrorMessages, message, 25);\n\n  return data;\n}\n\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n  const scripts = win.document.querySelectorAll('script[src]');\n  for (let i = 0; i < scripts.length; i++) {\n    if (!isProxyOrigin(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resets accumulated error messages for testing\n */\nexport function resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\nexport function reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (Services.ampdocServiceFor(win).isSingleDoc()) {\n    const vars = dict({\n      'errorName': error.name,\n      'errorMessage': error.message,\n    });\n    triggerAnalyticsEvent(\n      getRootElement_(win),\n      'user-error',\n      vars,\n      /** enableDataVars */ false\n    );\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\nfunction getRootElement_(win) {\n  const root = Services.ampdocServiceFor(win).getSingleDoc().getRootNode();\n  return dev().assertElement(root.documentElement || root.body || root);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AccessSource, AccessType} from './amp-access-source';\nimport {AccessVars} from './access-vars';\nimport {ActionTrust} from '../../../src/core/constants/action-constants';\nimport {AmpAccessEvaluator} from './access-expr';\nimport {AmpEvents} from '../../../src/core/constants/amp-events';\nimport {CSS} from '../../../build/amp-access-0.1.css';\nimport {Observable} from '../../../src/core/data-structures/observable';\nimport {Services} from '../../../src/services';\nimport {TickLabel} from '../../../src/core/constants/enums';\nimport {cancellation} from '../../../src/error-reporting';\nimport {dev, user, userAssert} from '../../../src/log';\nimport {dict, getValueForExpr} from '../../../src/core/types/object';\nimport {getSourceOrigin} from '../../../src/url';\nimport {installStylesForDoc} from '../../../src/style-installer';\nimport {isArray} from '../../../src/core/types';\nimport {isJsonScriptTag} from '../../../src/dom';\nimport {listenOnce} from '../../../src/event-helper';\nimport {triggerAnalyticsEvent} from '../../../src/analytics';\nimport {tryParseJson} from '../../../src/core/types/object/json';\n\n/** @const */\nconst TAG = 'amp-access';\n\n/** @const {number} */\nconst VIEW_TIMEOUT = 2000;\n\n/** @const {string} */\nconst TEMPLATE_PROP = '__AMP_ACCESS__TEMPLATE';\n\n/**\n * AccessService implements the complete lifecycle of the AMP Access system.\n * @implements {AccessVars}\n */\nexport class AccessService {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    // Install styles.\n    installStylesForDoc(ampdoc, CSS, () => {}, false, TAG);\n\n    const accessElement = ampdoc.getElementById('amp-access');\n\n    /** @private {boolean} */\n    this.enabled_ = !!accessElement;\n    if (!this.enabled_) {\n      return;\n    }\n\n    /** @const @private {!Element} */\n    this.accessElement_ = dev().assertElement(accessElement);\n\n    /** @const @private {string} */\n    this.pubOrigin_ = getSourceOrigin(ampdoc.win.location);\n\n    /** @const @private {!../../../src/service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(ampdoc.win);\n\n    /** @private @const {!../../../src/service/vsync-impl.Vsync} */\n    this.vsync_ = Services.vsyncFor(ampdoc.win);\n\n    // TODO(dvoytenko, #3742): This will refer to the ampdoc once AccessService\n    // is migrated to ampdoc as well.\n    /** @private @const {!Promise<!../../../src/service/cid-impl.CidDef>} */\n    this.cid_ = Services.cidForDoc(ampdoc);\n\n    /** @private @const {!../../../src/service/viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(ampdoc);\n\n    /** @private @const {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(ampdoc);\n\n    /** @private @const {!../../../src/service/template-impl.Templates} */\n    this.templates_ = Services.templatesForDoc(ampdoc);\n\n    /** @private @const {!../../../src/service/mutator-interface.MutatorInterface} */\n    this.mutator_ = Services.mutatorForDoc(ampdoc);\n\n    /** @private @const {?../../../src/service/performance-impl.Performance} */\n    this.performance_ = Services.performanceForOrNull(ampdoc.win);\n\n    /** @private {?Promise<string>} */\n    this.readerIdPromise_ = null;\n\n    /** @private {!./access-expr.AmpAccessEvaluator} */\n    this.evaluator_ = new AmpAccessEvaluator();\n\n    /** @const */\n    this.sources_ = this.parseConfig_();\n\n    const promises = this.sources_.map((source) =>\n      source.whenFirstAuthorized()\n    );\n\n    /** @private {boolean} */\n    this.firstAuthorizationsCompleted_ = false;\n\n    /**\n     * Track most recent requests and block reporting and refreshes if\n     * outstanding. Future optimizations may choose to take action as soon\n     * as a single request completes. These complete even on failure.\n     * @private {!Promise}\n     */\n    this.lastAuthorizationPromises_ = Promise.all(promises);\n\n    /** @private {?Promise} */\n    this.reportViewPromise_ = null;\n\n    /** @private @const {!Observable} */\n    this.applyAuthorizationsObservable_ = new Observable();\n\n    // This will fire after the first received authorization, even if\n    // there are multiple sources.\n    this.lastAuthorizationPromises_.then(() => {\n      this.firstAuthorizationsCompleted_ = true;\n      this.analyticsEvent_('access-authorization-received');\n      if (this.performance_) {\n        this.performance_.tick(TickLabel.ACCESS_AUTHORIZATION);\n        this.performance_.tickSinceVisible(\n          TickLabel.ACCESS_AUTHORIZATION_VISIBLE\n        );\n        this.performance_.flush();\n      }\n    });\n\n    // Re-authorize newly added sections.\n    ampdoc\n      .getRootNode()\n      .addEventListener(AmpEvents.DOM_UPDATE, this.onDomUpdate_.bind(this));\n  }\n\n  /** @override from AccessVars */\n  getAccessReaderId() {\n    if (!this.enabled_) {\n      return null;\n    }\n    return this.getReaderId_();\n  }\n\n  /**\n   * @return {!Promise<string>}\n   * @private\n   */\n  getReaderId_() {\n    if (!this.readerIdPromise_) {\n      // No consent - an essential part of the access system.\n      const consent = Promise.resolve();\n      this.readerIdPromise_ = this.cid_.then((cid) => {\n        return cid.get(\n          {scope: 'amp-access', createCookieIfNotPresent: true},\n          consent\n        );\n      });\n    }\n    return this.readerIdPromise_;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  areFirstAuthorizationsCompleted() {\n    return this.firstAuthorizationsCompleted_;\n  }\n\n  /**\n   * Registers a callback to be triggered when the document gets (re)authorized.\n   * @param {!Function} callback\n   */\n  onApplyAuthorizations(callback) {\n    this.applyAuthorizationsObservable_.add(callback);\n  }\n\n  /**\n   * @return {!Array<!AccessSource>}\n   * @private\n   */\n  parseConfig_() {\n    userAssert(\n      isJsonScriptTag(this.accessElement_),\n      `${TAG} config should ` +\n        'be inside a <script> tag with type=\"application/json\"'\n    );\n    const rawContent = tryParseJson(this.accessElement_.textContent, (e) => {\n      throw user().createError('Failed to parse \"amp-access\" JSON: ' + e);\n    });\n\n    const configMap = {};\n    if (isArray(rawContent)) {\n      const contentArray = rawContent;\n      for (let i = 0; i < contentArray['length']; i++) {\n        const namespace = contentArray[i]['namespace'];\n        userAssert(!!namespace, 'Namespace required');\n        userAssert(\n          !configMap[namespace],\n          'Namespace already used: ' + namespace\n        );\n        configMap[namespace] = contentArray[i];\n      }\n    } else {\n      configMap[rawContent['namespace'] || ''] = rawContent;\n    }\n\n    const readerIdFn = this.getReaderId_.bind(this);\n    const scheduleViewFn = this.scheduleView_.bind(this);\n    const onReauthorizeFn = this.onReauthorize_.bind(this);\n\n    return Object.keys(configMap).map(\n      (key) =>\n        new AccessSource(\n          this.ampdoc,\n          configMap[key],\n          readerIdFn,\n          scheduleViewFn,\n          onReauthorizeFn,\n          this.accessElement_\n        )\n    );\n  }\n\n  /**\n   * @param {!Event} event\n   * @private\n   */\n  onDomUpdate_(event) {\n    // Only re-authorize sections if authorization already fired, otherwise\n    // just wait and existing callback will cover new sections.\n    if (this.firstAuthorizationsCompleted_) {\n      const target = dev().assertElement(event.target);\n      // Guard against anything else in flight.\n      return this.lastAuthorizationPromises_.then(() => {\n        const responses = this.combinedResponses();\n        this.applyAuthorizationToRoot_(target, responses);\n      });\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @return {!AccessSource}\n   */\n  getVendorSource(name) {\n    for (let i = 0; i < this.sources_.length; i++) {\n      const source = this.sources_[i];\n      if (source.getType() == AccessType.VENDOR) {\n        const vendorAdapter =\n          /** @type {!./amp-access-vendor.AccessVendorAdapter} */ (\n            source.getAdapter()\n          );\n        if (vendorAdapter.getVendorName() == name) {\n          return source;\n        }\n      }\n    }\n    userAssert(\n      false,\n      'Access vendor \"%s\" can only be used for \"type=vendor\", but none found',\n      name\n    );\n    // Should not happen, just to appease type checking.\n    throw new Error();\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * @return {!Element}\n   * @private\n   */\n  getRootElement_() {\n    const root = this.ampdoc.getRootNode();\n    return dev().assertElement(root.documentElement || root.body || root);\n  }\n\n  /**\n   * @param {string} eventType\n   * @private\n   */\n  analyticsEvent_(eventType) {\n    triggerAnalyticsEvent(\n      this.getRootElement_(),\n      eventType,\n      /** vars */ undefined,\n      /** enableDataVars */ false\n    );\n  }\n\n  /**\n   * @return {!AccessService}\n   * @private\n   * @restricted\n   */\n  start_() {\n    if (!this.enabled_) {\n      user().info(TAG, 'Access is disabled - no \"id=amp-access\" element');\n      return this;\n    }\n    this.startInternal_();\n    return this;\n  }\n\n  /** @private */\n  startInternal_() {\n    const actionService = Services.actionServiceForDoc(this.accessElement_);\n    actionService.installActionHandler(\n      this.accessElement_,\n      this.handleAction_.bind(this)\n    );\n\n    for (let i = 0; i < this.sources_.length; i++) {\n      this.sources_[i].start();\n    }\n\n    // Run authorization as soon as visible.\n    this.runAuthorization_();\n\n    // Wait for the \"view\" signal.\n    this.scheduleView_(VIEW_TIMEOUT);\n\n    // Listen to amp-access broadcasts from other pages.\n    this.listenToBroadcasts_();\n  }\n\n  /** @private */\n  listenToBroadcasts_() {\n    this.viewer_.onBroadcast((message) => {\n      if (\n        message['type'] == 'amp-access-reauthorize' &&\n        message['origin'] == this.pubOrigin_\n      ) {\n        this.runAuthorization_();\n      }\n    });\n  }\n\n  /**\n   * @param {!Promise} authorization\n   * @private\n   */\n  onReauthorize_(authorization) {\n    this.broadcastReauthorize_();\n    authorization.then(() => {\n      // If nothing has happened, initial render will cover this change.\n      if (this.firstAuthorizationsCompleted_) {\n        // Guard against anything else in flight.\n        this.lastAuthorizationPromises_.then(() => {\n          this.ampdoc.whenReady().then(() => {\n            const root = this.ampdoc.getRootNode();\n            const responses = this.combinedResponses();\n            return this.applyAuthorizationToRoot_(root, responses);\n          });\n        });\n      }\n    });\n  }\n\n  /** @private */\n  broadcastReauthorize_() {\n    this.viewer_.broadcast(\n      dict({\n        'type': 'amp-access-reauthorize',\n        'origin': this.pubOrigin_,\n      })\n    );\n  }\n\n  /**\n   * Returns the promise that resolves when all authorization work has\n   * completed, including authorization endpoint call and UI update.\n   * Note that this promise never fails.\n   * @param {boolean=} opt_disableFallback\n   * @return {!Promise}\n   * @private\n   */\n  runAuthorization_(opt_disableFallback) {\n    this.toggleTopClass_('amp-access-loading', true);\n\n    const authorizations = this.ampdoc.whenFirstVisible().then(() => {\n      return Promise.all(\n        this.sources_.map((source) => this.runOneAuthorization_(source))\n      );\n    });\n\n    const rendered = authorizations.then(() => {\n      this.toggleTopClass_('amp-access-loading', false);\n      return this.ampdoc.whenReady().then(() => {\n        const root = this.ampdoc.getRootNode();\n        const responses = this.combinedResponses();\n        return this.applyAuthorizationToRoot_(root, responses);\n      });\n    });\n\n    this.lastAuthorizationPromises_ = rendered;\n\n    return rendered;\n  }\n\n  /**\n   * Make a single authorization call.\n   * @param {AccessSource} source\n   * @return {Promise}\n   * @private\n   */\n  runOneAuthorization_(source) {\n    return source.runAuthorization().catch(() => {\n      this.toggleTopClass_('amp-access-error', true);\n    });\n  }\n\n  /** @override from AccessVars */\n  getAuthdataField(field) {\n    if (!this.enabled_) {\n      return null;\n    }\n    return this.lastAuthorizationPromises_.then(() => {\n      const responses = this.combinedResponses();\n      const v = getValueForExpr(responses, field);\n      return v !== undefined ? v : null;\n    });\n  }\n\n  /**\n   * @param {!Document|!ShadowRoot|!Element} root\n   * @param {!JsonObject} response\n   * @return {!Promise}\n   * @private\n   */\n  applyAuthorizationToRoot_(root, response) {\n    const elements = root.querySelectorAll('[amp-access]');\n    const promises = [];\n    for (let i = 0; i < elements.length; i++) {\n      promises.push(this.applyAuthorizationToElement_(elements[i], response));\n    }\n    return Promise.all(promises).then(() => {\n      this.applyAuthorizationsObservable_.fire();\n    });\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {!JsonObject} response\n   * @return {!Promise}\n   * @private\n   */\n  applyAuthorizationToElement_(element, response) {\n    const expr = element.getAttribute('amp-access');\n    let on = false;\n    try {\n      on = this.evaluator_.evaluate(expr, response);\n    } catch (err) {\n      // If evaluating the expression yields an error\n      // it is most likely an invalid expression (publisher error).\n      user().error(TAG, err);\n    }\n\n    if (on) {\n      const renderTemplate = this.renderTemplates_(element, response);\n      if (renderTemplate) {\n        return renderTemplate.then(() =>\n          this.applyAuthorizationAttrs_(element, on)\n        );\n      }\n    }\n\n    return this.applyAuthorizationAttrs_(element, on);\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {boolean} on\n   * @return {!Promise}\n   * @private\n   */\n  applyAuthorizationAttrs_(element, on) {\n    const wasOn = !element.hasAttribute('amp-access-hide');\n    if (on == wasOn) {\n      return Promise.resolve();\n    }\n    return this.mutator_.mutateElement(element, () => {\n      if (on) {\n        element.removeAttribute('amp-access-hide');\n      } else {\n        element.setAttribute('amp-access-hide', '');\n      }\n    });\n  }\n\n  /**\n   * Discovers and renders templates.\n   * @param {!Element} element\n   * @param {!JsonObject} response\n   * @return {?Promise}\n   * @private\n   */\n  renderTemplates_(element, response) {\n    const promises = [];\n    const templateElements = element.querySelectorAll('[amp-access-template]');\n    if (templateElements.length > 0) {\n      for (let i = 0; i < templateElements.length; i++) {\n        const p = this.renderTemplate_(\n          element,\n          templateElements[i],\n          response\n        ).catch((error) => {\n          // Ignore the error.\n          dev().error(\n            TAG,\n            'Template failed: ',\n            error,\n            templateElements[i],\n            element\n          );\n        });\n        promises.push(p);\n      }\n    }\n    return promises.length > 0 ? Promise.all(promises) : null;\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {!Element} templateOrPrev\n   * @param {!JsonObject} response\n   * @return {!Promise}\n   * @private\n   */\n  renderTemplate_(element, templateOrPrev, response) {\n    let template = templateOrPrev;\n    let prev = null;\n    if (template.tagName != 'TEMPLATE') {\n      prev = template;\n      template = prev[TEMPLATE_PROP];\n    }\n    if (!template) {\n      return Promise.reject(new Error('template not found'));\n    }\n\n    const rendered = this.templates_.renderTemplate(template, response);\n    return rendered.then((element) => {\n      return this.vsync_.mutatePromise(() => {\n        element.setAttribute('amp-access-template', '');\n        element[TEMPLATE_PROP] = template;\n        if (template.parentElement) {\n          template.parentElement.replaceChild(element, template);\n        } else if (prev && prev.parentElement) {\n          prev.parentElement.replaceChild(element, prev);\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {time} timeToView\n   * @private\n   */\n  scheduleView_(timeToView) {\n    if (!this.sources_.some((s) => s.getAdapter().isPingbackEnabled())) {\n      return;\n    }\n    this.reportViewPromise_ = null;\n    this.ampdoc.whenReady().then(() => {\n      if (this.ampdoc.isVisible()) {\n        this.reportWhenViewed_(timeToView);\n      }\n      this.ampdoc.onVisibilityChanged(() => {\n        if (this.ampdoc.isVisible()) {\n          this.reportWhenViewed_(timeToView);\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {time} timeToView\n   * @return {!Promise}\n   * @private\n   */\n  reportWhenViewed_(timeToView) {\n    if (this.reportViewPromise_) {\n      return this.reportViewPromise_;\n    }\n    dev().fine(TAG, 'start view monitoring');\n    this.reportViewPromise_ = this.whenViewed_(timeToView)\n      .then(() => {\n        // Wait for the most recent authorization flow to complete.\n        return this.lastAuthorizationPromises_;\n      })\n      .then(() => {\n        // Report the analytics event.\n        this.analyticsEvent_('access-viewed');\n        return this.reportViewToServer_();\n      })\n      .catch((reason) => {\n        // Ignore - view has been canceled.\n        dev().fine(TAG, 'view cancelled:', reason);\n        this.reportViewPromise_ = null;\n        throw reason;\n      });\n\n    // Support pre-rendering with metering by possibly hiding content\n    // after view is recorded.\n    this.reportViewPromise_.then(this.broadcastReauthorize_.bind(this));\n\n    return this.reportViewPromise_;\n  }\n\n  /**\n   * The promise will be resolved when a view of this document has occurred. It\n   * will be rejected if the current impression should not be counted as a view.\n   * @param {time} timeToView Pass the value of 0 when this method is called\n   *   as the result of the user action.\n   * @return {!Promise}\n   * @private\n   */\n  whenViewed_(timeToView) {\n    if (timeToView == 0) {\n      // Immediate view has been registered. This will happen when this method\n      // is called as the result of the user action.\n      return Promise.resolve();\n    }\n\n    // Viewing kick off: document is visible.\n    const unlistenSet = [];\n    return new Promise((resolve, reject) => {\n      // 1. Document becomes invisible again: cancel.\n      unlistenSet.push(\n        this.ampdoc.onVisibilityChanged(() => {\n          if (!this.ampdoc.isVisible()) {\n            reject(cancellation());\n          }\n        })\n      );\n\n      // 2. After a few seconds: register a view.\n      const timeoutId = this.timer_.delay(resolve, timeToView);\n      unlistenSet.push(() => this.timer_.cancel(timeoutId));\n\n      // 3. If scrolled: register a view.\n      unlistenSet.push(this.viewport_.onScroll(resolve));\n\n      // 4. Tap: register a view.\n      unlistenSet.push(listenOnce(this.ampdoc.getRootNode(), 'click', resolve));\n    }).then(\n      () => {\n        unlistenSet.forEach((unlisten) => unlisten());\n      },\n      (reason) => {\n        unlistenSet.forEach((unlisten) => unlisten());\n        throw reason;\n      }\n    );\n  }\n\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  reportViewToServer_() {\n    const promises = [];\n    for (let i = 0; i < this.sources_.length; i++) {\n      if (this.sources_[i].getAdapter().isPingbackEnabled()) {\n        promises.push(this.sources_[i].reportViewToServer());\n      }\n    }\n    return Promise.all(promises);\n  }\n\n  /**\n   * @param {string} className\n   * @param {boolean} on\n   * @private\n   */\n  toggleTopClass_(className, on) {\n    this.vsync_.mutate(() => {\n      this.getRootElement_().classList.toggle(className, on);\n    });\n  }\n\n  /**\n   * @param {!../../../src/service/action-impl.ActionInvocation} invocation\n   * @return {?Promise}\n   * @private\n   */\n  handleAction_(invocation) {\n    if (!invocation.satisfiesTrust(ActionTrust.DEFAULT)) {\n      return null;\n    }\n    if (invocation.method == 'login') {\n      if (invocation.event) {\n        invocation.event.preventDefault();\n      }\n      this.loginWithType_('');\n    } else if (invocation.method.startsWith('login-')) {\n      if (invocation.event) {\n        invocation.event.preventDefault();\n      }\n      this.loginWithType_(invocation.method.substring('login-'.length));\n    } else if (invocation.method == 'refresh') {\n      if (invocation.event) {\n        invocation.event.preventDefault();\n      }\n      this.runAuthorization_();\n    }\n    return null;\n  }\n\n  /**\n   * Expose the underlying AccessSource for use by laterpay.\n   * @param {number} index\n   * @return {!AccessSource}\n   */\n  getSource(index) {\n    userAssert(\n      index >= 0 && index < this.sources_.length,\n      'Invalid index: %d',\n      index\n    );\n    return this.sources_[index];\n  }\n\n  /**\n   * Runs the login flow using one of the predefined urls in the amp-access\n   * config\n   *\n   * @private\n   * @param {string} type Type of login defined in the config\n   * @return {!Promise}\n   */\n  loginWithType_(type) {\n    const splitPoint = type.indexOf('-');\n    const singleSource = this.sources_.length == 1;\n\n    // Try to find a matching namespace\n    const namespace = splitPoint > -1 ? type.substring(0, splitPoint) : type;\n    const match = this.sources_.filter((s) => s.getNamespace() == namespace);\n    if (match.length) {\n      // Matching namespace found\n      const remaining = splitPoint > -1 ? type.substring(splitPoint + 1) : '';\n      return match[0].loginWithType(remaining);\n    }\n\n    // If there is only one source, process as standalone\n    userAssert(singleSource, 'Login must match namespace: %s', namespace);\n    return this.sources_[0].loginWithType(type);\n  }\n\n  /**\n   * Either combine namespaced responses or just return the single one.\n   *\n   * @return {!JsonObject}\n   */\n  combinedResponses() {\n    if (this.sources_.length == 1 && !this.sources_[0].getNamespace()) {\n      return /** @type {!JsonObject} */ (\n        this.sources_[0].getAuthResponse() || {}\n      );\n    }\n\n    const combined = /** @type {!JsonObject} */ ({});\n    this.sources_.forEach(\n      (source) => (combined[source.getNamespace()] = source.getAuthResponse())\n    );\n    return combined;\n  }\n}\n\n// Register the extension services.\nAMP.extension(TAG, '0.1', function (AMP) {\n  AMP.registerServiceForDoc('access', function (ampdoc) {\n    return new AccessService(ampdoc).start_();\n  });\n});\n\n/**\n * @package Visible for testing only.\n * @return {typeof AccessVars}\n */\nexport function getAccessVarsClassForTesting() {\n  return AccessVars;\n}\n"],
  "mappings": "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",
  "names": []
}
