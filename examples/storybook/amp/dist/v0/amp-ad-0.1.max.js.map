{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../ads/google/a4a/shared/content-recommendation.js", "../../src/core/types/array.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/core/types/function/index.js", "../../src/config.js", "../../src/log.js", "../../ads/google/utils.js", "../../src/experiments/ads-initial-intersection-exp.js", "../../src/core/window/index.js", "../../src/service.js", "../../src/core/minified-mode.js", "../../src/core/assert/dev.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/css-selectors.js", "../../src/core/dom/query.js", "../../src/dom.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../src/style.js", "../../src/ad-helper.js", "../../src/core/dom/event-helper-listen.js", "../../src/event-helper.js", "../../extensions/amp-ad/0.1/amp-ad-ui.js", "../../src/core/types/object/json.js", "../../src/3p-frame-messaging.js", "../../src/core/constants/common-signals.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../src/iframe-helper.js", "../../src/viewport-observer.js", "../../src/core/math/layout-rect.js", "../../src/utils/intersection.js", "../../extensions/amp-ad/0.1/legacy-ad-intersection-observer-host.js", "../../src/core/dom/get-html.js", "../../src/experiments/index.js", "../../src/core/dom/fingerprint.js", "../../src/consent.js", "../../ads/_config.js", "../../src/ad-cid.js", "../../src/core/dom/page-layout-box.js", "../../src/service/variable-source.js", "../../ads/google/a4a/utils.js", "../../src/analytics.js", "../../src/error-reporting.js", "../../extensions/amp-ad/0.1/amp-ad-xorigin-iframe-handler.js", "../../src/layout.js", "../../src/core/math/index.js", "../../extensions/amp-ad/0.1/concurrent-load.js", "../../src/mode-object.js", "../../src/iframe-attributes.js", "../../src/core/3p-frame.js", "../../src/3p-frame.js", "../../extensions/amp-ad/0.1/amp-ad-3p-impl.js", "../../extensions/amp-ad/0.1/amp-ad-custom.js", "../../build/amp-ad-0.1.css.js", "../../ads/_a4a-config.js", "../../extensions/amp-ad/0.1/amp-ad.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview CoRe responsive functions that are shared with Google tag code.\n * This file must not depend on any AMP-specific libraries, e.g. log. If\n * there is a need to pass any things for logging/reporting - the values\n * must be returned from exported functions.\n */\n\n/**\n * Layout types for Content Recommendation responsive.\n * @enum {string}\n */\nexport const LayoutType = {\n  IMAGE_STACKED: 'image_stacked',\n  IMAGE_SIDEBYSIDE: 'image_sidebyside',\n  MOBILE_BANNER_IMAGE_SIDEBYSIDE: 'mobile_banner_image_sidebyside',\n  PUB_CONTROL_IMAGE_STACKED: 'pub_control_image_stacked',\n  PUB_CONTROL_IMAGE_SIDEBYSIDE: 'pub_control_image_sidebyside',\n  PUB_CONTROL_IMAGE_CARD_STACKED: 'pub_control_image_card_stacked',\n  PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE: 'pub_control_image_card_sidebyside',\n  PUB_CONTROL_TEXT: 'pub_control_text',\n  PUB_CONTROL_TEXT_CARD: 'pub_control_text_card',\n  PEDESTAL: 'pedestal',\n};\n\n/**\n * The external name of Core Pub Control UI pub vars, which are used by\n * publishers directly.\n * @enum {string}\n */\nexport const ExternalCorePubVars = {\n  UI_TYPE: 'data-matched-content-ui-type',\n  COLUMNS_NUM: 'data-matched-content-columns-num',\n  ROWS_NUM: 'data-matched-content-rows-num',\n};\n\n/**\n * Minimum width of desktop responsive slot in CoRe responsive. We have\n * different logic for desktop and mobile slots. Any slot width equal or larger\n * than this will be adapted to the desktop logic while any slot width smaller\n * than this will be adapted to the mobile logic.\n * @const {number}\n */\nexport const MIN_PUB_CONTROL_WIDTH_OF_DESKTOP = 468;\n\n/**\n * The px padding.\n * @const {number}\n */\nconst PADDING = 8;\n\n/**\n * The maximum dimension for CoRe Pub Control UI layout.\n * @const {number}\n */\nconst MAX_PUB_CONTROL_DIMENSION = 1500;\n\n/**\n * The layout - aspect ratio map to calculate the size of each content\n * recommendation.\n * image_stacked: https://screenshot.googleplex.com/74S09gFO82b\n * image_sidebyside: https://screenshot.googleplex.com/FUgDSDvwcVo\n * image_card_stacked: https://screenshot.googleplex.com/vedjTonVaDT\n * image_card_sidebyside: https://screenshot.googleplex.com/v3qOZY61tFm\n * text: https://screenshot.googleplex.com/taeRQn7DUhq\n * text_card: https://screenshot.googleplex.com/ur45m96Tv0D\n * @const {!Object<!LayoutType, number>}\n */\nconst LAYOUT_ASPECT_RATIO_MAP = {\n  [LayoutType.IMAGE_STACKED]: 1 / 1.91,\n  [LayoutType.IMAGE_SIDEBYSIDE]: 1 / 3.82,\n  [LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE]: 1 / 3.82,\n  [LayoutType.PUB_CONTROL_IMAGE_STACKED]: 1 / 1.91,\n  [LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE]: 1 / 3.82,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED]: 1 / 1.91,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE]: 1 / 3.74,\n  [LayoutType.PUB_CONTROL_TEXT]: 0,\n  [LayoutType.PUB_CONTROL_TEXT_CARD]: 0,\n};\n\n/**\n * The layout - height map to evaluate the height of title + url. Notice, this\n * mainly works only for stacked mode. In sidebyside mode, this height is\n * decided by the height of image. It equals to:\n * FontSize * LineHeight * NumTitle + Padding * 2 + UrlBoxHeight.\n * image_stacked: https://screenshot.googleplex.com/74S09gFO82b\n * image_card_stacked: https://screenshot.googleplex.com/vedjTonVaDT\n * @const {!Object<!LayoutType, number>}\n */\nconst LAYOUT_TEXT_HEIGHT_MAP = {\n  [LayoutType.IMAGE_STACKED]: 80,\n  [LayoutType.IMAGE_SIDEBYSIDE]: 0,\n  [LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE]: 0,\n  [LayoutType.PUB_CONTROL_IMAGE_STACKED]: 80,\n  [LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE]: 0,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED]: 85,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE]: 0,\n  [LayoutType.PUB_CONTROL_TEXT]: 80,\n  [LayoutType.PUB_CONTROL_TEXT_CARD]: 80,\n};\n\n/**\n * The layout - minimal width map for pub control UIs. We will adjust column\n * numbers according to minimal width.\n * @const {!Object<!LayoutType, number>}\n */\nconst LAYOUT_AD_WIDTH_MAP = {\n  [LayoutType.PUB_CONTROL_IMAGE_STACKED]: 100,\n  [LayoutType.PUB_CONTROL_IMAGE_SIDEBYSIDE]: 200,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_STACKED]: 150,\n  [LayoutType.PUB_CONTROL_IMAGE_CARD_SIDEBYSIDE]: 250,\n  [LayoutType.PUB_CONTROL_TEXT]: 100,\n  [LayoutType.PUB_CONTROL_TEXT_CARD]: 150,\n};\n\nconst PUB_CONTROL_LAYOUT_PREFIX = 'pub_control_';\n\nconst PUB_CONTROL_EXAMPLE =\n  '\\n ' +\n  'data-matched-content-rows-num=\"4,2\"\\n' +\n  'data-matched-content-columns-num=\"1,6\"\\n' +\n  'data-matched-content-ui-type=\"image_stacked,image_card_sidebyside\"';\n\n/**\n * Configuration of content recommendation unit for current slot. This is the\n * result of running CoRe responsive logic and values from this config\n * will be used in ad request.\n * @record\n */\nexport class CoReConfig {\n  /** see comment on class */\n  constructor() {\n    /** @const {number} */\n    this.slotWidth;\n\n    /** @const {number} */\n    this.slotHeight;\n\n    /**\n     * Number of rows to return in matched content unit. Corresponds to\n     * \"cr_col\" url param.\n     * @const {number}\n     */\n    this.numberOfRows;\n\n    /**\n     * Number of columns to return in matched content unit. Corresponds to\n     * \"cr_row\" url param.\n     * @const {number}\n     */\n    this.numberOfColumns;\n\n    /**\n     * Layout type to use for currect matched content slot. Corresponds to\n     * \"crui\" url param.\n     * @const {!LayoutType}\n     */\n    this.layoutType;\n\n    /**\n     * If not null then it contains an error that some of the provided\n     * parameters are incorrect. The error is intended to be displayed to\n     * developers who setup ad tag. For example it can displayed in console\n     * or thrown as js error. If validation is set other params should be\n     * ignored.\n     * @const {string|undefined}\n     */\n    this.validationError;\n  }\n}\n\n/**\n * @param {number} availableWidth\n * @param {boolean} isMobile\n * @return {!CoReConfig}\n */\nexport function getAutoConfig(availableWidth, isMobile) {\n  if (availableWidth < MIN_PUB_CONTROL_WIDTH_OF_DESKTOP) {\n    if (isMobile) {\n      const layoutType = LayoutType.MOBILE_BANNER_IMAGE_SIDEBYSIDE;\n      const numColumns = 1;\n      const numRows = 12;\n      const slotSize = getLargerAdOneColumnSidebysideSize(\n        availableWidth,\n        layoutType,\n        numColumns,\n        numRows\n      );\n      return {\n        slotWidth: slotSize.width,\n        slotHeight: slotSize.height,\n        numberOfColumns: numColumns,\n        numberOfRows: numRows,\n        layoutType,\n      };\n    } else {\n      const slotSize = getAutoSlotSize(availableWidth);\n      return {\n        slotWidth: slotSize.width,\n        slotHeight: slotSize.height,\n        numberOfColumns: 1,\n        numberOfRows: 13,\n        layoutType: LayoutType.IMAGE_SIDEBYSIDE,\n      };\n    }\n  } else {\n    const slotSize = getAutoSlotSize(availableWidth);\n    return {\n      slotWidth: slotSize.width,\n      slotHeight: slotSize.height,\n      numberOfColumns: 4,\n      numberOfRows: 2,\n      layoutType: LayoutType.IMAGE_STACKED,\n    };\n  }\n}\n\n/**\n * Parameters for matched content unit provided pub publisher. These\n * parameters are read from ad tag. These are unparsed parameters so they\n * might be invalid.\n *\n * @typedef {{\n *   numberOfRows: (string|undefined),\n *   numberOfColumns: (string|undefined),\n *   layoutType: (string|undefined),\n * }}\n */\nexport let RawPublisherControlParams;\n\n/**\n * Get CoRe Pub Control UI Sizes.\n * @param {number} availableWidth\n * @param {!RawPublisherControlParams} rawPubControlParams\n * @return {!CoReConfig}\n */\nexport function getPubControlConfig(availableWidth, rawPubControlParams) {\n  const pubParams = validateAndParsePubControlParams(rawPubControlParams);\n  if (pubParams.validationError) {\n    return {\n      slotWidth: 0,\n      slotHeight: 0,\n      numberOfColumns: 0,\n      numberOfRows: 0,\n      // set any layout, doesn't matter because it's error and it won't be used\n      // anyway\n      layoutType: LayoutType.IMAGE_STACKED,\n      validationError: pubParams.validationError,\n    };\n  }\n\n  let index;\n  if (\n    pubParams.layoutTypes.length === 2 &&\n    availableWidth >= MIN_PUB_CONTROL_WIDTH_OF_DESKTOP\n  ) {\n    // Publisher provided settings for both mobile and desktop and screen is\n    // wide - use desktop.\n    index = 1;\n  } else {\n    // Either publisher provided only one setting or screen is small so use\n    // first setting.\n    index = 0;\n  }\n\n  const layout = convertToPubControlLayoutType(pubParams.layoutTypes[index]);\n  const numColumns = getOptimizedNumColumns(\n    availableWidth,\n    pubParams.numberOfColumns[index],\n    layout\n  );\n  const numRows = pubParams.numberOfRows[index];\n\n  const slotSize = getPubControlSlotSize(\n    availableWidth,\n    numColumns,\n    numRows,\n    layout\n  );\n  if (slotSize.sizeError) {\n    return {\n      slotWidth: 0,\n      slotHeight: 0,\n      numberOfColumns: 0,\n      numberOfRows: 0,\n      layoutType: layout,\n      validationError: slotSize.sizeError,\n    };\n  }\n  return {\n    slotWidth: slotSize.width,\n    slotHeight: slotSize.height,\n    numberOfColumns: numColumns,\n    numberOfRows: numRows,\n    layoutType: layout,\n  };\n}\n\n/**\n * Validates and parses parameters that publisher specified on the ad tag via\n * data-matched-content-foo attributes.\n * @param {!RawPublisherControlParams} params\n * @return {{\n *   numberOfRows: (!Array<number>|undefined),\n *   numberOfColumns: (!Array<number>|undefined),\n *   layoutTypes: (!Array<!LayoutType>|undefined),\n *   validationError: (string|undefined),\n * }} parsed params or null if they were invalid.\n */\nfunction validateAndParsePubControlParams(params) {\n  // Verify that either all three parameters passed or none.\n  let numberOfPubControlParams = 0;\n  if (params.layoutType) {\n    numberOfPubControlParams++;\n  }\n  if (params.numberOfColumns) {\n    numberOfPubControlParams++;\n  }\n  if (params.numberOfRows) {\n    numberOfPubControlParams++;\n  }\n  if (numberOfPubControlParams < 3) {\n    return {\n      validationError: `Tags ${ExternalCorePubVars.UI_TYPE}, ${ExternalCorePubVars.COLUMNS_NUM} and ${ExternalCorePubVars.ROWS_NUM} should be set together.`,\n    };\n  }\n\n  const /** !Array<!LayoutType> */ layoutTypes = params.layoutType.split(',');\n  const /** !Array<string> */ numberOfRows = params.numberOfRows.split(',');\n  const /** !Array<string> */ numberOfColumns =\n      params.numberOfColumns.split(',');\n\n  // Check all params have same length.\n  if (\n    layoutTypes.length !== numberOfRows.length ||\n    layoutTypes.length !== numberOfColumns.length\n  ) {\n    return {\n      validationError: `Lengths of parameters ${ExternalCorePubVars.UI_TYPE}, ${ExternalCorePubVars.COLUMNS_NUM} and ${ExternalCorePubVars.ROWS_NUM} must match. Example: ${PUB_CONTROL_EXAMPLE}`,\n    };\n  }\n\n  if (layoutTypes.length > 2) {\n    return {\n      validationError:\n        `The parameter length of attribute ${ExternalCorePubVars.UI_TYPE}, ${ExternalCorePubVars.COLUMNS_NUM} and ${ExternalCorePubVars.ROWS_NUM} is too long. At most 2 parameters for each ` +\n        'attribute are needed: one for mobile and one for desktop, while ' +\n        `you are providing ${layoutTypes.length} parameters. Example: ${PUB_CONTROL_EXAMPLE}.`,\n    };\n  }\n\n  const /** !Array<number> */ numberOfRowsAsNumbers = [];\n  const /** !Array<number> */ numberOfColumnsAsNumbers = [];\n  for (let i = 0; i < layoutTypes.length; i++) {\n    const row = Number(numberOfRows[i]);\n    if (isNaN(row) || row === 0) {\n      return {\n        validationError: `Wrong value '${numberOfRows[i]}' for ${ExternalCorePubVars.ROWS_NUM}.`,\n      };\n    }\n    numberOfRowsAsNumbers.push(row);\n    const col = Number(numberOfColumns[i]);\n    if (isNaN(col) || col === 0) {\n      return {\n        validationError: `Wrong value '${numberOfColumns[i]}' for ${ExternalCorePubVars.COLUMNS_NUM}.`,\n      };\n    }\n    numberOfColumnsAsNumbers.push(col);\n  }\n  return {\n    numberOfRows: numberOfRowsAsNumbers,\n    numberOfColumns: numberOfColumnsAsNumbers,\n    layoutTypes,\n  };\n}\n\n/**\n * @param {number} availableWidth\n * @return {{width: number, height: number}}\n */\nfunction getAutoSlotSize(availableWidth) {\n  if (availableWidth >= 1200) {\n    return {width: 1200, height: 600};\n  } else if (availableWidth >= 850) {\n    return {width: availableWidth, height: Math.floor(availableWidth * 0.5)};\n  } else if (availableWidth >= 550) {\n    return {width: availableWidth, height: Math.floor(availableWidth * 0.6)};\n  } else if (availableWidth >= 468) {\n    return {width: availableWidth, height: Math.floor(availableWidth * 0.7)};\n  } else {\n    return {width: availableWidth, height: Math.floor(availableWidth * 3.44)};\n  }\n}\n\n/**\n * Calculate the ad height according to the layout and ad width.\n * @param {number} adWidth\n * @param {!LayoutType} layout\n * @return {number}\n */\nfunction getAdHeight(adWidth, layout) {\n  return (\n    adWidth * LAYOUT_ASPECT_RATIO_MAP[layout] + LAYOUT_TEXT_HEIGHT_MAP[layout]\n  );\n}\n\n/**\n * Calculate the core width according to the slot width and number\n * of columns.\n * @param {number} slotWidth\n * @param {number} numColumns\n * @return {number}\n */\nfunction getAdWidth(slotWidth, numColumns) {\n  return (slotWidth - PADDING * numColumns - PADDING) / numColumns;\n}\n\n/**\n * Calculate the core slot height according to the core height and\n * number of rows.\n * @param {number} adHeight\n * @param {number} numRows\n * @return {number}\n */\nfunction getSlotHeight(adHeight, numRows) {\n  return Math.floor(adHeight * numRows + PADDING * numRows + PADDING);\n}\n\n/**\n * Calculate the slot size for Pub Control UI.\n * @param {number} slotWidth\n * @param {number} numColumns\n * @param {number} numRows\n * @param {!LayoutType} layout\n * @return {{\n *   width: number,\n *   height: number,\n *   sizeError: (string|undefined),\n * }}\n */\nfunction getPubControlSlotSize(slotWidth, numColumns, numRows, layout) {\n  const adWidth = getAdWidth(slotWidth, numColumns);\n  const adHeight = getAdHeight(adWidth, layout);\n  const slotHeight = getSlotHeight(adHeight, numRows);\n\n  if (slotWidth > MAX_PUB_CONTROL_DIMENSION) {\n    return {\n      width: 0,\n      height: 0,\n      sizeError: 'Calculated slot width is too large: ' + slotWidth,\n    };\n  }\n  if (slotHeight > MAX_PUB_CONTROL_DIMENSION) {\n    return {\n      width: 0,\n      height: 0,\n      sizeError: 'Calculated slot height is too large: ' + slotHeight,\n    };\n  }\n\n  return {width: slotWidth, height: slotHeight};\n}\n\n/**\n * @param {number} availableWidth\n * @param {!LayoutType} layoutType\n * @param {number} numColumns\n * @param {number} numRows\n * @return {{width: number, height: number}}\n */\nfunction getLargerAdOneColumnSidebysideSize(\n  availableWidth,\n  layoutType,\n  numColumns,\n  numRows\n) {\n  const adWidth = getAdWidth(availableWidth, numColumns);\n  // The title height of first ad slot 70px, should be consistent with what we\n  // define in rendering js.\n  const firstAdHeight = Math.floor(adWidth / 1.91 + 70);\n  const restAdHeight = getAdHeight(adWidth, layoutType);\n  const slotHeight = firstAdHeight + getSlotHeight(restAdHeight, numRows - 1);\n\n  return {width: availableWidth, height: slotHeight};\n}\n\n/**\n * Adds 'pub_control_' prefix to Pub Control UI layout name if the layout name\n * does not have 'pub_control_' prefix. This is to differentiate Pub Control UI\n * from responsive auto UI.\n * @param {!LayoutType} layout\n * @return {!LayoutType} the new layout name with 'pub_control_' prefix.\n */\nfunction convertToPubControlLayoutType(layout) {\n  return layout.indexOf(PUB_CONTROL_LAYOUT_PREFIX) === 0\n    ? layout\n    : /** @type {!LayoutType} */ (PUB_CONTROL_LAYOUT_PREFIX + layout);\n}\n\n/**\n * Gets optimized number of columns. If the publisher specified value of\n * 'data-matched-content-columns-num' is too large, it may result in a very\n * small ad width and broken layout. We will adjust the column number to ensure\n * that ad width is larger than certain threshold and print out some warning\n * message to the console.\n * @param {number} availableWidth\n * @param {number} numColumns\n * @param {!LayoutType} layout\n * @return {number} optimized number of columns\n */\nfunction getOptimizedNumColumns(availableWidth, numColumns, layout) {\n  const minWidth = LAYOUT_AD_WIDTH_MAP[layout];\n  let optimizedNumColumns = numColumns;\n  while (\n    availableWidth / optimizedNumColumns < minWidth &&\n    optimizedNumColumns > 1\n  ) {\n    optimizedNumColumns--;\n  }\n  return optimizedNumColumns;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @fileoverview Helpers to wrap functions. */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function throttle(win, callback, minInterval) {\n  let locker = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {!Object} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    // Lock the fire for minInterval milliseconds\n    locker = win.setTimeout(waiter, minInterval);\n\n    callback.apply(null, args);\n  }\n\n  /**\n   * Waiter function\n   */\n  function waiter() {\n    locker = 0;\n    // If during the period there're invocations queued up, fire once.\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function debounce(win, callback, minInterval) {\n  let locker = 0;\n  let timestamp = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {?Array} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n\n  /**\n   * Wait function for debounce\n   */\n  function waiter() {\n    locker = 0;\n    const remaining = minInterval - (win.Date.now() - timestamp);\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    timestamp = win.Date.now();\n    nextCallArgs = args;\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ExternalCorePubVars,\n  MIN_PUB_CONTROL_WIDTH_OF_DESKTOP,\n  getAutoConfig,\n  getPubControlConfig,\n} from './a4a/shared/content-recommendation.js';\nimport {user} from '../../src/log';\n\n/**\n * Approved height for AdSense full-width responsive ads.\n * @const {number}\n */\nexport const ADSENSE_RSPV_ALLOWED_HEIGHT = 320;\n\n/**\n * The attribute value for AdSense data-auto-format tag.\n * For full-width responsive ad: data-auto-format='rspv'.\n * For full-width matched content responsive ad: data-auto-format='mcrspv'\n * @const {string}\n */\nexport const ADSENSE_RSPV_TAG = 'rspv';\nexport const ADSENSE_MCRSPV_TAG = 'mcrspv';\n\n/**\n * Given the amp-ad data attribute containing the multi-size dimensions, and a\n * set of primary dimensions, this function will return all valid multi-size\n * [width, height] pairs in an array.\n *\n * @param {string} multiSizeDataStr The amp-ad data attribute containing the\n *   multi-size dimensions.\n * @param {number} primaryWidth The primary width of the ad slot.\n * @param {number} primaryHeight The primary height of the ad slot.\n * @param {boolean} multiSizeValidation A flag that if set to true will enforce\n *   the rule that ensures multi-size dimensions are no less than 2/3rds of\n *   their primary dimension's counterpart.\n * @param {boolean=} isFluidPrimary Indicates whether the ad slot's primary\n *   size is fluid.\n * @return {?Array<!Array<number>>} An array of dimensions.\n */\nexport function getMultiSizeDimensions(\n  multiSizeDataStr,\n  primaryWidth,\n  primaryHeight,\n  multiSizeValidation,\n  isFluidPrimary = false\n) {\n  const dimensions = [];\n  const arrayOfSizeStrs = multiSizeDataStr.split(',');\n\n  for (let i = 0; i < arrayOfSizeStrs.length; i++) {\n    const sizeStr = arrayOfSizeStrs[i];\n    if (sizeStr.toLowerCase() == 'fluid') {\n      // Fluid dummy sizes should be appended to the front of the request\n      // parameter, so they must be handled elsewhere.\n      continue;\n    }\n    const size = sizeStr.split('x');\n\n    // Make sure that each size is specified in the form WxH.\n    if (size.length != 2) {\n      user().error('AMP-AD', `Invalid multi-size data format '${sizeStr}'.`);\n      continue;\n    }\n\n    const width = Number(size[0]);\n    const height = Number(size[1]);\n\n    // Make sure that both dimensions given are positive numbers.\n    if (\n      !validateDimensions(\n        width,\n        height,\n        (w) => isNaN(w) || w <= 0,\n        (h) => isNaN(h) || h <= 0,\n        (badParams) =>\n          badParams\n            .map(\n              (badParam) =>\n                `Invalid ${badParam.dim} of ${badParam.val} ` +\n                'given for secondary size.'\n            )\n            .join(' ')\n      )\n    ) {\n      continue;\n    }\n\n    // Check that secondary size is not larger than primary size.\n    if (\n      !isFluidPrimary &&\n      !validateDimensions(\n        width,\n        height,\n        (w) => w > primaryWidth,\n        (h) => h > primaryHeight,\n        (badParams) =>\n          badParams\n            .map(\n              (badParam) =>\n                `Secondary ${badParam.dim} ${badParam.val} ` +\n                `can't be larger than the primary ${badParam.dim}.`\n            )\n            .join(' ')\n      )\n    ) {\n      continue;\n    }\n\n    // Check that if multi-size-validation is on, that the secondary sizes\n    // are at least minRatio of the primary size.\n    if (multiSizeValidation) {\n      // The minimum ratio of each secondary dimension to its corresponding\n      // primary dimension.\n      const minRatio = 2 / 3;\n      const minWidth = minRatio * primaryWidth;\n      const minHeight = minRatio * primaryHeight;\n      if (\n        !validateDimensions(\n          width,\n          height,\n          (w) => w < minWidth,\n          (h) => h < minHeight,\n          (badParams) =>\n            badParams\n              .map(\n                (badParam) =>\n                  `Secondary ${badParam.dim} ${badParam.val} is ` +\n                  `smaller than 2/3rds of the primary ${badParam.dim}.`\n              )\n              .join(' ')\n        )\n      ) {\n        continue;\n      }\n    }\n\n    // Passed all checks! Push additional size to dimensions.\n    dimensions.push([width, height]);\n  }\n\n  return dimensions;\n}\n\n/**\n * A helper function for determining whether a given width or height violates\n * some condition.\n *\n * Checks the width and height against their corresponding conditions. If\n * either of the conditions fail, the errorBuilder function will be called with\n * the appropriate arguments, its result will be logged to user().error, and\n * validateDimensions will return false. Otherwise, validateDimensions will\n * only return true.\n *\n * @param {(number|string)} width\n * @param {(number|string)} height\n * @param {function((number|string)): boolean} widthCond\n * @param {function((number|string)): boolean} heightCond\n * @param {function(!Array<{dim: string, val: (number|string)}>): string=} errorBuilder\n * A function that will produce an informative error message.\n * @return {boolean}\n */\nfunction validateDimensions(\n  width,\n  height,\n  widthCond,\n  heightCond,\n  errorBuilder\n) {\n  const badParams = [];\n  if (widthCond(width)) {\n    badParams.push({dim: 'width', val: width});\n  }\n  if (heightCond(height)) {\n    badParams.push({dim: 'height', val: height});\n  }\n  if (badParams.length) {\n    user().warn('AMP-AD', errorBuilder(badParams));\n  }\n  return !badParams.length;\n}\n\n/**\n * Calculates height of responsive matched content slot based on its width.\n * This logic should be kept as close to possible to the logic inside\n * adsbygoogle.js.\n *\n * @param {number} availableWidth\n * @param {!Element} element <amp-ad> tag which contains publisher settings\n *     if any.\n * @return {number} height to use for the matched content slot.\n */\nexport function getMatchedContentResponsiveHeightAndUpdatePubParams(\n  availableWidth,\n  element\n) {\n  const pubControlParams = {\n    numberOfRows: element.getAttribute(ExternalCorePubVars.ROWS_NUM),\n    numberOfColumns: element.getAttribute(ExternalCorePubVars.COLUMNS_NUM),\n    layoutType: element.getAttribute(ExternalCorePubVars.UI_TYPE),\n  };\n  let config;\n  if (\n    pubControlParams.numberOfRows ||\n    pubControlParams.numberOfColumns ||\n    pubControlParams.layoutType\n  ) {\n    // Publisher provided at least 1 param  which means we are in\n    // \"pub controlled matched content\" mode.\n    config = getPubControlConfig(availableWidth, pubControlParams);\n  } else {\n    // Publisher didn't provide any matched content params so use auto mode.\n    config = getAutoConfig(\n      availableWidth,\n      availableWidth <= MIN_PUB_CONTROL_WIDTH_OF_DESKTOP\n    );\n  }\n  if (config.validationError) {\n    user().error('AMP-AD', config.validationError);\n    // There was an error in pub params and we logged it in console.\n    // Return 0 as height to hide slot.\n    return 0;\n  }\n  element.setAttribute(ExternalCorePubVars.ROWS_NUM, config.numberOfRows);\n  element.setAttribute(ExternalCorePubVars.COLUMNS_NUM, config.numberOfColumns);\n  element.setAttribute(ExternalCorePubVars.UI_TYPE, config.layoutType);\n\n  return config.slotHeight;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const */\nexport const ADS_INITIAL_INTERSECTION_EXP = {\n  id: 'ads-initialIntersection',\n  control: '31060065',\n  experiment: '31060066',\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Magic constant that is replaced by babel.\n// IS_MINIFIED is always replaced with true when closure compiler is used\nconst IS_MINIFIED = false;\n\n/**\n * Returns true whenever closure compiler is used.\n * @return {boolean}\n */\nexport function isMinifiedMode() {\n  return IS_MINIFIED;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {isMinifiedMode} from '../minified-mode';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (isMinifiedMode()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../../../third_party/css-escape/css-escape';\nimport {devAssert} from '../assert';\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n * @suppress {uselessCode}\n */\nexport function escapeCssSelectorIdent(ident) {\n  // This gets rewritten to true/false during compilation. It will trigger an\n  // JSC_UNREACHABLE_CODE warning, but that's intentional for DCE.\n  if (IS_ESM) {\n    return CSS.escape(ident);\n  }\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {computedStyle} from './style';\nimport {dev} from './log';\nimport {getParentWindowFrameElement} from './service';\n\nconst AD_CONTAINER_PROP = '__AMP__AD_CONTAINER';\n\n/**\n * Tags that are allowed to have fixed positioning\n * @const {!Object<string, boolean>}\n */\nconst CONTAINERS = {\n  'AMP-FX-FLYING-CARPET': true,\n  'AMP-LIGHTBOX': true,\n  'AMP-STICKY-AD': true,\n  'AMP-LIGHTBOX-GALLERY': true,\n};\n\n/**\n * Determines if an element is fixed-positioned.\n * OK to use, because it's only called from onLayoutMeasure\n * @param {!Element} el\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isPositionFixed(el, win) {\n  const {position} = computedStyle(win, el);\n  // We consider sticky positions as fixed, since they can be fixed.\n  return position == 'fixed' || position == 'sticky';\n}\n\n/**\n * @param {!Element} element\n * @param {!Window} win\n * @return {boolean} whether the element position is allowed. If the element\n * belongs to CONTAINERS, it is allowed to be position fixed.\n * If the element has a position fixed ancestor, it is not allowed.\n * This should only be called when a layout on the page was just forced\n * anyway.\n */\nexport function isAdPositionAllowed(element, win) {\n  let hasFixedAncestor = false;\n  let containers = 0;\n  let el = element;\n  do {\n    if (CONTAINERS[el.tagName]) {\n      // The containers must not themselves be contained in a fixed-position\n      // element. Continue the search.\n      containers++;\n      hasFixedAncestor = false;\n    } else if (isPositionFixed(dev().assertElement(el), win)) {\n      // Because certain blessed elements may contain a position fixed\n      // container (which contain an ad), we continue to search the\n      // ancestry tree.\n      hasFixedAncestor = true;\n    }\n    el = el.parentElement;\n  } while (el && el.tagName != 'BODY');\n  return !hasFixedAncestor && containers <= 1;\n}\n\n/**\n * Returns the blessed container element tagName if the ad is contained by one.\n * This is called during layout measure.\n * @param {!Element} element\n * @return {?string}\n */\nexport function getAdContainer(element) {\n  if (element[AD_CONTAINER_PROP] === undefined) {\n    let el = element.parentElement;\n    while (el && el.tagName != 'BODY') {\n      if (CONTAINERS[el.tagName]) {\n        return (element[AD_CONTAINER_PROP] = el.tagName);\n      }\n      el = el.parentElement;\n    }\n    element[AD_CONTAINER_PROP] = null;\n  }\n  return element[AD_CONTAINER_PROP];\n}\n\n/**\n * Gets the resource ID of the amp-ad element containing the passed node.\n * If there is no containing amp-ad tag, then null will be returned.\n * TODO(jonkeller): Investigate whether non-A4A use case is needed. Issue 11436\n * @param {!Element} node\n * @param {!Window} topWin\n * @return {?string}\n */\nexport function getAmpAdResourceId(node, topWin) {\n  try {\n    const frameParent = getParentWindowFrameElement(node, topWin).parentElement;\n    if (frameParent.nodeName == 'AMP-AD') {\n      return String(frameParent.getResourceId());\n    }\n  } catch (e) {}\n  // Whether we entered the catch above (e.g. due to attempt to access\n  // across xdomain boundary), or failed to enter the if further above, the\n  // node is not within a friendly amp-ad tag. So, there is no amp-ad\n  // resource ID. How to handle that is up to the caller, but see TODO above.\n  return null;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {lastChildElement} from './core/dom/query';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {ancestorElementsByTag} from '../../../src/core/dom/query';\nimport {createElementWithAttributes, removeElement} from '../../../src/dom';\nimport {devAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\n\nimport {getAdContainer} from '../../../src/ad-helper';\nimport {listen} from '../../../src/event-helper';\nimport {setStyle, setStyles} from '../../../src/style';\n\nconst STICKY_AD_MAX_SIZE_LIMIT = 0.2;\nconst STICKY_AD_MAX_HEIGHT_LIMIT = 0.5;\n\nconst TOP_STICKY_AD_CLOSE_THRESHOLD = 50;\nconst TOP_STICKY_AD_TRIGGER_THRESHOLD = 200;\n\n/**\n * Permissible sticky ad options.\n * @const @enum {string}\n */\nconst StickyAdPositions = {\n  TOP: 'top',\n  BOTTOM: 'bottom',\n  BOTTOM_RIGHT: 'bottom-right',\n};\n\nconst STICKY_AD_PROP = 'sticky';\n\nexport class AmpAdUIHandler {\n  /**\n   * @param {!AMP.BaseElement} baseInstance\n   */\n  constructor(baseInstance) {\n    /** @private {!AMP.BaseElement} */\n    this.baseInstance_ = baseInstance;\n\n    /** @private {!Element} */\n    this.element_ = baseInstance.element;\n\n    /** @private @const {!Document} */\n    this.doc_ = baseInstance.win.document;\n\n    this.containerElement_ = null;\n\n    /**\n     * If this is a sticky ad unit, the sticky position option.\n     * @private {?StickyAdPositions}\n     */\n    this.stickyAdPosition_ = null;\n    if (this.element_.hasAttribute(STICKY_AD_PROP)) {\n      // TODO(powerivq@) Kargo is currently running an experiment using empty sticky attribute, so\n      // we default the position to bottom right. Remove this default afterwards.\n      this.stickyAdPosition_ =\n        this.element_.getAttribute(STICKY_AD_PROP) ||\n        StickyAdPositions.BOTTOM_RIGHT;\n      this.element_.setAttribute(STICKY_AD_PROP, this.stickyAdPosition_);\n    }\n\n    /**\n     * Whether the close button has been rendered for a sticky ad unit.\n     */\n    this.closeButtonRendered_ = false;\n\n    /**\n     * For top sticky ads, we close the ads when scrolled to the top.\n     * @private {!Function}\n     */\n    this.topStickyAdScrollListener_ = undefined;\n\n    /**\n     * For top sticky ads, we waited until scrolling down before activating\n     * the closing ads listener.\n     * @private {boolean}\n     */\n    this.topStickyAdCloserAcitve_ = false;\n\n    /**\n     * Unlisteners to be unsubscribed after destroying.\n     * @private {!Array<!Function>}\n     */\n    this.unlisteners_ = [];\n\n    if (this.element_.hasAttribute('data-ad-container-id')) {\n      const id = this.element_.getAttribute('data-ad-container-id');\n      const container = this.doc_.getElementById(id);\n      if (\n        container &&\n        container.tagName == 'AMP-LAYOUT' &&\n        container.contains(this.element_)\n      ) {\n        // Parent <amp-layout> component with reference id can serve as the\n        // ad container\n        this.containerElement_ = container;\n      }\n    }\n\n    if (!baseInstance.getFallback()) {\n      const fallback = this.addDefaultUiComponent_('fallback');\n      if (fallback) {\n        this.baseInstance_.element.appendChild(fallback);\n      }\n    }\n  }\n\n  /**\n   * Apply UI for laid out ad with no-content\n   * Order: try collapse -> apply provided fallback -> apply default fallback\n   */\n  applyNoContentUI() {\n    if (getAdContainer(this.element_) === 'AMP-STICKY-AD') {\n      // Special case: force collapse sticky-ad if no content.\n      this.baseInstance_./*OK*/ collapse();\n      return;\n    }\n\n    if (getAdContainer(this.element_) === 'AMP-FX-FLYING-CARPET') {\n      /**\n       * Special case: Force collapse the ad if it is the,\n       * only and direct child of a flying carpet.\n       * Also, this will not handle\n       * the amp-layout case for now, as it could be\n       * inefficient. And we have not seen an amp-layout\n       * used with flying carpet and ads yet.\n       */\n\n      const flyingCarpetElements = ancestorElementsByTag(\n        this.element_,\n        'amp-fx-flying-carpet'\n      );\n      const flyingCarpetElement = flyingCarpetElements[0];\n\n      flyingCarpetElement.getImpl().then((implementation) => {\n        const children = implementation.getChildren();\n\n        if (children.length === 1 && children[0] === this.element_) {\n          this.baseInstance_./*OK*/ collapse();\n        }\n      });\n      return;\n    }\n\n    let attemptCollapsePromise;\n    if (this.containerElement_) {\n      // Collapse the container element if there's one\n      attemptCollapsePromise = Services.mutatorForDoc(\n        this.element_.getAmpDoc()\n      ).attemptCollapse(this.containerElement_);\n      attemptCollapsePromise.then(() => {});\n    } else {\n      attemptCollapsePromise = this.baseInstance_.attemptCollapse();\n    }\n\n    // The order here is collapse > user provided fallback > default fallback\n    attemptCollapsePromise.catch(() => {\n      this.baseInstance_.mutateElement(() => {\n        this.baseInstance_.togglePlaceholder(false);\n        this.baseInstance_.toggleFallback(true);\n      });\n    });\n  }\n\n  /**\n   * Apply UI for unlaid out ad: Hide fallback.\n   * Note: No need to togglePlaceholder here, unlayout show it by default.\n   */\n  applyUnlayoutUI() {\n    this.baseInstance_.mutateElement(() => {\n      this.baseInstance_.toggleFallback(false);\n    });\n  }\n\n  /**\n   * @param {string} name\n   * @return {?Element}\n   * @private\n   */\n  addDefaultUiComponent_(name) {\n    if (this.element_.tagName == 'AMP-EMBED') {\n      // Do nothing for amp-embed element;\n      return null;\n    }\n    const uiComponent = this.doc_.createElement('div');\n    uiComponent.setAttribute(name, '');\n\n    const content = this.doc_.createElement('div');\n    content.classList.add('i-amphtml-ad-default-holder');\n\n    // TODO(aghassemi, #4146) i18n\n    content.setAttribute('data-ad-holder-text', 'Ad');\n    uiComponent.appendChild(content);\n\n    return uiComponent;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isStickyAd() {\n    return this.stickyAdPosition_ !== null;\n  }\n\n  /**\n   * Initialize sticky ad related features\n   */\n  maybeInitStickyAd() {\n    if (this.isStickyAd()) {\n      setStyle(this.element_, 'visibility', 'visible');\n\n      if (this.stickyAdPosition_ == StickyAdPositions.TOP) {\n        // Let the top sticky ad be below the viewer top.\n        const paddingTop = Services.viewportForDoc(\n          this.element_.getAmpDoc()\n        ).getPaddingTop();\n        setStyle(this.element_, 'top', `${paddingTop}px`);\n      }\n\n      if (this.stickyAdPosition_ == StickyAdPositions.BOTTOM) {\n        const paddingBar = this.doc_.createElement('amp-ad-sticky-padding');\n        this.element_.insertBefore(\n          paddingBar,\n          devAssert(\n            this.element_.firstChild,\n            'amp-ad should have been expanded.'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * Scroll promise for sticky ad\n   * @return {Promise}\n   */\n  getScrollPromiseForStickyAd() {\n    if (this.isStickyAd()) {\n      return new Promise((resolve) => {\n        const unlisten = Services.viewportForDoc(\n          this.element_.getAmpDoc()\n        ).onScroll(() => {\n          resolve();\n          unlisten();\n        });\n      });\n    }\n    return Promise.resolve(null);\n  }\n\n  /**\n   * When a sticky ad is shown, the close button should be rendered at the same time.\n   */\n  onResizeSuccess() {\n    if (this.isStickyAd() && !this.closeButtonRendered_) {\n      this.addCloseButton_();\n      this.closeButtonRendered_ = true;\n    }\n\n    if (this.isStickyAd() && !this.topStickyAdScrollListener_) {\n      const doc = this.element_.getAmpDoc();\n      this.topStickyAdScrollListener_ = Services.viewportForDoc(doc).onScroll(\n        () => {\n          const scrollPos = doc.win./*OK*/ scrollY;\n          if (scrollPos > TOP_STICKY_AD_TRIGGER_THRESHOLD) {\n            this.topStickyAdCloserAcitve_ = true;\n          }\n\n          // When the scroll position is close to the top, we close the\n          // top sticky ad in order not to have the ads overlap the\n          // content.\n          if (\n            this.topStickyAdCloserAcitve_ &&\n            scrollPos < TOP_STICKY_AD_CLOSE_THRESHOLD\n          ) {\n            this.closeStickyAd_();\n          }\n        }\n      );\n      this.unlisteners_.push(this.topStickyAdScrollListener_);\n    }\n  }\n\n  /**\n   * Close the sticky ad\n   */\n  closeStickyAd_() {\n    Services.vsyncFor(this.baseInstance_.win).mutate(() => {\n      const viewport = Services.viewportForDoc(this.element_.getAmpDoc());\n      viewport.removeFromFixedLayer(this.element);\n      removeElement(this.element_);\n      viewport.updatePaddingBottom(0);\n    });\n\n    if (this.topStickyAdScrollListener_) {\n      this.topStickyAdScrollListener_();\n    }\n  }\n\n  /**\n   * The function that add a close button to sticky ad\n   */\n  addCloseButton_() {\n    const closeButton = createElementWithAttributes(\n      /** @type {!Document} */ (this.element_.ownerDocument),\n      'button',\n      dict({\n        'aria-label':\n          this.element_.getAttribute('data-close-button-aria-label') ||\n          'Close this ad',\n      })\n    );\n\n    this.unlisteners_.push(\n      listen(closeButton, 'click', this.closeStickyAd_.bind(this))\n    );\n\n    closeButton.classList.add('amp-ad-close-button');\n    this.element_.appendChild(closeButton);\n  }\n\n  /**\n   * @param {number|string|undefined} height\n   * @param {number|string|undefined} width\n   * @param {number} iframeHeight\n   * @param {number} iframeWidth\n   * @param {!MessageEvent} event\n   * @return {!Promise<!Object>}\n   */\n  updateSize(height, width, iframeHeight, iframeWidth, event) {\n    // Calculate new width and height of the container to include the padding.\n    // If padding is negative, just use the requested width and height directly.\n    let newHeight, newWidth;\n    height = parseInt(height, 10);\n    if (!isNaN(height)) {\n      newHeight = Math.max(\n        this.element_./*OK*/ offsetHeight + height - iframeHeight,\n        height\n      );\n    }\n    width = parseInt(width, 10);\n    if (!isNaN(width)) {\n      newWidth = Math.max(\n        this.element_./*OK*/ offsetWidth + width - iframeWidth,\n        width\n      );\n    }\n\n    /** @type {!Object<boolean, number|undefined, number|undefined>} */\n    const resizeInfo = {\n      success: true,\n      newWidth,\n      newHeight,\n    };\n\n    if (!newHeight && !newWidth) {\n      return Promise.reject(new Error('undefined width and height'));\n    }\n\n    if (getAdContainer(this.element_) == 'AMP-STICKY-AD') {\n      // Special case: force collapse sticky-ad if no content.\n      resizeInfo.success = false;\n      return Promise.resolve(resizeInfo);\n    }\n\n    // Special case: for sticky ads, we enforce 20% size limit and 50% height limit\n    if (this.isStickyAd()) {\n      const viewport = this.baseInstance_.getViewport();\n      if (\n        height * width >\n          STICKY_AD_MAX_SIZE_LIMIT *\n            viewport.getHeight() *\n            viewport.getWidth() ||\n        newHeight > STICKY_AD_MAX_HEIGHT_LIMIT * viewport.getHeight()\n      ) {\n        resizeInfo.success = false;\n        return Promise.resolve(resizeInfo);\n      }\n    }\n    return this.baseInstance_\n      .attemptChangeSize(newHeight, newWidth, event)\n      .then(\n        () => {\n          this.setSize_(this.element_.querySelector('iframe'), height, width);\n          return resizeInfo;\n        },\n        () => {\n          resizeInfo.success = false;\n          return resizeInfo;\n        }\n      );\n  }\n\n  /**\n   * Force set the dimensions for an element\n   * @param {Any} element\n   * @param {number} newHeight\n   * @param {number} newWidth\n   */\n  setSize_(element, newHeight, newWidth) {\n    setStyles(element, {\n      'height': `${newHeight}px`,\n      'width': `${newWidth}px`,\n    });\n  }\n\n  /**\n   * Clean up the listeners\n   */\n  cleanup() {\n    this.unlisteners_.forEach((unlistener) => unlistener());\n    this.unlisteners_.length = 0;\n  }\n}\n\n// Make the class available to other late loaded amp-ad implementations\n// without them having to depend on it directly.\nAMP.AmpAdUIHandler = AmpAdUIHandler;\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isArray} from '../array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {tryParseJson} from './core/types/object/json';\n\n/** @const */\nconst AMP_MESSAGE_PREFIX = 'amp-';\nexport const CONSTANTS = {\n  responseTypeSuffix: '-result',\n  messageIdFieldName: 'messageId',\n  payloadFieldName: 'payload',\n  contentFieldName: 'content',\n};\n\n/** @enum {string} */\nexport const MessageType = {\n  // For amp-ad\n  SEND_EMBED_STATE: 'send-embed-state',\n  EMBED_STATE: 'embed-state',\n  SEND_EMBED_CONTEXT: 'send-embed-context',\n  EMBED_CONTEXT: 'embed-context',\n  SEND_INTERSECTIONS: 'send-intersections',\n  INTERSECTION: 'intersection',\n  EMBED_SIZE: 'embed-size',\n  EMBED_SIZE_CHANGED: 'embed-size-changed',\n  EMBED_SIZE_DENIED: 'embed-size-denied',\n  NO_CONTENT: 'no-content',\n  GET_HTML: 'get-html',\n  GET_CONSENT_STATE: 'get-consent-state',\n  SIGNAL_INTERACTIVE: 'signal-interactive',\n\n  // For the frame to be placed in full overlay mode for lightboxes\n  FULL_OVERLAY_FRAME: 'full-overlay-frame',\n  FULL_OVERLAY_FRAME_RESPONSE: 'full-overlay-frame-response',\n  CANCEL_FULL_OVERLAY_FRAME: 'cancel-full-overlay-frame',\n  CANCEL_FULL_OVERLAY_FRAME_RESPONSE: 'cancel-full-overlay-frame-response',\n\n  // For amp-inabox\n  SEND_POSITIONS: 'send-positions',\n  POSITION: 'position',\n\n  // For amp-analytics' iframe-transport\n  SEND_IFRAME_TRANSPORT_EVENTS: 'send-iframe-transport-events',\n  IFRAME_TRANSPORT_EVENTS: 'iframe-transport-events',\n  IFRAME_TRANSPORT_RESPONSE: 'iframe-transport-response',\n\n  // For user-error-in-iframe\n  USER_ERROR_IN_IFRAME: 'user-error-in-iframe',\n\n  // For amp-iframe\n  SEND_CONSENT_DATA: 'send-consent-data',\n  CONSENT_DATA: 'consent-data',\n};\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Serialize an AMP post message. Output looks like:\n * 'amp-011481323099490{\"type\":\"position\",\"sentinel\":\"12345\",\"foo\":\"bar\"}'\n * @param {string} type\n * @param {string} sentinel\n * @param {JsonObject=} data\n * @param {?string=} rtvVersion\n * @return {string}\n */\nexport function serializeMessage(\n  type,\n  sentinel,\n  data = dict(),\n  rtvVersion = null\n) {\n  // TODO: consider wrap the data in a \"data\" field. { type, sentinal, data }\n  const message = data;\n  message['type'] = type;\n  message['sentinel'] = sentinel;\n  return AMP_MESSAGE_PREFIX + (rtvVersion || '') + JSON.stringify(message);\n}\n\n/**\n * Deserialize an AMP post message.\n * Returns null if it's not valid AMP message format.\n *\n * @param {*} message\n * @return {?JsonObject|undefined}\n */\nexport function deserializeMessage(message) {\n  if (!isAmpMessage(message)) {\n    return null;\n  }\n  const startPos = message.indexOf('{');\n  devAssert(startPos != -1, 'JSON missing in %s', message);\n  return tryParseJson(message.substr(startPos), (e) =>\n    dev().error('MESSAGING', 'Failed to parse message: ' + message, e)\n  );\n}\n\n/**\n *  Returns true if message looks like it is an AMP postMessage\n *  @param {*} message\n *  @return {boolean}\n */\nexport function isAmpMessage(message) {\n  return (\n    typeof message == 'string' &&\n    message.indexOf(AMP_MESSAGE_PREFIX) == 0 &&\n    message.indexOf('{') != -1\n  );\n}\n\n/** @typedef {{creativeId: string, message: string}} */\nexport let IframeTransportEvent;\n// An event, and the transport ID of the amp-analytics tags that\n// generated it. For instance if the creative with transport\n// ID 2 sends \"hi\", then an IframeTransportEvent would look like:\n// { creativeId: \"2\", message: \"hi\" }\n// If the creative with transport ID 2 sent that, and also sent \"hello\",\n// and the creative with transport ID 3 sends \"goodbye\" then an *array* of 3\n// AmpAnalyticsIframeTransportEvent would be sent to the 3p frame like so:\n// [\n//   { creativeId: \"2\", message: \"hi\" }, // An AmpAnalyticsIframeTransportEvent\n//   { creativeId: \"2\", message: \"hello\" }, // Another\n//   { creativeId: \"3\", message: \"goodbye\" } // And another\n// ]\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element's implementation has been registered and ready for upgrade.\n   */\n  READY_TO_UPGRADE: 'ready-upgrade',\n\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has been mounted.\n   */\n  MOUNTED: 'mounted',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './core/data-structures/lru-cache';\nimport {dict, hasOwn} from './core/types/object';\nimport {endsWith} from './core/types/string';\nimport {getMode} from './mode';\nimport {isArray} from './core/types';\nimport {parseQueryString} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {?} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {addAttributesToElement} from './dom';\nimport {closestAncestorElementBySelector} from './core/dom/query';\nimport {deserializeMessage, isAmpMessage} from './3p-frame-messaging';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {getData} from './event-helper';\nimport {parseUrlDeprecated} from './url';\nimport {remove} from './core/types/array';\nimport {setStyle} from './style';\nimport {tryParseJson} from './core/types/object/json';\n\n/**\n * Sentinel used to force unlistening after a iframe is detached.\n * @type {string}\n */\nconst UNLISTEN_SENTINEL = 'unlisten';\n\n/**\n * @typedef {{\n *   frame: !Element,\n *   events: !Object<string, !Array<function(!JsonObject)>>\n * }}\n */\nlet WindowEventsDef;\n\n/**\n * Returns a mapping from a URL's origin to an array of windows and their\n * listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {boolean=} opt_create create the mapping if it does not exist\n * @return {?Object<string, !Array<!WindowEventsDef>>}\n */\nfunction getListenFors(parentWin, opt_create) {\n  let {listeningFors} = parentWin;\n\n  if (!listeningFors && opt_create) {\n    listeningFors = parentWin.listeningFors = Object.create(null);\n  }\n  return listeningFors || null;\n}\n\n/**\n * Returns an array of WindowEventsDef that have had any listenFor listeners\n * registered for this sentinel.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {boolean=} opt_create create the array if it does not exist\n * @return {?Array<!WindowEventsDef>}\n */\nfunction getListenForSentinel(parentWin, sentinel, opt_create) {\n  const listeningFors = getListenFors(parentWin, opt_create);\n  if (!listeningFors) {\n    return listeningFors;\n  }\n\n  let listenSentinel = listeningFors[sentinel];\n  if (!listenSentinel && opt_create) {\n    listenSentinel = listeningFors[sentinel] = [];\n  }\n  return listenSentinel || null;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {!Element} iframe the iframe element who's context will trigger the\n *     event\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getOrCreateListenForEvents(parentWin, iframe, opt_is3P) {\n  const sentinel = getSentinel_(iframe, opt_is3P);\n  const listenSentinel = getListenForSentinel(parentWin, sentinel, true);\n\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    if (we.frame === iframe) {\n      windowEvents = we;\n      break;\n    }\n  }\n\n  if (!windowEvents) {\n    windowEvents = {\n      frame: iframe,\n      events: Object.create(null),\n    };\n    listenSentinel.push(windowEvents);\n  }\n\n  return windowEvents.events;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {string} origin the source window's origin\n * @param {?Window} triggerWin the window that triggered the event\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getListenForEvents(parentWin, sentinel, origin, triggerWin) {\n  const listenSentinel = getListenForSentinel(parentWin, sentinel);\n\n  if (!listenSentinel) {\n    return listenSentinel;\n  }\n\n  // Find the entry for the frame.\n  // TODO(@nekodo): Add a WeakMap<Window, WindowEventsDef> cache to\n  //     speed up this process.\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    const {contentWindow} = we.frame;\n    if (!contentWindow) {\n      setTimeout(dropListenSentinel, 0, listenSentinel);\n    } else if (\n      triggerWin == contentWindow ||\n      isDescendantWindow(contentWindow, triggerWin)\n    ) {\n      // 3p code path, we may accept messages from nested frames.\n      windowEvents = we;\n      break;\n    }\n  }\n\n  return windowEvents ? windowEvents.events : null;\n}\n\n/**\n * Checks whether one window is a descendant of another by climbing\n * the parent chain.\n * @param {?Window} ancestor potential ancestor window\n * @param {?Window} descendant potential descendant window\n * @return {boolean}\n */\nfunction isDescendantWindow(ancestor, descendant) {\n  for (let win = descendant; win && win != win.parent; win = win.parent) {\n    if (win == ancestor) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Removes any listenFors registed on listenSentinel that do not have\n * a contentWindow (the frame was removed from the DOM tree).\n * @param {!Array<!WindowEventsDef>} listenSentinel\n */\nfunction dropListenSentinel(listenSentinel) {\n  const noopData = dict({'sentinel': UNLISTEN_SENTINEL});\n\n  for (let i = listenSentinel.length - 1; i >= 0; i--) {\n    const windowEvents = listenSentinel[i];\n\n    if (!windowEvents.frame.contentWindow) {\n      listenSentinel.splice(i, 1);\n\n      const {events} = windowEvents;\n      for (const name in events) {\n        // Splice here, so that each unlisten does not shift the array\n        events[name].splice(0, Infinity).forEach((event) => {\n          event(noopData);\n        });\n      }\n    }\n  }\n}\n\n/**\n * Registers the global listenFor event listener if it has yet to be.\n * @param {?Window} parentWin\n */\nfunction registerGlobalListenerIfNeeded(parentWin) {\n  if (parentWin.listeningFors) {\n    return;\n  }\n  const listenForListener = function (event) {\n    if (!getData(event)) {\n      return;\n    }\n    const data = parseIfNeeded(getData(event));\n\n    if (!data || !data['sentinel']) {\n      return;\n    }\n\n    const listenForEvents = getListenForEvents(\n      parentWin,\n      data['sentinel'],\n      event.origin,\n      event.source\n    );\n    if (!listenForEvents) {\n      return;\n    }\n\n    let listeners = listenForEvents[data['type']];\n    if (!listeners) {\n      return;\n    }\n\n    // We slice to avoid issues with adding another listener or unlistening\n    // during iteration. We could move to a Doubly Linked List with\n    // backtracking, but that's overly complicated.\n    listeners = listeners.slice();\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i];\n      listener(data, event.source, event.origin, event);\n    }\n  };\n\n  parentWin.addEventListener('message', listenForListener);\n}\n\n/**\n * Allows listening for message from the iframe. Returns an unlisten\n * function to remove the listener.\n *\n * @param {?Element} iframe\n * @param {string} typeOfMessage\n * @param {?function(!JsonObject, !Window, string, !MessageEvent)} callback Called when a\n *     message of this type arrives for this iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @param {boolean=} opt_includingNestedWindows set to true if messages from\n *     nested frames should also be accepted.\n * @param {boolean=} opt_allowOpaqueOrigin set to true if messages from\n       opaque origins (origin == null) are allowed.\n * @return {!UnlistenDef}\n */\nexport function listenFor(\n  iframe,\n  typeOfMessage,\n  callback,\n  opt_is3P,\n  opt_includingNestedWindows,\n  opt_allowOpaqueOrigin\n) {\n  devAssert(iframe.src, 'only iframes with src supported');\n  devAssert(\n    !iframe.parentNode,\n    'cannot register events on an attached ' +\n      'iframe. It will cause hair-pulling bugs like #2942'\n  );\n  devAssert(callback);\n  const parentWin = iframe.ownerDocument.defaultView;\n\n  registerGlobalListenerIfNeeded(parentWin);\n\n  const listenForEvents = getOrCreateListenForEvents(\n    parentWin,\n    iframe,\n    opt_is3P\n  );\n\n  const iframeOrigin = parseUrlDeprecated(iframe.src).origin;\n  let events =\n    listenForEvents[typeOfMessage] || (listenForEvents[typeOfMessage] = []);\n\n  let unlisten;\n  let listener = function (data, source, origin, event) {\n    const sentinel = data['sentinel'];\n\n    // Exclude messages that don't satisfy amp sentinel rules.\n    if (sentinel == 'amp') {\n      // For `amp` sentinel, nested windows are not allowed\n      if (source != iframe.contentWindow) {\n        return;\n      }\n\n      // For `amp` sentinel origin must match unless opaque origin is allowed\n      const isOpaqueAndAllowed = origin == 'null' && opt_allowOpaqueOrigin;\n      if (iframeOrigin != origin && !isOpaqueAndAllowed) {\n        return;\n      }\n    }\n\n    // Exclude nested frames if necessary.\n    // Note that the source was already verified to be either the contentWindow\n    // of the iframe itself or a descendant window within it.\n    if (!opt_includingNestedWindows && source != iframe.contentWindow) {\n      return;\n    }\n\n    if (data.sentinel == UNLISTEN_SENTINEL) {\n      unlisten();\n      return;\n    }\n    callback(data, source, origin, event);\n  };\n\n  events.push(listener);\n\n  return (unlisten = function () {\n    if (listener) {\n      const index = events.indexOf(listener);\n      if (index > -1) {\n        events.splice(index, 1);\n      }\n      // Make sure references to the unlisten function do not keep\n      // alive too much.\n      listener = null;\n      events = null;\n      callback = null;\n    }\n  });\n}\n\n/**\n * Returns a promise that resolves when one of given messages has been observed\n * for the first time. And remove listener for all other messages.\n * @param {!Element} iframe\n * @param {string|!Array<string>} typeOfMessages\n * @param {boolean=} opt_is3P\n * @return {!Promise<!{data: !JsonObject, source: !Window, origin: string, event: !MessageEvent}>}\n */\nexport function listenForOncePromise(iframe, typeOfMessages, opt_is3P) {\n  const unlistenList = [];\n  if (typeof typeOfMessages == 'string') {\n    typeOfMessages = [typeOfMessages];\n  }\n  return new Promise((resolve) => {\n    for (let i = 0; i < typeOfMessages.length; i++) {\n      const message = typeOfMessages[i];\n      const unlisten = listenFor(\n        iframe,\n        message,\n        (data, source, origin, event) => {\n          for (let i = 0; i < unlistenList.length; i++) {\n            unlistenList[i]();\n          }\n          resolve({data, source, origin, event});\n        },\n        opt_is3P\n      );\n      unlistenList.push(unlisten);\n    }\n  });\n}\n\n/**\n * Posts a message to the iframe.\n * @param {!Element} iframe The iframe.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {string} targetOrigin origin of the target.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessage(iframe, type, object, targetOrigin, opt_is3P) {\n  postMessageToWindows(\n    iframe,\n    [{win: iframe.contentWindow, origin: targetOrigin}],\n    type,\n    object,\n    opt_is3P\n  );\n}\n\n/**\n * Posts an identical message to multiple target windows with the same\n * sentinel.\n * The message is serialized only once.\n * @param {!Element} iframe The iframe.\n * @param {!Array<{win: !Window, origin: string}>} targets to send the message\n *     to, pairs of window and its origin.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessageToWindows(iframe, targets, type, object, opt_is3P) {\n  if (!iframe.contentWindow) {\n    return;\n  }\n  object['type'] = type;\n  object['sentinel'] = getSentinel_(iframe, opt_is3P);\n  let payload = object;\n  if (opt_is3P) {\n    // Serialize ourselves because that is much faster in Chrome.\n    payload = 'amp-' + JSON.stringify(object);\n  }\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n    target.win./*OK*/ postMessage(payload, target.origin);\n  }\n}\n\n/**\n * Gets the sentinel string.\n * @param {!Element} iframe The iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {string} Sentinel string.\n * @private\n */\nfunction getSentinel_(iframe, opt_is3P) {\n  return opt_is3P ? iframe.getAttribute('data-amp-3p-sentinel') : 'amp';\n}\n\n/**\n * JSON parses event.data if it needs to be\n * @param {*} data\n * @return {?JsonObject} object message\n * @private\n * @visibleForTesting\n */\nexport function parseIfNeeded(data) {\n  if (typeof data == 'string') {\n    if (data.charAt(0) == '{') {\n      data =\n        tryParseJson(data, (e) => {\n          dev().warn(\n            'IFRAME-HELPER',\n            'Postmessage could not be parsed. ' +\n              'Is it in a valid JSON format?',\n            e\n          );\n        }) || null;\n    } else if (isAmpMessage(data)) {\n      data = deserializeMessage(data);\n    } else {\n      data = null;\n    }\n  }\n  return /** @type {?JsonObject} */ (data);\n}\n\n/**\n * Manages a postMessage API for an iframe with a subscription message and\n * a way to broadcast messages to all subscribed windows, which\n * in turn must all be descendants of the contentWindow of the iframe.\n */\nexport class SubscriptionApi {\n  /**\n   * @param {!Element} iframe The iframe.\n   * @param {string} type Type of the subscription message.\n   * @param {boolean} is3p set to true if the iframe is 3p.\n   * @param {function(!JsonObject, !Window, string)} requestCallback Callback\n   *     invoked whenever a new window subscribes.\n   */\n  constructor(iframe, type, is3p, requestCallback) {\n    /** @private @const {!Element} */\n    this.iframe_ = iframe;\n    /** @private @const {boolean} */\n    this.is3p_ = is3p;\n    /** @private @const {!Array<{win: !Window, origin: string}>} */\n    this.clientWindows_ = [];\n\n    /** @private @const {!UnlistenDef} */\n    this.unlisten_ = listenFor(\n      this.iframe_,\n      type,\n      (data, source, origin) => {\n        // This message might be from any window within the iframe, we need\n        // to keep track of which windows want to be sent updates.\n        if (!this.clientWindows_.some((entry) => entry.win == source)) {\n          this.clientWindows_.push({win: source, origin});\n        }\n        requestCallback(data, source, origin);\n      },\n      this.is3p_,\n      // For 3P frames we also allow nested frames within them to subscribe..\n      this.is3p_ /* opt_includingNestedWindows */\n    );\n  }\n\n  /**\n   * Sends a message to all subscribed windows.\n   * @param {string} type Type of the message.\n   * @param {!JsonObject} data Message payload.\n   */\n  send(type, data) {\n    // Remove clients that have been removed from the DOM.\n    remove(this.clientWindows_, (client) => !client.win.parent);\n    postMessageToWindows(\n      this.iframe_,\n      this.clientWindows_,\n      type,\n      data,\n      this.is3p_\n    );\n  }\n\n  /**\n   * Destroys iframe.\n   */\n  destroy() {\n    this.unlisten_();\n    this.clientWindows_.length = 0;\n  }\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function looksLikeTrackingIframe(element) {\n  const {height, width} = element.getLayoutSize();\n  // This heuristic is subject to change.\n  if (width > 10 || height > 10) {\n    return false;\n  }\n  // Iframe is not tracking iframe if open with user interaction\n  return !closestAncestorElementBySelector(element, '.i-amphtml-overlay');\n}\n\n// Most common ad sizes\n// Array of [width, height] pairs.\nconst adSizes = [\n  [300, 250],\n  [320, 50],\n  [300, 50],\n  [320, 100],\n];\n\n/**\n * Guess whether this element might be an ad.\n * @param {!Element} element An amp-iframe element.\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isAdLike(element) {\n  const {height, width} = element.getLayoutSize();\n  for (let i = 0; i < adSizes.length; i++) {\n    const refWidth = adSizes[i][0];\n    const refHeight = adSizes[i][1];\n    if (refHeight > height) {\n      continue;\n    }\n    if (refWidth > width) {\n      continue;\n    }\n    // Fuzzy matching to account for padding.\n    if (height - refHeight <= 20 && width - refWidth <= 20) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {!Element} iframe\n * @return {!Element}\n */\nexport function disableScrollingOnIframe(iframe) {\n  addAttributesToElement(iframe, dict({'scrolling': 'no'}));\n\n  // This shouldn't work, but it does on Firefox.\n  // https://stackoverflow.com/a/15494969\n  setStyle(iframe, 'overflow', 'hidden');\n\n  return iframe;\n}\n\n/**\n * Returns true if win's properties can be accessed and win is defined.\n * This functioned is used to determine if a window is cross-domained\n * from the perspective of the current window.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function canInspectWindow(win) {\n  // TODO: this is not reliable.  The compiler assumes that property reads are\n  // side-effect free.  The recommended fix is to use goog.reflect.sinkValue\n  // but since we're not using the closure library I'm not sure how to do this.\n  // See https://github.com/google/closure-compiler/issues/3156\n  try {\n    // win['test'] could be truthy but not true the compiler shouldn't be able\n    // to optimize this check away.\n    return !!win.location.href && (win['test'] || true);\n  } catch (unusedErr) {\n    return false;\n  }\n}\n\n/** @const {string} */\nexport const FIE_EMBED_PROP = '__AMP_EMBED__';\n\n/**\n * Returns the embed created using `installFriendlyIframeEmbed` or `null`.\n * Caution: This will only return the FIE after the iframe has 'loaded'. If you\n * are checking before this signal you may be in a race condition that returns\n * null.\n * @param {!HTMLIFrameElement} iframe\n * @return {?./friendly-iframe-embed.FriendlyIframeEmbed}\n */\nexport function getFriendlyIframeEmbedOptional(iframe) {\n  return /** @type {?./friendly-iframe-embed.FriendlyIframeEmbed} */ (\n    iframe[FIE_EMBED_PROP]\n  );\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isInFie(element) {\n  return (\n    element.classList.contains('i-amphtml-fie') ||\n    !!closestAncestorElementBySelector(element, '.i-amphtml-fie')\n  );\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {devAssert} from '../src/log';\nimport {getMode} from './mode';\nimport {isIframed} from './dom';\nimport {toWin} from './core/window';\n\n/**\n * Returns an IntersectionObserver tracking the Viewport.\n *\n * @param {function(!Array<!IntersectionObserverEntry>)} ioCallback\n * @param {!Window} win\n * @param {{\n *   threshold: (number|!Array<number>|undefined),\n *   needsRootBounds: (boolean|undefined),\n * }=} opts\n * @return {!IntersectionObserver}\n */\nexport function createViewportObserver(ioCallback, win, opts = {}) {\n  const {needsRootBounds, threshold} = opts;\n  // The Document -> Element type conversion is necessary to satisfy the\n  // `IntersectionObserver` constructor extern that only accepts `Element`.\n  const root =\n    isIframed(win) && needsRootBounds\n      ? /** @type {?} */ (win.document)\n      : undefined;\n  return new win.IntersectionObserver(ioCallback, {\n    threshold,\n    root,\n  });\n}\n\n/** @type {!WeakMap<!Window, !IntersectionObserver>} */\nconst viewportObservers = new WeakMap();\n\n/** @type {!WeakMap<!Element, function(boolean)>} */\nconst viewportCallbacks = new WeakMap();\n\n/**\n * Lazily creates an IntersectionObserver per Window to track when elements\n * enter and exit the viewport. Fires viewportCallback when this happens.\n *\n * @param {!Element} element\n * @param {function(boolean)} viewportCallback\n */\nexport function observeWithSharedInOb(element, viewportCallback) {\n  // There should never be two unique observers of the same element.\n  if (getMode().localDev) {\n    devAssert(\n      !viewportCallbacks.has(element) ||\n        viewportCallbacks.get(element) === viewportCallback\n    );\n  }\n\n  const win = toWin(element.ownerDocument.defaultView);\n  let viewportObserver = viewportObservers.get(win);\n  if (!viewportObserver) {\n    viewportObservers.set(\n      win,\n      (viewportObserver = createViewportObserver(ioCallback, win))\n    );\n  }\n  viewportCallbacks.set(element, viewportCallback);\n  viewportObserver.observe(element);\n}\n\n/**\n * Unobserve an element.\n * @param {!Element} element\n */\nexport function unobserveWithSharedInOb(element) {\n  const win = toWin(element.ownerDocument.defaultView);\n  const viewportObserver = viewportObservers.get(win);\n  if (viewportObserver) {\n    viewportObserver.unobserve(element);\n  }\n  viewportCallbacks.delete(element);\n}\n\n/**\n * Call the registered callbacks for each element that has crossed the\n * viewport boundary.\n *\n * @param {!Array<!IntersectionObserverEntry>} entries\n */\nfunction ioCallback(entries) {\n  for (let i = 0; i < entries.length; i++) {\n    const {isIntersecting, target} = entries[i];\n    const viewportCallback = viewportCallbacks.get(target);\n    if (viewportCallback) {\n      viewportCallback(isIntersecting);\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TODO(rcebulko): Migrate the actual ViewportInterface into core or an extern.\n * @typedef {{\n *   getHeight: function(this:ViewportInterfaceDef):number,\n *   getWidth: function(this:ViewportInterfaceDef):number,\n * }}\n */\nlet ViewportInterfaceDef;\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nexport let LayoutRectDef;\n\n/**\n * The structure that contains the size for an element. The exact\n * interpretation of the size depends on the use case.\n *\n * @typedef {{\n *   width: number,\n *   height: number,\n * }}\n */\nexport let LayoutSizeDef;\n\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nexport let LayoutMarginsDef;\n\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\nexport let LayoutMarginsChangeDef;\n\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\nexport const RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n};\n\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\nexport function layoutRectLtwh(left, top, width, height) {\n  return {\n    left,\n    top,\n    width,\n    height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top,\n  };\n}\n\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\nexport function layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(\n    Number(rect.left),\n    Number(rect.top),\n    Number(rect.width),\n    Number(rect.height)\n  );\n}\n\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef|!ClientRect} r1\n * @param {!LayoutRectDef|!ClientRect} r2\n * @return {boolean}\n */\nexport function rectsOverlap(r1, r2) {\n  return (\n    r1.top <= r2.bottom &&\n    r2.top <= r1.bottom &&\n    r1.left <= r2.right &&\n    r2.left <= r1.right\n  );\n}\n\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\nexport function rectIntersection(var_args) {\n  let x0 = -Infinity;\n  let x1 = Infinity;\n  let y0 = -Infinity;\n  let y1 = Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    const current = arguments[i];\n    if (!current) {\n      continue;\n    }\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n  if (x1 == Infinity) {\n    return null;\n  }\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {!RelativePositions}\n */\nexport function layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!ViewportInterfaceDef} viewport\n * @param {number} scrollPos\n * @return {!RelativePositions}\n */\nexport function layoutPositionRelativeToScrolledViewport(\n  layoutBox,\n  viewport,\n  scrollPos\n) {\n  const scrollLayoutBox = layoutRectFromDomRect(\n    /** @type {!ClientRect} */ ({\n      top: scrollPos,\n      bottom: scrollPos + viewport.getHeight(),\n      left: 0,\n      right: viewport.getWidth(),\n    })\n  );\n  if (rectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\nexport function expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(\n    rect.left - rect.width * dw,\n    rect.top - rect.height * dh,\n    rect.width * (1 + dw * 2),\n    rect.height * (1 + dh * 2)\n  );\n}\n\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\nexport function moveLayoutRect(rect, dx, dy) {\n  if ((dx == 0 && dy == 0) || (rect.width == 0 && rect.height == 0)) {\n    return rect;\n  }\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\nexport function areMarginsChanged(margins, change) {\n  return (\n    (change.top !== undefined && change.top != margins.top) ||\n    (change.right !== undefined && change.right != margins.right) ||\n    (change.bottom !== undefined && change.bottom != margins.bottom) ||\n    (change.left !== undefined && change.left != margins.left)\n  );\n}\n\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\nexport function layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n  return (\n    r1.left == r2.left &&\n    r1.top == r2.top &&\n    r1.width == r2.width &&\n    r1.height == r2.height\n  );\n}\n\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\nexport function cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right,\n  };\n}\n\n/**\n * @param {!LayoutRectDef|!ClientRect|!DOMRect} rect\n * @return {!LayoutSizeDef}\n */\nexport function layoutSizeFromRect(rect) {\n  const {height, width} = rect;\n  return {width, height};\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Deferred} from '../core/data-structures/promise';\nimport {createViewportObserver} from '../viewport-observer';\nimport {dict} from '../core/types/object';\nimport {layoutRectFromDomRect} from '../core/math/layout-rect';\nimport {toWin} from '../core/window';\n\n/** @type {!WeakMap<!Element, !Deferred>|undefined} */\nlet intersectionDeferreds;\n\n/** @type {!WeakMap<!Window, !IntersectionObserver>|undefined} */\nlet intersectionObservers;\n\n/**\n * @param {!Window} win\n * @return {!IntersectionObserver}\n */\nfunction getInOb(win) {\n  if (!intersectionDeferreds) {\n    intersectionDeferreds = new WeakMap();\n    intersectionObservers = new WeakMap();\n  }\n\n  let observer = intersectionObservers.get(win);\n  if (!observer) {\n    observer = createViewportObserver(\n      (entries) => {\n        const seen = new Set();\n        for (let i = entries.length - 1; i >= 0; i--) {\n          const {target} = entries[i];\n          if (seen.has(target)) {\n            continue;\n          }\n          seen.add(target);\n\n          observer.unobserve(target);\n          intersectionDeferreds.get(target).resolve(entries[i]);\n          intersectionDeferreds.delete(target);\n        }\n      },\n      win,\n      {needsRootBounds: true}\n    );\n    intersectionObservers.set(win, observer);\n  }\n  return observer;\n}\n\n/**\n * Returns a promise that resolves with the intersection entry for the given element.\n *\n * If multiple measures for the same element occur very quickly, they will\n * dedupe to the same promise.\n *\n * @param {!Element} el\n * @return {!Promise<!IntersectionObserverEntry>}\n */\nexport function measureIntersection(el) {\n  if (intersectionDeferreds && intersectionDeferreds.has(el)) {\n    return intersectionDeferreds.get(el).promise;\n  }\n\n  const inOb = getInOb(toWin(el.ownerDocument.defaultView));\n  inOb.observe(el);\n\n  const deferred = new Deferred();\n  intersectionDeferreds.set(el, deferred);\n  return deferred.promise;\n}\n\n/**\n * Convert an IntersectionObserverEntry to a regular object to make it serializable.\n *\n * @param {!IntersectionObserverEntry} entry\n * @return {!JsonObject}\n */\nexport function intersectionEntryToJson(entry) {\n  return dict({\n    'time': entry.time,\n    'rootBounds': safeLayoutRectFromDomRect(entry.rootBounds),\n    'boundingClientRect': safeLayoutRectFromDomRect(entry.boundingClientRect),\n    'intersectionRect': safeLayoutRectFromDomRect(entry.intersectionRect),\n    'intersectionRatio': entry.intersectionRatio,\n  });\n}\n\n/**\n * @param {?} rect\n * @return {?../layout-rect.LayoutRectDef}\n */\nfunction safeLayoutRectFromDomRect(rect) {\n  if (rect === null) {\n    return null;\n  }\n  return layoutRectFromDomRect(/** @type {!ClientRect} */ (rect));\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MessageType} from '../../../src/3p-frame-messaging';\nimport {Services} from '../../../src/services';\nimport {SubscriptionApi} from '../../../src/iframe-helper';\nimport {dict} from '../../../src/core/types/object';\nimport {intersectionEntryToJson} from '../../../src/utils/intersection';\n\n/**\n * LegacyAdIntersectionObserverHost exists for backward compatibility to support\n * the context.observeIntersect API in 3P ad.\n * Use IntersectionObserver3pHost instead.\n *\n * The LegacyAdIntersectionObserverHost class lets a 3P ad share its viewport\n * intersection data with an iframe of its choice (most likely contained within\n * the element itself.) in the format of IntersectionObserverEntry.\n * When instantiated the class will start listening for a\n * 'send-intersections' postMessage from the iframe, and only then would start\n * sending intersection data to the iframe. The intersection data would be sent\n * when the element enters/exits the viewport, as well as on scroll\n * and resize when the element intersects with the viewport.\n * The class uses IntersectionObserver to monitor the element's enter/exit of\n * the viewport. It also exposes a `fire` method to allow AMP to send the\n * intersection data to the iframe at remeasure.\n *\n * Note: The LegacyAdIntersectionObserverHost would not send any data\n * over to the iframe if it had not requested the intersection data already via\n * 'send-intersections' postMessage.\n */\nexport class LegacyAdIntersectionObserverHost {\n  /**\n   * @param {!AMP.BaseElement} baseElement\n   * @param {!Element} adIframe Iframe element which requested the\n   *     intersection data.\n   */\n  constructor(baseElement, adIframe) {\n    /** @private @const {!AMP.BaseElement} */\n    this.baseElement_ = baseElement;\n\n    /** @private @const {!../../../src/service/timer-impl.Timer} */\n    this.timer_ = Services.timerFor(baseElement.win);\n\n    /** @private {?IntersectionObserver} */\n    this.intersectionObserver_ = null;\n\n    /** @private {?IntersectionObserver} */\n    this.fireInOb_ = null;\n\n    /** @private {boolean} */\n    this.inViewport_ = false;\n\n    /** @private {!Array<!IntersectionObserverEntry>} */\n    this.pendingChanges_ = [];\n\n    /** @private {number|string} */\n    this.flushTimeout_ = 0;\n\n    /** @private @const {function()} */\n    this.boundFlush_ = this.flush_.bind(this);\n\n    /**\n     * An object which handles tracking subscribers to the\n     * intersection updates for this element.\n     * Triggered by context.observeIntersection(\u2026) inside the ad/iframe\n     * or by directly posting a send-intersections message.\n     * @private {!SubscriptionApi}\n     */\n    this.postMessageApi_ = new SubscriptionApi(\n      adIframe,\n      MessageType.SEND_INTERSECTIONS,\n      true, // is3p\n      // Each time someone subscribes we make sure that they\n      // get an update.\n      () => this.startSendingIntersectionChanges_()\n    );\n\n    /** @private {?Function} */\n    this.unlistenViewportChanges_ = null;\n  }\n\n  /**\n   * Fires element intersection\n   */\n  fire() {\n    if (!this.fireInOb_) {\n      return;\n    }\n    this.fireInOb_.unobserve(this.baseElement_.element);\n    this.fireInOb_.observe(this.baseElement_.element);\n  }\n\n  /**\n   * Check if we need to unlisten when moving out of viewport,\n   * unlisten and reset unlistenViewportChanges_.\n   * @private\n   */\n  unlistenOnOutViewport_() {\n    if (this.unlistenViewportChanges_) {\n      this.unlistenViewportChanges_();\n      this.unlistenViewportChanges_ = null;\n    }\n  }\n  /**\n   * Called via postMessage from the child iframe when the ad/iframe starts\n   * observing its position in the viewport.\n   * Sets a flag, measures the iframe position if necessary and sends\n   * one change record to the iframe.\n   * Note that this method may be called more than once if a single ad\n   * has multiple parties interested in viewability data.\n   * @private\n   */\n  startSendingIntersectionChanges_() {\n    if (!this.intersectionObserver_) {\n      this.intersectionObserver_ = new IntersectionObserver((entries) => {\n        const lastEntry = entries[entries.length - 1];\n        this.onViewportCallback_(lastEntry);\n      });\n      this.intersectionObserver_.observe(this.baseElement_.element);\n    }\n    if (!this.fireInOb_) {\n      this.fireInOb_ = new IntersectionObserver((entries) => {\n        const lastEntry = entries[entries.length - 1];\n        this.sendElementIntersection_(lastEntry);\n      });\n    }\n    this.fire();\n  }\n\n  /**\n   * Triggered when the ad either enters or exits the visible viewport.\n   * @param {!IntersectionObserverEntry} entry handed over by the IntersectionObserver.\n   */\n  onViewportCallback_(entry) {\n    const inViewport = entry.intersectionRatio != 0;\n    if (this.inViewport_ == inViewport) {\n      return;\n    }\n    this.inViewport_ = inViewport;\n\n    // Lets the ad know that it became visible or no longer is.\n    this.sendElementIntersection_(entry);\n\n    // And update the ad about its position in the viewport while\n    // it is visible.\n    if (inViewport) {\n      const send = this.fire.bind(this);\n      // Scroll events.\n      const unlistenScroll = this.baseElement_.getViewport().onScroll(send);\n      // Throttled scroll events. Also fires for resize events.\n      const unlistenChanged = this.baseElement_.getViewport().onChanged(send);\n      this.unlistenViewportChanges_ = () => {\n        unlistenScroll();\n        unlistenChanged();\n      };\n    } else {\n      this.unlistenOnOutViewport_();\n    }\n  }\n\n  /**\n   * Sends 'intersection' message to ad/iframe with intersection change records\n   * if this has been activated and we measured the layout box of the iframe\n   * at least once.\n   * @param {!IntersectionObserverEntry} entry - handed over by the IntersectionObserver.\n   * @private\n   */\n  sendElementIntersection_(entry) {\n    const change = intersectionEntryToJson(entry);\n    // rootBounds is always null in 3p iframe (e.g. Viewer).\n    // See https://github.com/w3c/IntersectionObserver/issues/79\n    //\n    // Since before using a real InOb we used to provide rootBounds,\n    // we are temporarily continuing to do so now.\n    // TODO: determine if consumers rely on this functionality and remove if not.\n    if (change.rootBounds === null) {\n      change.rootBounds = this.baseElement_.getViewport().getRect();\n    }\n\n    if (\n      this.pendingChanges_.length > 0 &&\n      this.pendingChanges_[this.pendingChanges_.length - 1].time == change.time\n    ) {\n      return;\n    }\n    this.pendingChanges_.push(change);\n    if (!this.flushTimeout_) {\n      // Send one immediately, \u2026\n      this.flush_();\n      // but only send a maximum of 10 postMessages per second.\n      this.flushTimeout_ = this.timer_.delay(this.boundFlush_, 100);\n    }\n  }\n\n  /**\n   * @private\n   */\n  flush_() {\n    this.flushTimeout_ = 0;\n    if (!this.pendingChanges_.length) {\n      return;\n    }\n    // Note that SubscribeApi multicasts the update to all interested windows.\n    this.postMessageApi_.send(\n      MessageType.INTERSECTION,\n      dict({\n        'changes': this.pendingChanges_,\n      })\n    );\n    this.pendingChanges_.length = 0;\n  }\n\n  /**\n   * Provide a function to clear timeout before set this intersection to null.\n   */\n  destroy() {\n    if (this.intersectionObserver_) {\n      this.intersectionObserver_.disconnect();\n      this.intersectionObserver_ = null;\n    }\n    if (this.fireInOb_) {\n      this.fireInOb_.disconnect();\n      this.fireInOb_ = null;\n    }\n    this.timer_.cancel(this.flushTimeout_);\n    this.unlistenOnOutViewport_();\n    this.postMessageApi_.destroy();\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement, isString} from '../types';\n\n/** @type {!Array<string>} */\nconst excludedTags = ['script', 'style'];\n\n/** @type {!Array<string>} */\nconst allowedAmpTags = [\n  'amp-accordion',\n  'amp-app-banner',\n  'amp-carousel',\n  'amp-fit-text',\n  'amp-form',\n  'amp-selector',\n  'amp-sidebar',\n];\n\n/** @type {!Array<string>} */\nconst allowedAttributes = [\n  'action',\n  'alt',\n  'class',\n  'disabled',\n  'height',\n  'href',\n  'id',\n  'name',\n  'placeholder',\n  'readonly',\n  'src',\n  'tabindex',\n  'title',\n  'type',\n  'value',\n  'width',\n];\n\n/**\n * Returns content of HTML node\n * @param {!Window} win\n * @param {string} selector - CSS selector of the node to take content from\n * @param {!Array<string>} attrs - tag attributes to be left in the stringified\n * HTML\n * @return {string}\n */\nexport function getHtml(win, selector, attrs) {\n  const root = win.document.querySelector(selector);\n  const result = [];\n\n  if (root) {\n    appendToResult(root, attrs, result);\n  }\n\n  return result.join('').replace(/\\s{2,}/g, ' ');\n}\n\n/**\n * @param {!Element} node - node to take content from\n * @param {!Array<string>} attrs - tag attributes to be left in the stringified HTML\n * @param {!Array<string>} result\n */\nfunction appendToResult(node, attrs, result) {\n  const stack = [node];\n  const allowedAttrs = attrs.filter((attr) => allowedAttributes.includes(attr));\n\n  while (stack.length > 0) {\n    node = stack.pop();\n\n    if (isString(node)) {\n      result.push(node);\n    } else if (node.nodeType === Node.TEXT_NODE) {\n      result.push(node.textContent);\n    } else if (isElement(node) && isApplicableNode(node)) {\n      appendOpenTag(node, allowedAttrs, result);\n      stack.push(`</${node.tagName.toLowerCase()}>`);\n\n      for (let child = node.lastChild; child; child = child.previousSibling) {\n        stack.push(child);\n      }\n    }\n  }\n}\n\n/**\n * Returns true for allowed AMP tags and non-AMP tags except <script>/<style>\n * @param {!Element} node\n * @return {boolean}\n */\nfunction isApplicableNode(node) {\n  const tagName = node.tagName.toLowerCase();\n\n  if (tagName.startsWith('amp-')) {\n    return !!(allowedAmpTags.includes(tagName) && node.textContent);\n  } else {\n    return !!(!excludedTags.includes(tagName) && node.textContent);\n  }\n}\n\n/**\n * Constructs an open-tag with the provided attributes.\n * @param {!Element} node\n * @param {!Array<string>} attrs\n * @param {Array<string>} result\n */\nfunction appendOpenTag(node, attrs, result) {\n  result.push(`<${node.tagName.toLowerCase()}`);\n\n  attrs.forEach((attr) => {\n    if (node.hasAttribute(attr)) {\n      result.push(` ${attr}=\"${node.getAttribute(attr)}\"`);\n    }\n  });\n\n  result.push('>');\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from '../log';\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service';\nimport {hasOwn, map} from '../core/types/object';\nimport {isArray} from '../core/types';\nimport {parseQueryString} from '../core/types/string/url';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\nimport {stringHash32} from '../types/string';\n\n/**\n * Gets a string of concatenated element names and relative positions\n * of the DOM element and its parentElement's (up to 25).  Relative position\n * is the index of nodes with this tag within the parent's children.\n * The order is from the inner to outer nodes in DOM hierarchy.\n *\n * If a DOM hierarchy is the following:\n *\n * <div id='id1' ...>\n *   <div id='id2' ...>\n *     <table ...>       // table:0\n *       <tr>            // tr:0\n *         <td>...</td>  // td:0\n *         <td>          // td:1\n *           <amp-ad ...></amp-ad>\n *         </td>\n *       </tr>\n *       <tr>...</tr>    // tr:1\n *     </table>\n *   </div>\n * </div>\n *\n * With the amp-ad element passed in:\n * 'amp-ad.0,td.1,tr.0,table.0,div/id2.0,div/id1.0'\n *\n * Note: 25 is chosen arbitrarily.\n *\n * @param {?Element} element DOM node from which to get fingerprint.\n * @return {string} Concatenated element ids.\n */\nexport function domFingerprintPlain(element) {\n  const ids = [];\n  let level = 0;\n  while (isElement(element) && level < 25) {\n    let id = '';\n    if (element.id) {\n      id = `/${element.id}`;\n    }\n    const nodeName = element.nodeName.toLowerCase();\n    ids.push(`${nodeName}${id}${indexWithinParent(element)}`);\n    level++;\n    element = element.parentElement;\n  }\n  return ids.join();\n}\n\nexport class DomFingerprint {\n  /**\n   * Calculates ad slot DOM fingerprint.  This key is intended to\n   * identify \"same\" ad unit across many page views. This is\n   * based on where the ad appears within the page's DOM structure.\n   *\n   * @param {?Element} element The DOM element from which to collect\n   *     the DOM chain element IDs.  If null, DOM chain element IDs are not\n   *     included in the hash.\n   * @return {string} The ad unit hash key string.\n   */\n  static generate(element) {\n    return stringHash32(domFingerprintPlain(element));\n  }\n}\n\n/**\n * Gets a string showing the index of an element within\n * the children of its parent, counting only nodes with the same tag.\n * Stop at 25, just to have a limit.\n * @param {!Element} element DOM node to get index of.\n * @return {string} '.<index>' or ''.\n */\nfunction indexWithinParent(element) {\n  const {nodeName} = element;\n  // Find my index within my parent's children\n  let i = 0;\n  let count = 0;\n  let sibling = element.previousElementSibling;\n  // Different browsers have different children.\n  // So count only nodes with the same tag.\n  // Use a limit for the tags, so that different browsers get the same\n  // count. So 25 and higher all return no index.\n  while (sibling && count < 25 && i < 100) {\n    if (sibling.nodeName == nodeName) {\n      count++;\n    }\n    i++;\n    sibling = sibling.previousElementSibling;\n  }\n  // If we got to the end, then the count is accurate; otherwise skip count.\n  return count < 25 && i < 100 ? `.${count}` : '';\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSENT_POLICY_STATE, // eslint-disable-line no-unused-vars\n} from './core/constants/consent-state';\nimport {Services} from './services';\nimport {dict} from './core/types/object';\n\n/**\n * Returns a promise that resolve when all consent state the policy wait\n * for resolve. Or if consent service is not available.\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?CONSENT_POLICY_STATE>}\n */\nexport function getConsentPolicyState(element, policyId = 'default') {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.whenPolicyResolved(/** @type {string} */ (policyId));\n    }\n  );\n}\n\n/**\n * Returns a promise that resolves to a sharedData retrieved from consent\n * remote endpoint.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<?Object>}\n */\nexport function getConsentPolicySharedData(element, policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getMergedSharedData(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<string>}\n */\nexport function getConsentPolicyInfo(element, policyId = 'default') {\n  // Return the stored consent string.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentStringInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?Object|undefined>}\n */\nexport function getConsentMetadata(element, policyId = 'default') {\n  // Return the stored consent metadata.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentMetadataInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * Returns a set of consent values to forward to a 3rd party (like an iframe).\n * @param {!Element} element\n * @param {?string=} opt_policyId\n * @return {!Promise<!JsonObject>}\n *   See extensions/amp-consent/customizing-extension-behaviors-on-consent.md:\n *    - consentMetadata\n *    - consentString\n *    - consentPolicyState\n *    - consentPolicySharedData\n */\nexport function getConsentDataToForward(element, opt_policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then((policy) => {\n    const gettersOrNull = dict({\n      'consentMetadata': policy && policy.getConsentMetadataInfo,\n      'consentString': policy && policy.getConsentStringInfo,\n      'consentPolicyState': policy && policy.whenPolicyResolved,\n      'consentPolicySharedData': policy && policy.getMergedSharedData,\n    });\n    if (!policy) {\n      return gettersOrNull;\n    }\n    return /** @type {!JsonObject} */ (\n      Promise.all(\n        Object.keys(gettersOrNull).map((key) =>\n          gettersOrNull[key]\n            .call(policy, opt_policyId || 'default')\n            .then((value) => ({[key]: value}))\n        )\n      ).then((objs) => Object.assign.apply({}, objs))\n    );\n  });\n}\n\n/**\n * Determine if an element needs to be blocked by consent based on meta tags.\n * @param {*} element\n * @return {boolean}\n */\nexport function shouldBlockOnConsentByMeta(element) {\n  const ampdoc = element.getAmpDoc();\n  let content = ampdoc.getMetaByName('amp-consent-blocking');\n  if (!content) {\n    return false;\n  }\n\n  // Handles whitespace\n  content = content.toUpperCase().replace(/\\s+/g, '');\n\n  const contents = /** @type {Array<string>} */ (content.split(','));\n  return contents.includes(element.tagName);\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonConfiguration} from '../src/core/types/object/json';\n\n/**\n * @typedef {{\n *   prefetch: (string|undefined),\n *   preconnect: (string|undefined),\n *   renderStartImplemented: (boolean|undefined),\n *   clientIdScope: (string|undefined),\n *   clientIdCookieName: (string|undefined),\n *   consentHandlingOverride: (boolean|undefined),\n *   fullWidthHeightRatio: (number|undefined),\n * }}\n */\nlet AdNetworkConfigDef;\n\n/**\n * The config of each ad network.\n * Please keep the list alphabetic order.\n *\n * yourNetworkName: {  // This is the \"type\" attribute of <amp-ad>\n *\n *   // List of URLs for prefetch\n *   prefetch: string|array\n *\n *   // List of hosts for preconnect\n *   preconnect: string|array\n *\n *   // The scope used to provide CIDs to ads\n *   clientIdScope: string\n *\n *   // The cookie name to store the CID. In absence, `clientIdScope` is used.\n *   clientIdCookieName: string\n *\n *   // If the ad network is willing to override the consent handling, which\n *   // by default is blocking ad load until the consent is accepted.\n *   consentHandlingOverride: boolean\n *\n *   // Whether render-start API has been implemented\n *   // We highly recommend all networks to implement the API,\n *   // see details in the README.md\n *   renderStartImplemented: boolean\n *\n *   // The width / height ratio for full width ad units.\n *   // If absent, it means the network does not support full width ad units.\n *   // Example value: 1.2\n *   fullWidthHeightRatio: number\n * }\n *\n * @const {!Object<string, !JsonObject>}\n */\nconst adConfig = jsonConfiguration({\n  '_ping_': {\n    renderStartImplemented: true,\n    clientIdScope: '_PING_',\n    consentHandlingOverride: true,\n  },\n\n  '1wo': {},\n\n  '24smi': {\n    prefetch: 'https://jsn.24smi.net/smi.js',\n    preconnect: 'https://data.24smi.net',\n  },\n\n  'a8': {\n    prefetch: 'https://statics.a8.net/amp/ad.js',\n    renderStartImplemented: true,\n  },\n\n  'a9': {\n    prefetch: 'https://z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US',\n  },\n\n  'accesstrade': {\n    prefetch: 'https://h.accesstrade.net/js/amp/amp.js',\n  },\n\n  'adagio': {\n    prefetch: 'https://js-ssl.neodatagroup.com/adagio_amp.js',\n    preconnect: [\n      'https://ad-aws-it.neodatagroup.com',\n      'https://tracker.neodatagroup.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'adblade': {\n    prefetch: 'https://web.adblade.com/js/ads/async/show.js',\n    preconnect: [\n      'https://staticd.cdn.adblade.com',\n      'https://static.adblade.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'adbutler': {\n    prefetch: 'https://servedbyadbutler.com/app.js',\n  },\n\n  'adform': {},\n\n  'adfox': {\n    prefetch: 'https://yastatic.net/pcode/adfox/loader.js',\n    renderStartImplemented: true,\n  },\n\n  'adgeneration': {\n    prefetch: 'https://i.socdm.com/sdk/js/adg-script-loader.js',\n  },\n\n  'adglare': {\n    renderStartImplemented: true,\n  },\n\n  'adhese': {\n    renderStartImplemented: true,\n  },\n\n  'adincube': {\n    renderStartImplemented: true,\n  },\n\n  'adition': {},\n\n  'adman': {},\n\n  'admanmedia': {\n    renderStartImplemented: true,\n  },\n\n  'admixer': {\n    renderStartImplemented: true,\n    preconnect: ['https://inv-nets.admixer.net', 'https://cdn.admixer.net'],\n  },\n\n  'adnuntius': {\n    prefetch: 'https://cdn.adnuntius.com/adn.js',\n    renderStartImplemented: true,\n  },\n\n  'adocean': {\n    consentHandlingOverride: true,\n  },\n\n  'adop': {},\n\n  'adpicker': {\n    renderStartImplemented: true,\n  },\n\n  'adplugg': {\n    prefetch: 'https://www.adplugg.com/serve/js/ad.js',\n    renderStartImplemented: true,\n  },\n\n  'adpon': {\n    prefetch: 'https://ad.adpon.jp/amp.js',\n    clientIdScope: 'AMP_ECID_ADPON',\n  },\n\n  'adpushup': {\n    prefetch: 'https://securepubads.g.doubleclick.net/tag/js/gpt.js',\n    preconnect: 'https://cdn.adpushup.com',\n  },\n\n  'adreactor': {},\n\n  'adsensor': {\n    prefetch: 'https://wfpscripts.webspectator.com/amp/adsensor-amp.js',\n    clientIdScope: 'amp_ecid_adensor',\n    renderStartImplemented: true,\n  },\n\n  'adservsolutions': {},\n\n  'adsloom': {\n    clientIdScope: 'AMP_ECID_ADSLOOM',\n  },\n  'adsnative': {\n    prefetch: 'https://static.adsnative.com/static/js/render.v1.js',\n    preconnect: 'https://api.adsnative.com',\n  },\n\n  'adspeed': {\n    preconnect: 'https://g.adspeed.net',\n    renderStartImplemented: true,\n  },\n\n  'adspirit': {},\n\n  'adstir': {\n    prefetch: 'https://js.ad-stir.com/js/adstir_async.js',\n    preconnect: 'https://ad.ad-stir.com',\n  },\n\n  'adstyle': {\n    prefetch: 'https://widgets.ad.style/amp.js',\n    preconnect: ['https://w.ad.style'],\n  },\n\n  'adtech': {\n    prefetch: 'https://s.aolcdn.com/os/ads/adsWrapper3.js',\n    preconnect: ['https://mads.at.atwola.com', 'https://aka-cdn.adtechus.com'],\n  },\n\n  'adtelligent': {\n    preconnect: ['https://s.adtelligent.com'],\n    renderStartImplemented: true,\n  },\n\n  'adthrive': {\n    prefetch: ['https://www.googletagservices.com/tag/js/gpt.js'],\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'adunity': {\n    preconnect: ['https://content.adunity.com'],\n    renderStartImplemented: true,\n  },\n\n  'aduptech': {\n    prefetch: 'https://s.d.adup-tech.com/jsapi',\n    preconnect: [\n      'https://d.adup-tech.com',\n      'https://m.adup-tech.com',\n      'https://v.adup-tech.com',\n    ],\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'adventive': {\n    preconnect: ['https://ads.adventive.com', 'https://amp.adventivedev.com'],\n    renderStartImplemented: true,\n  },\n\n  'adverline': {\n    prefetch: 'https://ads.adverline.com/richmedias/amp.js',\n    preconnect: ['https://adnext.fr'],\n    renderStartImplemented: true,\n  },\n\n  'adverticum': {},\n\n  'advertserve': {\n    renderStartImplemented: true,\n  },\n\n  'adyoulike': {\n    consentHandlingOverride: true,\n    prefetch: 'https://fo-static.omnitagjs.com/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'adzerk': {},\n\n  'affiliateb': {\n    prefetch: 'https://track.affiliate-b.com/amp/a.js',\n    renderStartImplemented: true,\n  },\n\n  'aja': {\n    prefetch: [\n      'https://cdn.as.amanad.adtdp.com/sdk/asot-amp.js',\n      'https://cdn.as.amanad.adtdp.com/sdk/asot-v2.js',\n    ],\n    preconnect: ['https://ad.as.amanad.adtdp.com'],\n  },\n\n  'appvador': {\n    prefetch: [\n      'https://cdn.apvdr.com/js/VastAdUnit.min.js',\n      'https://cdn.apvdr.com/js/VideoAd.min.js',\n      'https://cdn.apvdr.com/js/VideoAd3PAS.min.js',\n      'https://cdn.apvdr.com/js/VideoAdAutoPlay.min.js',\n      'https://cdn.apvdr.com/js/VideoAdNative.min.js',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'amoad': {\n    prefetch: ['https://j.amoad.com/js/a.js', 'https://j.amoad.com/js/n.js'],\n    preconnect: [\n      'https://d.amoad.com',\n      'https://i.amoad.com',\n      'https://m.amoad.com',\n      'https://v.amoad.com',\n    ],\n  },\n\n  'aniview': {\n    renderStartImplemented: true,\n  },\n\n  'anyclip': {\n    prefetch:\n      'https://player.anyclip.com/anyclip-widget/lre-widget/prod/v1/src/lre.js',\n    preconnect: [\n      'https://trafficmanager.anyclip.com',\n      'https://lreprx-server.anyclip.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'appnexus': {\n    prefetch: 'https://acdn.adnxs.com/ast/ast.js',\n    preconnect: 'https://ib.adnxs.com',\n    renderStartImplemented: true,\n  },\n\n  'atomx': {\n    prefetch: 'https://s.ato.mx/p.js',\n  },\n\n  'beaverads': {\n    renderStartImplemented: true,\n  },\n\n  'beopinion': {\n    prefetch: 'https://widget.beop.io/sdk.js',\n    preconnect: [\n      'https://t.beop.io',\n      'https://s.beop.io',\n      'https://data.beop.io',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'bidtellect': {},\n\n  'blade': {\n    prefetch: 'https://sdk.streamrail.com/blade/sr.blade.js',\n    renderStartImplemented: true,\n  },\n\n  'brainy': {},\n\n  'bringhub': {\n    renderStartImplemented: true,\n    preconnect: ['https://static.bh-cdn.com', 'https://core-api.bringhub.io'],\n  },\n\n  'broadstreetads': {\n    prefetch: 'https://cdn.broadstreetads.com/init-2.min.js',\n    renderStartImplemented: true,\n  },\n\n  'byplay': {},\n\n  'caajainfeed': {\n    prefetch: ['https://cdn.amanad.adtdp.com/sdk/ajaamp.js'],\n    preconnect: ['https://ad.amanad.adtdp.com'],\n  },\n\n  'capirs': {\n    renderStartImplemented: true,\n  },\n\n  'caprofitx': {\n    prefetch: [\n      'https://cdn.caprofitx.com/pfx.min.js',\n      'https://cdn.caprofitx.com/tags/amp/profitx_amp.js',\n    ],\n    preconnect: 'https://ad.caprofitx.adtdp.com',\n  },\n\n  'cedato': {\n    renderStartImplemented: true,\n  },\n\n  'chargeads': {}, // Deprecated, to be removed on 2019-05-23\n\n  'colombia': {\n    prefetch: 'https://static.clmbtech.com/ad/commons/js/colombia-amp.js',\n  },\n\n  'conative': {\n    renderStartImplemented: true,\n  },\n\n  'connatix': {\n    renderStartImplemented: true,\n  },\n\n  'contentad': {},\n\n  'criteo': {\n    prefetch: 'https://static.criteo.net/js/ld/publishertag.js',\n    preconnect: 'https://cas.criteo.com',\n  },\n\n  'csa': {\n    prefetch: 'https://www.google.com/adsense/search/ads.js',\n  },\n\n  'dable': {\n    preconnect: [\n      'https://static.dable.io',\n      'https://api.dable.io',\n      'https://images.dable.io',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'digiteka': {\n    renderStartImplemented: true,\n  },\n\n  'directadvert': {\n    renderStartImplemented: true,\n  },\n\n  'distroscale': {\n    preconnect: [\n      'https://c.jsrdn.com',\n      'https://s.jsrdn.com',\n      'https://i.jsrdn.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'dotandads': {\n    prefetch: 'https://amp.ad.dotandad.com/dotandadsAmp.js',\n    preconnect: 'https://bal.ad.dotandad.com',\n  },\n  'dynad': {\n    preconnect: ['https://t.dynad.net', 'https://tm.jsuol.com.br'],\n  },\n  'eadv': {\n    renderStartImplemented: true,\n    clientIdScope: 'AMP_ECID_EADV',\n    prefetch: [\n      'https://www.eadv.it/track/esr.min.js',\n      'https://www.eadv.it/track/ead.min.js',\n    ],\n  },\n\n  'empower': {\n    prefetch: 'https://cdn.empower.net/sdk/amp-ad.min.js',\n    renderStartImplemented: true,\n  },\n\n  'engageya': {},\n\n  'epeex': {},\n\n  'eplanning': {\n    prefetch: 'https://us.img.e-planning.net/layers/epl-amp.js',\n  },\n\n  'ezoic': {\n    prefetch: [\n      'https://www.googletagservices.com/tag/js/gpt.js',\n      'https://g.ezoic.net/ezoic/ampad.js',\n    ],\n    clientIdScope: 'AMP_ECID_EZOIC',\n    consentHandlingOverride: true,\n  },\n\n  'f1e': {\n    prefetch: 'https://img.ak.impact-ad.jp/util/f1e_amp.min.js',\n  },\n\n  'f1h': {\n    preconnect: 'https://img.ak.impact-ad.jp',\n    renderStartImplemented: true,\n  },\n\n  'fake': {},\n\n  'fake-delayed': {\n    renderStartImplemented: true,\n  },\n\n  'feedad': {\n    clientIdScope: '__fa_amp',\n    prefetch: 'https://web.feedad.com/sdk/feedad-async.js',\n    renderStartImplemented: true,\n    fullWidthHeightRatio: 16 / 9,\n    consentHandlingOverride: true,\n  },\n\n  'felmat': {\n    prefetch: 'https://t.felmat.net/js/fmamp.js',\n    renderStartImplemented: true,\n  },\n\n  'finative': {},\n\n  'firstimpression': {\n    prefetch: 'https://ecdn.firstimpression.io/static/js/fiamp.js',\n    preconnect: 'https://cdn.firstimpression.io',\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'flite': {},\n\n  'fluct': {\n    prefetch: ['https://pdn.adingo.jp/p.js'],\n    preconnect: [\n      'https://cdn-fluct.sh.adingo.jp',\n      'https://sh.adingo.jp',\n      'https://i.adingo.jp',\n    ],\n  },\n\n  'forkmedia': {\n    renderStartImplemented: true,\n  },\n\n  'freewheel': {\n    prefetch: 'https://cdn.stickyadstv.com/prime-time/fw-amp.min.js',\n    renderStartImplemented: true,\n  },\n\n  'fusion': {\n    prefetch: 'https://assets.adtomafusion.net/fusion/latest/fusion-amp.min.js',\n  },\n\n  'genieessp': {\n    prefetch: 'https://js.gsspcln.jp/l/amp.js',\n  },\n\n  'giraff': {\n    renderStartImplemented: true,\n  },\n\n  'glomex': {\n    prefetch: 'https://player.glomex.com/integration/1/amp-embed.js',\n  },\n\n  'gmossp': {\n    prefetch: 'https://cdn.gmossp-sp.jp/ads/amp.js',\n  },\n\n  'gumgum': {\n    prefetch: 'https://js.gumgum.com/slot.js',\n    renderStartImplemented: true,\n  },\n\n  'holder': {\n    prefetch: 'https://i.holder.com.ua/js2/holder/ajax/ampv1.js',\n    preconnect: 'https://h.holder.com.ua',\n    renderStartImplemented: true,\n  },\n\n  'ibillboard': {},\n\n  'idealmedia': {\n    renderStartImplemented: true,\n    preconnect: [\n      'https://jsc.idealmedia.io',\n      'https://servicer.idealmedia.io',\n      'https://s-img.idealmedia.io/',\n    ],\n  },\n\n  'imedia': {\n    prefetch: 'https://i.imedia.cz/js/im3.js',\n    renderStartImplemented: true,\n  },\n\n  'imobile': {\n    prefetch: 'https://spamp.i-mobile.co.jp/script/amp.js',\n    preconnect: 'https://spad.i-mobile.co.jp',\n  },\n  'imonomy': {\n    renderStartImplemented: true,\n  },\n  'improvedigital': {},\n\n  'industrybrains': {\n    prefetch: 'https://web.industrybrains.com/js/ads/async/show.js',\n    preconnect: [\n      'https://staticd.cdn.industrybrains.com',\n      'https://static.industrybrains.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'inmobi': {\n    prefetch: 'https://cf.cdn.inmobi.com/ad/inmobi.secure.js',\n    renderStartImplemented: true,\n  },\n\n  'innity': {\n    prefetch: 'https://cdn.innity.net/admanager.js',\n    preconnect: 'https://as.innity.com',\n    renderStartImplemented: true,\n  },\n\n  'insticator': {\n    preconnect: 'https://d3lcz8vpax4lo2.cloudfront.net', // can also be array if more than one URL needed\n    renderStartImplemented: true,\n  },\n\n  'invibes': {\n    prefetch: 'https://k.r66net.com/GetAmpLink',\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'iprom': {\n    prefetch: 'https://cdn.ipromcloud.com/ipromNS.js',\n  },\n\n  'ix': {\n    prefetch: ['https://js-sec.indexww.com/apl/amp.js'],\n    preconnect: 'https://as-sec.casalemedia.com',\n    renderStartImplemented: true,\n  },\n\n  'jubna': {},\n\n  'kargo': {},\n\n  'ketshwa': {},\n\n  'kiosked': {\n    renderStartImplemented: true,\n  },\n\n  'kixer': {\n    prefetch: 'https://cdn.kixer.com/ad/load.js',\n    renderStartImplemented: true,\n  },\n\n  'kuadio': {},\n\n  'lentainform': {\n    renderStartImplemented: true,\n    preconnect: [\n      'https://jsc.lentainform.com',\n      'https://servicer.lentainform.com',\n      'https://s-img.lentainform.com',\n    ],\n  },\n\n  'ligatus': {\n    prefetch: 'https://ssl.ligatus.com/render/ligrend.js',\n    renderStartImplemented: true,\n  },\n\n  'lockerdome': {\n    prefetch: 'https://cdn2.lockerdomecdn.com/_js/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'logly': {\n    preconnect: ['https://l.logly.co.jp', 'https://cdn.logly.co.jp'],\n    renderStartImplemented: true,\n  },\n\n  'loka': {\n    prefetch: 'https://loka-cdn.akamaized.net/scene/amp.js',\n    preconnect: [\n      'https://scene-front.lokaplatform.com',\n      'https://loka-materials.akamaized.net',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'luckyads': {\n    renderStartImplemented: true,\n  },\n\n  'macaw': {\n    renderStartImplemented: true,\n  },\n\n  'mads': {\n    prefetch: 'https://eu2.madsone.com/js/tags.js',\n  },\n\n  'mantis-display': {\n    prefetch: 'https://assets.mantisadnetwork.com/mantodea.min.js',\n    preconnect: [\n      'https://mantodea.mantisadnetwork.com',\n      'https://res.cloudinary.com',\n      'https://resize.mantisadnetwork.com',\n    ],\n  },\n\n  'marfeel': {\n    prefetch: 'https://securepubads.g.doubleclick.net/tag/js/gpt.js',\n    preconnect: [\n      'https://live.mrf.io',\n      'https://tpc.googlesyndication.com',\n      'https://fastlane.rubiconproject.com',\n      'https://htlb.casalemedia.com',\n      'https://prg.smartadserver.com',\n      'https://ib.adnxs.com',\n      'https://bidder.criteo.com',\n      'https://marfeel-d.openx.net',\n      'https://ice.360yield.com',\n      'https://mbid.marfeelrev.com',\n      'https://adservice.google.com',\n    ],\n    consentHandlingOverride: true,\n  },\n\n  'mantis-recommend': {\n    prefetch: 'https://assets.mantisadnetwork.com/recommend.min.js',\n    preconnect: [\n      'https://mantodea.mantisadnetwork.com',\n      'https://resize.mantisadnetwork.com',\n    ],\n  },\n\n  'mediaad': {},\n\n  'medianet': {\n    preconnect: 'https://contextual.media.net',\n    renderStartImplemented: true,\n  },\n\n  'mediavine': {\n    prefetch: 'https://amp.mediavine.com/wrapper.min.js',\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'medyanet': {\n    renderStartImplemented: true,\n  },\n\n  'meg': {\n    renderStartImplemented: true,\n  },\n\n  'mgid': {\n    renderStartImplemented: true,\n    preconnect: [\n      'https://jsc.mgid.com',\n      'https://servicer.mgid.com',\n      'https://s-img.mgid.com',\n    ],\n  },\n\n  'microad': {\n    prefetch: 'https://j.microad.net/js/camp.js',\n    preconnect: [\n      'https://s-rtb.send.microad.jp',\n      'https://s-rtb.send.microadinc.com',\n      'https://cache.send.microad.jp',\n      'https://cache.send.microadinc.com',\n      'https://deb.send.microad.jp',\n    ],\n  },\n\n  'miximedia': {\n    renderStartImplemented: true,\n  },\n\n  'mixpo': {\n    prefetch: 'https://cdn.mixpo.com/js/loader.js',\n    preconnect: ['https://player1.mixpo.com', 'https://player2.mixpo.com'],\n  },\n\n  'monetizer101': {\n    renderStartImplemented: true,\n  },\n\n  'mox': {\n    prefetch: [\n      'https://ad.mox.tv/js/amp.min.js',\n      'https://ad.mox.tv/mox/mwayss_invocation.min.js',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'my6sense': {\n    renderStartImplemented: true,\n  },\n\n  'myfinance': {\n    preconnect: [\n      'https://a.myfidevs.io',\n      'https://static.myfinance.com',\n      'https://www.myfinance.com',\n    ],\n    renderStartImplemented: true,\n    clientIdScope: 'AMP_ECID_GOOGLE',\n  },\n\n  'myoffrz': {\n    renderStartImplemented: true,\n  },\n\n  'mytarget': {\n    prefetch: 'https://ad.mail.ru/static/ads-async.js',\n    renderStartImplemented: true,\n  },\n\n  'mywidget': {\n    preconnect: 'https://likemore-fe.go.mail.ru',\n    prefetch: 'https://likemore-go.imgsmail.ru/widget_amp.js',\n    renderStartImplemented: true,\n  },\n\n  'nativeroll': {\n    prefetch: 'https://cdn01.nativeroll.tv/js/seedr-player.min.js',\n  },\n\n  'nativery': {\n    preconnect: 'https://cdn.nativery.com',\n  },\n\n  'nativo': {\n    prefetch: 'https://s.ntv.io/serve/load.js',\n  },\n\n  'navegg': {\n    renderStartImplemented: true,\n  },\n\n  'nend': {\n    prefetch: 'https://js1.nend.net/js/amp.js',\n    preconnect: ['https://output.nend.net', 'https://img1.nend.net'],\n  },\n\n  'netletix': {\n    preconnect: ['https://call.netzathleten-media.de'],\n    renderStartImplemented: true,\n  },\n\n  'noddus': {\n    prefetch: 'https://noddus.com/amp_loader.js',\n    renderStartImplemented: true,\n  },\n\n  'nokta': {\n    prefetch: 'https://static.virgul.com/theme/mockups/noktaamp/ampjs.js',\n    renderStartImplemented: true,\n  },\n\n  'nws': {},\n\n  'oblivki': {\n    renderStartImplemented: true,\n  },\n\n  'onead': {\n    prefetch: 'https://ad-specs.guoshipartners.com/static/js/onead-amp.min.js',\n    renderStartImplemented: true,\n  },\n\n  'onnetwork': {\n    renderStartImplemented: true,\n  },\n\n  'openadstream': {},\n\n  'openx': {\n    prefetch: 'https://www.googletagservices.com/tag/js/gpt.js',\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'opinary': {\n    renderStartImplemented: true,\n  },\n\n  'outbrain': {\n    renderStartImplemented: true,\n    prefetch: 'https://widgets.outbrain.com/widgetAMP/outbrainAMP.min.js',\n    preconnect: ['https://odb.outbrain.com'],\n    consentHandlingOverride: true,\n  },\n\n  'pixels': {\n    prefetch: 'https://cdn.adsfactor.net/amp/pixels-amp.min.js',\n    clientIdCookieName: '__AF',\n    renderStartImplemented: true,\n  },\n\n  'playstream': {\n    prefetch: 'https://app.playstream.media/js/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'plista': {},\n\n  'polymorphicads': {\n    prefetch: 'https://www.polymorphicads.jp/js/amp.js',\n    preconnect: [\n      'https://img.polymorphicads.jp',\n      'https://ad.polymorphicads.jp',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'popin': {\n    renderStartImplemented: true,\n  },\n\n  'postquare': {},\n\n  'ppstudio': {\n    renderStartImplemented: true,\n  },\n\n  'pressboard': {\n    renderStartImplemented: true,\n  },\n\n  'promoteiq': {},\n\n  'pubexchange': {},\n\n  'pubguru': {\n    renderStartImplemented: true,\n  },\n\n  'pubmatic': {\n    prefetch: 'https://ads.pubmatic.com/AdServer/js/amp.js',\n  },\n\n  'pubmine': {\n    prefetch: ['https://s.pubmine.com/head.js'],\n    preconnect: 'https://delivery.g.switchadhub.com',\n    renderStartImplemented: true,\n  },\n\n  'puffnetwork': {\n    prefetch: 'https://static.puffnetwork.com/amp_ad.js',\n    renderStartImplemented: true,\n  },\n\n  'pulse': {\n    prefetch: 'https://static.pulse.mail.ru/pulse-widget-amp.js',\n    renderStartImplemented: true,\n  },\n\n  'pulsepoint': {\n    prefetch: 'https://ads.contextweb.com/TagPublish/getjs.static.js',\n    preconnect: 'https://tag.contextweb.com',\n  },\n\n  'purch': {\n    prefetch: 'https://ramp.purch.com/serve/creative_amp.js',\n    renderStartImplemented: true,\n  },\n\n  'quoraad': {\n    prefetch: 'https://a.quora.com/amp_ad.js',\n    preconnect: 'https://ampad.quora.com',\n    renderStartImplemented: true,\n  },\n\n  'rakutenunifiedads': {\n    prefetch: 'https://s-cdn.rmp.rakuten.co.jp/js/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'rbinfox': {\n    renderStartImplemented: true,\n  },\n\n  'rcmwidget': {\n    prefetch: 'https://rcmjs.rambler.ru/static/rcmw/rcmw-amp.js',\n    renderStartImplemented: true,\n  },\n\n  'readmo': {\n    renderStartImplemented: true,\n  },\n\n  'realclick': {\n    renderStartImplemented: true,\n  },\n\n  'recomad': {\n    renderStartImplemented: true,\n  },\n\n  'recreativ': {\n    prefetch: 'https://go.rcvlink.com/static/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'relap': {\n    renderStartImplemented: true,\n  },\n\n  'relappro': {\n    prefetch: 'https://cdn.relappro.com/adservices/amp/relappro.amp.min.js',\n    preconnect: 'https://tags.relappro.com',\n    renderStartImplemented: true,\n  },\n\n  'remixd': {\n    preconnect: 'https://tags.remixd.com',\n    renderStartImplemented: true,\n  },\n\n  'revcontent': {\n    prefetch:\n      'https://labs-cdn.revcontent.com/build/amphtml/revcontent.amp.min.js',\n    preconnect: [\n      'https://trends.revcontent.com',\n      'https://cdn.revcontent.com',\n      'https://img.revcontent.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'revjet': {\n    prefetch: 'https://cdn.revjet.com/~cdn/JS/03/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'rfp': {\n    prefetch: 'https://js.rfp.fout.jp/rfp-amp.js',\n    preconnect: 'https://ad.rfp.fout.jp',\n    renderStartImplemented: true,\n  },\n\n  'rnetplus': {},\n\n  'rubicon': {},\n\n  'runative': {\n    prefetch: 'https://cdn.run-syndicate.com/sdk/v1/n.js',\n    renderStartImplemented: true,\n  },\n\n  'sas': {\n    renderStartImplemented: true,\n  },\n\n  'seedingalliance': {},\n\n  'sekindo': {\n    renderStartImplemented: true,\n  },\n\n  'sharethrough': {\n    renderStartImplemented: true,\n  },\n\n  'shemedia': {\n    prefetch: [\n      'https://securepubads.g.doubleclick.net/tag/js/gpt.js',\n      'https://ads.shemedia.com/static/amp.js',\n    ],\n    preconnect: [\n      'https://partner.googleadservices.com',\n      'https://tpc.googlesyndication.com',\n      'https://ads.blogherads.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'sklik': {\n    prefetch: 'https://c.imedia.cz/js/amp.js',\n  },\n\n  'slimcutmedia': {\n    preconnect: [\n      'https://sb.freeskreen.com',\n      'https://static.freeskreen.com',\n      'https://video.freeskreen.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'smartads': {\n    prefetch: 'https://smart-ads.biz/amp.js',\n  },\n\n  'smartadserver': {\n    prefetch: 'https://ec-ns.sascdn.com/diff/js/amp.v0.js',\n    preconnect: 'https://static.sascdn.com',\n    renderStartImplemented: true,\n  },\n\n  'smartclip': {\n    prefetch: 'https://cdn.smartclip.net/amp/amp.v0.js',\n    preconnect: 'https://des.smartclip.net',\n    renderStartImplemented: true,\n  },\n\n  'smi2': {\n    renderStartImplemented: true,\n  },\n\n  'smilewanted': {\n    prefetch: 'https://prebid.smilewanted.com/amp/amp.js',\n    preconnect: 'https://static.smilewanted.com',\n    renderStartImplemented: true,\n  },\n\n  'sogouad': {\n    prefetch: 'https://theta.sogoucdn.com/wap/js/aw.js',\n    renderStartImplemented: true,\n  },\n\n  'sortable': {\n    prefetch: 'https://www.googletagservices.com/tag/js/gpt.js',\n    preconnect: [\n      'https://tags-cdn.deployads.com',\n      'https://partner.googleadservices.com',\n      'https://securepubads.g.doubleclick.net',\n      'https://tpc.googlesyndication.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'sona': {\n    renderStartImplemented: true,\n  },\n\n  'sovrn': {\n    prefetch: 'https://ap.lijit.com/www/sovrn_amp/sovrn_ads.js',\n  },\n\n  'speakol': {\n    renderStartImplemented: true,\n  },\n\n  'spotx': {\n    preconnect: 'https://js.spotx.tv',\n    renderStartImplemented: true,\n  },\n\n  'springAds': {\n    preconnect: ['https://ib.adnxs.com'],\n    renderStartImplemented: true,\n  },\n\n  'ssp': {\n    prefetch: 'https://ssp.imedia.cz/static/js/ssp.js',\n    renderStartImplemented: true,\n    consentHandlingOverride: true,\n  },\n\n  'strossle': {\n    preconnect: [\n      'https://amp.spklw.com',\n      'https://widgets.sprinklecontent.com',\n      'https://images.sprinklecontent.com',\n    ],\n  },\n\n  'sunmedia': {\n    prefetch: 'https://vod.addevweb.com/sunmedia/amp/ads/sunmedia.js',\n    preconnect: 'https://static.addevweb.com',\n    renderStartImplemented: true,\n  },\n\n  'svknative': {\n    renderStartImplemented: true,\n    prefetch: 'https://widget.svk-native.ru/js/embed.js',\n  },\n\n  'swoop': {\n    prefetch: 'https://www.swoop-amp.com/amp.js',\n    preconnect: ['https://www.swpsvc.com', 'https://client.swpcld.com'],\n    renderStartImplemented: true,\n  },\n\n  'taboola': {},\n\n  'tail': {\n    renderStartImplemented: true,\n  },\n\n  'tcsemotion': {\n    prefetch: 'https://ads.tcsemotion.com/www/delivery/amphb.js',\n    renderStartImplemented: true,\n  },\n\n  'teads': {\n    prefetch: 'https://s8t.teads.tv/media/format/v3/teads-format.min.js',\n    preconnect: [\n      'https://cdn2.teads.tv',\n      'https://a.teads.tv',\n      'https://t.teads.tv',\n      'https://r.teads.tv',\n    ],\n    consentHandlingOverride: true,\n  },\n\n  'temedya': {\n    prefetch: [\n      'https://widget.cdn.vidyome.com/builds/loader-amp.js',\n      'https://vidyome-com.cdn.vidyome.com/vidyome/builds/widgets.js',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'torimochi': {\n    renderStartImplemented: true,\n  },\n\n  'tracdelight': {\n    prefetch: 'https://scripts.tracdelight.io/amp.js',\n    renderStartImplemented: true,\n  },\n\n  'triplelift': {},\n\n  'trugaze': {\n    clientIdScope: '__tg_amp',\n    renderStartImplemented: true,\n  },\n\n  'uas': {\n    prefetch: 'https://ads.pubmatic.com/AdServer/js/phoenix.js',\n  },\n\n  'ucfunnel': {\n    renderStartImplemented: true,\n  },\n\n  'uzou': {\n    preconnect: ['https://speee-ad.akamaized.net'],\n    renderStartImplemented: true,\n  },\n\n  'unruly': {\n    prefetch: 'https://video.unrulymedia.com/native/native-loader.js',\n    renderStartImplemented: true,\n  },\n\n  'valuecommerce': {\n    prefetch: 'https://amp.valuecommerce.com/amp_bridge.js',\n    preconnect: ['https://ad.jp.ap.valuecommerce.com'],\n    renderStartImplemented: true,\n  },\n\n  'vdoai': {\n    prefetch: 'https://a.vdo.ai/core/dependencies_amp/vdo.min.js',\n    renderStartImplemented: true,\n  },\n\n  'verizonmedia': {\n    prefetch: 'https://jac.yahoosandbox.com/amp/jac.js',\n    preconnect: ['https://jill.fc.yahoo.com'],\n    renderStartImplemented: true,\n  },\n\n  'videointelligence': {\n    preconnect: 'https://s.vi-serve.com',\n    renderStartImplemented: true,\n  },\n\n  'videonow': {\n    renderStartImplemented: true,\n  },\n\n  'viralize': {\n    renderStartImplemented: true,\n  },\n\n  'vlyby': {\n    prefetch: 'https://cdn.vlyby.com/amp/qad/qad-outer2.js',\n  },\n\n  'vmfive': {\n    prefetch: 'https://man.vm5apis.com/dist/adn-web-sdk.js',\n    preconnect: ['https://vawpro.vm5apis.com', 'https://vahfront.vm5apis.com'],\n    renderStartImplemented: true,\n  },\n\n  'webediads': {\n    prefetch: 'https://eu1.wbdds.com/amp.min.js',\n    preconnect: ['https://goutee.top', 'https://mediaathay.org.uk'],\n    renderStartImplemented: true,\n  },\n\n  'weborama-display': {\n    prefetch: [\n      'https://cstatic.weborama.fr/js/advertiserv2/adperf_launch_1.0.0_scrambled.js',\n      'https://cstatic.weborama.fr/js/advertiserv2/adperf_core_1.0.0_scrambled.js',\n    ],\n  },\n\n  'whopainfeed': {\n    prefetch: 'https://widget.infeed.com.ar/widget/widget-amp.js',\n  },\n\n  'widespace': {},\n\n  'wisteria': {\n    renderStartImplemented: true,\n  },\n\n  'wpmedia': {\n    prefetch: 'https://std.wpcdn.pl/wpjslib/wpjslib-amp.js',\n    preconnect: ['https://www.wp.pl', 'https://v.wpimg.pl'],\n    renderStartImplemented: true,\n  },\n\n  'xlift': {\n    prefetch: 'https://cdn.x-lift.jp/resources/common/xlift_amp.js',\n    renderStartImplemented: true,\n  },\n\n  'yahoo': {\n    prefetch: 'https://s.yimg.com/aaq/ampad/display.js',\n    preconnect: 'https://us.adserver.yahoo.com',\n  },\n\n  'yahoofedads': {\n    renderStartImplemented: true,\n  },\n\n  'yahoojp': {\n    prefetch: [\n      'https://s.yimg.jp/images/listing/tool/yads/ydn/amp/amp.js',\n      'https://yads.c.yimg.jp/js/yads.js',\n    ],\n    preconnect: 'https://yads.yahoo.co.jp',\n  },\n\n  'yahoonativeads': {\n    renderStartImplemented: true,\n  },\n\n  'yandex': {\n    prefetch: 'https://an.yandex.ru/system/context_amp.js',\n    renderStartImplemented: true,\n  },\n\n  'yektanet': {\n    preconnect: [\n      'https://cdn.yektanet.com',\n      'https://cg-sc.yektanet.com',\n      'https://native.yektanet.com',\n      'https://nfetch.yektanet.net',\n      'https://rfetch.yektanet.net',\n      'https://scrapper.yektanet.com',\n      'https://ua.yektanet.com',\n      'https://bfetch.yektanet.com',\n      'https://mostatil.cdn.yektanet.com',\n    ],\n    renderStartImplemented: true,\n  },\n\n  'yengo': {\n    renderStartImplemented: true,\n  },\n\n  'yieldbot': {\n    prefetch: [\n      'https://cdn.yldbt.com/js/yieldbot.intent.amp.js',\n      'https://msg.yldbt.com/js/ybmsg.html',\n    ],\n    preconnect: 'https://i.yldbt.com',\n  },\n\n  'yieldmo': {\n    prefetch: 'https://static.yieldmo.com/ym.1.js',\n    preconnect: ['https://s.yieldmo.com', 'https://ads.yieldmo.com'],\n    renderStartImplemented: true,\n  },\n\n  'yieldone': {\n    prefetch: 'https://img.ak.impact-ad.jp/ic/pone/commonjs/yone-amp.js',\n  },\n\n  'yieldpro': {\n    preconnect: 'https://creatives.yieldpro.eu',\n    renderStartImplemented: true,\n  },\n\n  'zedo': {\n    prefetch: 'https://ss3.zedo.com/gecko/tag/Gecko.amp.min.js',\n    renderStartImplemented: true,\n  },\n\n  'zen': {\n    prefetch: 'https://zen.yandex.ru/widget-loader',\n    preconnect: ['https://yastatic.net/'],\n    renderStartImplemented: true,\n  },\n\n  'zergnet': {},\n\n  'zucks': {\n    preconnect: [\n      'https://j.zucks.net.zimg.jp',\n      'https://sh.zucks.net',\n      'https://k.zucks.net',\n      'https://static.zucks.net.zimg.jp',\n    ],\n  },\n\n  'baidu': {\n    prefetch: 'https://dup.baidustatic.com/js/dm.js',\n    renderStartImplemented: true,\n  },\n\n  'sulvo': {},\n});\n\nexport {adConfig};\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {adConfig} from '../ads/_config';\nimport {dev} from '../src/log';\n\n/**\n * @param {AMP.BaseElement} adElement\n * @return {!Promise<string|undefined>} A promise for a CID or undefined if\n *     - the ad network does not request one or\n *     - `amp-analytics` which provides the CID service was not installed.\n */\nexport function getAdCid(adElement) {\n  const config = adConfig[adElement.element.getAttribute('type')];\n  if (!config || !config['clientIdScope']) {\n    return Promise.resolve();\n  }\n  return getOrCreateAdCid(\n    adElement.getAmpDoc(),\n    config['clientIdScope'],\n    config['clientIdCookieName']\n  );\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampDoc\n * @param {string} clientIdScope\n * @param {string=} opt_clientIdCookieName\n * @param {number=} opt_timeout\n * @return {!Promise<string|undefined>} A promise for a CID or undefined.\n */\nexport function getOrCreateAdCid(\n  ampDoc,\n  clientIdScope,\n  opt_clientIdCookieName,\n  opt_timeout\n) {\n  const timeout =\n    isNaN(opt_timeout) || opt_timeout == null ? 1000 : opt_timeout;\n  const cidPromise = Services.cidForDoc(ampDoc).then((cidService) => {\n    if (!cidService) {\n      return;\n    }\n    return cidService\n      .get(\n        {\n          scope: dev().assertString(clientIdScope),\n          createCookieIfNotPresent: true,\n          cookieName: opt_clientIdCookieName,\n        },\n        Promise.resolve(undefined)\n      )\n      .catch((error) => {\n        // Not getting a CID is not fatal.\n        dev().error('AD-CID', error);\n        return undefined;\n      });\n  });\n  // The CID should never be crucial for an ad. If it does not come within\n  // 1 second, assume it will never arrive.\n  return Services.timerFor(ampDoc.win)\n    .timeoutPromise(timeout, cidPromise, 'cid timeout')\n    .catch((error) => {\n      // Timeout is not fatal.\n      dev().warn('AD-CID', error);\n      return undefined;\n    });\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LayoutRectDef, layoutRectLtwh} from '../math/layout-rect';\n\n/**\n * @param {!Element} element\n * @return {!LayoutRectDef}\n */\nexport function getPageLayoutBoxBlocking(element) {\n  const stop = element.ownerDocument.body;\n  let left = 0;\n  let top = 0;\n  for (let n = element; n && n != stop; n = n./*OK*/ offsetParent) {\n    left += n./*OK*/ offsetLeft;\n    top += n./*OK*/ offsetTop;\n  }\n  const {offsetHeight, offsetWidth} = /** @type {!HTMLElement} */ (element);\n  return layoutRectLtwh(left, top, offsetWidth, offsetHeight);\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Services} from '../services';\nimport {devAssert} from '../log';\nimport {isAmp4Email} from '../format';\nimport {isFiniteNumber} from '../core/types';\nimport {loadPromise} from '../event-helper';\nimport {whenDocumentComplete} from '../core/document-ready';\n\n/** @typedef {string|number|boolean|undefined|null} */\nexport let ResolverReturnDef;\n\n/** @typedef {function(...string):ResolverReturnDef} */\nexport let SyncResolverDef;\n\n/** @typedef {function(...string):!Promise<ResolverReturnDef>} */\nexport let AsyncResolverDef;\n\n/** @typedef {{sync: SyncResolverDef, async: AsyncResolverDef}} */\nlet ReplacementDef;\n\n/**\n * A list of events that the navTiming needs to wait for.\n * Sort event in order\n * @enum {number}\n */\nconst WAITFOR_EVENTS = {\n  VIEWER_FIRST_VISIBLE: 1,\n  DOCUMENT_COMPLETE: 2,\n  LOAD: 3,\n  LOAD_END: 4,\n};\n\n/**\n * A list of events on which event they should wait\n * @const {!Object<string, WAITFOR_EVENTS>}\n */\nconst NAV_TIMING_WAITFOR_EVENTS = {\n  // ready on viewer first visible\n  'navigationStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'redirectStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'redirectEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'fetchStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'domainLookupStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'domainLookupEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'connectStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'secureConnectionStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'connectEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'requestStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'responseStart': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  'responseEnd': WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE,\n  // ready on document complte\n  'domLoading': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domInteractive': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domContentLoaded': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  'domComplete': WAITFOR_EVENTS.DOCUMENT_COMPLETE,\n  // ready on load\n  'loadEventStart': WAITFOR_EVENTS.LOAD,\n  // ready on load complete\n  'loadEventEnd': WAITFOR_EVENTS.LOAD_END,\n};\n\n/**\n * Returns navigation timing information based on the start and end events.\n * The data for the timing events is retrieved from performance.timing API.\n * If start and end events are both given, the result is the difference between\n * the two. If only start event is given, the result is the timing value at\n * start event.\n * @param {!Window} win\n * @param {string} startEvent\n * @param {string=} endEvent\n * @return {!Promise<ResolverReturnDef>}\n */\nexport function getTimingDataAsync(win, startEvent, endEvent) {\n  // Fallback to load event if we don't know what to wait for\n  const startWaitForEvent =\n    NAV_TIMING_WAITFOR_EVENTS[startEvent] || WAITFOR_EVENTS.LOAD;\n  const endWaitForEvent = endEvent\n    ? NAV_TIMING_WAITFOR_EVENTS[endEvent] || WAITFOR_EVENTS.LOAD\n    : startWaitForEvent;\n\n  const waitForEvent = Math.max(startWaitForEvent, endWaitForEvent);\n\n  // set wait for onload to be default\n  let readyPromise;\n  if (waitForEvent === WAITFOR_EVENTS.VIEWER_FIRST_VISIBLE) {\n    readyPromise = Promise.resolve();\n  } else if (waitForEvent === WAITFOR_EVENTS.DOCUMENT_COMPLETE) {\n    readyPromise = whenDocumentComplete(win.document);\n  } else if (waitForEvent === WAITFOR_EVENTS.LOAD) {\n    readyPromise = loadPromise(win);\n  } else if (waitForEvent === WAITFOR_EVENTS.LOAD_END) {\n    // performance.timing.loadEventEnd returns 0 before the load event handler\n    // has terminated, that's when the load event is completed.\n    // To wait for the event handler to terminate, wait 1ms and defer to the\n    // event loop.\n    const timer = Services.timerFor(win);\n    readyPromise = loadPromise(win).then(() => timer.promise(1));\n  }\n\n  devAssert(readyPromise, 'waitForEvent not supported ' + waitForEvent);\n\n  return readyPromise.then(() => {\n    return getTimingDataSync(win, startEvent, endEvent);\n  });\n}\n\n/**\n * Returns navigation timing information based on the start and end events.\n * The data for the timing events is retrieved from performance.timing API.\n * If start and end events are both given, the result is the difference between\n * the two. If only start event is given, the result is the timing value at\n * start event. Enforces synchronous evaluation.\n * @param {!Window} win\n * @param {string} startEvent\n * @param {string=} endEvent\n * @return {ResolverReturnDef} undefined if API is not available, empty string\n *    if it is not yet available, or value as string\n */\nexport function getTimingDataSync(win, startEvent, endEvent) {\n  const timingInfo = win['performance'] && win['performance']['timing'];\n  if (!timingInfo || timingInfo['navigationStart'] == 0) {\n    // Navigation timing API is not supported.\n    return;\n  }\n\n  const metric =\n    endEvent === undefined\n      ? timingInfo[startEvent]\n      : timingInfo[endEvent] - timingInfo[startEvent];\n\n  if (!isFiniteNumber(metric) || metric < 0) {\n    // The metric is not supported.\n    return;\n  } else {\n    return metric;\n  }\n}\n\n/**\n * Returns navigation information from the current browsing context.\n * @param {!Window} win\n * @param {string} attribute\n * @return {ResolverReturnDef}\n */\nexport function getNavigationData(win, attribute) {\n  const navigationInfo = win['performance'] && win['performance']['navigation'];\n  if (!navigationInfo || navigationInfo[attribute] === undefined) {\n    // PerformanceNavigation interface is not supported or attribute is not\n    // implemented.\n    return;\n  }\n  return navigationInfo[attribute];\n}\n\n/**\n * A class to provide variable substitution related features. Extend this class\n * and override initialize() to add more supported variables.\n */\nexport class VariableSource {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @protected @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @private @const {!Object<string, !ReplacementDef>} */\n    this.replacements_ = Object.create(null);\n\n    /** @private {boolean} */\n    this.initialized_ = false;\n\n    this.getUrlMacroAllowlist_();\n  }\n\n  /**\n   * Lazily initialize the default replacements.\n   * @private\n   */\n  initialize_() {\n    this.initialize();\n    this.initialized_ = true;\n  }\n\n  /**\n   * Override this method to set all the variables supported by derived class.\n   */\n  initialize() {\n    // Needs to be implemented by derived classes.\n  }\n\n  /**\n   * Method exists to assist stubbing in tests.\n   * @param {string} name\n   * @return {!ReplacementDef}\n   */\n  get(name) {\n    if (!this.initialized_) {\n      this.initialize_();\n    }\n\n    return this.replacements_[name];\n  }\n\n  /**\n   * Sets a synchronous value resolver for the variable with the specified name.\n   * The value resolver may optionally take an extra parameter.\n   * Can be called in conjunction with setAsync to allow for additional\n   * asynchronous resolver where expand will use async and expandSync the sync\n   * version.\n   * @param {string} varName\n   * @param {!SyncResolverDef} syncResolver\n   * @return {!VariableSource}\n   */\n  set(varName, syncResolver) {\n    devAssert(varName.indexOf('RETURN') == -1);\n    this.replacements_[varName] = this.replacements_[varName] || {\n      sync: undefined,\n      async: undefined,\n    };\n    this.replacements_[varName].sync = syncResolver;\n    return this;\n  }\n\n  /**\n   * Sets an async value resolver for the variable with the specified name.\n   * The value resolver may optionally take an extra parameter.\n   * Can be called in conjuction with setAsync to allow for additional\n   * asynchronous resolver where expand will use async and expandSync the sync\n   * version.\n   * @param {string} varName\n   * @param {!AsyncResolverDef} asyncResolver\n   * @return {!VariableSource}\n   */\n  setAsync(varName, asyncResolver) {\n    devAssert(varName.indexOf('RETURN') == -1);\n    this.replacements_[varName] = this.replacements_[varName] || {\n      sync: undefined,\n      async: undefined,\n    };\n    this.replacements_[varName].async = asyncResolver;\n    return this;\n  }\n\n  /**\n   * Helper method to set both sync and async resolvers.\n   * @param {string} varName\n   * @param {!SyncResolverDef} syncResolver\n   * @param {!AsyncResolverDef} asyncResolver\n   * @return {!VariableSource}\n   */\n  setBoth(varName, syncResolver, asyncResolver) {\n    return this.set(varName, syncResolver).setAsync(varName, asyncResolver);\n  }\n\n  /**\n   * Returns a Regular expression that can be used to detect all the variables\n   * in a template.\n   * @param {!Object<string, *>=} opt_bindings\n   * @param {!Object<string, boolean>=} opt_allowlist Optional allowlist of names\n   *   that can be substituted.\n   * @return {!RegExp}\n   */\n  getExpr(opt_bindings, opt_allowlist) {\n    if (!this.initialized_) {\n      this.initialize_();\n    }\n    const all = {...this.replacements_, ...opt_bindings};\n    return this.buildExpr_(Object.keys(all), opt_allowlist);\n  }\n\n  /**\n   * @param {!Array<string>} keys\n   * @param {!Object<string, boolean>=} opt_allowlist Optional allowlist of names\n   *   that can be substituted.\n   * @return {!RegExp}\n   * @private\n   */\n  buildExpr_(keys, opt_allowlist) {\n    // If a allowlist is present, the keys must belong to the allowlist.\n    // We filter the keys one last time to ensure no unallowlisted key is\n    // allowed.\n    if (this.getUrlMacroAllowlist_()) {\n      keys = keys.filter((key) => this.getUrlMacroAllowlist_().includes(key));\n    }\n    // If a allowlist is passed into the call to GlobalVariableSource.expand_\n    // then we only resolve values contained in the allowlist.\n    if (opt_allowlist) {\n      keys = keys.filter((key) => opt_allowlist[key]);\n    }\n    if (keys.length === 0) {\n      const regexThatMatchesNothing = /_^/g; // lgtm [js/regex/unmatchable-caret]\n      return regexThatMatchesNothing;\n    }\n    // The keys must be sorted to ensure that the longest keys are considered\n    // first. This avoids a problem where a RANDOM conflicts with RANDOM_ONE.\n    keys.sort((s1, s2) => s2.length - s1.length);\n    // Keys that start with a `$` need to be escaped so that they do not\n    // interfere with the regex that is constructed.\n    const escaped = keys.map((key) => {\n      if (key[0] === '$') {\n        return '\\\\' + key;\n      }\n      return key;\n    });\n\n    const all = escaped.join('|');\n    // Match the given replacement patterns, as well as optionally\n    // arguments to the replacement behind it in parentheses.\n    // Example string that match\n    // FOO_BAR\n    // FOO_BAR(arg1)\n    // FOO_BAR(arg1,arg2)\n    // FOO_BAR(arg1, arg2)\n    const regexStr = '\\\\$?(' + all + ')';\n    return new RegExp(regexStr, 'g');\n  }\n\n  /**\n   * For email documents, all URL macros are disallowed by default.\n   * @return {Array<string>|undefined} The allowlist of substitutable AMP variables\n   * @private\n   */\n  getUrlMacroAllowlist_() {\n    if (this.variableAllowlist_) {\n      return this.variableAllowlist_;\n    }\n\n    // Disallow all URL macros for AMP4Email format documents.\n    if (this.ampdoc.isSingleDoc()) {\n      const doc = /** @type {!Document} */ (this.ampdoc.getRootNode());\n      if (isAmp4Email(doc)) {\n        /**\n         * The allowlist of variables allowed for variable substitution.\n         * @private {?Array<string>}\n         */\n        this.variableAllowlist_ = [''];\n        return this.variableAllowlist_;\n      }\n    }\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CONSENT_POLICY_STATE} from '../../../src/core/constants/consent-state';\nimport {DomFingerprint} from '../../../src/core/dom/fingerprint';\nimport {GEO_IN_GROUP} from '../../../extensions/amp-geo/0.1/amp-geo-in-group';\nimport {Services} from '../../../src/services';\nimport {buildUrl} from './shared/url-builder';\nimport {dev, devAssert, user} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {\n  getBinaryType,\n  isExperimentOn,\n  toggleExperiment,\n} from '../../../src/experiments';\nimport {getConsentPolicyState} from '../../../src/consent';\nimport {getMeasuredResources} from '../../../src/ini-load';\nimport {getMode} from '../../../src/mode';\nimport {getOrCreateAdCid} from '../../../src/ad-cid';\nimport {getPageLayoutBoxBlocking} from '../../../src/core/dom/page-layout-box';\nimport {getTimingDataSync} from '../../../src/service/variable-source';\nimport {internalRuntimeVersion} from '../../../src/internal-version';\nimport {parseJson} from '../../../src/core/types/object/json';\nimport {whenUpgradedToCustomElement} from '../../../src/dom';\n\n/** @type {string}  */\nconst AMP_ANALYTICS_HEADER = 'X-AmpAnalytics';\n\n/** @const {number} */\nconst MAX_URL_LENGTH = 15360;\n\n/** @enum {string} */\nconst AmpAdImplementation = {\n  AMP_AD_XHR_TO_IFRAME: '2',\n  AMP_AD_XHR_TO_IFRAME_OR_AMP: '3',\n  AMP_AD_IFRAME_GET: '5',\n};\n\n/** @const {!Object} */\nexport const ValidAdContainerTypes = {\n  'AMP-CAROUSEL': 'ac',\n  'AMP-FX-FLYING-CARPET': 'fc',\n  'AMP-LIGHTBOX': 'lb',\n  'AMP-STICKY-AD': 'sa',\n};\n\n/**\n * See `VisibilityState` enum.\n * @const {!Object<string, string>}\n */\nconst visibilityStateCodes = {\n  'visible': '1',\n  'hidden': '2',\n  'prerender': '3',\n  'unloaded': '5',\n};\n\n/** @const {string} */\nexport const QQID_HEADER = 'X-QQID';\n\n/** @type {string} */\nexport const SANDBOX_HEADER = 'amp-ff-sandbox';\n\n/**\n * Element attribute that stores Google ads experiment IDs.\n *\n * Note: This attribute should be used only for tracking experimental\n * implementations of AMP tags, e.g., by AMPHTML implementors.  It should not be\n * added by a publisher page.\n *\n * @const {string}\n * @visibleForTesting\n */\nexport const EXPERIMENT_ATTRIBUTE = 'data-experiment-id';\n\n/**\n * Element attribute that stores AMP experiment IDs.\n *\n * Note: This attribute should be used only for tracking experimental\n * implementations of AMP tags, e.g., by AMPHTML implementors.  It should not be\n * added by a publisher page.\n *\n * @const {string}\n * @visibleForTesting\n */\nexport const AMP_EXPERIMENT_ATTRIBUTE = 'data-amp-experiment-id';\n\n/** @typedef {{urls: !Array<string>}}\n */\nexport let AmpAnalyticsConfigDef;\n\n/**\n * @typedef {{instantLoad: boolean, writeInBody: boolean}}\n */\nexport let NameframeExperimentConfig;\n\n/**\n * @const {!./shared/url-builder.QueryParameterDef}\n * @visibleForTesting\n */\nexport const TRUNCATION_PARAM = {name: 'trunc', value: '1'};\n\n/** @const {Object} */\nconst CDN_PROXY_REGEXP =\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org((\\/.*)|($))+/;\n\n/**\n * Returns the value of some navigation timing parameter.\n * Feature detection is used for safety on browsers that do not support the\n * performance API.\n * @param {!Window} win\n * @param {string} timingEvent The name of the timing event, e.g.\n *     'navigationStart' or 'domContentLoadEventStart'.\n * @return {number}\n */\nfunction getNavigationTiming(win, timingEvent) {\n  return (\n    (win['performance'] &&\n      win['performance']['timing'] &&\n      win['performance']['timing'][timingEvent]) ||\n    0\n  );\n}\n\n/**\n * Check whether Google Ads supports the A4A rendering pathway is valid for the\n * environment by ensuring native crypto support and page originated in the\n * {@code cdn.ampproject.org} CDN <em>or</em> we must be running in local\n * dev mode.\n *\n * @param {!Window} win  Host window for the ad.\n * @return {boolean}  Whether Google Ads should attempt to render via the A4A\n *   pathway.\n */\nexport function isGoogleAdsA4AValidEnvironment(win) {\n  return (\n    supportsNativeCrypto(win) &&\n    (!!isCdnProxy(win) || getMode(win).localDev || getMode(win).test)\n  );\n}\n\n/**\n * Checks whether native crypto is supported for win.\n * @param {!Window} win  Host window for the ad.\n * @return {boolean} Whether native crypto is supported.\n */\nexport function supportsNativeCrypto(win) {\n  return win.crypto && (win.crypto.subtle || win.crypto.webkitSubtle);\n}\n\n/**\n * @param {!AMP.BaseElement} ampElement The element on whose lifecycle this\n *    reporter will be reporting.\n * @return {boolean} whether reporting is enabled for this element\n */\nexport function isReportingEnabled(ampElement) {\n  // Carve-outs: We only want to enable profiling pingbacks when:\n  //   - The ad is from one of the Google networks (AdSense or Doubleclick).\n  //   - The ad slot is in the A4A-vs-3p amp-ad control branch (either via\n  //     internal, client-side selection or via external, Google Search\n  //     selection).\n  //   - We haven't turned off profiling via the rate controls in\n  //     build-system/global-config/{canary,prod}-config.json\n  // If any of those fail, we use the `BaseLifecycleReporter`, which is a\n  // a no-op (sends no pings).\n  const type = ampElement.element.getAttribute('type');\n  const {win} = ampElement;\n  // In local dev mode, neither the canary nor prod config files is available,\n  // so manually set the profiling rate, for testing/dev.\n  if (getMode(ampElement.win).localDev && !getMode(ampElement.win).test) {\n    toggleExperiment(win, 'a4aProfilingRate', true, true);\n  }\n  return (\n    (type == 'doubleclick' || type == 'adsense') &&\n    isExperimentOn(win, 'a4aProfilingRate')\n  );\n}\n\n/**\n * Has side-effect of incrementing ifi counter on window.\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {!Array<string>=} opt_experimentIds Any experiments IDs (in addition\n *     to those specified on the ad element) that should be included in the\n *     request.\n * @return {!Object<string,null|number|string>} block level parameters\n */\nexport function googleBlockParameters(a4a, opt_experimentIds) {\n  const {element: adElement, win} = a4a;\n  const slotRect = getPageLayoutBoxBlocking(adElement);\n  const iframeDepth = iframeNestingDepth(win);\n  const enclosingContainers = getEnclosingContainerTypes(adElement);\n  let eids = adElement.getAttribute(EXPERIMENT_ATTRIBUTE);\n  if (opt_experimentIds) {\n    eids = mergeExperimentIds(opt_experimentIds, eids);\n  }\n  const aexp = adElement.getAttribute(AMP_EXPERIMENT_ATTRIBUTE);\n  return {\n    'adf': DomFingerprint.generate(adElement),\n    'nhd': iframeDepth,\n    'eid': eids,\n    'adx': Math.round(slotRect.left),\n    'ady': Math.round(slotRect.top),\n    'oid': '2',\n    'act': enclosingContainers.length ? enclosingContainers.join() : null,\n    // aexp URL param is separated by `!`, not `,`.\n    'aexp': aexp ? aexp.replace(/,/g, '!') : null,\n  };\n}\n\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} type matching typing attribute.\n * @param {function(!Element):string} groupFn\n * @return {!Promise<!Object<string,!Array<!Promise<!../../../src/base-element.BaseElement>>>>}\n */\nexport function groupAmpAdsByType(ampdoc, type, groupFn) {\n  // Look for amp-ad elements of correct type or those contained within\n  // standard container type.  Note that display none containers will not be\n  // included as they will never be measured.\n  // TODO(keithwrightbos): what about slots that become measured due to removal\n  // of display none (e.g. user resizes viewport and media selector makes\n  // visible).\n  const ampAdSelector = (r) =>\n    r.element./*OK*/ querySelector(`amp-ad[type=${type}]`);\n  return (\n    getMeasuredResources(ampdoc, ampdoc.win, (r) => {\n      const isAmpAdType =\n        r.element.tagName == 'AMP-AD' && r.element.getAttribute('type') == type;\n      if (isAmpAdType) {\n        return true;\n      }\n      const isAmpAdContainerElement =\n        Object.keys(ValidAdContainerTypes).includes(r.element.tagName) &&\n        !!ampAdSelector(r);\n      return isAmpAdContainerElement;\n    })\n      // Need to wait on any contained element resolution followed by build\n      // of child ad.\n      .then((resources) =>\n        Promise.all(\n          resources.map((resource) => {\n            if (resource.element.tagName == 'AMP-AD') {\n              return resource.element;\n            }\n            // Must be container element so need to wait for child amp-ad to\n            // be upgraded.\n            return whenUpgradedToCustomElement(\n              dev().assertElement(ampAdSelector(resource))\n            );\n          })\n        )\n      )\n      // Group by networkId.\n      .then((elements) =>\n        elements.reduce((result, element) => {\n          const groupId = groupFn(element);\n          (result[groupId] || (result[groupId] = [])).push(element.getImpl());\n          return result;\n        }, {})\n      )\n  );\n}\n\n/**\n * @param {! ../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {number} startTime\n * @return {!Promise<!Object<string,null|number|string>>}\n */\nexport function googlePageParameters(a4a, startTime) {\n  const {win} = a4a;\n  const ampDoc = a4a.getAmpDoc();\n  // Do not wait longer than 1 second to retrieve referrer to ensure\n  // viewer integration issues do not cause ad requests to hang indefinitely.\n  const referrerPromise = Services.timerFor(win)\n    .timeoutPromise(1000, Services.viewerForDoc(ampDoc).getReferrerUrl())\n    .catch(() => {\n      dev().expectedError('AMP-A4A', 'Referrer timeout!');\n      return '';\n    });\n  // Set dom loading time to first visible if page started in prerender state\n  // determined by truthy value for visibilityState param.\n  const domLoading = a4a.getAmpDoc().getParam('visibilityState')\n    ? a4a.getAmpDoc().getLastVisibleTime()\n    : getNavigationTiming(win, 'domLoading');\n  return Promise.all([\n    getOrCreateAdCid(ampDoc, 'AMP_ECID_GOOGLE', '_ga'),\n    referrerPromise,\n  ]).then((promiseResults) => {\n    const clientId = promiseResults[0];\n    const referrer = promiseResults[1];\n    const {canonicalUrl, pageViewId} = Services.documentInfoForDoc(ampDoc);\n    // Read by GPT for GA/GPT integration.\n    win.gaGlobal = win.gaGlobal || {cid: clientId, hid: pageViewId};\n    const {screen} = win;\n    const viewport = Services.viewportForDoc(ampDoc);\n    const viewportRect = viewport.getRect();\n    const viewportSize = viewport.getSize();\n    const visibilityState = ampDoc.getVisibilityState();\n    return {\n      'is_amp': a4a.isXhrAllowed()\n        ? AmpAdImplementation.AMP_AD_XHR_TO_IFRAME_OR_AMP\n        : AmpAdImplementation.AMP_AD_IFRAME_GET,\n      'amp_v': internalRuntimeVersion(),\n      'd_imp': '1',\n      'c': getCorrelator(win, ampDoc, clientId),\n      'ga_cid': win.gaGlobal.cid || null,\n      'ga_hid': win.gaGlobal.hid || null,\n      'dt': startTime,\n      'biw': viewportRect.width,\n      'bih': viewportRect.height,\n      'u_aw': screen ? screen.availWidth : null,\n      'u_ah': screen ? screen.availHeight : null,\n      'u_cd': screen ? screen.colorDepth : null,\n      'u_w': screen ? screen.width : null,\n      'u_h': screen ? screen.height : null,\n      'u_tz': -new Date().getTimezoneOffset(),\n      'u_his': getHistoryLength(win),\n      'isw': win != win.top ? viewportSize.width : null,\n      'ish': win != win.top ? viewportSize.height : null,\n      'art': getAmpRuntimeTypeParameter(win),\n      'vis': visibilityStateCodes[visibilityState] || '0',\n      'scr_x': Math.round(viewport.getScrollLeft()),\n      'scr_y': Math.round(viewport.getScrollTop()),\n      'bc': getBrowserCapabilitiesBitmap(win) || null,\n      'debug_experiment_id':\n        (/(?:#|,)deid=([\\d,]+)/i.exec(win.location.hash) || [])[1] || null,\n      'url': canonicalUrl || null,\n      'top': win != win.top ? topWindowUrlOrDomain(win) : null,\n      'loc': win.location.href == canonicalUrl ? null : win.location.href,\n      'ref': referrer || null,\n      'bdt': domLoading ? startTime - domLoading : null,\n    };\n  });\n}\n\n/**\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {string} baseUrl\n * @param {number} startTime\n * @param {!Object<string,null|number|string>} parameters\n * @param {!Array<string>=} opt_experimentIds Any experiments IDs (in addition\n *     to those specified on the ad element) that should be included in the\n *     request.\n * @return {!Promise<string>}\n */\nexport function googleAdUrl(\n  a4a,\n  baseUrl,\n  startTime,\n  parameters,\n  opt_experimentIds\n) {\n  // TODO: Maybe add checks in case these promises fail.\n  const blockLevelParameters = googleBlockParameters(a4a, opt_experimentIds);\n  return googlePageParameters(a4a, startTime).then((pageLevelParameters) => {\n    Object.assign(parameters, blockLevelParameters, pageLevelParameters);\n    return truncAndTimeUrl(baseUrl, parameters, startTime);\n  });\n}\n\n/**\n * @param {string} baseUrl\n * @param {!Object<string,null|number|string>} parameters\n * @param {number} startTime\n * @return {string}\n */\nexport function truncAndTimeUrl(baseUrl, parameters, startTime) {\n  return (\n    buildUrl(baseUrl, parameters, MAX_URL_LENGTH - 10, TRUNCATION_PARAM) +\n    '&dtd=' +\n    elapsedTimeWithCeiling(Date.now(), startTime)\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {number}\n */\nfunction iframeNestingDepth(win) {\n  let w = win;\n  let depth = 0;\n  while (w != w.parent && depth < 100) {\n    w = w.parent;\n    depth++;\n  }\n  devAssert(w == win.top);\n  return depth;\n}\n\n/**\n * @param {!Window} win\n * @return {number}\n */\nfunction getHistoryLength(win) {\n  // We have seen cases where accessing history length causes errors.\n  try {\n    return win.history.length;\n  } catch (e) {\n    return 0;\n  }\n}\n\n/**\n * @param {string} url\n * @return {string} hostname portion of url\n * @visibleForTesting\n */\nexport function extractHost(url) {\n  return (/^(?:https?:\\/\\/)?([^\\/\\?:]+)/i.exec(url) || [])[1] || url;\n}\n\n/**\n * @param {!Window} win\n * @return {?string}\n */\nfunction topWindowUrlOrDomain(win) {\n  const {ancestorOrigins} = win.location;\n  if (ancestorOrigins) {\n    const {origin} = win.location;\n    const topOrigin = ancestorOrigins[ancestorOrigins.length - 1];\n    if (origin == topOrigin) {\n      return win.top.location.hostname;\n    }\n    const secondFromTop = secondWindowFromTop(win);\n    if (\n      secondFromTop == win ||\n      origin == ancestorOrigins[ancestorOrigins.length - 2]\n    ) {\n      return extractHost(secondFromTop./*OK*/ document.referrer);\n    }\n    return extractHost(topOrigin);\n  } else {\n    try {\n      return win.top.location.hostname;\n    } catch (e) {}\n    const secondFromTop = secondWindowFromTop(win);\n    try {\n      return extractHost(secondFromTop./*OK*/ document.referrer);\n    } catch (e) {}\n    return null;\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Window}\n */\nfunction secondWindowFromTop(win) {\n  let secondFromTop = win;\n  let depth = 0;\n  while (secondFromTop.parent != secondFromTop.parent.parent && depth < 100) {\n    secondFromTop = secondFromTop.parent;\n    depth++;\n  }\n  devAssert(secondFromTop.parent == win.top);\n  return secondFromTop;\n}\n\n/**\n * @param {number} time\n * @param {number} start\n * @return {(number|string)}\n */\nfunction elapsedTimeWithCeiling(time, start) {\n  const duration = time - start;\n  if (duration >= 1e6) {\n    return 'M';\n  } else if (duration >= 0) {\n    return duration;\n  }\n  return '-M';\n}\n\n/**\n * `nodeOrDoc` must be passed for correct behavior in shadow AMP (PWA) case.\n * @param {!Window} win\n * @param {!Element|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string=} opt_cid\n * @return {number} The correlator.\n */\nexport function getCorrelator(win, elementOrAmpDoc, opt_cid) {\n  if (!win.ampAdPageCorrelator) {\n    win.ampAdPageCorrelator = isExperimentOn(win, 'exp-new-correlator')\n      ? Math.floor(4503599627370496 * Math.random())\n      : makeCorrelator(\n          Services.documentInfoForDoc(elementOrAmpDoc).pageViewId,\n          opt_cid\n        );\n  }\n  return win.ampAdPageCorrelator;\n}\n\n/**\n * @param {string} pageViewId\n * @param {string=} opt_clientId\n * @return {number}\n */\nfunction makeCorrelator(pageViewId, opt_clientId) {\n  const pageViewIdNumeric = Number(pageViewId || 0);\n  if (opt_clientId) {\n    return pageViewIdNumeric + (opt_clientId.replace(/\\D/g, '') % 1e6) * 1e6;\n  } else {\n    // In this case, pageViewIdNumeric is only 4 digits => too low entropy\n    // to be useful as a page correlator.  So synthesize one from scratch.\n    // 4503599627370496 == 2^52.  The guaranteed range of JS Number is at least\n    // 2^53 - 1.\n    return Math.floor(4503599627370496 * Math.random());\n  }\n}\n\n/**\n * Collect additional dimensions for the brdim parameter.\n * @param {!Window} win The window for which we read the browser dimensions.\n * @param {?{width: number, height: number}} viewportSize\n * @return {string}\n * @visibleForTesting\n */\nexport function additionalDimensions(win, viewportSize) {\n  // Some browsers throw errors on some of these.\n  let screenX, screenY, outerWidth, outerHeight, innerWidth, innerHeight;\n  try {\n    screenX = win.screenX;\n    screenY = win.screenY;\n  } catch (e) {}\n  try {\n    outerWidth = win.outerWidth;\n    outerHeight = win.outerHeight;\n  } catch (e) {}\n  try {\n    innerWidth = viewportSize.width;\n    innerHeight = viewportSize.height;\n  } catch (e) {}\n  return [\n    win.screenLeft,\n    win.screenTop,\n    screenX,\n    screenY,\n    win.screen ? win.screen.availWidth : undefined,\n    win.screen ? win.screen.availTop : undefined,\n    outerWidth,\n    outerHeight,\n    innerWidth,\n    innerHeight,\n  ].join();\n}\n\n/**\n * Returns amp-analytics config for a new CSI trigger.\n * @param {string} on The name of the analytics trigger.\n * @param {!Object<string, string>} params Params to be included on the ping.\n * @return {!JsonObject}\n */\nfunction csiTrigger(on, params) {\n  return dict({\n    'on': on,\n    'request': 'csi',\n    'sampleSpec': {\n      // Pings are sampled on a per-pageview basis. A prefix is included in the\n      // sampleOn spec so that the hash is orthogonal to any other sampling in\n      // amp.\n      'sampleOn': 'a4a-csi-${pageViewId}',\n      'threshold': 1, // 1% sample\n    },\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'extraUrlParams': params,\n  });\n}\n\n/**\n * Returns amp-analytics config for Google ads network impls.\n * @return {!JsonObject}\n */\nexport function getCsiAmpAnalyticsConfig() {\n  return dict({\n    'requests': {\n      'csi': 'https://csi.gstatic.com/csi?',\n    },\n    'transport': {'xhrpost': false},\n    'triggers': {\n      'adRequestStart': csiTrigger('ad-request-start', {\n        // afs => ad fetch start\n        'met.a4a': 'afs_lvt.${viewerLastVisibleTime}~afs.${time}',\n      }),\n      'adResponseEnd': csiTrigger('ad-response-end', {\n        // afe => ad fetch end\n        'met.a4a': 'afe.${time}',\n      }),\n      'adRenderStart': csiTrigger('ad-render-start', {\n        // ast => ad schedule time\n        // ars => ad render start\n        'met.a4a':\n          'ast.${scheduleTime}~ars_lvt.${viewerLastVisibleTime}~ars.${time}',\n        'qqid': '${qqid}',\n      }),\n      'adIframeLoaded': csiTrigger('ad-iframe-loaded', {\n        // ail => ad iframe loaded\n        'met.a4a': 'ail.${time}',\n      }),\n    },\n    'extraUrlParams': {\n      's': 'ampad',\n      'ctx': '2',\n      'c': '${correlator}',\n      'slotId': '${slotId}',\n      // Time that the beacon was actually sent. Note that there can be delays\n      // between the time at which the event is fired and when ${nowMs} is\n      // evaluated when the URL is built by amp-analytics.\n      'puid': '${requestCount}~${timestamp}',\n    },\n  });\n}\n\n/**\n * Returns variables to be included in the amp-analytics event for A4A.\n * @param {string} analyticsTrigger The name of the analytics trigger.\n * @param {!AMP.BaseElement} a4a The A4A element.\n * @param {?string} qqid The query ID or null if the query ID has not been set\n *     yet.\n * @return {!JsonObject}\n */\nexport function getCsiAmpAnalyticsVariables(analyticsTrigger, a4a, qqid) {\n  const {win} = a4a;\n  const ampdoc = a4a.getAmpDoc();\n  const navStart = getNavigationTiming(win, 'navigationStart');\n  const vars = /** @type {!JsonObject} */ ({\n    'correlator': getCorrelator(win, ampdoc),\n    'slotId': a4a.element.getAttribute('data-amp-slot-index'),\n    'viewerLastVisibleTime': ampdoc.getLastVisibleTime() - navStart,\n  });\n  if (qqid) {\n    vars['qqid'] = qqid;\n  }\n  if (analyticsTrigger == 'ad-render-start') {\n    vars['scheduleTime'] = a4a.element.layoutScheduleTime - navStart;\n  }\n  return vars;\n}\n\n/**\n * Extracts configuration used to build amp-analytics element for active view\n * and begin to render.\n *\n * @param {!../../../extensions/amp-a4a/0.1/amp-a4a.AmpA4A} a4a\n * @param {!Headers} responseHeaders\n *   XHR service FetchResponseHeaders object containing the response\n *   headers.\n * @return {?JsonObject} config or null if invalid/missing.\n */\nexport function extractAmpAnalyticsConfig(a4a, responseHeaders) {\n  if (!responseHeaders.has(AMP_ANALYTICS_HEADER)) {\n    return null;\n  }\n  try {\n    const analyticsConfig = parseJson(\n      responseHeaders.get(AMP_ANALYTICS_HEADER)\n    );\n\n    const acUrls = analyticsConfig['url'];\n    const btrUrls = analyticsConfig['btrUrl'];\n    if (\n      (acUrls && !Array.isArray(acUrls)) ||\n      (btrUrls && !Array.isArray(btrUrls))\n    ) {\n      dev().error(\n        'AMP-A4A',\n        'Invalid analytics',\n        responseHeaders.get(AMP_ANALYTICS_HEADER)\n      );\n    }\n    const hasActiveViewRequests = Array.isArray(acUrls) && acUrls.length;\n    const hasBeginToRenderRequests = Array.isArray(btrUrls) && btrUrls.length;\n    if (!hasActiveViewRequests && !hasBeginToRenderRequests) {\n      return null;\n    }\n    const config = dict({\n      'transport': {'beacon': false, 'xhrpost': false},\n      'requests': {},\n      'triggers': {},\n    });\n    if (hasActiveViewRequests) {\n      generateActiveViewRequest(config, acUrls);\n    }\n    if (hasBeginToRenderRequests) {\n      generateBeginToRenderRequest(config, btrUrls);\n    }\n    return config;\n  } catch (err) {\n    dev().error(\n      'AMP-A4A',\n      'Invalid analytics',\n      err,\n      responseHeaders.get(AMP_ANALYTICS_HEADER)\n    );\n  }\n  return null;\n}\n\n/**\n * @param {!JsonObject} config\n * @param {!Array<string>} urls\n */\nfunction generateActiveViewRequest(config, urls) {\n  config['triggers']['continuousVisible'] = dict({\n    'request': [],\n    'on': 'visible',\n    'visibilitySpec': {\n      'selector': 'amp-ad',\n      'selectionMethod': 'closest',\n      'visiblePercentageMin': 50,\n      'continuousTimeMin': 1000,\n    },\n  });\n  for (let idx = 0; idx < urls.length; idx++) {\n    // TODO: Ensure url is valid and not freeform JS?\n    config['requests'][`visibility${idx + 1}`] = `${urls[idx]}`;\n    config['triggers']['continuousVisible']['request'].push(\n      `visibility${idx + 1}`\n    );\n  }\n}\n\n/**\n * @param {!JsonObject} config\n * @param {!Array<string>} urls\n */\nfunction generateBeginToRenderRequest(config, urls) {\n  config['triggers']['beginToRender'] = dict({\n    'request': [],\n    'on': 'ini-load',\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n  });\n\n  for (let idx = 0; idx < urls.length; idx++) {\n    // TODO: Ensure url is valid and not freeform JS?\n    config['requests'][`btr${idx + 1}`] = `${urls[idx]}`;\n    config['triggers']['beginToRender']['request'].push(`btr${idx + 1}`);\n  }\n}\n\n/**\n * Add new experiment IDs to a (possibly empty) existing set of experiment IDs.\n * The {@code currentIdString} may be {@code null} or {@code ''}, but if it is\n * populated, it must contain a comma-separated list of integer experiment IDs\n * (per {@code parseExperimentIds()}).  Returns the new set of IDs, encoded\n * as a comma-separated list.  Does not de-duplicate ID entries.\n *\n * @param {!Array<string>} newIds IDs to merge in. Should contain stringified\n *     integer (base 10) experiment IDs.\n * @param {?string} currentIdString  If present, a string containing a\n *   comma-separated list of integer experiment IDs.\n * @return {string}  New experiment list string, including newId iff it is\n *   a valid (integer) experiment ID.\n * @see parseExperimentIds, validateExperimentIds\n */\nexport function mergeExperimentIds(newIds, currentIdString) {\n  const newIdString = newIds.filter((newId) => Number(newId)).join(',');\n  currentIdString = currentIdString || '';\n  return (\n    currentIdString + (currentIdString && newIdString ? ',' : '') + newIdString\n  );\n}\n\n/**\n * Adds two CSI signals to the given amp-analytics configuration object, one\n * for render-start, and one for ini-load.\n *\n * @param {!Window} win\n * @param {!Element} element The ad slot.\n * @param {!JsonObject} config The original config object.\n * @param {?string} qqid\n * @param {boolean} isVerifiedAmpCreative\n * @return {?JsonObject} config or null if invalid/missing.\n */\nexport function addCsiSignalsToAmpAnalyticsConfig(\n  win,\n  element,\n  config,\n  qqid,\n  isVerifiedAmpCreative\n) {\n  // Add CSI pingbacks.\n  const correlator = getCorrelator(win, element);\n  const slotId = Number(element.getAttribute('data-amp-slot-index'));\n  const eids = encodeURIComponent(element.getAttribute(EXPERIMENT_ATTRIBUTE));\n  let aexp = element.getAttribute(AMP_EXPERIMENT_ATTRIBUTE);\n  if (aexp) {\n    // aexp URL param is separated by `!`, not `,`.\n    aexp = aexp.replace(/,/g, '!');\n  }\n  const adType = element.getAttribute('type');\n  const initTime = Number(\n    getTimingDataSync(win, 'navigationStart') || Date.now()\n  );\n  const deltaTime = Math.round(\n    win.performance && win.performance.now\n      ? win.performance.now()\n      : Date.now() - initTime\n  );\n  const baseCsiUrl =\n    'https://csi.gstatic.com/csi?s=a4a' +\n    `&c=${correlator}&slotId=${slotId}&qqid.${slotId}=${qqid}` +\n    `&dt=${initTime}` +\n    (eids != 'null' ? `&e.${slotId}=${eids}` : '') +\n    (aexp ? `&aexp=${aexp}` : '') +\n    `&rls=${internalRuntimeVersion()}&adt.${slotId}=${adType}`;\n  const isAmpSuffix = isVerifiedAmpCreative ? 'Friendly' : 'CrossDomain';\n  config['triggers']['continuousVisibleIniLoad'] = {\n    'on': 'ini-load',\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'request': 'iniLoadCsi',\n  };\n  config['triggers']['continuousVisibleRenderStart'] = {\n    'on': 'render-start',\n    'selector': 'amp-ad',\n    'selectionMethod': 'closest',\n    'request': 'renderStartCsi',\n  };\n  config['requests']['iniLoadCsi'] =\n    baseCsiUrl + `&met.a4a.${slotId}=iniLoadCsi${isAmpSuffix}.${deltaTime}`;\n  config['requests']['renderStartCsi'] =\n    baseCsiUrl + `&met.a4a.${slotId}=renderStartCsi${isAmpSuffix}.${deltaTime}`;\n\n  // Add CSI ping for visibility.\n  config['requests']['visibilityCsi'] =\n    baseCsiUrl + `&met.a4a.${slotId}=visibilityCsi.${deltaTime}`;\n  config['triggers']['continuousVisible']['request'].push('visibilityCsi');\n  return config;\n}\n\n/**\n * Returns an array of two-letter codes representing the amp-ad containers\n * enclosing the given ad element.\n *\n * @param {!Element} adElement\n * @return {!Array<string>}\n */\nexport function getEnclosingContainerTypes(adElement) {\n  const containerTypeSet = {};\n  for (\n    let el = adElement.parentElement, counter = 0;\n    el && counter < 20;\n    el = el.parentElement, counter++\n  ) {\n    const tagName = el.tagName.toUpperCase();\n    if (ValidAdContainerTypes[tagName]) {\n      containerTypeSet[ValidAdContainerTypes[tagName]] = true;\n    }\n  }\n  return Object.keys(containerTypeSet);\n}\n\n/**\n * Appends parameter to ad request indicating error state so long as error\n * parameter is not already present or url has been truncated.\n * @param {string} adUrl used for network request\n * @param {string} parameterValue to be appended\n * @return {string|undefined} potentially modified url, undefined\n */\nexport function maybeAppendErrorParameter(adUrl, parameterValue) {\n  devAssert(!!adUrl && !!parameterValue);\n  // Add parameter indicating error so long as the url has not already been\n  // truncated and error parameter is not already present.  Note that we assume\n  // that added, error parameter length will be less than truncation parameter\n  // so adding will not cause length to exceed maximum.\n  if (\n    new RegExp(\n      `[?|&](${encodeURIComponent(TRUNCATION_PARAM.name)}=` +\n        `${encodeURIComponent(String(TRUNCATION_PARAM.value))}|aet=[^&]*)$`\n    ).test(adUrl)\n  ) {\n    return;\n  }\n  const modifiedAdUrl = adUrl + `&aet=${parameterValue}`;\n  devAssert(modifiedAdUrl.length <= MAX_URL_LENGTH);\n  return modifiedAdUrl;\n}\n\n/**\n * Returns a numerical code representing the binary type.\n * @param {string} type\n * @return {?string}\n */\nexport function getBinaryTypeNumericalCode(type) {\n  return (\n    {\n      'production': '0',\n      'control': '1',\n      'experimental': '2',\n      'rc': '3',\n      'nightly': '4',\n      'nightly-control': '5',\n      'experimentA': '10',\n      'experimentB': '11',\n      'experimentC': '12',\n      'nomod': '42',\n      'mod': '43',\n    }[type] || null\n  );\n}\n\n/** @const {!RegExp} */\nconst IDENTITY_DOMAIN_REGEXP_ = /\\.google\\.(?:com?\\.)?[a-z]{2,3}$/;\n\n/** @typedef {{\n      token: (string|undefined),\n      jar: (string|undefined),\n      pucrd: (string|undefined),\n      freshLifetimeSecs: (number|undefined),\n      validLifetimeSecs: (number|undefined),\n      fetchTimeMs: (number|undefined)\n   }} */\nexport let IdentityToken;\n\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {?string} consentPolicyId\n * @return {!Promise<!IdentityToken>}\n */\nexport function getIdentityToken(win, ampDoc, consentPolicyId) {\n  // If configured to use amp-consent, delay request until consent state is\n  // resolved.\n  win['goog_identity_prom'] =\n    win['goog_identity_prom'] ||\n    (consentPolicyId\n      ? getConsentPolicyState(ampDoc.getHeadNode(), consentPolicyId)\n      : Promise.resolve(CONSENT_POLICY_STATE.UNKNOWN_NOT_REQUIRED)\n    ).then((consentState) =>\n      consentState == CONSENT_POLICY_STATE.INSUFFICIENT ||\n      consentState == CONSENT_POLICY_STATE.UNKNOWN\n        ? /** @type {!IdentityToken} */ ({})\n        : executeIdentityTokenFetch(win, ampDoc)\n    );\n  return /** @type {!Promise<!IdentityToken>} */ (win['goog_identity_prom']);\n}\n\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {number=} redirectsRemaining (default 1)\n * @param {string=} domain\n * @param {number=} startTime\n * @return {!Promise<!IdentityToken>}\n */\nfunction executeIdentityTokenFetch(\n  win,\n  ampDoc,\n  redirectsRemaining = 1,\n  domain = undefined,\n  startTime = Date.now()\n) {\n  const url = getIdentityTokenRequestUrl(win, ampDoc, domain);\n  return Services.xhrFor(win)\n    .fetchJson(url, {\n      mode: 'cors',\n      method: 'GET',\n      ampCors: false,\n      credentials: 'include',\n    })\n    .then((res) => res.json())\n    .then((obj) => {\n      const token = obj['newToken'];\n      const jar = obj['1p_jar'] || '';\n      const pucrd = obj['pucrd'] || '';\n      const freshLifetimeSecs = parseInt(obj['freshLifetimeSecs'] || '', 10);\n      const validLifetimeSecs = parseInt(obj['validLifetimeSecs'] || '', 10);\n      const altDomain = obj['altDomain'];\n      const fetchTimeMs = Date.now() - startTime;\n      if (IDENTITY_DOMAIN_REGEXP_.test(altDomain)) {\n        if (!redirectsRemaining--) {\n          // Max redirects, log?\n          return {fetchTimeMs};\n        }\n        return executeIdentityTokenFetch(\n          win,\n          ampDoc,\n          redirectsRemaining,\n          altDomain,\n          startTime\n        );\n      } else if (\n        freshLifetimeSecs > 0 &&\n        validLifetimeSecs > 0 &&\n        typeof token == 'string'\n      ) {\n        return {\n          token,\n          jar,\n          pucrd,\n          freshLifetimeSecs,\n          validLifetimeSecs,\n          fetchTimeMs,\n        };\n      }\n      // returning empty\n      return {fetchTimeMs};\n    })\n    .catch((unusedErr) => {\n      // TODO log?\n      return {};\n    });\n}\n\n/**\n * @param {!Window} win\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n * @param {string=} domain\n * @return {string} url\n * @visibleForTesting\n */\nexport function getIdentityTokenRequestUrl(win, ampDoc, domain = undefined) {\n  if (!domain && win != win.top && win.location.ancestorOrigins) {\n    const matches = IDENTITY_DOMAIN_REGEXP_.exec(\n      win.location.ancestorOrigins[win.location.ancestorOrigins.length - 1]\n    );\n    domain = (matches && matches[0]) || undefined;\n  }\n  domain = domain || '.google.com';\n  const canonical = extractHost(\n    Services.documentInfoForDoc(ampDoc).canonicalUrl\n  );\n  return `https://adservice${domain}/adsid/integrator.json?domain=${canonical}`;\n}\n\n/**\n * Returns whether we are running on the AMP CDN.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCdnProxy(win) {\n  return CDN_PROXY_REGEXP.test(win.location.origin);\n}\n\n/**\n * Populates the fields of the given Nameframe experiment config object.\n * @param {!Headers} headers\n * @param {!NameframeExperimentConfig} nameframeConfig\n */\nexport function setNameframeExperimentConfigs(headers, nameframeConfig) {\n  const nameframeExperimentHeader = headers.get('amp-nameframe-exp');\n  if (nameframeExperimentHeader) {\n    nameframeExperimentHeader.split(';').forEach((config) => {\n      if (config == 'instantLoad' || config == 'writeInBody') {\n        nameframeConfig[config] = true;\n      }\n    });\n  }\n}\n\n/**\n * Enum for browser capabilities. NOTE: Since JS is 32-bit, do not add anymore\n * than 32 capabilities to this enum.\n * @enum {number}\n */\nconst Capability = {\n  SVG_SUPPORTED: 1 << 0,\n  SANDBOXING_ALLOW_TOP_NAVIGATION_BY_USER_ACTIVATION_SUPPORTED: 1 << 1,\n  SANDBOXING_ALLOW_POPUPS_TO_ESCAPE_SANDBOX_SUPPORTED: 1 << 2,\n};\n\n/**\n * Returns a bitmap representing what features are supported by this browser.\n * @param {!Window} win\n * @return {number}\n */\nfunction getBrowserCapabilitiesBitmap(win) {\n  let browserCapabilities = 0;\n  const doc = win.document;\n  if (win.SVGElement && doc.createElementNS) {\n    browserCapabilities |= Capability.SVG_SUPPORTED;\n  }\n  const iframeEl = doc.createElement('iframe');\n  if (iframeEl.sandbox && iframeEl.sandbox.supports) {\n    if (iframeEl.sandbox.supports('allow-top-navigation-by-user-activation')) {\n      browserCapabilities |=\n        Capability.SANDBOXING_ALLOW_TOP_NAVIGATION_BY_USER_ACTIVATION_SUPPORTED;\n    }\n    if (iframeEl.sandbox.supports('allow-popups-to-escape-sandbox')) {\n      browserCapabilities |=\n        Capability.SANDBOXING_ALLOW_POPUPS_TO_ESCAPE_SANDBOX_SUPPORTED;\n    }\n  }\n  return browserCapabilities;\n}\n\n/**\n * Returns an enum value representing the AMP binary type, or null if this is a\n * canonical page.\n * @param {!Window} win\n * @return {?string} The binary type enum.\n * @visibleForTesting\n */\nexport function getAmpRuntimeTypeParameter(win) {\n  const art = getBinaryTypeNumericalCode(getBinaryType(win));\n  return isCdnProxy(win) && art != '0' ? art : null;\n}\n\n/**\n * Checks if the `always-serve-npa` attribute is present and valid\n * based on the geolocation.\n * @param {!Element} element\n * @return {!Promise<boolean>}\n * @visibleForTesting\n */\nexport function getServeNpaPromise(element) {\n  if (!element.hasAttribute('always-serve-npa')) {\n    return Promise.resolve(false);\n  }\n  const npaSignal = element.getAttribute('always-serve-npa');\n  if (npaSignal == '') {\n    return Promise.resolve(true);\n  }\n  return Services.geoForDocOrNull(element).then((geoService) => {\n    if (!geoService) {\n      // Err on safe side and signal for NPA.\n      return true;\n    }\n    const locations = npaSignal.split(',');\n    for (let i = 0; i < locations.length; i++) {\n      const geoGroup = geoService.isInCountryGroup(locations[i]);\n      if (geoGroup === GEO_IN_GROUP.IN) {\n        return true;\n      } else if (geoGroup === GEO_IN_GROUP.NOT_DEFINED) {\n        user().warn('AMP-AD', `Geo group \"${locations[i]}\" was not defined.`);\n      }\n    }\n    // Not in any of the defined geo groups.\n    return false;\n  });\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {dict} from './core/types/object';\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject} vars A map of vars and their values.\n * @param {boolean} enableDataVars A boolean to indicate if data-vars-*\n * attribute value from target element should be included.\n */\nexport function triggerAnalyticsEvent(\n  target,\n  eventType,\n  vars = dict(),\n  enableDataVars = true\n) {\n  Services.analyticsForDocOrNull(target).then((analytics) => {\n    if (!analytics) {\n      return;\n    }\n    analytics.triggerEventForTarget(target, eventType, vars, enableDataVars);\n  });\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from './core/constants/amp-events';\nimport {Services} from './services';\nimport {\n  USER_ERROR_SENTINEL,\n  dev,\n  isUserErrorEmbed,\n  isUserErrorMessage,\n} from './log';\nimport {dict} from './core/types/object';\nimport {duplicateErrorIfNecessary} from './core/error';\nimport {experimentTogglesOrNull, getBinaryType, isCanary} from './experiments';\nimport {exponentialBackoff} from './core/types/function/exponential-backoff';\nimport {findIndex} from './core/types/array';\nimport {getMode} from './mode';\nimport {isLoadErrorMessage} from './event-helper';\nimport {isProxyOrigin} from './url';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport {triggerAnalyticsEvent} from './analytics';\nimport {urls} from './config';\n\n/**\n * @const {string}\n */\nconst CANCELLED = 'CANCELLED';\n\n/**\n * @const {string}\n */\nconst BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n\n/**\n * @const {string}\n */\nconst ABORTED = 'AbortError';\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n\n/**\n * Chance to post to the new error reporting endpoint.\n * @const {number}\n */\nconst BETA_ERROR_REPORT_URL_FREQ = 0.1;\n\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\nlet accumulatedErrorMessages = self.__AMP_ERRORS || [];\n// Use a true global, to avoid multi-module inclusion issues.\nself.__AMP_ERRORS = accumulatedErrorMessages;\n\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n  array.push(element);\n}\n\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\nlet reportingBackoff = function (work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  reportingBackoff = exponentialBackoff(1.5);\n  return reportingBackoff(work);\n};\n\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(/** @type {!JsonObject} */ (value));\n  } catch (e) {\n    return String(value);\n  }\n}\n\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\nexport function reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n  if (\n    error &&\n    !!win &&\n    isUserErrorMessage(error.message) &&\n    !isUserErrorEmbed(error.message)\n  ) {\n    reportErrorToAnalytics(/** @type {!Error} */ (error), win);\n  }\n}\n\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\nexport function reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    let isValidError;\n    if (error) {\n      if (error.message !== undefined) {\n        error = duplicateErrorIfNecessary(/** @type {!Error} */ (error));\n        isValidError = true;\n      } else {\n        const origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    }\n    // Report if error is not an expected type.\n    if (!isValidError && getMode().localDev && !getMode().test) {\n      setTimeout(function () {\n        const rethrow = new Error(\n          '_reported_ Error reported incorrectly: ' + error\n        );\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return /** @type {!Error} */ (error);\n    }\n    error.reported = true;\n\n    // `associatedElement` is used to add the i-amphtml-error class; in\n    // `#development=1` mode, it also adds `i-amphtml-element-error` to the\n    // element and sets the `error-message` attribute.\n    if (error.messageArray) {\n      const elIndex = findIndex(error.messageArray, (item) => item?.tagName);\n      if (elIndex > -1) {\n        error.associatedElement = error.messageArray[elIndex];\n      }\n    }\n    // Update element.\n    const element = opt_associatedElement || error.associatedElement;\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n      if (getMode().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    }\n\n    // Report to console.\n    if (\n      self.console &&\n      (isUserErrorMessage(error.message) ||\n        !error.expected ||\n        getMode().localDev)\n    ) {\n      const output = console.error || console.log;\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!getMode().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(AmpEvents.ERROR, error.message);\n    }\n\n    // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n    onError['call'](self, undefined, undefined, undefined, undefined, error);\n  } catch (errorReportingError) {\n    setTimeout(function () {\n      throw errorReportingError;\n    });\n  }\n  return /** @type {!Error} */ (error);\n}\n\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\nexport function cancellation() {\n  return new Error(CANCELLED);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(CANCELLED);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(CANCELLED);\n  }\n  return false;\n}\n\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\nexport function blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(BLOCK_BY_CONSENT);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(BLOCK_BY_CONSENT);\n  }\n  return false;\n}\n\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\nexport function installErrorReporting(win) {\n  win.onerror = /** @type {!Function} */ (onError);\n  win.addEventListener('unhandledrejection', (event) => {\n    if (\n      event.reason &&\n      (event.reason.message === CANCELLED ||\n        event.reason.message === BLOCK_BY_CONSENT ||\n        event.reason.message === ABORTED)\n    ) {\n      event.preventDefault();\n      return;\n    }\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\nfunction onError(message, filename, line, col, error) {\n  // Make an attempt to unhide the body but don't if the error is actually expected.\n  // eslint-disable-next-line local/no-invalid-this\n  if (this && this.document && (!error || !error.expected)) {\n    // eslint-disable-next-line local/no-invalid-this\n    makeBodyVisibleRecovery(this.document);\n  }\n  if (getMode().localDev || getMode().development || getMode().test) {\n    return;\n  }\n  let hasNonAmpJs = false;\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {\n    // Ignore errors during error report generation.\n  }\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n  const data = getErrorReportData(\n    message,\n    filename,\n    line,\n    col,\n    error,\n    hasNonAmpJs\n  );\n  if (data) {\n    reportingBackoff(() => {\n      try {\n        return reportErrorToServerOrViewer(\n          // eslint-disable-next-line local/no-invalid-this\n          this,\n          /** @type {!JsonObject} */\n          (data)\n        ).catch(() => {\n          // catch async errors to avoid recursive errors.\n        });\n      } catch (e) {\n        // catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n\n/**\n * Determines the error reporting endpoint which should be used.\n * If changing this URL, keep `docs/spec/amp-errors.md` in sync.\n * @return {string} error reporting endpoint URL.\n */\nfunction chooseReportingUrl_() {\n  return Math.random() < BETA_ERROR_REPORT_URL_FREQ\n    ? urls.betaErrorReporting\n    : urls.errorReporting;\n}\n\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\nexport function reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n\n  // Throttle reports from Stable by 90%.\n  if (data['pt'] && Math.random() < 0.9) {\n    return Promise.resolve();\n  }\n\n  return maybeReportErrorToViewer(win, data).then((reportedErrorToViewer) => {\n    if (!reportedErrorToViewer) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', chooseReportingUrl_(), true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\nexport function maybeReportErrorToViewer(win, data) {\n  const ampdocService = Services.ampdocServiceFor(win);\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n  const ampdocSingle = ampdocService.getSingleDoc();\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n  return viewer.isTrustedViewer().then((viewerTrusted) => {\n    if (!viewerTrusted) {\n      return false;\n    }\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\nexport function errorReportingDataForViewer(errorReportData) {\n  return dict({\n    'm': errorReportData['m'], // message\n    'a': errorReportData['a'], // isUserError\n    's': errorReportData['s'], // error stack\n    'el': errorReportData['el'], // tagName\n    'ex': errorReportData['ex'], // expected error?\n    'v': errorReportData['v'], // runtime\n    'pt': errorReportData['pt'], // is pre-throttled\n  });\n}\n\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\nexport function getErrorReportData(\n  message,\n  filename,\n  line,\n  col,\n  error,\n  hasNonAmpJs\n) {\n  message = buildErrorMessage_(message, error);\n  // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n  let expected = !!(error && error.expected);\n  if (/_reported_/.test(message)) {\n    return;\n  }\n  if (message == CANCELLED) {\n    return;\n  }\n\n  const detachedWindow = !(self && self.window);\n  const throttleBase = Math.random();\n\n  // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n  if (\n    isLoadErrorMessage(message) ||\n    // See https://github.com/ampproject/amphtml/issues/7353\n    // for context.\n    message == 'Script error.' ||\n    // Window has become detached, really anything can happen\n    // at this point.\n    detachedWindow\n  ) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  const isUserError = isUserErrorMessage(message);\n\n  // Only report a subset of user errors.\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  }\n\n  // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n  const data = /** @type {!JsonObject} */ (Object.create(null));\n  data['v'] = getMode().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0';\n\n  // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n\n  let runtime = '1p';\n  if (IS_SXG) {\n    runtime = 'sxg';\n    data['sxg'] = '1';\n  } else if (IS_ESM) {\n    runtime = 'esm';\n    data['esm'] = '1';\n  } else if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if (getMode().runtime) {\n    runtime = getMode().runtime;\n  }\n\n  data['rt'] = runtime;\n\n  // Add our a4a id if we are inabox\n  if (runtime === 'inabox') {\n    data['adid'] = getMode().a4aId;\n  }\n\n  // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n  data['ca'] = isCanary(self) ? '1' : '0';\n\n  // Pass binary type.\n  data['bt'] = getBinaryType(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  }\n  // Is embedded?\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    const resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    const messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  const exps = [];\n  const experiments = experimentTogglesOrNull(self);\n  for (const exp in experiments) {\n    const on = experiments[exp];\n    exps.push(`${exp}=${on ? '1' : '0'}`);\n  }\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    data['el'] = error.associatedElement?.tagName || 'u'; // Unknown\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    }\n\n    // TODO(jridgewell, #18574); Make sure error is always an object.\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location['originalHash'] || self.location.hash;\n\n  // TODO(https://github.com/ampproject/error-tracker/issues/129): Remove once\n  // all clients are serving a version with pre-throttling.\n  if (data['bt'] === 'production') {\n    // Setting this field allows the error reporting service to know that this\n    // error has already been pre-throttled for Stable, so it doesn't need to\n    // throttle again.\n    data['pt'] = '1';\n  }\n\n  pushLimit(accumulatedErrorMessages, message, 25);\n\n  return data;\n}\n\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n  const scripts = win.document.querySelectorAll('script[src]');\n  for (let i = 0; i < scripts.length; i++) {\n    if (!isProxyOrigin(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resets accumulated error messages for testing\n */\nexport function resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\nexport function reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (Services.ampdocServiceFor(win).isSingleDoc()) {\n    const vars = dict({\n      'errorName': error.name,\n      'errorMessage': error.message,\n    });\n    triggerAnalyticsEvent(\n      getRootElement_(win),\n      'user-error',\n      vars,\n      /** enableDataVars */ false\n    );\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\nfunction getRootElement_(win) {\n  const root = Services.ampdocServiceFor(win).getSingleDoc().getRootNode();\n  return dev().assertElement(root.documentElement || root.body || root);\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CONSTANTS, MessageType} from '../../../src/3p-frame-messaging';\nimport {CommonSignals} from '../../../src/core/constants/common-signals';\nimport {Deferred} from '../../../src/core/data-structures/promise';\nimport {LegacyAdIntersectionObserverHost} from './legacy-ad-intersection-observer-host';\nimport {Services} from '../../../src/services';\nimport {\n  SubscriptionApi,\n  listenFor,\n  listenForOncePromise,\n  postMessageToWindows,\n} from '../../../src/iframe-helper';\nimport {dev, devAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {getData} from '../../../src/event-helper';\nimport {getHtml} from '../../../src/core/dom/get-html';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {isGoogleAdsA4AValidEnvironment} from '../../../ads/google/a4a/utils';\nimport {removeElement} from '../../../src/dom';\nimport {reportErrorToAnalytics} from '../../../src/error-reporting';\nimport {setStyle} from '../../../src/style';\nimport {throttle} from '../../../src/core/types/function';\n\nconst VISIBILITY_TIMEOUT = 10000;\n\nconst MIN_INABOX_POSITION_EVENT_INTERVAL = 100;\n\n/** @type {string} */\nconst TAG = 'amp-ad-xorigin-iframe';\n\nexport class AmpAdXOriginIframeHandler {\n  /**\n   * @param {!./amp-ad-3p-impl.AmpAd3PImpl|!../../amp-a4a/0.1/amp-a4a.AmpA4A} baseInstance\n   */\n  constructor(baseInstance) {\n    /** @private {!Window} */\n    this.win_ = baseInstance.win;\n\n    /** @private */\n    this.baseInstance_ = baseInstance;\n\n    /** @private {!Element} */\n    this.element_ = baseInstance.element;\n\n    /** @private {?./amp-ad-ui.AmpAdUIHandler} */\n    this.uiHandler_ = baseInstance.uiHandler;\n\n    /** @type {?HTMLIFrameElement} iframe instance */\n    this.iframe = null;\n\n    /** @private {?LegacyAdIntersectionObserverHost} */\n    this.legacyIntersectionObserverApiHost_ = null;\n\n    /** @private {SubscriptionApi} */\n    this.embedStateApi_ = null;\n\n    /** @private {?SubscriptionApi} */\n    this.inaboxPositionApi_ = null;\n\n    /** @private {boolean} */\n    this.isInaboxPositionApiInit_ = false;\n\n    /** @private {!Array<!Function>} functions to unregister listeners */\n    this.unlisteners_ = [];\n\n    /** @private @const {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.baseInstance_.getAmpDoc());\n\n    /** @private {boolean} */\n    this.inViewport_ = false;\n\n    /** @private {boolean} */\n    this.sendPositionPending_ = false;\n  }\n\n  /**\n   * Sets up listeners and iframe state for iframe containing ad creative.\n   * @param {!HTMLIFrameElement} iframe\n   * @param {boolean=} opt_isA4A when true do not listen to ad response\n   * @param {boolean=} opt_letCreativeTriggerRenderStart Whether to wait for\n   *    render start from the creative, or simply trigger it in here.\n   * @return {!Promise} awaiting render complete promise\n   */\n  init(iframe, opt_isA4A, opt_letCreativeTriggerRenderStart) {\n    devAssert(!this.iframe, 'multiple invocations of init without destroy!');\n    this.iframe = iframe;\n    this.iframe.setAttribute('scrolling', 'no');\n    if (!this.uiHandler_.isStickyAd()) {\n      this.baseInstance_.applyFillContent(this.iframe);\n    }\n    const timer = Services.timerFor(this.baseInstance_.win);\n\n    // Init the legacy observeInterection API service.\n    // (Behave like position observer)\n    this.legacyIntersectionObserverApiHost_ =\n      new LegacyAdIntersectionObserverHost(this.baseInstance_, this.iframe);\n\n    this.embedStateApi_ = new SubscriptionApi(\n      this.iframe,\n      'send-embed-state',\n      true,\n      () => this.sendEmbedInfo_(this.inViewport_)\n    );\n\n    // Enable creative position observer if inabox experiment enabled OR\n    // adsense running on non-CDN cache where AMP creatives are xdomained and\n    // may require this information.\n    if (\n      isExperimentOn(this.win_, 'inabox-position-api') ||\n      (/^adsense$/i.test(this.element_.getAttribute('type')) &&\n        !isGoogleAdsA4AValidEnvironment(this.win_))\n    ) {\n      // To provide position to inabox.\n      this.inaboxPositionApi_ = new SubscriptionApi(\n        this.iframe,\n        MessageType.SEND_POSITIONS,\n        true,\n        () => {\n          // TODO(@zhouyx): Make sendPosition_ only send to\n          // message origin iframe\n          this.sendPosition_();\n          this.registerPosition_();\n        }\n      );\n    }\n    // Triggered by context.reportRenderedEntityIdentifier(\u2026) inside the ad\n    // iframe.\n    listenForOncePromise(this.iframe, 'entity-id', true).then((info) => {\n      this.element_.creativeId = info.data['id'];\n    });\n\n    this.handleOneTimeRequest_(MessageType.GET_HTML, (payload) => {\n      const selector = payload['selector'];\n      const attributes = payload['attributes'];\n      let content = '';\n      if (this.element_.hasAttribute('data-html-access-allowed')) {\n        content = getHtml(this.baseInstance_.win, selector, attributes);\n      }\n      return Promise.resolve(content);\n    });\n\n    this.handleOneTimeRequest_(MessageType.GET_CONSENT_STATE, () => {\n      return this.baseInstance_.getConsentState().then((consentState) => {\n        return {consentState};\n      });\n    });\n\n    // Install iframe resize API.\n    this.unlisteners_.push(\n      listenFor(\n        this.iframe,\n        'embed-size',\n        (data, source, origin, event) => {\n          if (!!data['hasOverflow']) {\n            this.element_.warnOnMissingOverflow = false;\n          }\n          this.handleResize_(\n            data['id'],\n            data['height'],\n            data['width'],\n            source,\n            origin,\n            event\n          );\n        },\n        true,\n        true\n      )\n    );\n\n    if (this.uiHandler_.isStickyAd()) {\n      setStyle(iframe, 'pointer-events', 'none');\n      this.unlisteners_.push(\n        listenFor(\n          this.iframe,\n          'signal-interactive',\n          () => {\n            setStyle(iframe, 'pointer-events', 'auto');\n          },\n          true,\n          true\n        )\n      );\n    }\n\n    this.unlisteners_.push(\n      this.baseInstance_.getAmpDoc().onVisibilityChanged(() => {\n        this.sendEmbedInfo_(this.inViewport_);\n      })\n    );\n\n    this.unlisteners_.push(\n      listenFor(\n        this.iframe,\n        MessageType.USER_ERROR_IN_IFRAME,\n        (data) => {\n          this.userErrorForAnalytics_(\n            data['message'],\n            data['expected'] == true\n          );\n        },\n        true,\n        true /* opt_includingNestedWindows */\n      )\n    );\n\n    // Iframe.onload normally called by the Ad after full load.\n    const iframeLoadPromise = this.baseInstance_\n      .loadPromise(this.iframe)\n      .then(() => {\n        // Wait just a little to allow `no-content` message to arrive.\n        if (this.iframe) {\n          // Chrome does not reflect the iframe readystate.\n          this.iframe.readyState = 'complete';\n        }\n        return timer.promise(10);\n      });\n\n    // Calculate render-start and no-content signals.\n    const {promise: renderStartPromise, resolve: renderStartResolve} =\n      new Deferred();\n    const {promise: noContentPromise, resolve: noContentResolve} =\n      new Deferred();\n\n    if (\n      this.baseInstance_.config &&\n      this.baseInstance_.config.renderStartImplemented\n    ) {\n      // When `render-start` is supported, these signals are mutually\n      // exclusive. Whichever arrives first wins.\n      listenForOncePromise(\n        this.iframe,\n        ['render-start', 'no-content'],\n        true\n      ).then((info) => {\n        const {data} = info;\n        if (data['type'] == 'render-start') {\n          this.renderStartMsgHandler_(info);\n          renderStartResolve();\n        } else {\n          this.noContent_();\n          noContentResolve();\n        }\n      });\n    } else {\n      // If `render-start` is not supported, listen to `bootstrap-loaded`.\n      // This will avoid keeping the Ad empty until it's fully loaded, which\n      // could be a long time.\n      listenForOncePromise(this.iframe, 'bootstrap-loaded', true).then(() => {\n        renderStartResolve();\n      });\n      // Likewise, no-content is observed here. However, it's impossible to\n      // assure exclusivity between `no-content` and `bootstrap-loaded` b/c\n      // `bootstrap-loaded` always arrives first.\n      listenForOncePromise(this.iframe, 'no-content', true).then(() => {\n        this.noContent_();\n        noContentResolve();\n      });\n    }\n\n    // Wait for initial load signal. Notice that this signal is not\n    // used to resolve the final layout promise because iframe may still be\n    // consuming significant network and CPU resources.\n    listenForOncePromise(this.iframe, CommonSignals.INI_LOAD, true).then(() => {\n      // TODO(dvoytenko, #7788): ensure that in-a-box \"ini-load\" message is\n      // received here as well.\n      this.baseInstance_.signals().signal(CommonSignals.INI_LOAD);\n    });\n\n    this.element_.appendChild(this.iframe);\n    if (opt_isA4A && !opt_letCreativeTriggerRenderStart) {\n      // A4A writes creative frame directly to page once creative is received\n      // and therefore does not require render start message so attach and\n      // impose no loader delay.  Network is using renderStart or\n      // bootstrap-loaded to indicate ad request was sent, either way we know\n      // that occurred for Fast Fetch.\n      this.baseInstance_.renderStarted();\n      renderStartResolve();\n    } else {\n      // Set iframe initially hidden which will be removed on render-start or\n      // load, whichever is earlier.\n      setStyle(this.iframe, 'visibility', 'hidden');\n    }\n\n    // If A4A where creative is responsible for triggering render start (e.g\n    // no fill for sticky ad case), only trigger if renderStart listener promise\n    // explicitly fired (though we do not expect this to occur for A4A).\n    const triggerRenderStartPromise =\n      opt_isA4A && opt_letCreativeTriggerRenderStart\n        ? renderStartPromise\n        : Promise.race([\n            renderStartPromise,\n            iframeLoadPromise,\n            timer.promise(VISIBILITY_TIMEOUT),\n          ]);\n    triggerRenderStartPromise.then(() => {\n      // Common signal RENDER_START invoked at toggle visibility time\n      // Note: 'render-start' msg and common signal RENDER_START are different\n      // 'render-start' msg is a way for implemented Ad to display ad earlier\n      // RENDER_START signal is a signal to inform AMP runtime and other AMP\n      // elements that the component visibility has been toggled on.\n      this.baseInstance_.renderStarted();\n      if (this.iframe) {\n        setStyle(this.iframe, 'visibility', '');\n      }\n    });\n\n    // The actual ad load is eariliest of iframe.onload event and no-content.\n    return Promise.race([iframeLoadPromise, noContentPromise]);\n  }\n\n  /**\n   * @param {string} requestType\n   * @param {function(*)} getter\n   * @private\n   */\n  handleOneTimeRequest_(requestType, getter) {\n    this.unlisteners_.push(\n      listenFor(\n        this.iframe,\n        requestType,\n        (info, source, origin) => {\n          if (!this.iframe) {\n            return;\n          }\n\n          const messageId = info[CONSTANTS.messageIdFieldName];\n          const payload = info[CONSTANTS.payloadFieldName];\n\n          getter(payload).then((content) => {\n            const result = dict();\n            result[CONSTANTS.messageIdFieldName] = messageId;\n            result[CONSTANTS.contentFieldName] = content;\n            postMessageToWindows(\n              dev().assertElement(this.iframe),\n              [{win: source, origin}],\n              requestType + CONSTANTS.responseTypeSuffix,\n              result,\n              true\n            );\n          });\n        },\n        true /* opt_is3P */,\n        false /* opt_includingNestedWindows */\n      )\n    );\n  }\n\n  /**\n   * callback functon on receiving render-start\n   * @param {{data: !JsonObject}} info\n   * @private\n   */\n  renderStartMsgHandler_(info) {\n    const data = getData(info);\n    this.handleResize_(\n      undefined,\n      data['height'],\n      data['width'],\n      info['source'],\n      info['origin'],\n      info['event']\n    );\n  }\n\n  /**\n   * Cleans up the listeners on the cross domain ad iframe and frees the\n   * iframe resource.\n   * @param {boolean=} opt_keep\n   */\n  freeXOriginIframe(opt_keep) {\n    this.cleanup_();\n    // If ask to keep the iframe.\n    // Use in the case of no-content and iframe is a master iframe.\n    if (opt_keep) {\n      return;\n    }\n    if (this.iframe) {\n      removeElement(this.iframe);\n      this.iframe = null;\n    }\n  }\n\n  /**\n   * Cleans up listeners on the ad, and apply the default UI for ad.\n   * @private\n   */\n  noContent_() {\n    if (!this.iframe) {\n      // unlayout already called\n      return;\n    }\n    this.freeXOriginIframe(this.iframe.name.indexOf('_master') >= 0);\n    this.uiHandler_.applyNoContentUI();\n  }\n\n  /**\n   * Cleans up listeners on the ad iframe.\n   * @private\n   */\n  cleanup_() {\n    this.unlisteners_.forEach((unlistener) => unlistener());\n    this.unlisteners_.length = 0;\n    if (this.embedStateApi_) {\n      this.embedStateApi_.destroy();\n      this.embedStateApi_ = null;\n    }\n    if (this.inaboxPositionApi_) {\n      this.inaboxPositionApi_.destroy();\n      this.inaboxPositionApi_ = null;\n    }\n    if (this.legacyIntersectionObserverApiHost_) {\n      this.legacyIntersectionObserverApiHost_.destroy();\n      this.legacyIntersectionObserverApiHost_ = null;\n    }\n  }\n\n  /**\n   * Updates the element's dimensions to accommodate the iframe's\n   * requested dimensions. Notifies the window that request the resize\n   * of success or failure.\n   * @param {number|undefined} id\n   * @param {number|string|undefined} height\n   * @param {number|string|undefined} width\n   * @param {!Window} source\n   * @param {string} origin\n   * @param {!MessageEvent} event\n   * @private\n   */\n  handleResize_(id, height, width, source, origin, event) {\n    this.baseInstance_.getVsync().mutate(() => {\n      if (!this.iframe) {\n        // iframe can be cleanup before vsync.\n        return;\n      }\n      const iframeHeight = this.iframe./*OK*/ offsetHeight;\n      const iframeWidth = this.iframe./*OK*/ offsetWidth;\n      this.uiHandler_\n        .updateSize(height, width, iframeHeight, iframeWidth, event)\n        .then(\n          (info) => {\n            this.uiHandler_.onResizeSuccess();\n            this.sendEmbedSizeResponse_(\n              info.success,\n              id,\n              info.newWidth,\n              info.newHeight,\n              source,\n              origin\n            );\n          },\n          () => {}\n        );\n    });\n  }\n\n  /**\n   * Sends a response to the window which requested a resize.\n   * @param {boolean} success\n   * @param {number|undefined} id\n   * @param {number} requestedWidth\n   * @param {number} requestedHeight\n   * @param {!Window} source\n   * @param {string} origin\n   * @private\n   */\n  sendEmbedSizeResponse_(\n    success,\n    id,\n    requestedWidth,\n    requestedHeight,\n    source,\n    origin\n  ) {\n    // The iframe may have been removed by the time we resize.\n    if (!this.iframe) {\n      return;\n    }\n    postMessageToWindows(\n      this.iframe,\n      [{win: source, origin}],\n      success ? 'embed-size-changed' : 'embed-size-denied',\n      dict({\n        'id': id,\n        'requestedWidth': requestedWidth,\n        'requestedHeight': requestedHeight,\n      }),\n      true\n    );\n  }\n\n  /**\n   * @param {boolean} inViewport\n   * @private\n   */\n  sendEmbedInfo_(inViewport) {\n    if (!this.embedStateApi_) {\n      return;\n    }\n    this.embedStateApi_.send(\n      'embed-state',\n      dict({\n        'inViewport': inViewport,\n        'pageHidden': !this.baseInstance_.getAmpDoc().isVisible(),\n      })\n    );\n  }\n\n  /**\n   * Retrieve iframe position entry in next animation frame.\n   * @return {*} TODO(#23582): Specify return type\n   * @private\n   */\n  getIframePositionPromise_() {\n    return this.viewport_\n      .getClientRectAsync(dev().assertElement(this.iframe))\n      .then((position) => {\n        devAssert(\n          position,\n          'element clientRect should intersects with root clientRect'\n        );\n        const viewport = this.viewport_.getRect();\n        return dict({\n          'targetRect': position,\n          'viewportRect': viewport,\n        });\n      });\n  }\n\n  /** @private */\n  sendPosition_() {\n    if (this.sendPositionPending_) {\n      // Only send once in single animation frame.\n      return;\n    }\n\n    this.sendPositionPending_ = true;\n    this.getIframePositionPromise_().then((position) => {\n      this.sendPositionPending_ = false;\n      this.inaboxPositionApi_.send(MessageType.POSITION, position);\n    });\n  }\n\n  /** @private */\n  registerPosition_() {\n    if (this.isInaboxPositionApiInit_) {\n      // only register to viewport scroll/resize once\n      return;\n    }\n\n    this.isInaboxPositionApiInit_ = true;\n    // Send window scroll/resize event to viewport.\n    this.unlisteners_.push(\n      this.viewport_.onScroll(\n        throttle(\n          this.win_,\n          () => {\n            this.getIframePositionPromise_().then((position) => {\n              this.inaboxPositionApi_.send(MessageType.POSITION, position);\n            });\n          },\n          MIN_INABOX_POSITION_EVENT_INTERVAL\n        )\n      )\n    );\n    this.unlisteners_.push(\n      this.viewport_.onResize(() => {\n        this.getIframePositionPromise_().then((position) => {\n          this.inaboxPositionApi_.send(MessageType.POSITION, position);\n        });\n      })\n    );\n  }\n\n  /**\n   * See BaseElement method.\n   * @param {boolean} inViewport\n   */\n  viewportCallback(inViewport) {\n    this.inViewport_ = inViewport;\n    this.sendEmbedInfo_(inViewport);\n  }\n\n  /**\n   * See BaseElement method.\n   */\n  onLayoutMeasure() {\n    // When the framework has the need to remeasure us, our position might\n    // have changed. Send an intersection record if needed.\n    if (this.legacyIntersectionObserverApiHost_) {\n      this.legacyIntersectionObserverApiHost_.fire();\n    }\n  }\n\n  /**\n   * @param {string} message\n   * @param {boolean} expected\n   * @private\n   */\n  userErrorForAnalytics_(message, expected) {\n    if (typeof message != 'string') {\n      return;\n    }\n    if (expected) {\n      dev().expectedError(TAG, message);\n    } else {\n      const e = new Error(message);\n      e.name = '3pError';\n      reportErrorToAnalytics(e, this.baseInstance_.win);\n    }\n  }\n}\n\n// Make the class available to other late loaded amp-ad implementations\n// without them having to depend on it directly.\nAMP.AmpAdXOriginIframeHandler = AmpAdXOriginIframeHandler;\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isExperimentOn} from './experiments';\nimport {isFiniteNumber} from './core/types';\nimport {setStyle, setStyles, toggle} from './style';\nimport {toWin} from './core/window';\nimport {transparentPng} from './core/dom/img';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-RENDER': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe =\n  /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n * @type {?boolean}\n */\nlet aspectRatioCssCache = null;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && tagName.toLowerCase().startsWith('i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  const m = userAssert(\n    /[a-z]+/i.exec(length),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element allowlisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified element. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ allowlist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @param {boolean} fixIeIntrinsic\n * @return {!Layout}\n */\nexport function applyStaticLayout(element, fixIeIntrinsic = false) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (\n      devAssert(parseLayout(completedLayoutAttr))\n    );\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n      if (element.sizerElement) {\n        element.sizerElement.setAttribute('slot', 'i-amphtml-svc');\n      }\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(\n    inputLayout !== undefined,\n    'Invalid \"layout\" value: %s, %s',\n    layoutAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(\n    inputWidth !== undefined,\n    'Invalid \"width\" value: %s, %s',\n    widthAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(\n    inputHeight !== undefined,\n    'Invalid \"height\" value: %s, %s',\n    heightAttr,\n    element\n  );\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'The \"height\" attribute is missing: %s', element);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'The \"width\" attribute must be missing or \"auto\": %s',\n      element\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'The \"width\" attribute must be present and not \"auto\": %s',\n      element\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for \"width\" and \"height\": %s, %s, %s',\n      widthAttr,\n      heightAttr,\n      element\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      '\"heights\" attribute must be missing: %s',\n      element\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    if (shouldUseAspectRatioCss(toWin(element.ownerDocument.defaultView))) {\n      setStyle(\n        element,\n        'aspect-ratio',\n        `${getLengthNumeral(width)}/${getLengthNumeral(height)}`\n      );\n    } else {\n      const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n      sizer.setAttribute('slot', 'i-amphtml-svc');\n      setStyles(sizer, {\n        paddingTop:\n          (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n      });\n      element.insertBefore(sizer, element.firstChild);\n      element.sizerElement = sizer;\n    }\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\" slot=\"i-amphtml-svc\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      !IS_ESM && fixIeIntrinsic && element.ownerDocument\n        ? transparentPng(\n            element.ownerDocument,\n            dev().assertNumber(getLengthNumeral(width)),\n            dev().assertNumber(getLengthNumeral(height))\n          )\n        : `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n *\n * @param {!Window} win\n * @return {boolean}\n */\nfunction shouldUseAspectRatioCss(win) {\n  if (aspectRatioCssCache == null) {\n    aspectRatioCssCache =\n      (isExperimentOn(win, 'layout-aspect-ratio-css') &&\n        win.CSS &&\n        win.CSS.supports &&\n        win.CSS.supports('aspect-ratio: 1/1')) ||\n      false;\n  }\n  return aspectRatioCssCache;\n}\n\n/** @visibleForTesting */\nexport function resetShouldUseAspectRatioCssForTesting() {\n  aspectRatioCssCache = null;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\n\n/**\n * Maps a value in a first range to its equivalent in a second range\n * Ex.: 5 in the range [0,10] gives 60 in the range[40,80]\n *\n * NOTE: lower/upper bounds on the source range are detected automatically,\n * however the bounds on the target range are not altered (thus the target\n * range could be decreasing).\n * Ex1: 8 in the range [0, 10] gives 2 in the range [10, 0]\n * Ex2: also, 8 in the range [10, 0] gives 2 in the range [10, 0]\n *\n * NOTE: Input value is enforced to be bounded inside the source range\n * Ex1: -2 in the range [0, 10] is interpreted as 0 and thus gives 40 in [40,80]\n * Ex2: 19 in the range [0, 5] is interpreted as 5 and thus gives 80 in [40,80]\n *\n * @param {number} val the value in the source range\n * @param {number} min1 the lower bound of the source range\n * @param {number} max1 the upper bound of the source range\n * @param {number} min2 the lower bound of the target range\n * @param {number} max2 the upper bound of the target range\n * @return {number} the equivalent value in the target range\n */\nexport function mapRange(val, min1, max1, min2, max2) {\n  let max1Bound = max1;\n  let min1Bound = min1;\n  if (min1 > max1) {\n    max1Bound = min1;\n    min1Bound = max1;\n  }\n\n  if (val < min1Bound) {\n    val = min1Bound;\n  } else if (val > max1Bound) {\n    val = max1Bound;\n  }\n\n  return ((val - min1) * (max2 - min2)) / (max1 - min1) + min2;\n}\n\n/**\n * Computes the modulus of values `a` and `b`.\n *\n * This is needed because the % operator in JavaScript doesn't implement\n * modulus behavior as can be seen by the spec here:\n * http://www.ecma-international.org/ecma-262/5.1/#sec-11.5.3.\n * It instead is used to obtain the remainder of a division.\n * This function uses the remainder (%) operator to determine the modulus.\n * Derived from here:\n * https://stackoverflow.com/questions/25726760/javascript-modular-arithmetic/47354356#47354356\n *\n * @param {number} a\n * @param {number} b\n * @return {number} returns the modulus of the two numbers.\n * @example\n *\n * _.min(10, 5);\n * // => 0\n *\n * _.mod(-1, 5);\n * // => 4\n */\nexport function mod(a, b) {\n  return a > 0 && b > 0 ? a % b : ((a % b) + b) % b;\n}\n\n/**\n * Restricts a number to be in the given min/max range. The minimum value must\n * be less than or equal to the maximum value.\n *\n * Examples:\n * clamp(0.5, 0, 1) -> 0.5\n * clamp(1.5, 0, 1) -> 1\n * clamp(-0.5, 0, 1) -> 0\n *\n * @param {number} val the value to clamp.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound.\n * @return {number} the clamped value.\n */\nexport function clamp(val, min, max) {\n  devAssert(min <= max, 'Minimum value is greater than the maximum.');\n  return Math.min(Math.max(val, min), max);\n}\n\n/**\n * Returns value bound to min and max values +/- extent. The lower bound must\n * be less than or equal to the upper bound.\n * @param {number} val the value to bound.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound\n * @param {number} extent the allowed extent beyond the bounds.\n * @return {number} the bounded value.\n */\nexport function boundValue(val, min, max, extent) {\n  devAssert(min <= max, 'Lower bound is greater than the upper bound.');\n  return clamp(val, min - extent, max + extent);\n}\n\n/**\n * Returns the length of a vector given in X- and Y-coordinates.\n * @param {number} deltaX distance in the X direction.\n * @param {number} deltaY distance in the Y direction.\n * @return {number} the magnitude of the vector.\n */\nexport function magnitude(deltaX, deltaY) {\n  return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\n/**\n * Returns the distance between two points.\n * @param {number} x1 X-coordinate of the first point.\n * @param {number} y1 Y-coordinate of the first point.\n * @param {number} x2 X-coordinate of the second point.\n * @param {number} y2 Y-coordinate of the second point.\n * @return {number} the distance between the two points.\n */\nexport function distance(x1, y1, x2, y2) {\n  return magnitude(x2 - x1, y2 - y1);\n}\n\n/**\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} angleInDegrees\n * @return {{\n *  x: number,\n *  y: number,\n * }}\n */\nexport function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  };\n}\n\n/**\n * Sums up the values of the given array and returns the result\n * @param {Array<number>} values\n * @return {number}\n */\nexport function sum(values) {\n  return values.reduce(function (a, b) {\n    return a + b;\n  });\n}\n", "/* Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from '../../../src/core/data-structures/promise';\nimport {Services} from '../../../src/services';\nimport {user, userAssert} from '../../../src/log';\n\n/**\n * Store loading ads info within window to ensure it can be properly stored\n * across separately compiled binaries that share load throttling.\n * @const ID of window variable used to track 3p ads waiting to load.\n */\nconst LOADING_ADS_WIN_ID_ = '3pla';\n\n/** @private {?Promise} resolves when no 3p throttle */\nlet throttlePromise_ = null;\n/** @private {?Function} resolver for throttle promise */\nlet throttlePromiseResolver_ = null;\n\n/**\n * @param {!Window} win\n * @return {boolean} Whether 3p is currently throttled.\n */\nexport function is3pThrottled(win) {\n  return !!win[LOADING_ADS_WIN_ID_];\n}\n\n/** @return {!Promise} resolves when no 3p throttle */\nexport function waitFor3pThrottle() {\n  return throttlePromise_ || Promise.resolve();\n}\n\n/**\n * @param {!Element} element\n * @return {?number} number if explicit value should be used otherwise super\n *    default should be used.\n */\nexport function getAmpAdRenderOutsideViewport(element) {\n  const rawValue = element.getAttribute('data-loading-strategy');\n  if (rawValue == null) {\n    return null;\n  }\n  // Ad opts into lazier loading strategy where we only load ads that are\n  // at closer given number of viewports away.\n  if (rawValue == 'prefer-viewability-over-views' || rawValue == '') {\n    return 1.25;\n  }\n  const errorMessage =\n    'Value of data-loading-strategy should be a float number in range ' +\n    'of [0, 3], but got ' +\n    rawValue;\n  const viewportNumber = user().assertNumber(\n    parseFloat(rawValue),\n    errorMessage\n  );\n  userAssert(viewportNumber >= 0 && viewportNumber <= 3, errorMessage);\n  return viewportNumber;\n}\n\n/**\n * Increments loading ads count for throttling.\n * @param {!Window} win\n * @param {!Promise=} opt_loadingPromise\n */\nexport function incrementLoadingAds(win, opt_loadingPromise) {\n  if (win[LOADING_ADS_WIN_ID_] === undefined) {\n    win[LOADING_ADS_WIN_ID_] = 0;\n  }\n  win[LOADING_ADS_WIN_ID_]++;\n\n  if (!throttlePromise_) {\n    const deferred = new Deferred();\n    throttlePromise_ = deferred.promise;\n    throttlePromiseResolver_ = deferred.resolve;\n  }\n\n  Services.timerFor(win)\n    .timeoutPromise(1000, opt_loadingPromise)\n    .catch(() => {})\n    .then(() => {\n      if (!--win[LOADING_ADS_WIN_ID_]) {\n        throttlePromiseResolver_();\n        throttlePromise_ = null;\n        throttlePromiseResolver_ = null;\n      }\n    });\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    esm: IS_ESM,\n    minified: getMode(opt_win).minified,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n  };\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {DomFingerprint} from './core/dom/fingerprint';\nimport {Services} from './services';\nimport {dict} from './core/types/object';\nimport {experimentToggles, isCanary} from './experiments';\nimport {getLengthNumeral} from './layout';\nimport {getModeObject} from './mode-object';\nimport {getPageLayoutBoxBlocking} from './core/dom/page-layout-box';\nimport {internalRuntimeVersion} from './internal-version';\nimport {urls} from './config';\n\n/**\n * Produces the attributes for the ad template.\n * @param {!Window} parentWindow\n * @param {!AmpElement} element\n * @param {string} sentinel\n * @param {!JsonObject=} attributes\n * @return {!JsonObject}\n */\nexport function getContextMetadata(\n  parentWindow,\n  element,\n  sentinel,\n  attributes\n) {\n  const startTime = Date.now();\n  const width = element.getAttribute('width');\n  const height = element.getAttribute('height');\n  attributes = attributes ? attributes : dict();\n  attributes['width'] = getLengthNumeral(width);\n  attributes['height'] = getLengthNumeral(height);\n  if (element.getAttribute('title')) {\n    attributes['title'] = element.getAttribute('title');\n  }\n  let locationHref = parentWindow.location.href;\n  // This is really only needed for tests, but whatever. Children\n  // see us as the logical origin, so telling them we are about:srcdoc\n  // will fail ancestor checks.\n  if (locationHref == 'about:srcdoc') {\n    locationHref = parentWindow.parent.location.href;\n  }\n\n  const ampdoc = Services.ampdoc(element);\n  const docInfo = Services.documentInfoForDoc(element);\n  const viewer = Services.viewerForDoc(element);\n  const referrer = viewer.getUnconfirmedReferrerUrl();\n\n  const layoutRect = getPageLayoutBoxBlocking(element);\n\n  // Use JsonObject to preserve field names so that ampContext can access\n  // values with name\n  // ampcontext.js and this file are compiled in different compilation unit\n\n  // Note: Field names can by perserved by using JsonObject, or by adding\n  // perserved name to extern. We are doing both right now.\n  // Please also add new introduced variable\n  // name to the extern list.\n  attributes['_context'] = dict({\n    'ampcontextVersion': internalRuntimeVersion(),\n    'ampcontextFilepath': `${\n      urls.thirdParty\n    }/${internalRuntimeVersion()}/ampcontext-v0.js`,\n    'sourceUrl': docInfo.sourceUrl,\n    'referrer': referrer,\n    'canonicalUrl': docInfo.canonicalUrl,\n    'pageViewId': docInfo.pageViewId,\n    'location': {\n      'href': locationHref,\n    },\n    'startTime': startTime,\n    'tagName': element.tagName,\n    'mode': getModeObject(),\n    'canary': isCanary(parentWindow),\n    'hidden': !ampdoc.isVisible(),\n    'initialLayoutRect': layoutRect\n      ? {\n          'left': layoutRect.left,\n          'top': layoutRect.top,\n          'width': layoutRect.width,\n          'height': layoutRect.height,\n        }\n      : null,\n    'domFingerprint': DomFingerprint.generate(element),\n    'experimentToggles': experimentToggles(parentWindow),\n    'sentinel': sentinel,\n  });\n  const adSrc = element.getAttribute('src');\n  if (adSrc) {\n    attributes['src'] = adSrc;\n  }\n  return attributes;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Required flags to apply to the sandbox iframe.\n * @return {Array<string>}\n */\nexport const getRequiredSandboxFlags = () => [\n  // This only allows navigation when user interacts and thus prevents\n  // ads from auto navigating the user.\n  'allow-top-navigation-by-user-activation',\n  // Crucial because otherwise even target=_blank opened links are\n  // still sandboxed which they may not expect.\n  'allow-popups-to-escape-sandbox',\n];\n\n/**\n * These flags are not feature detected. Put stuff here where either\n * they have always been supported or support is not crucial.\n * @return {Array<string>}\n */\nexport const getOptionalSandboxFlags = () => [\n  'allow-forms',\n  // We should consider turning this off! But since the top navigation\n  // issue is the big one, we'll leave this allowed for now.\n  'allow-modals',\n  // Give access to raw mouse movements.\n  'allow-pointer-lock',\n  // This remains subject to popup blocking, it just makes it supported\n  // at all.\n  'allow-popups',\n  // This applies inside the iframe and is crucial to not break the web.\n  'allow-same-origin',\n  'allow-scripts',\n  // Not allowed\n  // - allow-top-navigation\n  // - allow-orientation-lock\n  // - allow-pointer-lock\n  // - allow-presentation\n];\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {assertHttpsUrl, parseUrlDeprecated} from './url';\nimport {dev, devAssert, user, userAssert} from './log';\nimport {dict} from './core/types/object';\nimport {getContextMetadata} from '../src/iframe-attributes';\nimport {getMode} from './mode';\nimport {\n  getOptionalSandboxFlags,\n  getRequiredSandboxFlags,\n} from './core/3p-frame';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isExperimentOn} from './experiments';\nimport {setStyle} from './style';\nimport {tryParseJson} from './core/types/object/json';\nimport {urls} from './config';\n\n/** @type {!Object<string,number>} Number of 3p frames on the for that type. */\nlet count = {};\n\n/** @type {string} */\nlet overrideBootstrapBaseUrl;\n\n/** @const {string} */\nconst TAG = '3p-frame';\n\n/**\n * Produces the attributes for the ad template.\n * @param {!Window} parentWindow\n * @param {!AmpElement} element\n * @param {string=} opt_type\n * @param {Object=} opt_context\n * @return {!JsonObject} Contains\n *     - type, width, height, src attributes of <amp-ad> tag. These have\n *       precedence over the data- attributes.\n *     - data-* attributes of the <amp-ad> tag with the \"data-\" removed.\n *     - A _context object for internal use.\n */\nfunction getFrameAttributes(parentWindow, element, opt_type, opt_context) {\n  const type = opt_type || element.getAttribute('type');\n  userAssert(type, 'Attribute type required for <amp-ad>: %s', element);\n  const sentinel = generateSentinel(parentWindow);\n  let attributes = dict();\n  // Do these first, as the other attributes have precedence.\n  addDataAndJsonAttributes_(element, attributes);\n  attributes = getContextMetadata(parentWindow, element, sentinel, attributes);\n  attributes['type'] = type;\n  Object.assign(attributes['_context'], opt_context);\n  return attributes;\n}\n\n/**\n * Creates the iframe for the embed. Applies correct size and passes the embed\n * attributes to the frame via JSON inside the fragment.\n * @param {!Window} parentWindow\n * @param {!AmpElement} parentElement\n * @param {string=} opt_type\n * @param {Object=} opt_context\n * @param {{\n *   allowFullscreen: (boolean|undefined),\n *   initialIntersection: (IntersectionObserverEntry|undefined),\n * }=} options Options for the created iframe.\n * @return {!HTMLIFrameElement} The iframe.\n */\nexport function getIframe(\n  parentWindow,\n  parentElement,\n  opt_type,\n  opt_context,\n  options = {}\n) {\n  const {allowFullscreen = false, initialIntersection} = options;\n  // Check that the parentElement is already in DOM. This code uses a new and\n  // fast `isConnected` API and thus only used when it's available.\n  devAssert(\n    parentElement['isConnected'] === undefined ||\n      parentElement['isConnected'] === true,\n    'Parent element must be in DOM'\n  );\n  const attributes = getFrameAttributes(\n    parentWindow,\n    parentElement,\n    opt_type,\n    opt_context\n  );\n  if (initialIntersection) {\n    attributes['_context']['initialIntersection'] = initialIntersection;\n  }\n\n  const iframe = /** @type {!HTMLIFrameElement} */ (\n    parentWindow.document.createElement('iframe')\n  );\n\n  if (!count[attributes['type']]) {\n    count[attributes['type']] = 0;\n  }\n  count[attributes['type']] += 1;\n\n  const ampdoc = parentElement.getAmpDoc();\n  const baseUrl = getBootstrapBaseUrl(parentWindow, ampdoc);\n  const host = parseUrlDeprecated(baseUrl).hostname;\n  // This name attribute may be overwritten if this frame is chosen to\n  // be the master frame. That is ok, as we will read the name off\n  // for our uses before that would occur.\n  // @see https://github.com/ampproject/amphtml/blob/main/3p/integration.js\n  const name = JSON.stringify(\n    dict({\n      'host': host,\n      'bootstrap': getBootstrapUrl(attributes['type'], parentWindow),\n      'type': attributes['type'],\n      // https://github.com/ampproject/amphtml/pull/2955\n      'count': count[attributes['type']],\n      'attributes': attributes,\n    })\n  );\n\n  iframe.src = baseUrl;\n  iframe.ampLocation = parseUrlDeprecated(baseUrl);\n  iframe.name = name;\n  // Add the check before assigning to prevent IE throw Invalid argument error\n  if (attributes['width']) {\n    iframe.width = attributes['width'];\n  }\n  if (attributes['height']) {\n    iframe.height = attributes['height'];\n  }\n  if (attributes['title']) {\n    iframe.title = attributes['title'];\n  }\n  if (allowFullscreen) {\n    iframe.setAttribute('allowfullscreen', 'true');\n  }\n  iframe.setAttribute('scrolling', 'no');\n  setStyle(iframe, 'border', 'none');\n  /** @this {!Element} */\n  iframe.onload = function () {\n    // Chrome does not reflect the iframe readystate.\n    this.readyState = 'complete';\n  };\n  // Block synchronous XHR in ad. These are very rare, but super bad for UX\n  // as they block the UI thread for the arbitrary amount of time until the\n  // request completes.\n  iframe.setAttribute('allow', \"sync-xhr 'none';\");\n  const excludeFromSandbox = ['facebook'];\n  if (!excludeFromSandbox.includes(opt_type)) {\n    applySandbox(iframe);\n  }\n  iframe.setAttribute(\n    'data-amp-3p-sentinel',\n    attributes['_context']['sentinel']\n  );\n  return iframe;\n}\n\n/**\n * Copies data- attributes from the element into the attributes object.\n * Removes the data- from the name and capitalizes after -. If there\n * is an attribute called json, parses the JSON and adds it to the\n * attributes.\n * @param {!Element} element\n * @param {!JsonObject} attributes The destination.\n * visibleForTesting\n */\nexport function addDataAndJsonAttributes_(element, attributes) {\n  const {dataset} = element;\n  for (const name in dataset) {\n    // data-vars- is reserved for amp-analytics\n    // see https://github.com/ampproject/amphtml/blob/main/extensions/amp-analytics/analytics-vars.md#variables-as-data-attribute\n    if (!name.startsWith('vars')) {\n      attributes[name] = dataset[name];\n    }\n  }\n  const json = element.getAttribute('json');\n  if (json) {\n    const obj = tryParseJson(json);\n    if (obj === undefined) {\n      throw user().createError(\n        'Error parsing JSON in json attribute in element %s',\n        element\n      );\n    }\n    for (const key in obj) {\n      attributes[key] = obj[key];\n    }\n  }\n}\n\n/**\n * Get the bootstrap script URL for iframe.\n * @param {string} type\n * @param {!Window} win\n * @return {string}\n */\nexport function getBootstrapUrl(type, win) {\n  if (getMode().localDev || getMode().test) {\n    const filename = getMode().minified\n      ? `./vendor/${type}.`\n      : `./vendor/${type}.max.`;\n    return IS_ESM ? filename + 'mjs' : filename + 'js';\n  }\n  if (isExperimentOn(win, '3p-vendor-split')) {\n    return IS_ESM\n      ? `${urls.thirdParty}/${internalRuntimeVersion()}/vendor/${type}.mjs`\n      : `${urls.thirdParty}/${internalRuntimeVersion()}/vendor/${type}.js`;\n  }\n  return `${urls.thirdParty}/${internalRuntimeVersion()}/f.js`;\n}\n\n/**\n * Preloads URLs related to the bootstrap iframe.\n * @param {!Window} win\n * @param {string} type\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!./preconnect.PreconnectService} preconnect\n */\nexport function preloadBootstrap(win, type, ampdoc, preconnect) {\n  const url = getBootstrapBaseUrl(win, ampdoc);\n  preconnect.preload(ampdoc, url, 'document');\n\n  // While the URL may point to a custom domain, this URL will always be\n  // fetched by it.\n  preconnect.preload(ampdoc, getBootstrapUrl(type, win), 'script');\n}\n\n/**\n * Returns the base URL for 3p bootstrap iframes.\n * @param {!Window} parentWindow\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {boolean=} opt_strictForUnitTest\n * @return {string}\n * @visibleForTesting\n */\nexport function getBootstrapBaseUrl(\n  parentWindow,\n  ampdoc,\n  opt_strictForUnitTest\n) {\n  return (\n    getCustomBootstrapBaseUrl(parentWindow, ampdoc, opt_strictForUnitTest) ||\n    getDefaultBootstrapBaseUrl(parentWindow)\n  );\n}\n\n/**\n * @param {string} url\n */\nexport function setDefaultBootstrapBaseUrlForTesting(url) {\n  overrideBootstrapBaseUrl = url;\n}\n\n/**\n * @param {*} win\n */\nexport function resetBootstrapBaseUrlForTesting(win) {\n  win.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN = undefined;\n}\n\n/**\n * Returns the default base URL for 3p bootstrap iframes.\n * @param {!Window} parentWindow\n * @param {string=} opt_srcFileBasename\n * @return {string}\n */\nexport function getDefaultBootstrapBaseUrl(parentWindow, opt_srcFileBasename) {\n  const srcFileBasename = opt_srcFileBasename || 'frame';\n  if (getMode().localDev || getMode().test) {\n    return getDevelopmentBootstrapBaseUrl(parentWindow, srcFileBasename);\n  }\n  // Ensure same sub-domain is used despite potentially different file.\n  parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN =\n    parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN ||\n    getSubDomain(parentWindow);\n  return (\n    'https://' +\n    parentWindow.__AMP_DEFAULT_BOOTSTRAP_SUBDOMAIN +\n    `.${urls.thirdPartyFrameHost}/${internalRuntimeVersion()}/` +\n    `${srcFileBasename}.html`\n  );\n}\n\n/**\n * Function to return the development boostrap base URL\n * @param {!Window} parentWindow\n * @param {string} srcFileBasename\n * @return {string}\n */\nexport function getDevelopmentBootstrapBaseUrl(parentWindow, srcFileBasename) {\n  return (\n    overrideBootstrapBaseUrl ||\n    getAdsLocalhost(parentWindow) +\n      '/dist.3p/' +\n      (getMode().minified\n        ? `${internalRuntimeVersion()}/${srcFileBasename}`\n        : `current/${srcFileBasename}.max`) +\n      '.html'\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n */\nfunction getAdsLocalhost(win) {\n  let adsUrl = urls.thirdParty; // local dev with a non-localhost server\n  if (adsUrl == 'https://3p.ampproject.net') {\n    adsUrl = 'http://ads.localhost'; // local dev with a localhost server\n  }\n  return adsUrl + ':' + (win.location.port || win.parent.location.port);\n}\n\n/**\n * Sub domain on which the 3p iframe will be hosted.\n * Because we only calculate the URL once per page, this function is only\n * called once and hence all frames on a page use the same URL.\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getSubDomain(win) {\n  return 'd-' + getRandom(win);\n}\n\n/**\n * Generates a random non-negative integer.\n * @param {!Window} win\n * @return {string}\n */\nexport function getRandom(win) {\n  let rand;\n  if (win.crypto && win.crypto.getRandomValues) {\n    // By default use 2 32 bit integers.\n    const uint32array = new Uint32Array(2);\n    win.crypto.getRandomValues(uint32array);\n    rand = String(uint32array[0]) + uint32array[1];\n  } else {\n    // Fall back to Math.random.\n    rand = String(win.Math.random()).substr(2) + '0';\n  }\n  return rand;\n}\n\n/**\n * Returns the custom base URL for 3p bootstrap iframes if it exists.\n * Otherwise null.\n * @param {!Window} parentWindow\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {boolean=} opt_strictForUnitTest\n * @return {?string}\n */\nfunction getCustomBootstrapBaseUrl(\n  parentWindow,\n  ampdoc,\n  opt_strictForUnitTest\n) {\n  const meta = ampdoc.getMetaByName('amp-3p-iframe-src');\n  if (!meta) {\n    return null;\n  }\n  const url = assertHttpsUrl(meta, 'meta[name=\"amp-3p-iframe-src\"]');\n  userAssert(\n    url.indexOf('?') == -1,\n    '3p iframe url must not include query string %s in element %s.',\n    url,\n    meta\n  );\n  // This is not a security primitive, we just don't want this to happen in\n  // practice. People could still redirect to the same origin, but they cannot\n  // redirect to the proxy origin which is the important one.\n  const parsed = parseUrlDeprecated(url);\n  userAssert(\n    (parsed.hostname == 'localhost' && !opt_strictForUnitTest) ||\n      parsed.origin != parseUrlDeprecated(parentWindow.location.href).origin,\n    '3p iframe url must not be on the same origin as the current document ' +\n      '%s (%s) in element %s. See https://github.com/ampproject/amphtml' +\n      '/blob/main/docs/spec/amp-iframe-origin-policy.md for details.',\n    url,\n    parsed.origin,\n    meta\n  );\n  return `${url}?${internalRuntimeVersion()}`;\n}\n\n/**\n * Applies a sandbox to the iframe, if the required flags can be allowed.\n * @param {!Element} iframe\n * @visibleForTesting\n */\nexport function applySandbox(iframe) {\n  if (!iframe.sandbox || !iframe.sandbox.supports) {\n    return; // Can't feature detect support\n  }\n  // If these flags are not supported by the UA we don't apply any\n  // sandbox.\n  const requiredFlags = getRequiredSandboxFlags();\n  for (let i = 0; i < requiredFlags.length; i++) {\n    const flag = requiredFlags[i];\n    if (!iframe.sandbox.supports(flag)) {\n      dev().info(TAG, \"Iframe doesn't support %s\", flag);\n      return;\n    }\n  }\n  iframe.sandbox =\n    requiredFlags.join(' ') + ' ' + getOptionalSandboxFlags().join(' ');\n}\n\n/**\n * Returns a randomized sentinel value for 3p iframes.\n * The format is \"%d-%d\" with the first value being the depth of current\n * window in the window hierarchy and the second a random integer.\n * @param {!Window} parentWindow\n * @return {string}\n * @visibleForTesting\n */\nexport function generateSentinel(parentWindow) {\n  let windowDepth = 0;\n  for (let win = parentWindow; win && win != win.parent; win = win.parent) {\n    windowDepth++;\n  }\n  return String(windowDepth) + '-' + getRandom(parentWindow);\n}\n\n/**\n * Resets the count of each 3p frame type\n * @visibleForTesting\n */\nexport function resetCountForTesting() {\n  count = {};\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ADSENSE_MCRSPV_TAG,\n  getMatchedContentResponsiveHeightAndUpdatePubParams,\n} from '../../../ads/google/utils';\nimport {ADS_INITIAL_INTERSECTION_EXP} from '../../../src/experiments/ads-initial-intersection-exp';\nimport {AmpAdUIHandler} from './amp-ad-ui';\nimport {AmpAdXOriginIframeHandler} from './amp-ad-xorigin-iframe-handler';\nimport {\n  CONSENT_POLICY_STATE, // eslint-disable-line no-unused-vars\n} from '../../../src/core/constants/consent-state';\nimport {\n  Layout, // eslint-disable-line no-unused-vars\n  LayoutPriority,\n  isLayoutSizeDefined,\n} from '../../../src/layout';\nimport {Services} from '../../../src/services';\nimport {adConfig} from '../../../ads/_config';\nimport {clamp} from '../../../src/core/math';\nimport {computedStyle, setStyle} from '../../../src/style';\nimport {dev, devAssert, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {getAdCid} from '../../../src/ad-cid';\nimport {getAdContainer, isAdPositionAllowed} from '../../../src/ad-helper';\nimport {\n  getAmpAdRenderOutsideViewport,\n  incrementLoadingAds,\n  is3pThrottled,\n} from './concurrent-load';\nimport {\n  getConsentMetadata,\n  getConsentPolicyInfo,\n  getConsentPolicySharedData,\n  getConsentPolicyState,\n} from '../../../src/consent';\nimport {getExperimentBranch} from '../../../src/experiments';\nimport {getIframe, preloadBootstrap} from '../../../src/3p-frame';\nimport {\n  intersectionEntryToJson,\n  measureIntersection,\n} from '../../../src/utils/intersection';\nimport {moveLayoutRect} from '../../../src/core/math/layout-rect';\nimport {\n  observeWithSharedInOb,\n  unobserveWithSharedInOb,\n} from '../../../src/viewport-observer';\nimport {toWin} from '../../../src/core/window';\n\n/** @const {string} Tag name for 3P AD implementation. */\nexport const TAG_3P_IMPL = 'amp-ad-3p-impl';\n\n/** @const {number} */\nconst MIN_FULL_WIDTH_HEIGHT = 100;\n\n/** @const {number} */\nconst MAX_FULL_WIDTH_HEIGHT = 500;\n\nexport class AmpAd3PImpl extends AMP.BaseElement {\n  /**\n   * @param {!AmpElement} element\n   */\n  constructor(element) {\n    super(element);\n\n    /**\n     * @private {?Element}\n     * @visibleForTesting\n     */\n    this.iframe_ = null;\n\n    /** @type {?Object} */\n    this.config = null;\n\n    /** @type {?AmpAdUIHandler} */\n    this.uiHandler = null;\n\n    /** @private {?AmpAdXOriginIframeHandler} */\n    this.xOriginIframeHandler_ = null;\n\n    /**\n     * @private {?Element}\n     * @visibleForTesting\n     */\n    this.placeholder_ = null;\n\n    /**\n     * @private {?Element}\n     * @visibleForTesting\n     */\n    this.fallback_ = null;\n\n    /** @private {boolean} */\n    this.isInFixedContainer_ = false;\n\n    /**\n     * The (relative) layout box of the ad iframe to the amp-ad tag.\n     * @private {?../../../src/layout-rect.LayoutRectDef}\n     */\n    this.iframeLayoutBox_ = null;\n\n    /**\n     * Call to stop listening to viewport changes.\n     * @private {?function()}\n     * @visibleForTesting\n     */\n    this.unlistenViewportChanges_ = null;\n\n    /** @private {Array<Function>} */\n    this.unlisteners_ = [];\n\n    /**\n     * @private {IntersectionObserver}\n     * @visibleForTesting\n     */\n    this.intersectionObserver_ = null;\n\n    /** @private {?string|undefined} */\n    this.container_ = undefined;\n\n    /** @private {?Promise} */\n    this.layoutPromise_ = null;\n\n    /** @private {string|undefined} */\n    this.type_ = undefined;\n\n    /**\n     * For full-width responsive ads: whether the element has already been\n     * aligned to the edges of the viewport.\n     * @private {boolean}\n     */\n    this.isFullWidthAligned_ = false;\n\n    /**\n     * Whether full-width responsive was requested for this ad.\n     * @private {boolean}\n     */\n    this.isFullWidthRequested_ = false;\n\n    /** @private {Promise<!IntersectionObserverEntry>} */\n    this.initialIntersectionPromise_ = null;\n  }\n\n  /** @override */\n  getLayoutPriority() {\n    // Loads ads after other content,\n    const isPWA = !this.element.getAmpDoc().isSingleDoc();\n    // give the ad higher priority if it is inside a PWA\n    return isPWA ? LayoutPriority.METADATA : LayoutPriority.ADS;\n  }\n\n  /** @override */\n  renderOutsideViewport() {\n    if (is3pThrottled(this.win)) {\n      return false;\n    }\n    // Otherwise the ad is good to go.\n    const elementCheck = getAmpAdRenderOutsideViewport(this.element);\n    return elementCheck !== null ? elementCheck : super.renderOutsideViewport();\n  }\n\n  /**\n   * @param {!Layout} layout\n   * @override\n   */\n  isLayoutSupported(layout) {\n    return isLayoutSizeDefined(layout);\n  }\n\n  /**\n   * @return {!../../../src/service/resource.Resource}\n   * @visibleForTesting\n   */\n  getResource() {\n    return this.element.getResources().getResourceForElement(this.element);\n  }\n\n  /** @override */\n  getConsentPolicy() {\n    const type = this.element.getAttribute('type');\n    const config = adConfig[type];\n    if (config && config['consentHandlingOverride']) {\n      return null;\n    }\n    return super.getConsentPolicy();\n  }\n\n  /** @override */\n  buildCallback() {\n    this.type_ = this.element.getAttribute('type');\n    const upgradeDelayMs = Math.round(this.getResource().getUpgradeDelayMs());\n    dev().info(TAG_3P_IMPL, `upgradeDelay ${this.type_}: ${upgradeDelayMs}`);\n\n    this.placeholder_ = this.getPlaceholder();\n    this.fallback_ = this.getFallback();\n\n    this.config = adConfig[this.type_];\n    userAssert(this.config, `Type \"${this.type_}\" is not supported in amp-ad`);\n\n    this.uiHandler = new AmpAdUIHandler(this);\n\n    this.isFullWidthRequested_ = this.shouldRequestFullWidth_();\n\n    if (this.isFullWidthRequested_) {\n      return this.attemptFullWidthSizeChange_();\n    }\n\n    const asyncIntersection =\n      getExperimentBranch(this.win, ADS_INITIAL_INTERSECTION_EXP.id) ===\n      ADS_INITIAL_INTERSECTION_EXP.experiment;\n    this.initialIntersectionPromise_ = asyncIntersection\n      ? measureIntersection(this.element)\n      : Promise.resolve(this.element.getIntersectionChangeEntry());\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  shouldRequestFullWidth_() {\n    const hasFullWidth = this.element.hasAttribute('data-full-width');\n    if (!hasFullWidth) {\n      return false;\n    }\n    userAssert(\n      this.element.getAttribute('width') == '100vw',\n      'Ad units with data-full-width must have width=\"100vw\".'\n    );\n    userAssert(\n      !!this.config.fullWidthHeightRatio,\n      'Ad network does not support full width ads.'\n    );\n    dev().info(\n      TAG_3P_IMPL,\n      '#${this.getResource().getId()} Full width requested'\n    );\n    return true;\n  }\n\n  /**\n   * Prefetches and preconnects URLs related to the ad.\n   * @param {boolean=} opt_onLayout\n   * @override\n   */\n  preconnectCallback(opt_onLayout) {\n    const preconnect = Services.preconnectFor(this.win);\n    // We always need the bootstrap.\n    preloadBootstrap(this.win, this.type_, this.getAmpDoc(), preconnect);\n    if (typeof this.config.prefetch == 'string') {\n      preconnect.preload(this.getAmpDoc(), this.config.prefetch, 'script');\n    } else if (this.config.prefetch) {\n      /** @type {!Array} */ (this.config.prefetch).forEach((p) => {\n        preconnect.preload(this.getAmpDoc(), p, 'script');\n      });\n    }\n    if (typeof this.config.preconnect == 'string') {\n      preconnect.url(this.getAmpDoc(), this.config.preconnect, opt_onLayout);\n    } else if (this.config.preconnect) {\n      /** @type {!Array} */ (this.config.preconnect).forEach((p) => {\n        preconnect.url(this.getAmpDoc(), p, opt_onLayout);\n      });\n    }\n    // If fully qualified src for ad script is specified we preconnect to it.\n    const src = this.element.getAttribute('src');\n    if (src) {\n      // We only preconnect to the src because we cannot know whether the URL\n      // will have caching headers set.\n      preconnect.url(this.getAmpDoc(), src);\n    }\n  }\n\n  /**\n   * @override\n   */\n  onLayoutMeasure() {\n    this.isInFixedContainer_ = !isAdPositionAllowed(this.element, this.win);\n    /** detect ad containers, add the list to element as a new attribute */\n    if (this.container_ === undefined) {\n      this.container_ = getAdContainer(this.element);\n    }\n    // We remeasured this tag, let's also remeasure the iframe. Should be\n    // free now and it might have changed.\n    this.measureIframeLayoutBox_();\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.onLayoutMeasure();\n    }\n\n    if (this.isFullWidthRequested_ && !this.isFullWidthAligned_) {\n      this.isFullWidthAligned_ = true;\n      const layoutBox = this.getLayoutBox();\n\n      // Nudge into the correct horizontal position by changing side margin.\n      this.getVsync().run(\n        {\n          measure: (state) => {\n            state.direction = computedStyle(this.win, this.element)[\n              'direction'\n            ];\n          },\n          mutate: (state) => {\n            if (state.direction == 'rtl') {\n              setStyle(this.element, 'marginRight', layoutBox.left, 'px');\n            } else {\n              setStyle(this.element, 'marginLeft', -layoutBox.left, 'px');\n            }\n          },\n        },\n        {direction: ''}\n      );\n    }\n  }\n\n  /**\n   * Measure the layout box of the iframe if we rendered it already.\n   * @private\n   */\n  measureIframeLayoutBox_() {\n    if (this.xOriginIframeHandler_ && this.xOriginIframeHandler_.iframe) {\n      const iframeBox = this.getViewport().getLayoutRect(\n        this.xOriginIframeHandler_.iframe\n      );\n      const box = this.getLayoutBox();\n      // Cache the iframe's relative position to the amp-ad. This is\n      // necessary for fixed-position containers which \"move\" with the\n      // viewport.\n      this.iframeLayoutBox_ = moveLayoutRect(iframeBox, -box.left, -box.top);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getIntersectionElementLayoutBox() {\n    if (!this.xOriginIframeHandler_ || !this.xOriginIframeHandler_.iframe) {\n      return super.getIntersectionElementLayoutBox();\n    }\n    const box = this.getLayoutBox();\n    if (!this.iframeLayoutBox_) {\n      this.measureIframeLayoutBox_();\n    }\n\n    const iframe = /** @type {!../../../src/layout-rect.LayoutRectDef} */ (\n      devAssert(this.iframeLayoutBox_)\n    );\n    return moveLayoutRect(iframe, box.left, box.top);\n  }\n\n  /** @override */\n  layoutCallback() {\n    if (this.layoutPromise_) {\n      return this.layoutPromise_;\n    }\n    userAssert(\n      !this.isInFixedContainer_ || this.uiHandler.isStickyAd(),\n      '<amp-ad> is not allowed to be placed in elements with ' +\n        'position:fixed: %s unless it has sticky attribute',\n      this.element\n    );\n\n    const consentPromise = this.getConsentState();\n    const consentPolicyId = super.getConsentPolicy();\n    const consentStringPromise = consentPolicyId\n      ? getConsentPolicyInfo(this.element, consentPolicyId)\n      : Promise.resolve(null);\n    const consentMetadataPromise = consentPolicyId\n      ? getConsentMetadata(this.element, consentPolicyId)\n      : Promise.resolve(null);\n    const sharedDataPromise = consentPolicyId\n      ? getConsentPolicySharedData(this.element, consentPolicyId)\n      : Promise.resolve(null);\n\n    // For sticky ad only: must wait for scrolling event before loading the ad\n    const scrollPromise = this.uiHandler.getScrollPromiseForStickyAd();\n\n    this.layoutPromise_ = Promise.all([\n      getAdCid(this),\n      consentPromise,\n      sharedDataPromise,\n      consentStringPromise,\n      consentMetadataPromise,\n      scrollPromise,\n    ])\n      .then((consents) => {\n        this.uiHandler.maybeInitStickyAd();\n\n        // Use JsonObject to preserve field names so that ampContext can access\n        // values with name\n        // ampcontext.js and this file are compiled in different compilation unit\n\n        // Note: Field names can by perserved by using JsonObject, or by adding\n        // perserved name to extern. We are doing both right now.\n        // Please also add new introduced variable\n        // name to the extern list.\n        const opt_context = dict({\n          'clientId': consents[0] || null,\n          'container': this.container_,\n          'initialConsentState': consents[1],\n          'consentSharedData': consents[2],\n          'initialConsentValue': consents[3],\n          'initialConsentMetadata': consents[4],\n        });\n\n        // In this path, the request and render start events are entangled,\n        // because both happen inside a cross-domain iframe.  Separating them\n        // here, though, allows us to measure the impact of ad throttling via\n        // incrementLoadingAds().\n\n        return this.initialIntersectionPromise_.then((intersection) => {\n          const iframe = getIframe(\n            toWin(this.element.ownerDocument.defaultView),\n            this.element,\n            this.type_,\n            opt_context,\n            {\n              initialIntersection: intersectionEntryToJson(intersection),\n            }\n          );\n          iframe.title = this.element.title || 'Advertisement';\n          this.xOriginIframeHandler_ = new AmpAdXOriginIframeHandler(this);\n          return this.xOriginIframeHandler_.init(iframe);\n        });\n      })\n      .then(() => {\n        observeWithSharedInOb(this.element, (inViewport) =>\n          this.viewportCallback_(inViewport)\n        );\n      });\n    incrementLoadingAds(this.win, this.layoutPromise_);\n    return this.layoutPromise_;\n  }\n\n  /**\n   * @param {boolean} inViewport\n   * @private\n   */\n  viewportCallback_(inViewport) {\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.viewportCallback(inViewport);\n    }\n  }\n\n  /** @override */\n  unlayoutOnPause() {\n    return true;\n  }\n\n  /** @override  */\n  unlayoutCallback() {\n    this.unlisteners_.forEach((unlisten) => unlisten());\n    this.unlisteners_.length = 0;\n    unobserveWithSharedInOb(this.element);\n\n    this.layoutPromise_ = null;\n    this.uiHandler.applyUnlayoutUI();\n    if (this.xOriginIframeHandler_) {\n      this.xOriginIframeHandler_.freeXOriginIframe();\n      this.xOriginIframeHandler_ = null;\n    }\n    if (this.uiHandler) {\n      this.uiHandler.cleanup();\n    }\n    return true;\n  }\n\n  /**\n   * @return {!Promise<?CONSENT_POLICY_STATE>}\n   */\n  getConsentState() {\n    const consentPolicyId = super.getConsentPolicy();\n    return consentPolicyId\n      ? getConsentPolicyState(this.element, consentPolicyId)\n      : Promise.resolve(null);\n  }\n\n  /**\n   * Calculates and attempts to set the appropriate height & width for a\n   * responsive full width ad unit.\n   * @return {!Promise}\n   * @private\n   */\n  attemptFullWidthSizeChange_() {\n    const viewportSize = this.getViewport().getSize();\n    const maxHeight = Math.min(MAX_FULL_WIDTH_HEIGHT, viewportSize.height);\n    const {width} = viewportSize;\n    const height = this.getFullWidthHeight_(width, maxHeight);\n    // Attempt to resize to the correct height. The width should already be\n    // 100vw, but is fixed here so that future resizes of the viewport don't\n    // affect it.\n\n    return this.attemptChangeSize(height, width).then(\n      () => {\n        dev().info(TAG_3P_IMPL, `Size change accepted: ${width}x${height}`);\n      },\n      () => {\n        dev().info(TAG_3P_IMPL, `Size change rejected: ${width}x${height}`);\n      }\n    );\n  }\n\n  /**\n   * Calculates the appropriate width for a responsive full width ad unit.\n   * @param {number} width\n   * @param {number} maxHeight\n   * @return {number}\n   * @private\n   */\n  getFullWidthHeight_(width, maxHeight) {\n    // TODO(google a4a eng): remove this once adsense switches fully to\n    // fast fetch.\n    if (this.element.getAttribute('data-auto-format') === ADSENSE_MCRSPV_TAG) {\n      return getMatchedContentResponsiveHeightAndUpdatePubParams(\n        width,\n        this.element\n      );\n    }\n    return clamp(\n      Math.round(width / this.config.fullWidthHeightRatio),\n      MIN_FULL_WIDTH_HEIGHT,\n      maxHeight\n    );\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpAdUIHandler} from './amp-ad-ui';\nimport {CommonSignals} from '../../../src/core/constants/common-signals';\nimport {LayoutPriority, isLayoutSizeDefined} from '../../../src/layout';\nimport {Services} from '../../../src/services';\nimport {addParamToUrl} from '../../../src/url';\nimport {\n  childElementByTag,\n  closestAncestorElementBySelector,\n} from '../../../src/core/dom/query';\nimport {hasOwn} from '../../../src/core/types/object';\nimport {removeChildren} from '../../../src/dom';\nimport {userAssert} from '../../../src/log';\n\n/** @const {string} Tag name for custom ad implementation. */\nexport const TAG_AD_CUSTOM = 'amp-ad-custom';\n\n/** @type {Object} A map of promises for each value of data-url. The promise\n *  will fetch data for the URL for the ad server, and return it as a map of\n *  objects, keyed by slot; each object contains the variables to be\n *   substituted into the mustache template. */\nconst ampCustomadXhrPromises = {};\n\n/** @type {Object} a map of full urls (i.e. including the ampslots parameter)\n * for each value of data-url */\nlet ampCustomadFullUrls = null;\n\nexport class AmpAdCustom extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n    /** @private {?string} The base URL of the ad server for this ad */\n    this.url_ = null;\n\n    /** @private {?string} A string identifying this ad slot: the server's\n     *  responses will be keyed by slot */\n    this.slot_ = null;\n\n    /** @type {?AmpAdUIHandler} */\n    this.uiHandler = null;\n  }\n\n  /** @override */\n  getLayoutPriority() {\n    // Since this is AMPHTML we are trusting that it will load responsibly\n    return LayoutPriority.CONTENT;\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    // TODO: Add proper support for more layouts, and figure out which ones\n    // we're permitting\n    return isLayoutSizeDefined(layout);\n  }\n\n  /**\n   * Builds AmpAdUIHandler callback\n   */\n  buildCallback() {\n    this.url_ = this.element.getAttribute('data-url');\n    this.slot_ = this.element.getAttribute('data-slot');\n    // Ensure that the slot value is legal\n    userAssert(\n      this.slot_ === null || this.slot_.match(/^[0-9a-z]+$/),\n      'custom ad slot should be alphanumeric: ' + this.slot_\n    );\n\n    const urlService = Services.urlForDoc(this.element);\n    userAssert(\n      this.url_ && urlService.isSecure(this.url_),\n      'custom ad url must be an HTTPS URL'\n    );\n\n    this.uiHandler = new AmpAdUIHandler(this);\n  }\n\n  /** @override */\n  layoutCallback() {\n    /** @const {string} fullUrl */\n    const fullUrl = this.getFullUrl_();\n    // if we have cached the response, find it, otherwise fetch\n    const responsePromise =\n      ampCustomadXhrPromises[fullUrl] ||\n      Services.xhrFor(this.win)\n        .fetchJson(fullUrl)\n        .then((res) => res.json());\n    if (this.slot_ !== null) {\n      // Cache this response if using `data-slot` feature so only one request\n      // is made per url\n      ampCustomadXhrPromises[fullUrl] = responsePromise;\n    }\n    return responsePromise.then((data) => {\n      // We will get here when the data has been fetched from the server\n      let templateData = data;\n      if (this.slot_ !== null) {\n        templateData = hasOwn(data, this.slot_) ? data[this.slot_] : null;\n      }\n\n      if (!templateData || typeof templateData != 'object') {\n        this.uiHandler.applyNoContentUI();\n        return;\n      }\n\n      templateData = this.handleTemplateData_(\n        /** @type {!JsonObject} */ (templateData)\n      );\n\n      this.renderStarted();\n\n      try {\n        Services.templatesForDoc(this.element)\n          .findAndRenderTemplate(this.element, templateData)\n          .then((renderedElement) => {\n            // Get here when the template has been rendered Clear out the\n            // child template and replace it by the rendered version Note that\n            // we can't clear templates that's not ad's child because they\n            // maybe used by other ad component.\n            removeChildren(this.element);\n            this.element.appendChild(renderedElement);\n            this.signals().signal(CommonSignals.INI_LOAD);\n          });\n      } catch (e) {\n        this.uiHandler.applyNoContentUI();\n      }\n    });\n  }\n\n  /**\n   * Handles the template data response.\n   * There are two types of templateData format\n   * Format option 1\n   * {\n   *   'templateId': {},\n   *   'vars': {},\n   *   'data': {\n   *     'a': '1',\n   *     'b': '2'\n   *   }\n   * }\n   * or format option 2\n   * {\n   *  'a': '1',\n   *  'b': '2'\n   * }\n   * if `templateId` or `vars` are not specified.\n   *\n   * @param {!JsonObject} templateData\n   * @return {!JsonObject}\n   */\n  handleTemplateData_(templateData) {\n    if (childElementByTag(this.element, 'template')) {\n      // Need to check for template attribute if it's allowed in amp-ad tag\n      return templateData;\n    }\n\n    // If use remote template specified by response\n    userAssert(templateData['templateId'], 'TemplateId not specified');\n\n    userAssert(\n      templateData['data'] && typeof templateData['data'] == 'object',\n      'Template data not specified'\n    );\n\n    this.element.setAttribute('template', templateData['templateId']);\n\n    if (templateData['vars'] && typeof templateData['vars'] == 'object') {\n      // Support for vars\n      const vars = templateData['vars'];\n      const keys = Object.keys(vars);\n      for (let i = 0; i < keys.length; i++) {\n        const attrName = 'data-vars-' + keys[i];\n        try {\n          this.element.setAttribute(attrName, vars[keys[i]]);\n        } catch (e) {\n          this.user().error(TAG_AD_CUSTOM, 'Fail to set attribute: ', e);\n        }\n      }\n    }\n\n    return templateData['data'];\n  }\n\n  /** @override  */\n  unlayoutCallback() {\n    this.uiHandler.applyUnlayoutUI();\n    return true;\n  }\n\n  /**\n   * @private getFullUrl_ Get a URL which includes a parameter indicating\n   * all slots to be fetched from this web server URL\n   * @return {string} The URL with the \"ampslots\" parameter appended\n   */\n  getFullUrl_() {\n    // If this ad doesn't have a slot defined, just return the base URL\n    if (this.slot_ === null) {\n      return userAssert(this.url_);\n    }\n    if (ampCustomadFullUrls === null) {\n      // The array of ad urls has not yet been built, do so now.\n      ampCustomadFullUrls = {};\n      const slots = {};\n\n      // Get the parent body of this amp-ad element. It could be the body of\n      // the main document, or it could be an enclosing iframe.\n      const body = closestAncestorElementBySelector(this.element, 'BODY');\n      const elements = body.querySelectorAll('amp-ad[type=custom]');\n      for (let index = 0; index < elements.length; index++) {\n        const elem = elements[index];\n        const url = elem.getAttribute('data-url');\n        const slotId = elem.getAttribute('data-slot');\n        if (slotId !== null) {\n          if (!(url in slots)) {\n            slots[url] = [];\n          }\n          slots[url].push(encodeURIComponent(slotId));\n        }\n      }\n      for (const baseUrl in slots) {\n        ampCustomadFullUrls[baseUrl] = addParamToUrl(\n          baseUrl,\n          'ampslots',\n          slots[baseUrl].join(',')\n        );\n      }\n    }\n    return ampCustomadFullUrls[this.url_];\n  }\n}\n", "export const CSS = \"amp-ad iframe,amp-embed iframe{border:0!important;margin:0!important;padding:0!important;position:relative}.i-amphtml-ad-default-holder{position:absolute;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background-color:hsla(0,0%,78%,0.05)}.i-amphtml-ad-default-holder:after{content:\\\"Ad\\\";content:attr(data-ad-holder-text);background-color:transparent;border-radius:2px;color:#696969;font-size:10px;line-height:1;font-family:Arial,sans-serif;padding:3px 4px 1px;border:1px solid #696969}amp-ad[sticky]{visibility:hidden;-ms-flex-align:center;align-items:center}amp-ad[type=adsense],amp-ad[type=doubleclick]{direction:ltr}amp-ad[data-a4a-upgrade-type=amp-ad-network-adsense-impl]>iframe,amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl]>iframe{min-height:0;min-width:0}amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl][height=fluid]>iframe{height:100%!important;width:100%!important;position:relative}amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl][height=fluid]{width:100%!important}amp-ad .amp-ad-close-button{position:absolute;visibility:visible;width:28px;height:28px;right:0;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='13' height='13' viewBox='341 8 13 13' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='%234F4F4F' d='M354 9.31 352.69 8l-5.19 5.19L342.31 8 341 9.31l5.19 5.19-5.19 5.19 1.31 1.31 5.19-5.19 5.19 5.19 1.31-1.31-5.19-5.19z' fill-rule='evenodd'/%3E%3C/svg%3E\\\");background-size:13px 13px;background-position:9px;background-color:#fff;background-repeat:no-repeat;box-shadow:0 -1px 1px 0 rgba(0,0,0,0.2);border:none;border-radius:12px 0 0 0}amp-ad .amp-ad-close-button:before{position:absolute;content:\\\"\\\";top:-20px;right:0;left:-20px;bottom:0}amp-ad[sticky=bottom-right] .amp-ad-close-button,amp-ad[sticky=bottom] .amp-ad-close-button{top:-28px}amp-ad[sticky=top] .amp-ad-close-button{transform:rotate(270deg);bottom:-28px}[dir=rtl] amp-ad .amp-ad-close-button{right:auto;left:0;border-top-left-radius:0;border-top-right-radius:12px;background-position:6px}[dir=rtl] amp-ad .amp-ad-close-button:before{right:-20px;left:0}amp-ad-sticky-padding{display:block;width:100%!important;background:#fff;height:4px;max-height:5px!important;overflow-x:hidden;overflow-y:hidden;z-index:12}amp-ad[sticky]{z-index:11;position:fixed;overflow:visible!important;box-shadow:0 0 5px 0 rgba(0,0,0,0.2)!important;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}amp-ad[sticky=top]{width:100%!important;background:#fff;padding-bottom:5px}amp-ad[sticky=bottom]{width:100%!important;padding-bottom:env(safe-area-inset-bottom,0px);background:#fff;bottom:0;padding-top:5px}amp-ad[sticky=bottom-right]{bottom:0;right:0}\\n/*# sourceURL=/extensions/amp-ad/0.1/amp-ad.css*/\";\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../src/core/types/object';\n\n/**\n * Registry for A4A (AMP Ads for AMPHTML pages) \"is supported\" predicates.\n * If an ad network, {@code ${NETWORK}}, is registered in this object, then the\n * {@code <amp-ad type=\"${NETWORK}\">} implementation will look up its predicate\n * here. If there is a predicate and it and returns {@code true}, then\n * {@code amp-ad} will attempt to render the ad via the A4A pathway (fetch\n * ad creative via early XHR CORS request; verify that it is validated AMP;\n * and then render directly in the host page by splicing into the host DOM).\n * Otherwise, it will attempt to render the ad via the existing \"3p iframe\"\n * pathway (delay load into a cross-domain iframe).\n *\n * @type {!Object<string, function(!Window, !Element): boolean>}\n */\nlet a4aRegistry;\n\n/**\n * Returns the a4a registry map\n * @return {Object}\n */\nexport function getA4ARegistry() {\n  if (!a4aRegistry) {\n    a4aRegistry = map({\n      'adsense': () => true,\n      'adzerk': () => true,\n      'doubleclick': () => true,\n      'fake': () => true,\n      'nws': () => true,\n      'valueimpression': () => true,\n      // TODO: Add new ad network implementation \"is enabled\" functions here.\n      // Note: if you add a function here that requires a new \"import\", above,\n      // you'll probably also need to add an exception to\n      // build-system/test-configs/dep-check-config.js in the\n      // \"filesMatching: 'ads/**/*.js'\" rule.\n    });\n  }\n\n  return a4aRegistry;\n}\n\n/**\n * An object mapping signing server names to their corresponding URLs.\n * @type {!Object<string, string>}\n */\nexport const signingServerURLs = {\n  'google': 'https://cdn.ampproject.org/amp-ad-verifying-keyset.json',\n  'google-dev': 'https://cdn.ampproject.org/amp-ad-verifying-keyset-dev.json',\n};\n", "/* Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpAd3PImpl} from './amp-ad-3p-impl';\nimport {AmpAdCustom} from './amp-ad-custom';\nimport {CSS} from '../../../build/amp-ad-0.1.css';\nimport {Services} from '../../../src/services';\nimport {adConfig} from '../../../ads/_config';\nimport {getA4ARegistry} from '../../../ads/_a4a-config';\nimport {hasOwn} from '../../../src/core/types/object';\nimport {userAssert} from '../../../src/log';\n\n/**\n * Construct ad network type-specific tag and script name.  Note that this\n * omits the version number and '.js' suffix for the extension script, which\n * will be handled by the extension loader.\n *\n * @param {string} type\n * @return {string}\n * @private\n */\nfunction networkImplementationTag(type) {\n  return `amp-ad-network-${type}-impl`;\n}\n\nexport class AmpAd extends AMP.BaseElement {\n  /** @override */\n  isLayoutSupported(unusedLayout) {\n    // TODO(jridgewell, #5980, #8218): ensure that unupgraded calls are not\n    // done for `isLayoutSupported`.\n    return true;\n  }\n\n  /** @override */\n  upgradeCallback() {\n    const a4aRegistry = getA4ARegistry();\n    // Block whole ad load if a consent is needed.\n    /** @const {string} */\n    const consentId = this.element.getAttribute('data-consent-notification-id');\n    const consent = consentId\n      ? Services.userNotificationManagerForDoc(this.element).then((service) =>\n          service.get(consentId)\n        )\n      : Promise.resolve();\n    const type = this.element.getAttribute('type');\n    return consent.then(() => {\n      const isCustom = type === 'custom';\n      userAssert(\n        isCustom || hasOwn(adConfig, type) || hasOwn(a4aRegistry, type),\n        `Unknown ad type \"${type}\"`\n      );\n\n      // Check for the custom ad type (no ad network, self-service)\n      if (isCustom) {\n        return new AmpAdCustom(this.element);\n      }\n\n      this.win.ampAdSlotIdCounter = this.win.ampAdSlotIdCounter || 0;\n      const slotId = this.win.ampAdSlotIdCounter++;\n\n      return new Promise((resolve) => {\n        this.getVsync().mutate(() => {\n          this.element.setAttribute('data-amp-slot-index', slotId);\n\n          const useRemoteHtml = this.element\n            .getAmpDoc()\n            .getMetaByName('amp-3p-iframe-src');\n          // TODO(tdrl): Check amp-ad registry to see if they have this already.\n          // TODO(a4a-cam): Shorten this predicate.\n          if (\n            !a4aRegistry[type] ||\n            // Note that predicate execution may have side effects.\n            !a4aRegistry[type](this.win, this.element, useRemoteHtml)\n          ) {\n            // Either this ad network doesn't support Fast Fetch, its Fast\n            // Fetch implementation has explicitly opted not to handle this\n            // tag, or this page uses remote.html which is inherently\n            // incompatible with Fast Fetch. Fall back to Delayed Fetch.\n            return resolve(new AmpAd3PImpl(this.element));\n          }\n\n          const extensionTagName = networkImplementationTag(type);\n          this.element.setAttribute('data-a4a-upgrade-type', extensionTagName);\n          resolve(\n            Services.extensionsFor(this.win)\n              .loadElementClass(extensionTagName)\n              .then((ctor) => new ctor(this.element))\n              .catch((error) => {\n                // Work around presubmit restrictions.\n                const TAG = this.element.tagName;\n                // Report error and fallback to 3p\n                this.user().error(\n                  TAG,\n                  'Unable to load ad implementation for type ',\n                  type,\n                  ', falling back to 3p, error: ',\n                  error\n                );\n                return new AmpAd3PImpl(this.element);\n              })\n          );\n        });\n      });\n    });\n  }\n}\n\nAMP.extension('amp-ad', '0.1', (AMP) => {\n  AMP.registerElement('amp-ad', AmpAd, CSS);\n  AMP.registerElement('amp-embed', AmpAd);\n});\n"],
  "mappings": "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",
  "names": []
}
