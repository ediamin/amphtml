{
  "version": 3,
  "sources": ["../../extensions/amp-addthis/0.1/constants.js", "../../extensions/amp-addthis/0.1/addthis-utils/monitors/active-tools-monitor.js", "../../build/amp-addthis-0.1.css.js", "../../src/core/dom/event-helper-listen.js", "../../src/core/types/array.js", "../../src/core/types/object/index.js", "../../src/core/error/message-helpers.js", "../../third_party/css-escape/css-escape.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/config.js", "../../src/log.js", "../../src/event-helper.js", "../../extensions/amp-addthis/0.1/addthis-utils/monitors/click-monitor.js", "../../extensions/amp-addthis/0.1/addthis-utils/mode.js", "../../extensions/amp-addthis/0.1/config-manager.js", "../../extensions/amp-addthis/0.1/addthis-utils/monitors/dwell-monitor.js", "../../src/core/types/object/json.js", "../../extensions/amp-addthis/0.1/post-message-dispatcher.js", "../../src/core/data-structures/promise.js", "../../src/core/window/index.js", "../../src/service.js", "../../src/dom.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../extensions/amp-addthis/0.1/addthis-utils/monitors/scroll-monitor.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../extensions/amp-addthis/0.1/addthis-utils/cuid.js", "../../extensions/amp-addthis/0.1/addthis-utils/session.js", "../../src/style.js", "../../extensions/amp-addthis/0.1/addthis-utils/pixel.js", "../../extensions/amp-addthis/0.1/addthis-utils/eng.js", "../../extensions/amp-addthis/0.1/addthis-utils/meta.js", "../../extensions/amp-addthis/0.1/addthis-utils/rot13.js", "../../extensions/amp-addthis/0.1/addthis-utils/classify.js", "../../extensions/amp-addthis/0.1/addthis-utils/fragment.js", "../../extensions/amp-addthis/0.1/addthis-utils/lojson.js", "../../extensions/amp-addthis/0.1/addthis-utils/pjson.js", "../../extensions/amp-addthis/0.1/addthis-utils/get-widget-id-overloaded-with-json-for-anonymous-mode.js", "../../src/layout.js", "../../extensions/amp-addthis/0.1/amp-addthis.js"],
  "sourcesContent": ["/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const CONFIGURATION_EVENT = 'addthis.amp.configuration';\nexport const SHARE_EVENT = 'addthis.share';\nexport const ORIGIN = 'https://s7.addthis.com';\nexport const API_SERVER = 'https://m.addthis.com';\nexport const COOKIELESS_API_SERVER = 'https://m.addthisedge.com';\nexport const SHARECOUNTER_SERVER = 'https://api-public.addthis.com';\nexport const ICON_SIZE = '32';\nexport const ALT_TEXT = 'AddThis Website Tools';\nexport const SHARE_CONFIG_KEYS = [\n  'url',\n  'title',\n  'media',\n  'description',\n  'email_template',\n  'email_vars',\n  'passthrough',\n  'url_transforms',\n];\nexport const AT_CONFIG_KEYS = [\n  'services_exclude',\n  'services_compact',\n  'services_expanded',\n  'services_custom',\n  'ui_click',\n  'ui_disable',\n  'ui_delay',\n  'ui_hover_direction',\n  'ui_language',\n  'ui_offset_top',\n  'ui_offset_left',\n  'ui_tabindex',\n  'track_addressbar',\n  'track_clickback',\n  'ga_property',\n  'ga_social',\n];\nexport const RE_ALPHA = /[A-Z]/gi;\nexport const RE_NONALPHA = /[^a-zA-Z]/g;\nexport const RE_WHITESPACE = /\\s/g;\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {RE_ALPHA} from '../../constants';\n\nconst RE_NUMDASH = /[0-9\\-].*/;\n\nexport class ActiveToolsMonitor {\n  /**\n   * Creates an instance of ActiveToolsMonitor.\n   */\n  constructor() {\n    this.activePcos_ = {};\n  }\n\n  /**\n   * @param {*} widget\n   * @return {void}\n   */\n  record(widget) {\n    // Get the \"clean\" PCO (no numbers or dashes) from the widget.\n    const pco = (widget.id || widget.pco || '').replace(RE_NUMDASH, '');\n\n    // PCOs must be alpha strings, and we don't want duplicates.\n    if (!pco || this.activePcos_[pco] || !RE_ALPHA.test(pco)) {\n      return;\n    }\n\n    this.activePcos_[pco] = pco;\n  }\n\n  /**\n   * @param {*} productCode\n   * @return {void}\n   */\n  recordProductCode(productCode) {\n    // Get the \"clean\" PCO (no numbers or dashes) from the widget.\n    const pco = productCode;\n\n    // PCOs must be alpha strings, and we don't want duplicates.\n    if (!pco || this.activePcos_[pco] || !RE_ALPHA.test(pco)) {\n      return;\n    }\n\n    this.activePcos_[pco] = pco;\n  }\n\n  /**\n   * @return {!Array}\n   */\n  getActivePcos() {\n    return Object.keys(this.activePcos_);\n  }\n}\n", "export const CSS = \"amp-addthis[data-widget-type=messages]{position:fixed!important;width:100%!important;top:0}amp-addthis .i-amphtml-addthis-close{right:10px!important;top:10px!important;width:32px!important;height:32px!important;opacity:0.5!important;float:right!important;cursor:pointer!important;position:relative!important;z-index:1!important;background-color:transparent!important;border:none!important}amp-addthis .i-amphtml-addthis-close:hover{opacity:1!important}.i-amphtml-addthis-close:after,amp-addthis .i-amphtml-addthis-close:before{position:absolute;content:\\\" \\\";height:20px;width:2px;background-color:#fff}amp-addthis .i-amphtml-addthis-close:before{transform:rotate(45deg)}amp-addthis .i-amphtml-addthis-close:after{transform:rotate(-45deg)}@media only screen and (max-width:979px){amp-addthis[data-widget-type=floating]{position:fixed!important;width:100%!important;height:50px;bottom:0}}@media only screen and (min-width:979px){amp-addthis[data-widget-type=floating]{position:fixed!important;width:70px!important;height:320px!important;top:200px}}\\n/*# sourceURL=/extensions/amp-addthis/0.1/amp-addthis.css*/\";\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {lastChildElement} from './core/dom/query';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {listen} from '../../../../../src/event-helper';\n\nexport class ClickMonitor {\n  /**\n   * Creates an instance of ClickMonitor.\n   */\n  constructor() {\n    this.iframeClickMap_ = {};\n    this.pageClicks_ = 0;\n    this.lastSelection_ = null;\n    this.win_ = null;\n  }\n\n  /**\n   * Adds event listener to ampdoc\n   *\n   * @param {!../../../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n   */\n  startForDoc(ampDoc) {\n    this.win_ = ampDoc.win;\n    this.lastSelection_ = this.win_.document.activeElement;\n\n    listen(this.win_, 'blur', this.checkSelection_.bind(this));\n    listen(this.win_, 'click', this.onPageClick_.bind(this));\n  }\n\n  /**\n   * Checks for the last elected element\n   */\n  checkSelection_() {\n    const {activeElement} = this.win_.document;\n\n    if (!activeElement) {\n      return;\n    }\n\n    const changeOccurred = activeElement !== this.lastSelection_;\n\n    if (activeElement.tagName === 'IFRAME' && changeOccurred) {\n      this.incrementFrameClick_(activeElement);\n    }\n\n    this.lastSelection_ = activeElement;\n  }\n\n  /**\n   * Listener for clicks on window,\n   * Set the last selected element.\n   *\n   */\n  onPageClick_() {\n    this.pageClicks_++;\n    this.lastSelection_ = this.win_.document.activeElement;\n  }\n\n  /**\n   * Increases a click count for the iframe\n   *\n   * @param {Element} activeElement\n   */\n  incrementFrameClick_(activeElement) {\n    const trimSrc = activeElement.src.split('://').pop();\n\n    if (!this.iframeClickMap_[trimSrc]) {\n      this.iframeClickMap_[trimSrc] = 1;\n    } else {\n      this.iframeClickMap_[trimSrc]++;\n    }\n  }\n\n  /**\n   * Returns the number of page clicks\n   *\n   * @return {number}\n   */\n  getPageClicks() {\n    return this.pageClicks_;\n  }\n\n  /**\n   * Returns array of clicked iframes\n   *\n   * @return {string}\n   */\n  getIframeClickString() {\n    return Object.keys(this.iframeClickMap_)\n      .map((key) => {\n        return `${key}|${this.iframeClickMap_[key]}`;\n      })\n      .join(',');\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Expects an object with pubId, widgetId, & productCode keys with string values\n *\n * There are three (3) planned modes you can invoke the amp-addthis tag via:\n * 1. pubId and widgetId [original mode]\n * 2. pubId and produceCode [wp addthis mode]\n * 3. just product code, no pub ID [wp anonymous mode, future]\n */\n\n/**\n * @param {{pubId: string, widgetId: string, productCode: string}} _\n * @return {number} -1 indicates an error has occurred\n */\nexport function getAddThisMode(_) {\n  const {hasProductCode, hasPubId, hasWidgetId} = getAddThisModeObject(_);\n  if (hasPubId) {\n    if (hasWidgetId && !hasProductCode) {\n      return 1;\n    } else if (!hasWidgetId && hasProductCode) {\n      return 2;\n    }\n  } else if (!hasWidgetId && hasProductCode) {\n    return 3;\n  }\n  return -1;\n}\n\n/**\n * @param {{pubId: string, widgetId: string, productCode: string}} mode\n * @return {{\n *   hasPubId: boolean,\n *   hasWidgetId: boolean,\n *   hasProductCode: boolean\n * }}\n */\nexport function getAddThisModeObject(mode) {\n  const {productCode, pubId, widgetId} = mode;\n  const hasPubId = isPubId(pubId);\n  // widget ids are 4-character strings with lower-case letters and numbers only\n  const hasWidgetId = isWidgetId(widgetId);\n  // product code is one of just a few values\n  const hasProductCode =\n    typeof productCode === 'string' &&\n    (productCode === 'shin' || productCode === 'shfs');\n  return {hasPubId, hasWidgetId, hasProductCode};\n}\n\n/**\n * @param {*} candidate\n * @return {boolean}\n */\nexport function isPubId(candidate) {\n  return typeof candidate === 'string' && candidate.length > 0;\n}\n\n/**\n * @param {*} candidate\n * @return {boolean}\n */\nexport function isWidgetId(candidate) {\n  return typeof candidate === 'string' && candidate.length === 4;\n}\n\n/**\n * @param {*} candidate\n * @return {boolean}\n */\nexport function isProductCode(candidate) {\n  return candidate === 'shin' || candidate === 'shfs';\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {CONFIGURATION_EVENT, ORIGIN} from './constants';\nimport {getAddThisMode} from './addthis-utils/mode';\n\nimport {dict} from '../../../src/core/types/object';\n\n/**\n * Configuration request status enum.\n * @enum {number}\n */\nconst RequestStatus = {\n  NOT_REQUESTED: 0,\n  REQUESTED: 1,\n  COMPLETED: 2,\n};\n\n/**\n * The ConfigManager manages requests for publishers' dashboard configurations\n * from addthis.com, ensuring that a configuration is requested for a given\n * publisher id at most once, that all relevant amp-addthis iframes are notified\n * when configs are received, etc. The exposed API is specified in the typedef,\n * below; everything else is private. When an AMPElement registers with the\n * ConfigManager, this kicks off a request for the relevant dashboard\n * configuration, if necessary, and eventually delivers that configuration to\n * the AMPElement's iframe. When an AMPElement unregisters, the ConfigManager\n * destroys its references to that AMPElement's iframe and performs other\n * cleanup when necessary (such as removing event listeners and destroying other\n * element references).\n */\nexport class ConfigManager {\n  /**\n   * Creates an instance of ConfigManager.\n   */\n  constructor() {\n    /**\n     * @type {!Object<string, ConfigManager.PubIdData>}\n     * @private\n     */\n    this.dataForPubId_ = {};\n\n    /**\n     * @type {!Array<Element>}\n     * @private\n     */\n    this.configProviderIframes_ = [];\n\n    /**\n     * @type {Object<string,string>}\n     * @private\n     */\n    this.activeToolsMonitor_ = null;\n  }\n\n  /**\n   * Store the configuration received for the provided pubId, mark the request\n   * for the config as completed, and broadcast the config to relevant iframes.\n   * @param {!JsonObject} data\n   */\n  receiveConfiguration(data) {\n    const config = data['config'];\n    const pubId = data['pubId'];\n    const source = data['source'];\n    // Check that the configuration event is coming from an iframe that\n    // should be providing configuration information.\n    const isProviderIframe = this.configProviderIframes_.some((iframe) => {\n      return iframe.contentWindow === source;\n    });\n\n    if (!isProviderIframe) {\n      return;\n    }\n\n    const pubData = this.dataForPubId_[pubId];\n    pubData.config = config;\n    pubData.requestStatus = RequestStatus.COMPLETED;\n    const {iframeData} = pubData;\n\n    iframeData.forEach((iframeDatum) => {\n      const {\n        atConfig,\n        containerClassName,\n        iframe,\n        productCode,\n        shareConfig,\n        widgetId,\n      } = iframeDatum;\n      this.sendConfiguration_({\n        iframe,\n        widgetId,\n        pubId,\n        shareConfig,\n        atConfig,\n        productCode,\n        containerClassName,\n      });\n    });\n  }\n\n  /**\n   * @typedef {{\n   *  iframe: *,\n   *  widgetId: string,\n   *  pubId: string,\n   *  shareConfig: !Object,\n   *  atConfig: !Object,\n   *  productCode: string,\n   *  containerClassName: string,\n   * }} SendConfigurationInput\n   */\n\n  /**\n   * @param {!SendConfigurationInput} input\n   * @private\n   */\n  sendConfiguration_(input) {\n    const {\n      atConfig,\n      containerClassName,\n      iframe,\n      productCode,\n      pubId,\n      shareConfig,\n      widgetId,\n    } = input;\n    const pubData = this.dataForPubId_[pubId];\n    const {config: dashboardConfig, requestStatus: configRequestStatus} =\n      pubData;\n    const jsonToSend = dict({\n      'event': CONFIGURATION_EVENT,\n      'shareConfig': shareConfig,\n      'atConfig': atConfig,\n      'pubId': pubId,\n      'widgetId': widgetId,\n      'productCode': productCode,\n      'containerClassName': containerClassName,\n      'configRequestStatus': configRequestStatus,\n      'dashboardConfig': dashboardConfig,\n    });\n\n    if (\n      dashboardConfig &&\n      dashboardConfig.widgets &&\n      Object.keys(dashboardConfig.widgets).length > 0\n    ) {\n      const mode = getAddThisMode({pubId, widgetId, productCode});\n      switch (mode) {\n        case 1:\n          // \"regular old\" amp-addthis mode\n          if (widgetId && dashboardConfig.widgets[widgetId]) {\n            this.activeToolsMonitor_.record(dashboardConfig.widgets[widgetId]);\n          }\n          break;\n        case 2:\n          // \"wp addthis mode\"\n          if (productCode) {\n            this.activeToolsMonitor_.recordProductCode(productCode);\n          }\n          break;\n        case 3:\n          // \"wp anonymous mode\"\n          if (productCode) {\n            this.activeToolsMonitor_.recordProductCode(productCode);\n          }\n          return;\n        default:\n          return;\n        // invalid tool configuration\n      }\n    }\n\n    iframe.contentWindow./*OK*/ postMessage(JSON.stringify(jsonToSend), ORIGIN);\n\n    if (configRequestStatus === RequestStatus.NOT_REQUESTED) {\n      // If a config for this pubId has not been requested yet, then this iframe\n      // will be the one responsible for requesting it and sending it back here.\n      this.configProviderIframes_.push(iframe);\n      pubData.requestStatus = RequestStatus.REQUESTED;\n    }\n  }\n\n  /**\n   * Register relevant data with the configuration manager and prepare\n   * request/response cycle between frames.\n   * @param {{\n   *   pubId: string,\n   *   activeToolsMonitor: Object<string,string>,\n   *   atConfig: Object<string,string>,\n   *   widgetId: string,\n   *   containerClassName: string,\n   *   productCode: string,\n   *   iframe: !Element,\n   *   iframeLoadPromise: !Promise,\n   *   shareConfig: (JsonObject|undefined)\n   * }} config\n   */\n  register(config) {\n    const {\n      activeToolsMonitor,\n      atConfig,\n      containerClassName,\n      iframe,\n      iframeLoadPromise,\n      productCode,\n      pubId,\n      shareConfig,\n      widgetId,\n    } = config;\n    if (!this.activeToolsMonitor_) {\n      this.activeToolsMonitor_ = activeToolsMonitor;\n    }\n\n    if (!this.dataForPubId_[pubId]) {\n      this.dataForPubId_[pubId] = {};\n    }\n\n    const pubData = this.dataForPubId_[pubId];\n\n    if (!pubData.requestStatus) {\n      pubData.requestStatus = RequestStatus.NOT_REQUESTED;\n    }\n\n    if (!pubData.iframeData) {\n      pubData.iframeData = [];\n    }\n\n    pubData.iframeData.push({\n      iframe,\n      shareConfig,\n      atConfig,\n      widgetId,\n      productCode,\n      containerClassName,\n    });\n\n    iframeLoadPromise.then(() =>\n      this.sendConfiguration_({\n        iframe,\n        pubId,\n        widgetId,\n        shareConfig,\n        atConfig,\n        productCode,\n        containerClassName,\n      })\n    );\n  }\n\n  /**\n   * Relinquish as many element references as possible.\n   * @param {{pubId:string, iframe:Element}} param\n   */\n  unregister(param) {\n    const {iframe, pubId} = param;\n    this.configProviderIframes_ = this.configProviderIframes_.filter(\n      (providerFrame) => providerFrame !== iframe\n    );\n\n    const pubData = this.dataForPubId_[pubId] || {};\n\n    if (pubData.iframeData) {\n      pubData.iframeData = pubData.iframeData.filter((iframeDatum) => {\n        return iframeDatum.iframe !== iframe;\n      });\n    }\n  }\n}\n\n/**\n * @typedef {{\n *   config:(Object|undefined),\n *   requestStatus:(RequestStatus|undefined),\n *   iframeData:(Array<ConfigManager.IframeDatum>|undefined)\n * }}\n */\nConfigManager.PubIdData; // purely for typedef\n\n/**\n * @typedef {{\n *   widgetId:string,\n *   productCode:string,\n *   shareConfig:(Object<string,string>|undefined),\n *   iframe: Element,\n *   atConfig: JsonObject,\n *   containerClassName: string\n * }}\n */\nConfigManager.IframeDatum; // purely for typedef\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class DwellMonitor {\n  /**\n   * Creates an instance of DwellMonitor.\n   */\n  constructor() {\n    this.dwellTime_ = 0;\n    this.ampdoc_ = null;\n  }\n\n  /**\n   * Add visibility listener to ampdoc.\n   *\n   * @param {!../../../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n   */\n  startForDoc(ampDoc) {\n    this.ampdoc_ = ampDoc;\n    this.ampdoc_.onVisibilityChanged(this.listener.bind(this));\n  }\n\n  /**\n   * Calculates dwell time.\n   */\n  listener() {\n    if (!this.ampdoc_.isVisible()) {\n      const lastVisibleTime = this.ampdoc_.getLastVisibleTime() || 0;\n      this.dwellTime_ += Date.now() - lastVisibleTime;\n    }\n  }\n\n  /**\n   * Returns dwell time.\n   *\n   * @return {number}\n   */\n  getDwellTime() {\n    return this.dwellTime_;\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isArray} from '../array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CONFIGURATION_EVENT, ORIGIN, SHARE_EVENT} from './constants';\nimport {getData} from '../../../src/event-helper';\nimport {isObject} from '../../../src/core/types';\nimport {tryParseJson} from '../../../src/core/types/object/json';\n\nexport class PostMessageDispatcher {\n  /**\n   * Creates an instance of PostMessageDispatcher.\n   */\n  constructor() {\n    this.listeners_ = {};\n  }\n\n  /**\n   * Adds event listener.\n   * @param {string} eventType\n   * @param {!Function} listener\n   */\n  on(eventType, listener) {\n    if (!this.listeners_[eventType]) {\n      this.listeners_[eventType] = [];\n    }\n    this.listeners_[eventType].push(listener);\n  }\n\n  /**\n   * @param {string} eventType\n   * @param {!JsonObject} eventData\n   * @private\n   */\n  emit_(eventType, eventData) {\n    if (!this.listeners_[eventType]) {\n      return;\n    }\n    /** @type {!Array} */ (this.listeners_[eventType]).forEach((listener) =>\n      listener(eventData)\n    );\n  }\n\n  /**\n   * Utility method to parse out the data from the supplied `postMessage` event.\n   * @param {!Event} event\n   * @return {?JsonObject|undefined}\n   * @private\n   */\n  getMessageData_(event) {\n    const data = getData(event);\n\n    if (isObject(data)) {\n      return /** @type {!JsonObject} */ (data);\n    }\n\n    if (typeof data === 'string' && data.startsWith('{')) {\n      return tryParseJson(data);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Handles messages posted from amp-addthis iframes, ensuring the correct\n   * origin, etc.\n   * @param {!Event} event\n   */\n  handleAddThisMessage(event) {\n    if (event.origin !== ORIGIN || !getData(event)) {\n      return;\n    }\n\n    const data = this.getMessageData_(event) || {};\n\n    switch (data['event']) {\n      case CONFIGURATION_EVENT: {\n        this.emit_(\n          CONFIGURATION_EVENT,\n          /** @type {!JsonObject} */ ({\n            ...data,\n            'source': event.source,\n          })\n        );\n        break;\n      }\n      case SHARE_EVENT: {\n        this.emit_(SHARE_EVENT, /** @type {!JsonObject} */ (data));\n        break;\n      }\n    }\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../../../src/services';\n\nexport class ScrollMonitor {\n  /**\n   * Creates an instance of ScrollMonitor.\n   */\n  constructor() {\n    this.viewport_ = null;\n    this.initialViewHeight_ = 0;\n    this.maxScrollTop_ = 0;\n    this.maxScrollPlusHeight_ = 0;\n  }\n\n  /**\n   * Starts scroll monitor for the given AMP document.\n   *\n   * @param {!../../../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n   */\n  startForDoc(ampDoc) {\n    this.viewport_ = Services.viewportForDoc(ampDoc);\n    this.initialViewHeight_ = this.viewport_.getHeight() || 0;\n    this.maxScrollTop_ = this.viewport_.getScrollTop() || 0;\n    this.maxScrollPlusHeight_ = this.maxScrollTop_ + this.initialViewHeight_;\n\n    this.viewport_.onScroll(this.listener.bind(this));\n  }\n\n  /**\n   * Calculates max scroll top.\n   */\n  listener() {\n    const scrollTop = this.viewport_.getScrollTop() || 0;\n    this.maxScrollTop_ = Math.max(this.maxScrollTop_, scrollTop);\n    this.maxScrollPlusHeight_ = Math.max(\n      this.maxScrollPlusHeight_,\n      (this.viewport_.getHeight() || 0) + scrollTop\n    );\n  }\n\n  /**\n   * Returns the initial height of viewport.\n   *\n   * @return {number}\n   */\n  getInitialViewHeight() {\n    return this.initialViewHeight_;\n  }\n\n  /**\n   * Returns the max scroll height.\n   *\n   * @return {number}\n   */\n  getScrollHeight() {\n    return this.maxScrollPlusHeight_ - this.maxScrollTop_;\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './core/data-structures/lru-cache';\nimport {dict, hasOwn} from './core/types/object';\nimport {endsWith} from './core/types/string';\nimport {getMode} from './mode';\nimport {isArray} from './core/types';\nimport {parseQueryString} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {?} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst RE_CUID = /^[0-9a-f]{16}$/;\nconst MAX_HEX = 0xffffffff;\nconst CUID_SESSION_TIME = Date.now();\n\n/**\n * Get the date from the CUID (first 8 hex digits are the time from epoch in\n * seconds).\n * @param {string} cuid\n * @return {Date}\n */\nconst getDateFromCuid = (cuid) => {\n  let date = new Date();\n  try {\n    date = new Date(parseInt(cuid.substr(0, 8), 16) * 1000);\n  } catch (e) {}\n  return date;\n};\n\n/**\n * Check if the CUID is in the future (allowing for up to one day of jitter).\n * @param {string} cuid\n * @return {boolean}\n */\nconst isCuidInFuture = (cuid) => {\n  const date = getDateFromCuid(cuid);\n  date.setDate(date.getDate() - 1);\n  return isDateInFuture(date);\n};\n\nexport const isDateInFuture = (date) => {\n  const now = new Date();\n  if (date.getFullYear() < now.getFullYear()) {\n    return false;\n  }\n  const yearIsLater = date.getFullYear() > now.getFullYear();\n  const yearIsSame = date.getFullYear() === now.getFullYear();\n  const monthIsLater = date.getMonth() > now.getMonth();\n  const monthIsSame = date.getMonth() === now.getMonth();\n  const dateIsLater = date.getDate() > now.getDate();\n  return (\n    yearIsLater ||\n    (yearIsSame && monthIsLater) ||\n    (yearIsSame && monthIsSame && dateIsLater)\n  );\n};\n\n/**\n * Check that the CUID is a 16 digit hex number that is not in the future.\n * @param {string} cuid\n * @return {boolean}\n */\nexport const isValidCUID = (cuid) => {\n  return Boolean(cuid && cuid.match(RE_CUID) && !isCuidInFuture(cuid));\n};\n\n/**\n * Create a 16 digit CUID.\n * 0-8 = The date the CUID was created in seconds in hex format, max 8 digits.\n * 9-15 = Random hex number\n * @return {string}\n */\nexport const createCUID = () => {\n  return (\n    ((CUID_SESSION_TIME / 1000) & MAX_HEX).toString(16) +\n    ('00000000' + Math.floor(Math.random() * (MAX_HEX + 1)).toString(16)).slice(\n      -8\n    )\n  );\n};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {createCUID} from './cuid';\n\nconst sessionId = createCUID();\nexport const getSessionId = () => sessionId;\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {COOKIELESS_API_SERVER} from '../constants';\nimport {Services} from '../../../../src/services';\nimport {addParamsToUrl, parseUrlDeprecated} from '../../../../src/url';\nimport {createElementWithAttributes} from '../../../../src/dom';\nimport {dict} from '../../../../src/core/types/object';\nimport {getData} from '../../../../src/event-helper';\nimport {isObject} from '../../../../src/core/types';\nimport {parseJson} from '../../../../src/core/types/object/json';\n\nimport {setStyles, toggle} from '../../../../src/style';\n\nconst RE_IFRAME = /#iframe$/;\nconst pixelatorFrameTitle = 'Pxltr Frame';\n\n/**\n * Returns a sorted array of objects like [{delay: 1000, pixels: [...]}]\n * @param  {Array<{\n *   delay: number,\n *   id: string,\n *   url: string\n * }>} pixelList\n * @return {Array}\n */\nconst groupPixelsByTime = (pixelList) => {\n  // Clean delay value; if it's empty/doesn't exist, default to [0]\n  const cleanedPixels = pixelList.map((pixel) => {\n    const {delay} = pixel;\n    return {\n      ...pixel,\n      delay: Array.isArray(delay) && delay.length ? delay : [0],\n    };\n  });\n\n  const delayMap = cleanedPixels\n    .map((pixel) => {\n      const delays = pixel.delay;\n      return delays.map((delay) => ({\n        delay,\n        pixels: [pixel],\n      }));\n    })\n    .reduce((a, b) => a.concat(b), []) // flatten\n    .reduce((currentDelayMap, curDelay) => {\n      const {delay, pixels} = curDelay;\n      if (!currentDelayMap[delay]) {\n        currentDelayMap[delay] = [];\n      }\n      currentDelayMap[delay] = currentDelayMap[delay].concat(pixels);\n      return currentDelayMap;\n    }, {});\n\n  return Object.keys(delayMap).map((delay) => ({\n    delay: Number(delay),\n    pixels: delayMap[delay],\n  }));\n};\n\nexport const pixelDrop = (url, ampDoc) => {\n  const doc = ampDoc.win.document;\n  const ampPixel = createElementWithAttributes(\n    doc,\n    'amp-pixel',\n    dict({\n      'layout': 'nodisplay',\n      'referrerpolicy': 'no-referrer',\n      'src': url,\n    })\n  );\n  doc.body.appendChild(ampPixel);\n};\n\nconst getIframeName = (url) =>\n  parseUrlDeprecated(url)\n    .host.split('.')\n    .concat(pixelatorFrameTitle.toLowerCase().replace(/\\s/, '_'));\n\nconst iframeDrop = (url, ampDoc, data) => {\n  const {name, title} = data;\n  const doc = ampDoc.win.document;\n  const iframe = createElementWithAttributes(\n    doc,\n    'iframe',\n    dict({\n      'frameborder': 0,\n      'width': 0,\n      'height': 0,\n      'name': name,\n      'title': title,\n      'src': url,\n    })\n  );\n  toggle(iframe, false);\n  setStyles(iframe, {\n    position: 'absolute',\n    clip: 'rect(0px 0px 0px 0px)',\n  });\n  doc.body.appendChild(iframe);\n};\n\nconst dropPixelatorPixel = (url, ampDoc) => {\n  const requiresIframe = RE_IFRAME.test(url);\n\n  // if it's not an absolute URL, don't pixelate\n  if (url.indexOf('//') === -1) {\n    return;\n  }\n\n  if (requiresIframe) {\n    const name = getIframeName(url);\n    return iframeDrop(url, ampDoc, {name, title: pixelatorFrameTitle});\n  }\n\n  return pixelDrop(url, ampDoc);\n};\n\n/**\n * Requests groups of pixels at specified delays\n * @param  {Array<{delay: number, id: string,url: string}>} pixels\n * @param  {{sid: string, ampDoc: *}} options\n */\nconst dropPixelGroups = (pixels, options) => {\n  const {ampDoc, sid} = options;\n  const pixelGroups = groupPixelsByTime(pixels);\n  pixelGroups.forEach((pixelGroup) => {\n    const {delay, pixels} = pixelGroup;\n    setTimeout(() => {\n      const pids = pixels.map((pixel) => {\n        dropPixelatorPixel(pixel.url, ampDoc);\n        return pixel.id;\n      });\n      const data = dict({\n        'delay': `${delay}`,\n        'ids': pids.join('-'),\n        'sid': sid,\n      });\n      const url = addParamsToUrl(`${COOKIELESS_API_SERVER}/live/prender`, data);\n\n      if (ampDoc.win.navigator.sendBeacon) {\n        ampDoc.win.navigator.sendBeacon(url, '{}');\n      } else {\n        pixelDrop(url, ampDoc);\n      }\n    }, delay * 1000);\n  });\n};\n\n/**\n * Requests groups of pixels at specified delays\n * @param  {(?JsonObject|string|undefined|null)} object\n * @return {!JsonObject}\n */\nfunction getJsonObject_(object) {\n  const params = dict();\n\n  if (object === undefined || object === null) {\n    return params;\n  }\n  const stringifiedObject =\n    typeof object === 'string' ? object : JSON.stringify(object);\n\n  try {\n    const parsedObject = parseJson(stringifiedObject);\n    if (isObject(parsedObject)) {\n      for (const key in parsedObject) {\n        params[key] = parsedObject[key];\n      }\n    }\n  } catch (error) {}\n  return params;\n}\n\nexport const callPixelEndpoint = (event) => {\n  const {ampDoc, endpoint} = event;\n  const eventData = getJsonObject_(getData(event));\n  const url = addParamsToUrl(endpoint, eventData);\n\n  Services.xhrFor(ampDoc.win)\n    .fetchJson(url, {\n      mode: 'cors',\n      method: 'GET',\n      // This should be cacheable across publisher domains, so don't append\n      // __amp_source_origin to the URL.\n      ampCors: false,\n      credentials: 'include',\n    })\n    .then((res) => res.json())\n    .then(\n      (json) => {\n        const {pixels = []} = json;\n        if (pixels.length > 0) {\n          dropPixelGroups(pixels, {\n            sid: eventData['sid'],\n            ampDoc,\n          });\n        }\n      },\n      () => {}\n    );\n};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {API_SERVER} from '../constants';\nimport {Services} from '../../../../src/services';\n\nimport {addParamsToUrl} from '../../../../src/url';\nimport {dict} from '../../../../src/core/types/object';\nimport {getSessionId} from './session';\nimport {pixelDrop} from './pixel';\n\n/**\n * Gets data to be passed along in request via params\n * @param {{monitors: *, loc: Location, ampDoc: !../../../../src/service/ampdoc-impl.AmpDoc, pubId: string}} params\n * @return {{al: (string|undefined), amp: number, dc: number, dp: string, dt: string, fp: string, ict: string, ivh: number, pct: number, pfm: number, ph: number, pub: string, sh: number, sid: string}}\n */\nconst getEngData = (params) => {\n  const {ampDoc, loc, monitors, pubId} = params;\n  const {activeToolsMonitor, clickMonitor, dwellMonitor, scrollMonitor} =\n    monitors;\n  const {hash, host, pathname} = loc;\n  const viewport = Services.viewportForDoc(ampDoc);\n\n  return {\n    al: activeToolsMonitor.getActivePcos().join(',') || undefined,\n    amp: 1,\n    dc: 1,\n    dp: host,\n    dt: dwellMonitor.getDwellTime(),\n    fp: pathname.replace(hash, ''),\n    ict: clickMonitor.getIframeClickString(),\n    ivh: scrollMonitor.getInitialViewHeight(),\n    pct: clickMonitor.getPageClicks(),\n    pfm: ampDoc.win.navigator.sendBeacon ? 0 : 1,\n    ph: viewport.getHeight(),\n    pub: pubId,\n    sh: scrollMonitor.getScrollHeight(),\n    sid: getSessionId(),\n  };\n};\n\n/**\n * Makes an ajax request to eng endpoint with params\n * @param {{monitors: *, loc: Location, ampDoc: !../../../../src/service/ampdoc-impl.AmpDoc, pubId: string}} props\n */\nexport const callEng = (props) => {\n  const object = getEngData(props);\n  const data = dict({\n    'al': object.al,\n    'amp': object.amp,\n    'dc': object.dc,\n    'dp': object.dp,\n    'dt': object.dt,\n    'fp': object.fp,\n    'ict': object.ict,\n    'ivh': object.ivh,\n    'pct': object.pct,\n    'pfm': object.pfm,\n    'ph': object.ph,\n    'pub': object.pub,\n    'sh': object.sh,\n    'sid': object.sid,\n  });\n  const url = addParamsToUrl(`${API_SERVER}/live/red_lojson/100eng.json`, data);\n  const {ampDoc} = props;\n\n  if (ampDoc.win.navigator.sendBeacon) {\n    ampDoc.win.navigator.sendBeacon(url, '{}');\n  } else {\n    pixelDrop(url, ampDoc);\n  }\n};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a NodeList of Meta Elements (not an Array)\n * @param {Document} doc\n * @return {NodeList}\n */\nexport const getMetaElements = (doc) => doc.head.querySelectorAll('meta');\n\nexport const getDetailsForMeta = (meta) => {\n  const name = meta.getAttribute('property') || meta.name || '';\n  const lowerName = name.toLowerCase();\n  const content = meta.content || '';\n\n  return {\n    name: lowerName,\n    content,\n  };\n};\n\nexport const getOgImage = (doc) => {\n  const ogImage = doc.head.querySelector('meta[property=\"og:image\"]');\n\n  if (ogImage) {\n    return ogImage.content;\n  }\n  return '';\n};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {RE_ALPHA} from '../constants';\n\nconst CHAR_Z_LOWER = 122;\nconst CHAR_Z_UPPER = 90;\n\n/**\n * Rotate a string by 13 characters. Only applies to alphabetical characters.\n * For \"good enough\" obfuscation.\n *\n * @param {string} input\n * @return {*} TODO(#23582): Specify return type\n * @private\n */\nconst rot13 = (input) => {\n  return input.replace(RE_ALPHA, (match) => {\n    const code = match.charCodeAt(0);\n\n    // Get the z character code based on whether the character is\n    // upper/lowercase.\n    const zChar = code <= CHAR_Z_UPPER ? CHAR_Z_UPPER : CHAR_Z_LOWER;\n\n    // Add/subtract 13 to rotate the character so it doesn't exceed the alphabet\n    // bounds.\n    return String.fromCharCode(zChar >= code + 13 ? code + 13 : code - 13);\n  });\n};\n\n/**\n * Run rot13 on an array of strings.\n * @param {!Array<string>} input\n * @return {!Object}\n */\nexport const rot13Array = (input) => {\n  return input.reduce((rot13Map, str) => {\n    rot13Map[rot13(str)] = 1;\n    return rot13Map;\n  }, {});\n};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {RE_NONALPHA, RE_WHITESPACE} from '../constants';\nimport {getDetailsForMeta} from './meta';\nimport {rot13Array} from './rot13';\n\nconst MAX_KEYWORD_LENGTH = 200;\nconst PORN_BIT = 0x1;\nconst REFERRER_BITS = {\n  DIRECT: 0x0, // default: a direct view\n  SEARCH: 0x1, // referrer was guessed to be from a search engine\n  ON_DOMAIN: 0x2,\n  OFF_DOMAIN: 0x4,\n};\nconst RE_SEARCH_TERMS =\n  /^(?:q|search|bs|wd|p|kw|keyword|query|qry|querytext|text|searchcriteria|searchstring|searchtext|sp_q)=(.*)/i;\nconst RE_SEARCH_REFERRER = /ws\\/results\\/(web|images|video|news)/;\nconst RE_SEARCH_GOOGLE = /google.*\\/(search|url|aclk|m\\?)/;\nconst RE_SEARCH_AOL = /aol.*\\/aol/;\nconst com = '.com/';\nconst org = '.org/';\n\n// porn keywords, rot1313'd\nconst pornHash = rot13Array([\n  'cbea',\n  'cbeab',\n  'kkk',\n  'zvys',\n  'gvgf',\n  'shpxf',\n  'chfflyvcf',\n  'pernzcvr',\n  'svfgvat',\n  'wvmm',\n  'fcybbtr',\n  'flovna',\n]);\n\n// porn keywords that require delimiters (e.g., that can be substrings of\n// benign, non-porn words)\nconst strictPornHash = rot13Array(['phz']);\n\n/**\n * Classifies a string based on keywords. Currently only looks at porn.\n * @param {string} keywordString string of keywords (seperated by non alpha characters)\n * @param {boolean} nonStrictMatch true iff we can't use the list of strict keywords\n * @private\n * @return {number}\n */\nconst classifyString = (keywordString = '', nonStrictMatch = false) => {\n  let classification = 0;\n  const keywords = keywordString.toLowerCase().split(RE_NONALPHA);\n\n  for (let i = 0; i < keywords.length; i++) {\n    const keyword = keywords[i];\n    if (pornHash[keyword] || (!nonStrictMatch && strictPornHash[keyword])) {\n      classification |= PORN_BIT;\n      break;\n    }\n  }\n\n  return classification;\n};\n\n/**\n * Classify a meta RATING keyword.\n * @param {string} rating\n * @private\n * @return {number}\n */\nconst classifyRating = (rating = '') => {\n  let classification = 0;\n\n  rating = rating.toLowerCase().replace(RE_WHITESPACE, '');\n\n  // Check if the rating is adult content\n  if (\n    rating === 'mature' ||\n    rating === 'adult' ||\n    rating === 'rta-5042-1996-1400-1577-rta'\n  ) {\n    classification |= PORN_BIT;\n  }\n\n  return classification;\n};\n\n/**\n * Add keywords to the page based on the content.\n * @param {string} content\n * @private\n * @return {Array<string>}\n */\nconst extractKeywordsFromContent = (content) => {\n  const keywords = [];\n  const contentSplit = content.split(',');\n  let keywordsSize = 0;\n\n  for (let i = 0; i < contentSplit.length; i++) {\n    const keyword = (contentSplit[i] || '').trim();\n\n    if (!keyword) {\n      continue;\n    }\n\n    if (keyword.length + keywordsSize + 1 >= MAX_KEYWORD_LENGTH) {\n      break;\n    }\n\n    keywords.push(keyword);\n    keywordsSize += keyword.length + 1;\n  }\n\n  return keywords;\n};\n\n/**\n * Guesses the search value from an url using a list of known search keys\n * @param {string} url\n * @return {string|undefined}\n */\nconst getSearchString = (url) => {\n  const terms = url.split('?').pop().toLowerCase().split('&');\n  let matches;\n\n  for (let i = 0; i < terms.length; i++) {\n    // the simple parameters we know about a priori\n    matches = RE_SEARCH_TERMS.exec(terms[i]);\n    if (matches) {\n      return matches[1];\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Return true if the url appears to be a search URL; false otherwise.\n * @param {string} url\n * @return {boolean}\n */\nconst isSearchUrl = (url = '') => {\n  const lowerUrl = url.toLowerCase();\n\n  // See if the referrer matches one of our simple heuristics\n  if (lowerUrl.match(RE_SEARCH_REFERRER)) {\n    return true;\n  }\n\n  if (getSearchString(url) === undefined) {\n    return false;\n  }\n\n  return (\n    lowerUrl.indexOf('addthis') === -1 &&\n    (RE_SEARCH_GOOGLE.test(lowerUrl) ||\n      RE_SEARCH_AOL.test(lowerUrl) /* search.aol.* /aol/search?q=*/ ||\n      lowerUrl.indexOf('/pagead/aclk?') > -1 /*googleadservices*/ ||\n      lowerUrl.indexOf(com + 'url') > -1 /*bing*/ ||\n      lowerUrl.indexOf(com + 'l.php') > -1 /*facebook graph search*/ ||\n      lowerUrl.indexOf('/search?') > -1 /* many */ ||\n      lowerUrl.indexOf('/search/?') > -1 /* a few */ ||\n      lowerUrl.indexOf('search?') > -1 /*yandex.ru, and presumably others*/ ||\n      lowerUrl.indexOf('yandex.ru/clck/jsredir?') >\n        -1 /*yandex, no one else */ ||\n      lowerUrl.indexOf(com + 'search') >\n        -1 /* yahoo (including yahoo int'l), many others */ ||\n      lowerUrl.indexOf(org + 'search') > -1 /*many .org searches*/ ||\n      lowerUrl.indexOf('/search.html?') > -1 /* a few */ ||\n      lowerUrl.indexOf('search/results.') > -1 /*cars.com, gmc.com*/ ||\n      lowerUrl.indexOf(com + 's?bs') > -1 /*baidu*/ ||\n      lowerUrl.indexOf(com + 's?wd') > -1 /*baidu*/ ||\n      lowerUrl.indexOf(com + 'mb?search') > -1 /*manta*/ ||\n      lowerUrl.indexOf(com + 'mvc/search') > -1 /*eonline*/ ||\n      lowerUrl.indexOf(com + 'web') > -1 /*ask.com (same in .ca), altavista*/ ||\n      lowerUrl.indexOf('hotbot' + com) > -1) /*hotbot*/\n  );\n};\n\n/**\n * Classifies the present page based on title, hostname, meta keywords and meta\n * description.\n * @param {*} pageInfo\n * @param {Array} metaElements\n * @return {number} classification bitmask (currently only setting a porn bit)\n */\nexport const classifyPage = (pageInfo, metaElements) => {\n  let bitmask =\n    classifyString(pageInfo.title) | classifyString(pageInfo.hostname, true);\n\n  metaElements.forEach((metaElement) => {\n    const {content, name} = getDetailsForMeta(metaElement);\n\n    if (name === 'description' || name === 'keywords') {\n      bitmask |= classifyString(content);\n    }\n\n    if (name === 'rating') {\n      bitmask |= classifyRating(content);\n    }\n  });\n\n  return bitmask;\n};\n\n/**\n * Returns bitmask based on detected classification\n * @param {string} referrerString\n * @param {*} parsedReferrer\n * @param {*} parsedHref\n * @return {number}\n */\nexport const classifyReferrer = (\n  referrerString,\n  parsedReferrer,\n  parsedHref\n) => {\n  // The default is a direct view.\n  let bitmask = REFERRER_BITS.DIRECT;\n\n  // If there was a referrer, try to categorize it\n  if (referrerString && parsedReferrer) {\n    // Compare domain only (SLD + TLD)\n    if (parsedReferrer.host === parsedHref.host) {\n      bitmask |= REFERRER_BITS.ON_DOMAIN;\n    } else {\n      bitmask |= REFERRER_BITS.OFF_DOMAIN;\n    }\n\n    // Run some naive checks to see if visitor came from a search.\n    if (isSearchUrl(referrerString)) {\n      bitmask |= REFERRER_BITS.SEARCH;\n    }\n  }\n\n  return bitmask;\n};\n\n/**\n * Return true if the url appears to be a product page; false otherwise.\n * @param {Document} doc\n * @param {Array} metaElements\n * @return {boolean}\n */\nexport const isProductPage = (doc, metaElements) => {\n  // if a single id or class enumerated below exists, return true\n  if (\n    doc.getElementById('product') ||\n    (doc.getElementsByClassName('product') || []).length > 0 ||\n    doc.getElementById('productDescription') ||\n    doc.getElementById('page-product') ||\n    doc.getElementById('vm_cart_products') ||\n    window['Virtuemart']\n  ) {\n    return true;\n  }\n\n  // see if 'og:type' meta tag === 'product'\n  const ogTags = metaElements.reduce((tags, metaElement) => {\n    const {content, name} = getDetailsForMeta(metaElement);\n\n    if (name.startsWith('og:')) {\n      const ogProperty = name.split(':').pop();\n      tags[ogProperty] = content;\n    }\n\n    return tags;\n  }, {});\n\n  return ogTags.type === 'product';\n};\n\n/**\n * Gather the keywords gathered while classifying the page.\n * @param {Array} metaElements\n * @return {string} csv containing keywords\n */\nexport const getKeywordsString = (metaElements) => {\n  const keywords = metaElements\n    .filter((meta) => getDetailsForMeta(meta).name.toLowerCase() === 'keywords')\n    .map((meta) => extractKeywordsFromContent(getDetailsForMeta(meta).content))\n    .reduce((kws, subKeywords) => kws.concat(subKeywords), []);\n\n  return keywords.join(',');\n};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {isValidCUID} from './cuid';\n\nconst RE_ADDTHIS_FRAGMENT = /^\\.[a-z0-9\\-_]{11}(\\.[a-z0-9_]+)?$/i;\n\n/**\n * Fetches the fragment if it is in the style of a modern AddThis fragment.\n * @param {string} url\n * @return {string|undefined}\n */\nconst getModernFragment = (url) => {\n  let frag = url.split('#').pop();\n\n  // Clean up the fragment\n  frag = frag.split(';').shift();\n\n  // Only return the fragment if it looks like one of ours.\n  if (RE_ADDTHIS_FRAGMENT.test(frag)) {\n    return frag;\n  } else {\n    return undefined;\n  }\n};\n\n/**\n * Returns true if AddThis share fragment exists on URL\n * @param {string} url\n * @return {boolean}\n */\nconst isAddthisFragment = (url) => {\n  if (getModernFragment(url)) {\n    return true;\n  } else {\n    const frag = url.split('#').pop();\n    if (isValidCUID(frag) || url.indexOf('#at_pco=') > -1) {\n      // One of our old fragments, return the part before the hash\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Removes the fragment from the url if we classify it as an AddThis fragment.\n * @param {string} url\n * @return {string}\n */\nexport const clearOurFragment = (url) => {\n  if (isAddthisFragment(url)) {\n    return url.split('#').shift();\n  }\n  return url;\n};\n\n/**\n * Fetch the unique identifier portion of a modern fragment.\n * @param {string} url\n * @return {string|undefined}\n */\nexport const getFragmentId = (url) => {\n  const fragment = getModernFragment(url);\n  if (fragment) {\n    return fragment.split('.').slice(1).shift();\n  } else {\n    return undefined;\n  }\n};\n\n/**\n * Fetch the service name portion of a modern fragment.\n * @param {string} url\n * @return {string|undefined}\n */\nexport const getServiceFromUrlFragment = (url) => {\n  const fragment = getModernFragment(url);\n  if (fragment) {\n    return fragment.split('.').slice(2).shift();\n  } else {\n    return undefined;\n  }\n};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {API_SERVER} from '../constants';\nimport {callPixelEndpoint} from './pixel';\n\nimport {\n  classifyPage,\n  classifyReferrer,\n  getKeywordsString,\n  isProductPage,\n} from './classify';\nimport {\n  clearOurFragment,\n  getFragmentId,\n  getServiceFromUrlFragment,\n} from './fragment';\nimport {dict} from '../../../../src/core/types/object';\nimport {getMetaElements} from './meta';\nimport {getSessionId} from './session';\nimport {parseUrlDeprecated} from '../../../../src/url';\nimport {toArray} from '../../../../src/core/types/array';\n\nconst VIEW_EVENT_CHANNEL = 100;\nconst nonTrackedDomainMatcher = /\\.gov|\\.mil/;\n/**\n * @typedef {{\n * loc:*,\n * title:string,\n * pubId:string,\n * atConfig: JsonObject<AtConfigDef>,\n * referrer: string,\n * ampDoc: !../../../../src/service/ampdoc-impl.AmpDoc\n * }}\n */\nlet LojsonDataDef;\n\n/**\n * @typedef {{\n *   services_exclude:string,\n *   services_compact:string,\n *   services_expanded:string,\n *   services_custom: Array,\n *   ui_click: boolean,\n *   ui_disable: boolean,\n *   ui_delay: number,\n *   ui_hover_direction: number,\n *   ui_language: string,\n *   ui_offset_top: number,\n *   ui_offset_left: number,\n *   ui_508_compliant: boolean,\n *   ui_tabindex: number,\n *   use_cookies: boolean,\n *   track_addressbar: boolean,\n *   track_clickback: boolean,\n *   track_linkback: boolean,\n *   track_textcopy: boolean\n * }}\n */\nlet AtConfigDef;\n\n/**\n * @param {!LojsonDataDef} jsonData\n * @return {!JsonObject}\n */\nexport function getLojsonData(jsonData) {\n  const {ampDoc, atConfig, loc, pubId, referrer, title} = jsonData;\n  const {hash, host, hostname, href, pathname, port, protocol, search} = loc;\n  const pageInfo = {\n    du: href.split('#').shift(),\n    hostname,\n    href,\n    referrer,\n    search,\n    pathname,\n    title,\n    hash,\n    protocol,\n    port,\n  };\n  const parsedReferrer = referrer ? parseUrlDeprecated(referrer) : {};\n  const langParts = atConfig['ui_language'].split('-');\n  const langWithoutLocale = langParts[0];\n  const locale = langParts.slice(1);\n  const service = getServiceFromUrlFragment(pageInfo.du);\n  const {win} = ampDoc;\n  const metaElements = toArray(getMetaElements(win.document));\n  const isDNTEnabled =\n    win.navigator.doNotTrack &&\n    win.navigator.doNotTrack !== 'unspecified' &&\n    win.navigator.doNotTrack !== 'no' &&\n    win.navigator.doNotTrack !== '0';\n\n  return dict({\n    'amp': 1,\n    'bl':\n      0 |\n      (atConfig['use_cookies'] !== false ? 1 : 0) |\n      (atConfig['track_textcopy'] === true ? 2 : 0) |\n      (atConfig['track_addressbar'] === true ? 4 : 0),\n    'cb': classifyPage(pageInfo, metaElements),\n    'colc': Date.now(),\n    'ct':\n      atConfig['track_clickback'] !== false &&\n      atConfig['track_linkback'] !== false\n        ? 1\n        : 0,\n    'dc': 1,\n    'dp': host,\n    'dr': host === parsedReferrer.host ? undefined : parsedReferrer.host,\n    'fcu': service ? '' : getFragmentId(pageInfo.du),\n    'fp': parseUrlDeprecated(clearOurFragment(pageInfo.du)).pathname,\n    'fr': parsedReferrer.pathname || '',\n    'gen': VIEW_EVENT_CHANNEL,\n    'ln': langWithoutLocale,\n    'lnlc': locale,\n    'mk': getKeywordsString(metaElements),\n    'of': isDNTEnabled ? 4 : nonTrackedDomainMatcher.test(hostname) ? 1 : 0,\n    'pd': isProductPage(win.document, metaElements) ? 1 : 0,\n    'pub': pubId,\n    'rb': classifyReferrer(\n      referrer,\n      parsedReferrer,\n      parseUrlDeprecated(pageInfo.du)\n    ),\n    'sid': getSessionId(),\n    'skipb': 1,\n    'sr': service,\n  });\n}\n\n/**\n * @param {!LojsonDataDef} props\n */\nexport function callLojson(props) {\n  const data = getLojsonData(props);\n  const endpoint = `${API_SERVER}/live/red_lojson/300lo.json`;\n\n  callPixelEndpoint({\n    ampDoc: props.ampDoc,\n    endpoint,\n    data,\n  });\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {API_SERVER} from '../constants';\nimport {callPixelEndpoint} from './pixel';\n\nimport {classifyPage, classifyReferrer, getKeywordsString} from './classify';\nimport {getMetaElements} from './meta';\nimport {getSessionId} from './session';\nimport {parseUrlDeprecated} from '../../../../src/url';\nimport {toArray} from '../../../../src/core/types/array';\n\n// \"gen\" value for shares\nconst SHARE = 300;\n\n/**\n * @param {{\n *   loc:Location,\n *   referrer:string,\n *   title:string,\n *   ampDoc: *,\n *   pubId:string,\n *   data: {url: string, service: string}\n * }} pjson\n * @return {{amp: number, cb: number, dc: number, dest: *, gen: number, mk: string, pub: *, rb: number, sid, url}}\n */\nconst getPjsonData = (pjson) => {\n  const {ampDoc, data, loc, pubId, referrer, title} = pjson;\n  const {hash, hostname, href, pathname, port, protocol, search} = loc;\n  /** @typedef {{\n   * du: string,\n   * hostname: string,\n   * href: string,\n   * referrer: string,\n   * search: string,\n   * pathname: string,\n   * title: string,\n   * hash: string,\n   * protocol: string,\n   * port: string\n   * }} */\n  const pageInfo = {\n    du: href.split('#').shift(),\n    hostname,\n    href,\n    referrer,\n    search,\n    pathname,\n    title,\n    hash,\n    protocol,\n    port,\n  };\n  const parsedReferrer = referrer ? parseUrlDeprecated(referrer) : {};\n  const {win} = ampDoc;\n  const metaElements = toArray(getMetaElements(win.document));\n\n  return {\n    amp: 1,\n    cb: classifyPage(pageInfo, metaElements),\n    dc: 1,\n    dest: data.service,\n    gen: SHARE,\n    mk: getKeywordsString(metaElements),\n    pub: pubId,\n    rb: classifyReferrer(\n      referrer,\n      parsedReferrer,\n      parseUrlDeprecated(pageInfo.du)\n    ),\n    sid: getSessionId(),\n    url: data.url,\n  };\n};\n\nexport const callPjson = (props) => {\n  const data = getPjsonData(props);\n  const endpoint = `${API_SERVER}/live/red_pjson`;\n\n  callPixelEndpoint({\n    ampDoc: props.ampDoc,\n    endpoint,\n    data,\n  });\n};\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {dict} from '../../../../src/core/types/object';\n\nconst overrideKeys = [\n  'backgroundColor',\n  'borderRadius',\n  'counterColor',\n  'counts',\n  'countsFontSize',\n  'desktopPosition',\n  'elements',\n  'hideDevice',\n  'hideEmailSharingConfirmation',\n  'hideLabel',\n  'iconColor',\n  'label',\n  'mobilePosition',\n  'numPreferredServices',\n  'offset',\n  'originalServices',\n  'postShareFollowMsg',\n  'postShareRecommendedMsg',\n  'postShareTitle',\n  'responsive',\n  'shareCountThreshold',\n  'size',\n  'style',\n  'textColor',\n  'thankyou',\n  'titleFontSize',\n  '__hideOnHomepage',\n  'originalServices',\n  'services',\n];\n\n/**\n * Get Widget ID Overloaded With JSON For Anonymous Mode\n * If no argument or self doesnt have element.getAttribute, returns empty string\n * For each existing attribute: `data-attr-NAME`, check and add value for key\n * If object is not empty, return only the JSON of the override object\n * If an error happens return empty string\n * @param {AMP.BaseElement} self\n * @return {string} empty string means there is no override object\n */\nexport function getWidgetOverload(self) {\n  const override = dict({});\n  overrideKeys.forEach((item) => {\n    const data = self.element.getAttribute(`data-attr-${item}`);\n    if (\n      typeof data === 'string' ||\n      typeof data === 'number' ||\n      typeof data === 'boolean'\n    ) {\n      override[String(item)] = data;\n    }\n  });\n  const overrideString = JSON.stringify(override);\n  return overrideString === '{}' ? '' : overrideString;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isExperimentOn} from './experiments';\nimport {isFiniteNumber} from './core/types';\nimport {setStyle, setStyles, toggle} from './style';\nimport {toWin} from './core/window';\nimport {transparentPng} from './core/dom/img';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-RENDER': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe =\n  /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n * @type {?boolean}\n */\nlet aspectRatioCssCache = null;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && tagName.toLowerCase().startsWith('i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  const m = userAssert(\n    /[a-z]+/i.exec(length),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element allowlisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified element. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ allowlist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @param {boolean} fixIeIntrinsic\n * @return {!Layout}\n */\nexport function applyStaticLayout(element, fixIeIntrinsic = false) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (\n      devAssert(parseLayout(completedLayoutAttr))\n    );\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n      if (element.sizerElement) {\n        element.sizerElement.setAttribute('slot', 'i-amphtml-svc');\n      }\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(\n    inputLayout !== undefined,\n    'Invalid \"layout\" value: %s, %s',\n    layoutAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(\n    inputWidth !== undefined,\n    'Invalid \"width\" value: %s, %s',\n    widthAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(\n    inputHeight !== undefined,\n    'Invalid \"height\" value: %s, %s',\n    heightAttr,\n    element\n  );\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'The \"height\" attribute is missing: %s', element);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'The \"width\" attribute must be missing or \"auto\": %s',\n      element\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'The \"width\" attribute must be present and not \"auto\": %s',\n      element\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for \"width\" and \"height\": %s, %s, %s',\n      widthAttr,\n      heightAttr,\n      element\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      '\"heights\" attribute must be missing: %s',\n      element\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    if (shouldUseAspectRatioCss(toWin(element.ownerDocument.defaultView))) {\n      setStyle(\n        element,\n        'aspect-ratio',\n        `${getLengthNumeral(width)}/${getLengthNumeral(height)}`\n      );\n    } else {\n      const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n      sizer.setAttribute('slot', 'i-amphtml-svc');\n      setStyles(sizer, {\n        paddingTop:\n          (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n      });\n      element.insertBefore(sizer, element.firstChild);\n      element.sizerElement = sizer;\n    }\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\" slot=\"i-amphtml-svc\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      !IS_ESM && fixIeIntrinsic && element.ownerDocument\n        ? transparentPng(\n            element.ownerDocument,\n            dev().assertNumber(getLengthNumeral(width)),\n            dev().assertNumber(getLengthNumeral(height))\n          )\n        : `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n *\n * @param {!Window} win\n * @return {boolean}\n */\nfunction shouldUseAspectRatioCss(win) {\n  if (aspectRatioCssCache == null) {\n    aspectRatioCssCache =\n      (isExperimentOn(win, 'layout-aspect-ratio-css') &&\n        win.CSS &&\n        win.CSS.supports &&\n        win.CSS.supports('aspect-ratio: 1/1')) ||\n      false;\n  }\n  return aspectRatioCssCache;\n}\n\n/** @visibleForTesting */\nexport function resetShouldUseAspectRatioCssForTesting() {\n  aspectRatioCssCache = null;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Embeds an AddThis widget.\n * The data-pub-id and data-widget-id can be found easily in the AddThis\n * dashboard at addthis.com.\n * For floating tool, pickup floating widget-id from dashboard\n * and add an attribute: data-widget-type=\"floating\"\n * Example:\n * <code>\n * <amp-addthis\n *   width=\"320\"\n *   height=\"92\"\n *   layout=\"responsive\"\n *   data-pub-id=\"ra-59c2c366435ef478\"\n *   data-widget-id=\"0fyg\">\n * </amp-addthis>\n * </code>\n */\n\nimport {\n  ALT_TEXT,\n  API_SERVER,\n  AT_CONFIG_KEYS,\n  CONFIGURATION_EVENT,\n  COOKIELESS_API_SERVER,\n  ICON_SIZE,\n  ORIGIN,\n  SHARECOUNTER_SERVER,\n  SHARE_CONFIG_KEYS,\n  SHARE_EVENT,\n} from './constants';\nimport {ActiveToolsMonitor} from './addthis-utils/monitors/active-tools-monitor';\nimport {CSS} from '../../../build/amp-addthis-0.1.css';\nimport {ClickMonitor} from './addthis-utils/monitors/click-monitor';\nimport {ConfigManager} from './config-manager';\nimport {DwellMonitor} from './addthis-utils/monitors/dwell-monitor';\nimport {PostMessageDispatcher} from './post-message-dispatcher';\nimport {ScrollMonitor} from './addthis-utils/monitors/scroll-monitor';\nimport {Services} from '../../../src/services';\nimport {callEng} from './addthis-utils/eng';\nimport {callLojson} from './addthis-utils/lojson';\nimport {callPjson} from './addthis-utils/pjson';\nimport {createElementWithAttributes, removeElement} from '../../../src/dom';\nimport {dict} from '../../../src/core/types/object';\nimport {\n  getAddThisMode,\n  isProductCode,\n  isPubId,\n  isWidgetId,\n} from './addthis-utils/mode';\nimport {getOgImage} from './addthis-utils/meta';\nimport {getWidgetOverload} from './addthis-utils/get-widget-id-overloaded-with-json-for-anonymous-mode';\nimport {internalRuntimeVersion} from '../../../src/internal-version';\nimport {isLayoutSizeDefined} from '../../../src/layout';\nimport {listen} from '../../../src/event-helper';\nimport {parseUrlDeprecated} from '../../../src/url';\nimport {setStyle} from '../../../src/style';\nimport {userAssert} from '../../../src/log';\n\n// The following items will be shared by all AmpAddThis elements on a page, to\n// prevent unnecessary HTTP requests, get accurate analytics, etc., and hence\n// are defined outside of the class.\nconst configManager = new ConfigManager();\nconst scrollMonitor = new ScrollMonitor();\nconst dwellMonitor = new DwellMonitor();\nconst clickMonitor = new ClickMonitor();\nconst activeToolsMonitor = new ActiveToolsMonitor();\n\n// `shouldRegisterView` is a shared flag that should be true only for the first\n// built element on the page, to prevent registering more than one view per\n// page.\nlet shouldRegisterView = true;\n\n/**\n * Redirection to prevent eslint issues.\n * @return {*} TODO(#23582): Specify return type\n */\nexport function getConfigManager() {\n  return configManager;\n}\n\nclass AmpAddThis extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {?HTMLIFrameElement} */\n    this.iframe_ = null;\n\n    /** @private {string} */\n    this.pubId_ = '';\n\n    /** @private {string} */\n    this.widgetId_ = '';\n\n    /** @private {string} */\n    this.productCode_ = '';\n\n    /** @private {string} */\n    this.canonicalUrl_ = '';\n\n    /** @private {string} */\n    this.canonicalTitle_ = '';\n\n    /** @private {string} */\n    this.referrer_ = '';\n\n    /** @private {?JsonObject<string, string>} */\n    this.shareConfig_ = null;\n\n    /** @private {(?JsonObject)} */\n    this.atConfig_ = null;\n\n    /** @private {string} */\n    this.widgetType_ = '';\n\n    /** @private {number} */\n    this.mode_ = -1;\n\n    /** @private {string} */\n    this.containerClassName_ = '';\n  }\n\n  /**\n   * @override\n   */\n  buildCallback() {\n    const pubId = this.element.getAttribute('data-pub-id') || '';\n    const widgetId = this.element.getAttribute('data-widget-id') || '';\n    const productCode = this.element.getAttribute('data-product-code') || '';\n    this.mode_ = getAddThisMode({pubId, widgetId, productCode});\n    if (this.mode_ === -1) {\n      if (isPubId(pubId)) {\n        if (!isProductCode(productCode) && !isWidgetId(widgetId)) {\n          userAssert(\n            widgetId,\n            'Widget id or product code is required for <amp-addthis> %s',\n            this.element\n          );\n        } else if (isProductCode(productCode) && isWidgetId(widgetId)) {\n          userAssert(\n            productCode,\n            'Only widget id or product code is required <amp-addthis> %s',\n            this.element\n          );\n        }\n      } else {\n        userAssert(\n          pubId,\n          'The data-pub-id attribute is required for <amp-addthis> %s',\n          this.element\n        );\n      }\n    }\n\n    this.containerClassName_ =\n      this.element.getAttribute('data-class-name') || '';\n\n    this.pubId_ = pubId;\n    this.widgetId_ = this.mode_ === 3 ? getWidgetOverload(this) : widgetId;\n    this.productCode_ = productCode;\n\n    // sets the widget type when we use a product code for WP modes\n    if (this.productCode_ === 'shfs') {\n      this.element.setAttribute('data-widget-type', 'floating');\n    }\n\n    // Optional attributes\n    const ampDoc = this.getAmpDoc();\n    this.canonicalUrl_ =\n      this.element.getAttribute('data-canonical-url') ||\n      Services.documentInfoForDoc(this.element).canonicalUrl ||\n      ampDoc.getUrl();\n    this.canonicalTitle_ =\n      this.element.getAttribute('data-canonical-title') ||\n      ampDoc.win.document.title;\n    this.widgetType_ = this.element.getAttribute('data-widget-type');\n    this.shareConfig_ = this.getShareConfigAsJsonObject_();\n    this.atConfig_ = this.getATConfig_(ampDoc);\n\n    if (shouldRegisterView) {\n      // Register pageview (and setup analytics), only for the first\n      // amp-addthis element on the page\n      shouldRegisterView = false;\n\n      const viewer = Services.viewerForDoc(ampDoc);\n      const loc = parseUrlDeprecated(this.canonicalUrl_);\n\n      ampDoc\n        .whenFirstVisible()\n        .then(() => viewer.getReferrerUrl())\n        .then((referrer) => {\n          this.referrer_ = referrer;\n\n          callLojson({\n            loc,\n            title: this.canonicalTitle_,\n            pubId: this.pubId_,\n            atConfig: this.atConfig_,\n            referrer,\n            ampDoc,\n          });\n\n          dwellMonitor.startForDoc(ampDoc);\n          scrollMonitor.startForDoc(ampDoc);\n          clickMonitor.startForDoc(ampDoc);\n        });\n\n      // Only the component that registers the page view listens for x-frame\n      // events.\n      this.setupListeners_({ampDoc, loc, pubId: this.pubId_});\n\n      // Create close button for listing tool\n      if (this.element.getAttribute('data-widget-type') === 'messages') {\n        const closeButton = createElementWithAttributes(\n          this.win.document,\n          'button',\n          dict({\n            'class': 'i-amphtml-addthis-close',\n          })\n        );\n        closeButton.onclick = () => removeElement(this.element);\n        this.element.appendChild(closeButton);\n      }\n    }\n  }\n\n  /**\n   * @param {boolean=} opt_onLayout\n   * @override\n   */\n  preconnectCallback(opt_onLayout) {\n    const preconnect = Services.preconnectFor(this.win);\n    const ampdoc = this.getAmpDoc();\n    preconnect.url(ampdoc, ORIGIN, opt_onLayout);\n    preconnect.url(ampdoc, API_SERVER, opt_onLayout);\n    preconnect.url(ampdoc, COOKIELESS_API_SERVER, opt_onLayout);\n    preconnect.url(ampdoc, SHARECOUNTER_SERVER, opt_onLayout);\n    // Images, etc.:\n    preconnect.url(ampdoc, 'https://cache.addthiscdn.com', opt_onLayout);\n    preconnect.url(ampdoc, 'https://su.addthis.com', opt_onLayout);\n  }\n\n  /** @override */\n  isAlwaysFixed() {\n    return this.widgetType_ === 'floating';\n  }\n\n  /**\n   * @return {Element}\n   */\n  createPlaceholderCallback() {\n    const placeholder = createElementWithAttributes(\n      this.win.document,\n      'div',\n      dict({\n        'placeholder': '',\n      })\n    );\n    setStyle(placeholder, 'background-color', '#fff');\n\n    const image = createElementWithAttributes(\n      this.win.document,\n      'amp-img',\n      dict({\n        'src': `https://cache.addthiscdn.com/icons/v3/thumbs/${ICON_SIZE}x${ICON_SIZE}/addthis.png`,\n        'layout': 'fixed',\n        'width': ICON_SIZE,\n        'height': ICON_SIZE,\n        'referrerpolicy': 'origin',\n        'alt': ALT_TEXT,\n      })\n    );\n\n    placeholder.appendChild(image);\n    return placeholder;\n  }\n\n  /** @override */\n  layoutCallback() {\n    const iframe = createElementWithAttributes(\n      /** @type {!Document} */ (this.element.ownerDocument),\n      'iframe',\n      dict({\n        'frameborder': 0,\n        'title': ALT_TEXT,\n        // Document has overly long cache age: go.amp.dev/issue/24848\n        // Adding AMP runtime version as a meaningless query param to force bust\n        // cached versions.\n        'src': `${ORIGIN}/dc/amp-addthis.html?_amp_=${internalRuntimeVersion()}`,\n        'id': this.widgetId_,\n        'pco': this.productCode_,\n        'containerClassName': this.containerClassName_,\n      })\n    );\n    const iframeLoadPromise = this.loadPromise(iframe);\n\n    this.applyFillContent(iframe);\n    this.element.appendChild(iframe);\n    this.iframe_ = /** @type {HTMLIFrameElement} */ (iframe);\n\n    configManager.register({\n      pubId: this.pubId_,\n      widgetId: this.widgetId_,\n      productCode: this.productCode_,\n      shareConfig: this.shareConfig_,\n      atConfig: this.atConfig_,\n      containerClassName: this.containerClassName_,\n      iframe,\n      iframeLoadPromise,\n      activeToolsMonitor,\n    });\n\n    return iframeLoadPromise;\n  }\n\n  /**\n   *\n   * @return {boolean}\n   * @override\n   */\n  isLayoutSupported(layout) {\n    return isLayoutSizeDefined(layout);\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  unlayoutCallback() {\n    if (this.iframe_) {\n      removeElement(this.iframe_);\n      configManager.unregister({\n        pubId: this.pubId_,\n        iframe: this.iframe_,\n      });\n      this.iframe_ = null;\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @return {!JsonObject}\n   */\n  getShareConfigAsJsonObject_() {\n    const params = dict();\n    SHARE_CONFIG_KEYS.map((key) => {\n      const value = this.element.getAttribute(`data-${key}`);\n      if (value) {\n        params[key] = value;\n      } else {\n        // Fallbacks for values that should always be defined.\n        if (key === 'url') {\n          params[key] = this.getAmpDoc().getUrl();\n        } else if (key === 'title') {\n          params[key] = this.getAmpDoc().win.document.title;\n        } else if (key === 'media') {\n          params[key] = getOgImage(this.getAmpDoc().win.document);\n        }\n      }\n    });\n    return params;\n  }\n\n  /**\n   * @private\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n   * @return {!JsonObject}\n   */\n  getATConfig_(ampDoc) {\n    return AT_CONFIG_KEYS.reduce((config, key) => {\n      const value = this.element.getAttribute(`data-${key}`);\n      if (value) {\n        config[key] = value;\n      } else {\n        // Fallbacks for values that should always be defined.\n        const {win} = ampDoc;\n        if (key === 'ui_language') {\n          config[key] =\n            win.document.documentElement.lang ||\n            win.navigator.language ||\n            win.navigator.userLanguage ||\n            'en';\n        }\n      }\n      return config;\n    }, {});\n  }\n\n  /**\n   * @typedef {{\n   *   ampdoc: !../../../src/service/ampdoc-impl.AmpDoc,\n   *   loc: *,\n   *   pubId: *,\n   * }} SetupListenersInput\n   */\n\n  /**\n   * Sets up listeners.\n   *\n   * @param {!SetupListenersInput} input\n   * @memberof AmpAddThis\n   */\n  setupListeners_(input) {\n    const {ampDoc, loc, pubId} = input;\n    // Send \"engagement\" analytics on page hide.\n    listen(ampDoc.win, 'pagehide', () =>\n      callEng({\n        monitors: {\n          dwellMonitor,\n          scrollMonitor,\n          clickMonitor,\n          activeToolsMonitor,\n        },\n        ampDoc,\n        loc,\n        pubId,\n      })\n    );\n\n    const postMessageDispatcher = new PostMessageDispatcher();\n    const pmHandler = postMessageDispatcher.handleAddThisMessage.bind(\n      postMessageDispatcher\n    );\n\n    listen(ampDoc.win, 'message', pmHandler);\n\n    // Trigger \"pjson\" call when a share occurs.\n    postMessageDispatcher.on(SHARE_EVENT, (data) =>\n      callPjson({\n        data,\n        loc,\n        pubId,\n        ampDoc,\n        title: this.canonicalTitle_,\n        atConfig: this.atConfig_,\n        referrer: this.referrer_,\n      })\n    );\n\n    // Dispatch the configuration to the configManager on a\n    // CONFIGURATION_EVENT.\n    postMessageDispatcher.on(\n      CONFIGURATION_EVENT,\n      configManager.receiveConfiguration.bind(configManager)\n    );\n  }\n}\n\nAMP.extension('amp-addthis', '0.1', (AMP) => {\n  AMP.registerElement('amp-addthis', AmpAddThis, CSS);\n});\n"],
  "mappings": "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",
  "names": []
}
