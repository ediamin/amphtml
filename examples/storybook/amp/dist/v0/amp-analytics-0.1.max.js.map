{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../src/core/types/array.js", "../../src/core/types/enum.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/core/error/index.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/config.js", "../../src/log.js", "../../src/core/window/index.js", "../../src/service.js", "../../src/core/minified-mode.js", "../../src/core/assert/dev.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/css-selectors.js", "../../src/core/dom/query.js", "../../src/dom.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../src/core/dom/event-helper-listen.js", "../../src/event-helper.js", "../../extensions/amp-analytics/0.1/activity-impl.js", "../../src/core/types/object/json.js", "../../extensions/amp-analytics/0.1/default-config.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../src/json.js", "../../src/experiments/index.js", "../../src/core/constants/enums.js", "../../src/core/types/string/bytes.js", "../../src/core/types/string/base64.js", "../../src/cookies.js", "../../src/3p-frame-messaging.js", "../../src/style.js", "../../src/iframe-helper.js", "../../extensions/amp-analytics/0.1/cookie-reader.js", "../../src/consent.js", "../../src/core/window/interface.js", "../../extensions/amp-analytics/0.1/crc32.js", "../../extensions/amp-analytics/0.1/linker.js", "../../extensions/amp-analytics/0.1/linker-reader.js", "../../extensions/amp-analytics/0.1/variables.js", "../../extensions/amp-analytics/0.1/config.js", "../../src/core/constants/common-signals.js", "../../src/core/data-structures/observable.js", "../../src/video-interface.js", "../../extensions/amp-analytics/0.1/events.js", "../../src/style-installer.js", "../../src/core/data-structures/priority-queue.js", "../../src/chunk.js", "../../src/service/cid-api.js", "../../src/service/cid-impl.js", "../../extensions/amp-analytics/0.1/cookie-writer.js", "../../extensions/amp-analytics/0.1/scroll-manager.js", "../../src/core/math/layout-rect.js", "../../extensions/amp-analytics/0.1/visibility-model.js", "../../extensions/amp-analytics/0.1/opacity.js", "../../extensions/amp-analytics/0.1/visibility-manager.js", "../../src/service/resources-interface.js", "../../src/ini-load.js", "../../extensions/amp-analytics/0.1/analytics-root.js", "../../extensions/amp-analytics/0.1/analytics-group.js", "../../extensions/amp-analytics/0.1/instrumentation.js", "../../src/layout.js", "../../src/service/navigation.js", "../../extensions/amp-analytics/0.1/linker-manager.js", "../../extensions/amp-analytics/0.1/transport-serializer.js", "../../extensions/amp-analytics/0.1/sandbox-vars-allowlist.js", "../../extensions/amp-analytics/0.1/resource-timing.js", "../../extensions/amp-analytics/0.1/requests.js", "../../extensions/amp-analytics/0.1/iframe-transport-message-queue.js", "../../extensions/amp-analytics/0.1/iframe-transport.js", "../../src/pixel.js", "../../src/ad-helper.js", "../../extensions/amp-analytics/0.1/transport.js", "../../extensions/amp-analytics/0.1/amp-analytics.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks whether `val` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} val\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, val) {\n  for (const k in enumObj) {\n    if (enumObj[k] === val) {\n      return true;\n    }\n  }\n  return false;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty?.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (const arg of arguments) {\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n    // It may not exist for Bento components without the runtime.\n    self.__AMP_REPORT_ERROR?.(error);\n    throw error;\n  });\n}\n\n/**\n * Executes the provided callback in a try/catch and rethrows any errors\n * asynchronously.\n *\n * @param {function(...*):T} callback\n * @param {...*} args\n * @return {T}\n * @template T\n */\nexport function tryCallback(callback, ...args) {\n  try {\n    return callback.apply(null, args);\n  } catch (e) {\n    rethrowAsync(e);\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Magic constant that is replaced by babel.\n// IS_MINIFIED is always replaced with true when closure compiler is used\nconst IS_MINIFIED = false;\n\n/**\n * Returns true whenever closure compiler is used.\n * @return {boolean}\n */\nexport function isMinifiedMode() {\n  return IS_MINIFIED;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {isMinifiedMode} from '../minified-mode';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (isMinifiedMode()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../../../third_party/css-escape/css-escape';\nimport {devAssert} from '../assert';\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n * @suppress {uselessCode}\n */\nexport function escapeCssSelectorIdent(ident) {\n  // This gets rewritten to true/false during compilation. It will trigger an\n  // JSC_UNREACHABLE_CODE warning, but that's intentional for DCE.\n  if (IS_ESM) {\n    return CSS.escape(ident);\n  }\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {lastChildElement} from './core/dom/query';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides an ability to collect data about activities the user\n * has performed on the page.\n */\n\nimport {Services} from '../../../src/services';\nimport {hasOwn} from '../../../src/core/types/object';\nimport {listen} from '../../../src/event-helper';\nimport {registerServiceBuilderForDoc} from '../../../src/service';\n\n/**\n * The amount of time after an activity the user is considered engaged.\n * @private @const {number}\n */\nconst DEFAULT_ENGAGED_SECONDS = 5;\n\n/**\n * @enum {string}\n */\nconst ActivityEventType = {\n  ACTIVE: 'active',\n  INACTIVE: 'inactive',\n};\n\n/**\n * @typedef {{\n *   type: string,\n *   time: number\n * }}\n */\nlet ActivityEventDef;\n\n/**\n * Find the engaged time between the event and the time (exclusive of the time)\n * @param {ActivityEventDef} activityEvent\n * @param {number} time\n * @return {number}\n * @private\n */\nfunction findEngagedTimeBetween(activityEvent, time) {\n  let engagementBonus = 0;\n\n  if (activityEvent.type === ActivityEventType.ACTIVE) {\n    engagementBonus = DEFAULT_ENGAGED_SECONDS;\n  }\n\n  return Math.min(time - activityEvent.time, engagementBonus);\n}\n\nclass ActivityHistory {\n  /**\n   * Creates an instance of ActivityHistory.\n   */\n  constructor() {\n    /** @private {number} */\n    this.totalEngagedTime_ = 0;\n\n    /**\n     * prevActivityEvent_ remains undefined until the first valid push call.\n     * @private {ActivityEventDef|undefined}\n     */\n    this.prevActivityEvent_ = undefined;\n  }\n\n  /**\n   * Indicate that an activity took place at the given time.\n   * @param {ActivityEventDef} activityEvent\n   */\n  push(activityEvent) {\n    if (\n      this.prevActivityEvent_ &&\n      this.prevActivityEvent_.time < activityEvent.time\n    ) {\n      this.totalEngagedTime_ += findEngagedTimeBetween(\n        this.prevActivityEvent_,\n        activityEvent.time\n      );\n    }\n    this.prevActivityEvent_ = activityEvent;\n  }\n\n  /**\n   * Get the total engaged time up to the given time recorded in\n   * ActivityHistory.\n   * @param {number} time\n   * @return {number}\n   */\n  getTotalEngagedTime(time) {\n    let totalEngagedTime = 0;\n    if (this.prevActivityEvent_ !== undefined) {\n      totalEngagedTime =\n        this.totalEngagedTime_ +\n        findEngagedTimeBetween(this.prevActivityEvent_, time);\n    }\n    return totalEngagedTime;\n  }\n}\n\n/**\n * Array of event types which will be listened for on the document to indicate\n * activity. Other activities are also observed on the AmpDoc and Viewport\n * objects. See {@link setUpActivityListeners_} for listener implementation.\n * @private @const {Array<string>}\n */\nconst ACTIVE_EVENT_TYPES = [\n  'mousedown',\n  'mouseup',\n  'mousemove',\n  'keydown',\n  'keyup',\n];\n/**\n * Array of event types which will be listened for on the document to indicate\n * leave from document. Other activities are also observed on the AmpDoc and Viewport\n * objects. See {@link setUpActivityListeners_} for listener implementation.\n * @private @const {Array<string>}\n */\nconst INACTIVE_EVENT_TYPES = ['mouseleave'];\n\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampDoc\n */\nexport function installActivityServiceForTesting(ampDoc) {\n  registerServiceBuilderForDoc(ampDoc, 'activity', Activity);\n}\n\nexport class Activity {\n  /**\n   * Activity tracks basic user activity on the page.\n   *  - Listeners are not registered on the activity event types until the\n   *    AmpDoc's `whenFirstVisible` is resolved.\n   *  - When the `whenFirstVisible` of AmpDoc is resolved, a first activity\n   *    is recorded.\n   *  - The first activity in any second causes all other activities to be\n   *    ignored. This is similar to debounce functionality since some events\n   *    (e.g. scroll) could occur in rapid succession.\n   *  - In any one second period, active events or inactive events can override\n   *    each other. Whichever type occured last has precedence.\n   *  - Active events give a 5 second \"bonus\" to engaged time.\n   *  - Inactive events cause an immediate stop to the engaged time bonus of\n   *    any previous activity event.\n   *  - At any point after instantiation, `getTotalEngagedTime` can be used\n   *    to get the engage time up to the time the function is called. If\n   *    `whenFirstVisible` has not yet resolved, engaged time is 0.\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc */\n    this.ampdoc = ampdoc;\n\n    /** @private @const {function()} */\n    this.boundStopIgnore_ = this.stopIgnore_.bind(this);\n\n    /** @private @const {function()} */\n    this.boundHandleActivity_ = this.handleActivity_.bind(this);\n\n    /** @private @const {function()} */\n    this.boundHandleInactive_ = this.handleInactive_.bind(this);\n\n    /** @private @const {function()} */\n    this.boundHandleVisibilityChange_ = this.handleVisibilityChange_.bind(this);\n\n    /**\n     * Contains the incrementalEngagedTime timestamps for named triggers.\n     * @private {Object<string, number>}\n     */\n    this.totalEngagedTimeByTrigger_ = {\n      /*\n       * \"$triggerName\" : ${lastRequestTimestamp}\n       */\n    };\n\n    /** @private {Array<!UnlistenDef>} */\n    this.unlistenFuncs_ = [];\n\n    /** @private {boolean} */\n    this.ignoreActivity_ = false;\n\n    /** @private {boolean} */\n    this.ignoreInactive_ = false;\n\n    /** @private @const {!ActivityHistory} */\n    this.activityHistory_ = new ActivityHistory();\n\n    /** @private @const {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.ampdoc);\n\n    this.ampdoc.whenFirstVisible().then(this.start_.bind(this));\n  }\n\n  /** @private */\n  start_() {\n    /** @private @const {number} */\n    this.startTime_ = Date.now();\n    // record an activity since this is when the page became visible\n    this.handleActivity_();\n    this.setUpActivityListeners_();\n  }\n\n  /**\n   * @private\n   * @return {number}\n   */\n  getTimeSinceStart_() {\n    const timeSinceStart = Date.now() - this.startTime_;\n    // Ensure that a negative time is never returned. This may cause loss of\n    // data if there is a time change during the session but it will decrease\n    // the likelyhood of errors in that situation.\n    return timeSinceStart > 0 ? timeSinceStart : 0;\n  }\n\n  /**\n   * Return to a state where neither activities or inactivity events are\n   * ignored when that event type is fired.\n   * @private\n   */\n  stopIgnore_() {\n    this.ignoreActivity_ = false;\n    this.ignoreInactive_ = false;\n  }\n\n  /** @private */\n  setUpActivityListeners_() {\n    this.setUpListenersFromArray_(\n      this.ampdoc.getRootNode(),\n      ACTIVE_EVENT_TYPES,\n      this.boundHandleActivity_\n    );\n\n    this.setUpListenersFromArray_(\n      this.ampdoc.getRootNode(),\n      INACTIVE_EVENT_TYPES,\n      this.boundHandleInactive_\n    );\n\n    this.unlistenFuncs_.push(\n      this.ampdoc.onVisibilityChanged(this.boundHandleVisibilityChange_)\n    );\n\n    // Viewport.onScroll does not return an unlisten function.\n    // TODO(britice): If Viewport is updated to return an unlisten function,\n    // update this to capture the unlisten function.\n    this.viewport_.onScroll(this.boundHandleActivity_);\n  }\n\n  /**\n   *  @private\n   *  @param {!EventTarget} target\n   *  @param {Array<string>} events\n   *  @param {function()} listener\n   */\n  setUpListenersFromArray_(target, events, listener) {\n    for (let i = 0; i < events.length; i++) {\n      this.unlistenFuncs_.push(listen(target, events[i], listener));\n    }\n  }\n\n  /** @private */\n  handleActivity_() {\n    if (this.ignoreActivity_) {\n      return;\n    }\n    this.ignoreActivity_ = true;\n    this.ignoreInactive_ = false;\n\n    this.handleActivityEvent_(ActivityEventType.ACTIVE);\n  }\n\n  /** @private */\n  handleInactive_() {\n    if (this.ignoreInactive_) {\n      return;\n    }\n    this.ignoreInactive_ = true;\n    this.ignoreActivity_ = false;\n\n    this.handleActivityEvent_(ActivityEventType.INACTIVE);\n  }\n\n  /**\n   * @param {ActivityEventType} type\n   * @private\n   */\n  handleActivityEvent_(type) {\n    const timeSinceStart = this.getTimeSinceStart_();\n    const secondKey = Math.floor(timeSinceStart / 1000);\n    const timeToWait = 1000 - (timeSinceStart % 1000);\n\n    // stop ignoring activity at the start of the next activity bucket\n    setTimeout(this.boundStopIgnore_, timeToWait);\n\n    this.activityHistory_.push({\n      type,\n      time: secondKey,\n    });\n  }\n\n  /** @private */\n  handleVisibilityChange_() {\n    if (this.ampdoc.isVisible()) {\n      this.handleActivity_();\n    } else {\n      this.handleInactive_();\n    }\n  }\n\n  /**\n   * Remove all listeners associated with this Activity instance.\n   * @private\n   */\n  unlisten_() {\n    for (let i = 0; i < this.unlistenFuncs_.length; i++) {\n      const unlistenFunc = this.unlistenFuncs_[i];\n      // TODO(britice): Due to eslint typechecking, this check may not be\n      // necessary.\n      if (typeof unlistenFunc === 'function') {\n        unlistenFunc();\n      }\n    }\n    this.unlistenFuncs_ = [];\n  }\n\n  /**\n   * @private\n   * @visibleForTesting\n   */\n  cleanup_() {\n    this.unlisten_();\n  }\n\n  /**\n   * Get total engaged time since the page became visible.\n   * @return {number}\n   */\n  getTotalEngagedTime() {\n    const secondsSinceStart = Math.floor(this.getTimeSinceStart_() / 1000);\n    return this.activityHistory_.getTotalEngagedTime(secondsSinceStart);\n  }\n\n  /**\n   * Get the incremental engaged time since the last push and reset it if asked.\n   * @param {string} name\n   * @param {boolean=} reset\n   * @return {number}\n   */\n  getIncrementalEngagedTime(name, reset = true) {\n    if (!hasOwn(this.totalEngagedTimeByTrigger_, name)) {\n      if (reset) {\n        this.totalEngagedTimeByTrigger_[name] = this.getTotalEngagedTime();\n      }\n      return this.getTotalEngagedTime();\n    }\n    const currentIncrementalEngagedTime = this.totalEngagedTimeByTrigger_[name];\n    if (reset === false) {\n      return this.getTotalEngagedTime() - currentIncrementalEngagedTime;\n    }\n    this.totalEngagedTimeByTrigger_[name] = this.getTotalEngagedTime();\n    return (\n      this.totalEngagedTimeByTrigger_[name] - currentIncrementalEngagedTime\n    );\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isArray} from '../array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {jsonConfiguration} from '../../../src/core/types/object/json';\n\n// TODO(zhouyx@: Rename file and object name)\nconst defaultConfig = jsonConfiguration({\n  'transport': {'beacon': true, 'xhrpost': true, 'image': true},\n  'vars': {\n    'accessReaderId': 'ACCESS_READER_ID',\n    'ampGeo': 'AMP_GEO',\n    'ampState': 'AMP_STATE',\n    'ampVersion': 'AMP_VERSION',\n    'ampdocHost': 'AMPDOC_HOST',\n    'ampdocHostname': 'AMPDOC_HOSTNAME',\n    'ampdocMeta': 'AMPDOC_META',\n    'ampdocUrl': 'AMPDOC_URL',\n    'authdata': 'AUTHDATA',\n    'availableScreenHeight': 'AVAILABLE_SCREEN_HEIGHT',\n    'availableScreenWidth': 'AVAILABLE_SCREEN_WIDTH',\n    'backgroundState': 'BACKGROUND_STATE',\n    'browserLanguage': 'BROWSER_LANGUAGE',\n    'canonicalHost': 'CANONICAL_HOST',\n    'canonicalHostname': 'CANONICAL_HOSTNAME',\n    'canonicalPath': 'CANONICAL_PATH',\n    'canonicalUrl': 'CANONICAL_URL',\n    'clientId': 'CLIENT_ID',\n    'consentState': 'CONSENT_STATE',\n    'consentString': 'CONSENT_STRING',\n    'contentLoadTime': 'CONTENT_LOAD_TIME',\n    'cookie': 'COOKIE',\n    'counter': 'COUNTER',\n    'cumulativeLayoutShift': 'CUMULATIVE_LAYOUT_SHIFT',\n    'documentCharset': 'DOCUMENT_CHARSET',\n    'documentReferrer': 'DOCUMENT_REFERRER',\n    'domInteractiveTime': 'DOM_INTERACTIVE_TIME',\n    'domainLookupTime': 'DOMAIN_LOOKUP_TIME',\n    'experimentBranches': 'EXPERIMENT_BRANCHES',\n    'externalReferrer': 'EXTERNAL_REFERRER',\n    'firstContentfulPaint': 'FIRST_CONTENTFUL_PAINT',\n    'firstInputDelay': 'FIRST_INPUT_DELAY',\n    'firstViewportReady': 'FIRST_VIEWPORT_READY',\n    'fragmentParam': 'FRAGMENT_PARAM',\n    'htmlAttr': 'HTML_ATTR',\n    'incrementalEngagedTime': 'INCREMENTAL_ENGAGED_TIME',\n    'largestContentfulPaint': 'LARGEST_CONTENTFUL_PAINT',\n    'makeBodyVisible': 'MAKE_BODY_VISIBLE',\n    'navRedirectCount': 'NAV_REDIRECT_COUNT',\n    'navTiming': 'NAV_TIMING',\n    'navType': 'NAV_TYPE',\n    'pageDownloadTime': 'PAGE_DOWNLOAD_TIME',\n    'pageLoadTime': 'PAGE_LOAD_TIME',\n    'pageViewId': 'PAGE_VIEW_ID',\n    'pageViewId64': 'PAGE_VIEW_ID_64',\n    'queryParam': 'QUERY_PARAM',\n    'random': 'RANDOM',\n    'redirectTime': 'REDIRECT_TIME',\n    'resourceTiming': 'RESOURCE_TIMING',\n    'screenColorDepth': 'SCREEN_COLOR_DEPTH',\n    'screenHeight': 'SCREEN_HEIGHT',\n    'screenWidth': 'SCREEN_WIDTH',\n    'scrollHeight': 'SCROLL_HEIGHT',\n    'scrollLeft': 'SCROLL_LEFT',\n    'scrollTop': 'SCROLL_TOP',\n    'scrollWidth': 'SCROLL_WIDTH',\n    'serverResponseTime': 'SERVER_RESPONSE_TIME',\n    'sourceHost': 'SOURCE_HOST',\n    'sourceHostname': 'SOURCE_HOSTNAME',\n    'sourcePath': 'SOURCE_PATH',\n    'sourceUrl': 'SOURCE_URL',\n    'tcpConnectTime': 'TCP_CONNECT_TIME',\n    'timestamp': 'TIMESTAMP',\n    'timezone': 'TIMEZONE',\n    'timezoneCode': 'TIMEZONE_CODE',\n    'title': 'TITLE',\n    'totalEngagedTime': 'TOTAL_ENGAGED_TIME',\n    'userAgent': 'USER_AGENT',\n    'viewer': 'VIEWER',\n    'viewportHeight': 'VIEWPORT_HEIGHT',\n    'viewportWidth': 'VIEWPORT_WIDTH',\n  },\n});\n\n/**\n * @const {!JsonObject}\n */\nexport const DEFAULT_CONFIG = defaultConfig;\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './core/data-structures/lru-cache';\nimport {dict, hasOwn} from './core/types/object';\nimport {endsWith} from './core/types/string';\nimport {getMode} from './mode';\nimport {isArray} from './core/types';\nimport {parseQueryString} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {?} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {childElementsByTag} from './core/dom/query';\nimport {isJsonScriptTag} from './dom';\nimport {parseJson} from './core/types/object/json';\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const n = scripts.length;\n  if (n !== 1) {\n    throw new Error(`Found ${scripts.length} <script> children. Expected 1.`);\n  }\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from '../log';\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service';\nimport {hasOwn, map} from '../core/types/object';\nimport {isArray} from '../core/types';\nimport {parseQueryString} from '../core/types/string/url';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Registred singleton on AMP doc.\n * @enum {number}\n */\nexport const AMPDOC_SINGLETON_NAME = {\n  TRACKING_IFRAME: 1,\n  LINKER: 2,\n};\n\n/**\n * Enum for tick labels (used by Performance service)\n * @enum {string}\n */\nexport const TickLabel = {\n  ACCESS_AUTHORIZATION: 'aaa',\n  ACCESS_AUTHORIZATION_VISIBLE: 'aaav',\n  ADS_LAYOUT_DELAY: 'adld',\n  BAD_FRAMES: 'bf',\n  BATTERY_DROP: 'bd',\n  CONTENT_LAYOUT_DELAY: 'cld',\n  CUMULATIVE_LAYOUT_SHIFT: 'cls',\n  CUMULATIVE_LAYOUT_SHIFT_2: 'cls-2',\n  // TODO(#33207): Remove after data collection\n  CUMULATIVE_LAYOUT_SHIFT_BEFORE_FCP: 'cls-fcp',\n  CUMULATIVE_LAYOUT_SHIFT_BEFORE_VISIBLE: 'cls-ofv',\n  DOCUMENT_READY: 'dr',\n  END_INSTALL_STYLES: 'e_is',\n  FIRST_CONTENTFUL_PAINT: 'fcp',\n  FIRST_CONTENTFUL_PAINT_VISIBLE: 'fcpv',\n  FIRST_PAINT: 'fp',\n  FIRST_INPUT_DELAY: 'fid',\n  FIRST_INPUT_DELAY_POLYFILL: 'fid-polyfill',\n  FIRST_VIEWPORT_READY: 'pc',\n  GOOD_FRAME_PROBABILITY: 'gfp',\n  INSTALL_STYLES: 'is',\n  LARGEST_CONTENTFUL_PAINT_VISIBLE: 'lcpv',\n  LARGEST_CONTENTFUL_PAINT_LOAD: 'lcpl',\n  LARGEST_CONTENTFUL_PAINT_RENDER: 'lcpr',\n  LONG_TASKS_CHILD: 'ltc',\n  LONG_TASKS_SELF: 'lts',\n  MAKE_BODY_VISIBLE: 'mbv',\n  MESSAGING_READY: 'msr',\n  ON_FIRST_VISIBLE: 'ofv',\n  ON_LOAD: 'ol',\n  TIME_ORIGIN: 'timeOrigin',\n  VIDEO_CACHE_STATE: 'vcs',\n  VIDEO_ERROR: 'verr',\n  VIDEO_ON_FIRST_PAGE: 'vofp',\n  VIDEO_JOINT_LATENCY: 'vjl',\n  VIDEO_MEAN_TIME_BETWEEN_REBUFFER: 'vmtbrb',\n  VIDEO_REBUFFERS: 'vrb',\n  VIDEO_REBUFFER_RATE: 'vrbr',\n  VIDEO_WATCH_TIME: 'vwt',\n};\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../../assert';\n\n/**\n * Interpret a byte array as a UTF-8 string.\n * @param {!BufferSource} bytes\n * @return {string}\n */\nexport function utf8Decode(bytes) {\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder('utf-8').decode(bytes);\n  }\n  const asciiString = bytesToString(new Uint8Array(bytes.buffer || bytes));\n  return decodeURIComponent(escape(asciiString));\n}\n\n/**\n * Turn a string into UTF-8 bytes.\n * @param {string} string\n * @return {!Uint8Array}\n */\nexport function utf8Encode(string) {\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder('utf-8').encode(string);\n  }\n  return stringToBytes(unescape(encodeURIComponent(string)));\n}\n\n/**\n * Converts a string which holds 8-bit code points, such as the result of atob,\n * into a Uint8Array with the corresponding bytes.\n * If you have a string of characters, you probably want to be using utf8Encode.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function stringToBytes(str) {\n  const bytes = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    const charCode = str.charCodeAt(i);\n    devAssert(charCode <= 255, 'Characters must be in range [0,255]');\n    bytes[i] = charCode;\n  }\n  return bytes;\n}\n\n/**\n * Converts a 8-bit bytes array into a string\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function bytesToString(bytes) {\n  // Intentionally avoids String.fromCharCode.apply so we don't suffer a\n  // stack overflow. #10495, https://jsperf.com/bytesToString-2\n  const array = new Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = String.fromCharCode(bytes[i]);\n  }\n  return array.join('');\n}\n\n/**\n * Converts a 4-item byte array to an unsigned integer.\n * Assumes bytes are big endian.\n * @param {!Uint8Array} bytes\n * @return {number}\n */\nexport function bytesToUInt32(bytes) {\n  if (bytes.length != 4) {\n    throw new Error('Received byte array with length != 4');\n  }\n  const val =\n    ((bytes[0] & 0xff) << 24) |\n    ((bytes[1] & 0xff) << 16) |\n    ((bytes[2] & 0xff) << 8) |\n    (bytes[3] & 0xff);\n  // Convert to unsigned.\n  return val >>> 0;\n}\n\n/**\n * Generate a random bytes array with specific length using\n * win.crypto.getRandomValues. Return null if it is not available.\n * @param {!Window} win\n * @param {number} length\n * @return {?Uint8Array}\n */\nexport function getCryptoRandomBytesArray(win, length) {\n  let {crypto} = win;\n\n  // Support IE 11\n  if (!IS_ESM) {\n    crypto = /** @type {!webCrypto.Crypto|undefined} */ (\n      crypto || win.msCrypto\n    );\n    if (!crypto || !crypto.getRandomValues) {\n      return null;\n    }\n  }\n\n  // Widely available in browsers we support:\n  // http://caniuse.com/#search=getRandomValues\n  const uint8array = new Uint8Array(length);\n  crypto.getRandomValues(uint8array);\n  return uint8array;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {bytesToString, stringToBytes, utf8Decode, utf8Encode} from './bytes';\n\n/**\n * Character mapping from base64url to base64.\n * @const {!Object<string, string>}\n */\nconst base64UrlDecodeSubs = {'-': '+', '_': '/', '.': '='};\n\n/**\n * Character mapping from base64 to base64url.\n * @const {!Object<string, string>}\n */\nconst base64UrlEncodeSubs = {'+': '-', '/': '_', '=': '.'};\n\n/**\n * Converts a string which is in base64url encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64UrlDecodeToBytes(str) {\n  const encoded = atob(str.replace(/[-_.]/g, (ch) => base64UrlDecodeSubs[ch]));\n  return stringToBytes(encoded);\n}\n\n/**\n * Converts a string which is in base64 encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64DecodeToBytes(str) {\n  return stringToBytes(atob(str));\n}\n\n/**\n * Converts a bytes array into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64UrlEncodeFromBytes(bytes) {\n  const str = bytesToString(bytes);\n  return btoa(str).replace(/[+/=]/g, (ch) => base64UrlEncodeSubs[ch]);\n}\n\n/**\n * Converts a string into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlEncodeFromString(str) {\n  const bytes = utf8Encode(str);\n  return base64UrlEncodeFromBytes(bytes);\n}\n\n/**\n * Decode a base64url encoded string by `base64UrlEncodeFromString`\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlDecodeFromString(str) {\n  const bytes = base64UrlDecodeToBytes(str);\n  return utf8Decode(bytes);\n}\n\n/**\n * Converts a bytes array into base64 encoded string.\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64EncodeFromBytes(bytes) {\n  return btoa(bytesToString(bytes));\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {endsWith} from './core/types/string';\nimport {getSourceOrigin, isProxyOrigin, parseUrlDeprecated} from './url';\nimport {tryDecodeUriComponent} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\nconst TEST_COOKIE_NAME = '-test-amp-cookie-tmp';\n\n/** @enum {string} */\nexport const SameSite = {\n  LAX: 'Lax',\n  STRICT: 'Strict',\n  NONE: 'None',\n};\n\n/**\n * Returns the value of the cookie. The cookie access is restricted and must\n * go through the privacy review. Before using this method please file a\n * GitHub issue with \"Privacy Review\" label.\n *\n * Returns the cookie's value or `null`.\n *\n * @param {!Window} win\n * @param {string} name\n * @return {?string}\n */\nexport function getCookie(win, name) {\n  const cookieString = tryGetDocumentCookie_(win);\n  if (!cookieString) {\n    return null;\n  }\n  const cookies = cookieString.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i].trim();\n    const eq = cookie.indexOf('=');\n    if (eq == -1) {\n      continue;\n    }\n    if (tryDecodeUriComponent(cookie.substring(0, eq).trim()) == name) {\n      const value = cookie.substring(eq + 1).trim();\n      return tryDecodeUriComponent(value, value);\n    }\n  }\n  return null;\n}\n\n/**\n * This method should not be inlined to prevent TryCatch deoptimization.\n * @param {!Window} win\n * @return {string}\n */\nfunction tryGetDocumentCookie_(win) {\n  try {\n    return win.document.cookie;\n  } catch (e) {\n    // Act as if no cookie is available. Exceptions can be thrown when\n    // AMP docs are opened on origins that do not allow setting\n    // cookies such as null origins.\n    return '';\n  }\n}\n\n/**\n * Sets the value of the cookie. The cookie access is restricted and must\n * go through the privacy review. Before using this method please file a\n * GitHub issue with \"Privacy Review\" label.\n *\n * @param {!Window} win\n * @param {string} name\n * @param {string} value\n * @param {time} expirationTime\n * @param {{\n *   highestAvailableDomain:(boolean|undefined),\n *   domain:(string|undefined),\n *   sameSite: (!SameSite|undefined),\n *   secure: (boolean|undefined),\n * }=} options\n *     - highestAvailableDomain: If true, set the cookie at the widest domain\n *       scope allowed by the browser. E.g. on example.com if we are currently\n *       on www.example.com.\n *     - domain: Explicit domain to set. domain overrides HigestAvailableDomain\n *     - allowOnProxyOrigin: Allow setting a cookie on the AMP Cache.\n *     - sameSite: The SameSite value to use when setting the cookie.\n *     - secure: Whether the cookie should contain Secure (only sent over https).\n */\nexport function setCookie(win, name, value, expirationTime, options = {}) {\n  checkOriginForSettingCookie(win, options, name);\n  let domain = undefined;\n  // Respect explicitly set domain over higestAvailabeDomain\n  if (options.domain) {\n    domain = options.domain;\n  } else if (options.highestAvailableDomain) {\n    domain = /** @type {string} */ (getHighestAvailableDomain(win));\n  }\n  trySetCookie(\n    win,\n    name,\n    value,\n    expirationTime,\n    domain,\n    options.sameSite,\n    options.secure\n  );\n}\n\n/**\n * Attemp to find the HighestAvailableDomain on\n * @param {!Window} win\n * @return {?string}\n */\nexport function getHighestAvailableDomain(win) {\n  // <meta name='amp-cookie-scope'>. Need to respect the meta first.\n\n  // Note: The same logic applies to shadow docs. Where all shadow docs are\n  // considered to be in the same origin. And only the <meta> from\n  // shell will be respected. (Header from shadow doc will be removed)\n  const metaTag =\n    win.document.head &&\n    win.document.head.querySelector(\"meta[name='amp-cookie-scope']\");\n\n  if (metaTag) {\n    // The content value could be an empty string. Return null instead\n    const cookieScope = metaTag.getAttribute('content') || '';\n    // Verify the validness of the amp-cookie-scope meta value\n    const sourceOrigin = getSourceOrigin(win.location.href);\n    // Verify the meta tag content value is valid\n    if (endsWith(sourceOrigin, '.' + cookieScope)) {\n      return cookieScope;\n    } else {\n      // When the amp-cookie-scope value is invalid, fallback to the exact origin\n      // the document is contained in.\n      // sourceOrigin in the format of 'https://xxx or http://xxx'\n      return sourceOrigin.split('://')[1];\n    }\n  }\n\n  if (!isProxyOrigin(win.location.href)) {\n    const parts = win.location.hostname.split('.');\n    let domain = parts[parts.length - 1];\n    const testCookieName = getTempCookieName(win);\n    for (let i = parts.length - 2; i >= 0; i--) {\n      domain = parts[i] + '.' + domain;\n      // Try set a cookie for testing only, expire after 1 sec\n      trySetCookie(win, testCookieName, 'delete', Date.now() + 1000, domain);\n      if (getCookie(win, testCookieName) == 'delete') {\n        // Remove the cookie for testing\n        trySetCookie(win, testCookieName, 'delete', Date.now() - 1000, domain);\n        return domain;\n      }\n    }\n  }\n\n  // Proxy origin w/o <meta name='amp-cookie-scope>\n  // We cannot calculate the etld+1 without the public suffix list.\n  // Return null instead.\n  // Note: This should not affect cookie writing because we don't allow writing\n  // cookie to highestAvailableDomain on proxy origin\n  // In the case of link decoration on proxy origin,\n  // we expect the correct meta tag to be\n  // set by publisher or cache order for AMP runtime to find all subdomains.\n  return null;\n}\n\n/**\n * Attempt to set a cookie with the given params.\n *\n * @param {!Window} win\n * @param {string} name\n * @param {string} value\n * @param {time} expirationTime\n * @param {string|undefined} domain\n * @param {!SameSite=} sameSite\n * @param {boolean|undefined=} secure\n */\nfunction trySetCookie(\n  win,\n  name,\n  value,\n  expirationTime,\n  domain,\n  sameSite,\n  secure\n) {\n  // We do not allow setting cookies on the domain that contains both\n  // the cdn. and www. hosts.\n  // Note: we need to allow cdn.ampproject.org in order to optin to experiments\n  if (domain == 'ampproject.org') {\n    // Actively delete them.\n    value = 'delete';\n    expirationTime = 0;\n  }\n  const cookie =\n    encodeURIComponent(name) +\n    '=' +\n    encodeURIComponent(value) +\n    '; path=/' +\n    (domain ? '; domain=' + domain : '') +\n    '; expires=' +\n    new Date(expirationTime).toUTCString() +\n    getSameSiteString(win, sameSite) +\n    (secure ? '; Secure' : '');\n  try {\n    win.document.cookie = cookie;\n  } catch (ignore) {\n    // Do not throw if setting the cookie failed Exceptions can be thrown\n    // when AMP docs are opened on origins that do not allow setting\n    // cookies such as null origins.\n  }\n}\n\n/**\n * Gets the cookie string to use for SameSite. This only sets the SameSite\n * value if specified, falling back to the browser default. The default value\n * is equivalent to SameSite.NONE, but is planned to be set to SameSite.LAX in\n * Chrome 80.\n *\n * Note: In Safari 12, if the value is set to SameSite.NONE, it is treated by\n * the browser as SameSite.STRICT.\n * @param {Window} win\n * @param {!SameSite|undefined} sameSite\n * @return {string} The string to use when setting the cookie.\n */\nfunction getSameSiteString(win, sameSite) {\n  if (!sameSite) {\n    return '';\n  }\n\n  return `; SameSite=${sameSite}`;\n}\n\n/**\n * Throws if a given cookie should not be set on the given origin.\n * This is a defense-in-depth. Callers should never run into this.\n *\n * @param {!Window} win\n * @param {!Object} options\n * @param {string} name For the error message.\n */\nfunction checkOriginForSettingCookie(win, options, name) {\n  if (options.allowOnProxyOrigin) {\n    userAssert(\n      !options.highestAvailableDomain,\n      'Could not support highestAvailable Domain on proxy origin, ' +\n        'specify domain explicitly'\n    );\n    return;\n  }\n  userAssert(\n    !isProxyOrigin(win.location.href),\n    `Should never attempt to set cookie on proxy origin: ${name}`\n  );\n  const current = parseUrlDeprecated(win.location.href).hostname.toLowerCase();\n  const proxy = parseUrlDeprecated(urls.cdn).hostname.toLowerCase();\n  userAssert(\n    !(current == proxy || endsWith(current, '.' + proxy)),\n    'Should never attempt to set cookie on proxy origin. (in depth check): ' +\n      name\n  );\n}\n\n/**\n * Return a temporary cookie name for testing only\n * @param {!Window} win\n * @return {string}\n */\nfunction getTempCookieName(win) {\n  let testCookieName = TEST_COOKIE_NAME;\n  const counter = 0;\n  while (getCookie(win, testCookieName)) {\n    // test cookie name conflict, append counter to test cookie name\n    testCookieName = TEST_COOKIE_NAME + counter;\n  }\n  return testCookieName;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {tryParseJson} from './core/types/object/json';\n\n/** @const */\nconst AMP_MESSAGE_PREFIX = 'amp-';\nexport const CONSTANTS = {\n  responseTypeSuffix: '-result',\n  messageIdFieldName: 'messageId',\n  payloadFieldName: 'payload',\n  contentFieldName: 'content',\n};\n\n/** @enum {string} */\nexport const MessageType = {\n  // For amp-ad\n  SEND_EMBED_STATE: 'send-embed-state',\n  EMBED_STATE: 'embed-state',\n  SEND_EMBED_CONTEXT: 'send-embed-context',\n  EMBED_CONTEXT: 'embed-context',\n  SEND_INTERSECTIONS: 'send-intersections',\n  INTERSECTION: 'intersection',\n  EMBED_SIZE: 'embed-size',\n  EMBED_SIZE_CHANGED: 'embed-size-changed',\n  EMBED_SIZE_DENIED: 'embed-size-denied',\n  NO_CONTENT: 'no-content',\n  GET_HTML: 'get-html',\n  GET_CONSENT_STATE: 'get-consent-state',\n  SIGNAL_INTERACTIVE: 'signal-interactive',\n\n  // For the frame to be placed in full overlay mode for lightboxes\n  FULL_OVERLAY_FRAME: 'full-overlay-frame',\n  FULL_OVERLAY_FRAME_RESPONSE: 'full-overlay-frame-response',\n  CANCEL_FULL_OVERLAY_FRAME: 'cancel-full-overlay-frame',\n  CANCEL_FULL_OVERLAY_FRAME_RESPONSE: 'cancel-full-overlay-frame-response',\n\n  // For amp-inabox\n  SEND_POSITIONS: 'send-positions',\n  POSITION: 'position',\n\n  // For amp-analytics' iframe-transport\n  SEND_IFRAME_TRANSPORT_EVENTS: 'send-iframe-transport-events',\n  IFRAME_TRANSPORT_EVENTS: 'iframe-transport-events',\n  IFRAME_TRANSPORT_RESPONSE: 'iframe-transport-response',\n\n  // For user-error-in-iframe\n  USER_ERROR_IN_IFRAME: 'user-error-in-iframe',\n\n  // For amp-iframe\n  SEND_CONSENT_DATA: 'send-consent-data',\n  CONSENT_DATA: 'consent-data',\n};\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Serialize an AMP post message. Output looks like:\n * 'amp-011481323099490{\"type\":\"position\",\"sentinel\":\"12345\",\"foo\":\"bar\"}'\n * @param {string} type\n * @param {string} sentinel\n * @param {JsonObject=} data\n * @param {?string=} rtvVersion\n * @return {string}\n */\nexport function serializeMessage(\n  type,\n  sentinel,\n  data = dict(),\n  rtvVersion = null\n) {\n  // TODO: consider wrap the data in a \"data\" field. { type, sentinal, data }\n  const message = data;\n  message['type'] = type;\n  message['sentinel'] = sentinel;\n  return AMP_MESSAGE_PREFIX + (rtvVersion || '') + JSON.stringify(message);\n}\n\n/**\n * Deserialize an AMP post message.\n * Returns null if it's not valid AMP message format.\n *\n * @param {*} message\n * @return {?JsonObject|undefined}\n */\nexport function deserializeMessage(message) {\n  if (!isAmpMessage(message)) {\n    return null;\n  }\n  const startPos = message.indexOf('{');\n  devAssert(startPos != -1, 'JSON missing in %s', message);\n  return tryParseJson(message.substr(startPos), (e) =>\n    dev().error('MESSAGING', 'Failed to parse message: ' + message, e)\n  );\n}\n\n/**\n *  Returns true if message looks like it is an AMP postMessage\n *  @param {*} message\n *  @return {boolean}\n */\nexport function isAmpMessage(message) {\n  return (\n    typeof message == 'string' &&\n    message.indexOf(AMP_MESSAGE_PREFIX) == 0 &&\n    message.indexOf('{') != -1\n  );\n}\n\n/** @typedef {{creativeId: string, message: string}} */\nexport let IframeTransportEvent;\n// An event, and the transport ID of the amp-analytics tags that\n// generated it. For instance if the creative with transport\n// ID 2 sends \"hi\", then an IframeTransportEvent would look like:\n// { creativeId: \"2\", message: \"hi\" }\n// If the creative with transport ID 2 sent that, and also sent \"hello\",\n// and the creative with transport ID 3 sends \"goodbye\" then an *array* of 3\n// AmpAnalyticsIframeTransportEvent would be sent to the 3p frame like so:\n// [\n//   { creativeId: \"2\", message: \"hi\" }, // An AmpAnalyticsIframeTransportEvent\n//   { creativeId: \"2\", message: \"hello\" }, // Another\n//   { creativeId: \"3\", message: \"goodbye\" } // And another\n// ]\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {addAttributesToElement} from './dom';\nimport {closestAncestorElementBySelector} from './core/dom/query';\nimport {deserializeMessage, isAmpMessage} from './3p-frame-messaging';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {getData} from './event-helper';\nimport {parseUrlDeprecated} from './url';\nimport {remove} from './core/types/array';\nimport {setStyle} from './style';\nimport {tryParseJson} from './core/types/object/json';\n\n/**\n * Sentinel used to force unlistening after a iframe is detached.\n * @type {string}\n */\nconst UNLISTEN_SENTINEL = 'unlisten';\n\n/**\n * @typedef {{\n *   frame: !Element,\n *   events: !Object<string, !Array<function(!JsonObject)>>\n * }}\n */\nlet WindowEventsDef;\n\n/**\n * Returns a mapping from a URL's origin to an array of windows and their\n * listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {boolean=} opt_create create the mapping if it does not exist\n * @return {?Object<string, !Array<!WindowEventsDef>>}\n */\nfunction getListenFors(parentWin, opt_create) {\n  let {listeningFors} = parentWin;\n\n  if (!listeningFors && opt_create) {\n    listeningFors = parentWin.listeningFors = Object.create(null);\n  }\n  return listeningFors || null;\n}\n\n/**\n * Returns an array of WindowEventsDef that have had any listenFor listeners\n * registered for this sentinel.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {boolean=} opt_create create the array if it does not exist\n * @return {?Array<!WindowEventsDef>}\n */\nfunction getListenForSentinel(parentWin, sentinel, opt_create) {\n  const listeningFors = getListenFors(parentWin, opt_create);\n  if (!listeningFors) {\n    return listeningFors;\n  }\n\n  let listenSentinel = listeningFors[sentinel];\n  if (!listenSentinel && opt_create) {\n    listenSentinel = listeningFors[sentinel] = [];\n  }\n  return listenSentinel || null;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {!Element} iframe the iframe element who's context will trigger the\n *     event\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getOrCreateListenForEvents(parentWin, iframe, opt_is3P) {\n  const sentinel = getSentinel_(iframe, opt_is3P);\n  const listenSentinel = getListenForSentinel(parentWin, sentinel, true);\n\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    if (we.frame === iframe) {\n      windowEvents = we;\n      break;\n    }\n  }\n\n  if (!windowEvents) {\n    windowEvents = {\n      frame: iframe,\n      events: Object.create(null),\n    };\n    listenSentinel.push(windowEvents);\n  }\n\n  return windowEvents.events;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {string} origin the source window's origin\n * @param {?Window} triggerWin the window that triggered the event\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getListenForEvents(parentWin, sentinel, origin, triggerWin) {\n  const listenSentinel = getListenForSentinel(parentWin, sentinel);\n\n  if (!listenSentinel) {\n    return listenSentinel;\n  }\n\n  // Find the entry for the frame.\n  // TODO(@nekodo): Add a WeakMap<Window, WindowEventsDef> cache to\n  //     speed up this process.\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    const {contentWindow} = we.frame;\n    if (!contentWindow) {\n      setTimeout(dropListenSentinel, 0, listenSentinel);\n    } else if (\n      triggerWin == contentWindow ||\n      isDescendantWindow(contentWindow, triggerWin)\n    ) {\n      // 3p code path, we may accept messages from nested frames.\n      windowEvents = we;\n      break;\n    }\n  }\n\n  return windowEvents ? windowEvents.events : null;\n}\n\n/**\n * Checks whether one window is a descendant of another by climbing\n * the parent chain.\n * @param {?Window} ancestor potential ancestor window\n * @param {?Window} descendant potential descendant window\n * @return {boolean}\n */\nfunction isDescendantWindow(ancestor, descendant) {\n  for (let win = descendant; win && win != win.parent; win = win.parent) {\n    if (win == ancestor) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Removes any listenFors registed on listenSentinel that do not have\n * a contentWindow (the frame was removed from the DOM tree).\n * @param {!Array<!WindowEventsDef>} listenSentinel\n */\nfunction dropListenSentinel(listenSentinel) {\n  const noopData = dict({'sentinel': UNLISTEN_SENTINEL});\n\n  for (let i = listenSentinel.length - 1; i >= 0; i--) {\n    const windowEvents = listenSentinel[i];\n\n    if (!windowEvents.frame.contentWindow) {\n      listenSentinel.splice(i, 1);\n\n      const {events} = windowEvents;\n      for (const name in events) {\n        // Splice here, so that each unlisten does not shift the array\n        events[name].splice(0, Infinity).forEach((event) => {\n          event(noopData);\n        });\n      }\n    }\n  }\n}\n\n/**\n * Registers the global listenFor event listener if it has yet to be.\n * @param {?Window} parentWin\n */\nfunction registerGlobalListenerIfNeeded(parentWin) {\n  if (parentWin.listeningFors) {\n    return;\n  }\n  const listenForListener = function (event) {\n    if (!getData(event)) {\n      return;\n    }\n    const data = parseIfNeeded(getData(event));\n\n    if (!data || !data['sentinel']) {\n      return;\n    }\n\n    const listenForEvents = getListenForEvents(\n      parentWin,\n      data['sentinel'],\n      event.origin,\n      event.source\n    );\n    if (!listenForEvents) {\n      return;\n    }\n\n    let listeners = listenForEvents[data['type']];\n    if (!listeners) {\n      return;\n    }\n\n    // We slice to avoid issues with adding another listener or unlistening\n    // during iteration. We could move to a Doubly Linked List with\n    // backtracking, but that's overly complicated.\n    listeners = listeners.slice();\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i];\n      listener(data, event.source, event.origin, event);\n    }\n  };\n\n  parentWin.addEventListener('message', listenForListener);\n}\n\n/**\n * Allows listening for message from the iframe. Returns an unlisten\n * function to remove the listener.\n *\n * @param {?Element} iframe\n * @param {string} typeOfMessage\n * @param {?function(!JsonObject, !Window, string, !MessageEvent)} callback Called when a\n *     message of this type arrives for this iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @param {boolean=} opt_includingNestedWindows set to true if messages from\n *     nested frames should also be accepted.\n * @param {boolean=} opt_allowOpaqueOrigin set to true if messages from\n       opaque origins (origin == null) are allowed.\n * @return {!UnlistenDef}\n */\nexport function listenFor(\n  iframe,\n  typeOfMessage,\n  callback,\n  opt_is3P,\n  opt_includingNestedWindows,\n  opt_allowOpaqueOrigin\n) {\n  devAssert(iframe.src, 'only iframes with src supported');\n  devAssert(\n    !iframe.parentNode,\n    'cannot register events on an attached ' +\n      'iframe. It will cause hair-pulling bugs like #2942'\n  );\n  devAssert(callback);\n  const parentWin = iframe.ownerDocument.defaultView;\n\n  registerGlobalListenerIfNeeded(parentWin);\n\n  const listenForEvents = getOrCreateListenForEvents(\n    parentWin,\n    iframe,\n    opt_is3P\n  );\n\n  const iframeOrigin = parseUrlDeprecated(iframe.src).origin;\n  let events =\n    listenForEvents[typeOfMessage] || (listenForEvents[typeOfMessage] = []);\n\n  let unlisten;\n  let listener = function (data, source, origin, event) {\n    const sentinel = data['sentinel'];\n\n    // Exclude messages that don't satisfy amp sentinel rules.\n    if (sentinel == 'amp') {\n      // For `amp` sentinel, nested windows are not allowed\n      if (source != iframe.contentWindow) {\n        return;\n      }\n\n      // For `amp` sentinel origin must match unless opaque origin is allowed\n      const isOpaqueAndAllowed = origin == 'null' && opt_allowOpaqueOrigin;\n      if (iframeOrigin != origin && !isOpaqueAndAllowed) {\n        return;\n      }\n    }\n\n    // Exclude nested frames if necessary.\n    // Note that the source was already verified to be either the contentWindow\n    // of the iframe itself or a descendant window within it.\n    if (!opt_includingNestedWindows && source != iframe.contentWindow) {\n      return;\n    }\n\n    if (data.sentinel == UNLISTEN_SENTINEL) {\n      unlisten();\n      return;\n    }\n    callback(data, source, origin, event);\n  };\n\n  events.push(listener);\n\n  return (unlisten = function () {\n    if (listener) {\n      const index = events.indexOf(listener);\n      if (index > -1) {\n        events.splice(index, 1);\n      }\n      // Make sure references to the unlisten function do not keep\n      // alive too much.\n      listener = null;\n      events = null;\n      callback = null;\n    }\n  });\n}\n\n/**\n * Returns a promise that resolves when one of given messages has been observed\n * for the first time. And remove listener for all other messages.\n * @param {!Element} iframe\n * @param {string|!Array<string>} typeOfMessages\n * @param {boolean=} opt_is3P\n * @return {!Promise<!{data: !JsonObject, source: !Window, origin: string, event: !MessageEvent}>}\n */\nexport function listenForOncePromise(iframe, typeOfMessages, opt_is3P) {\n  const unlistenList = [];\n  if (typeof typeOfMessages == 'string') {\n    typeOfMessages = [typeOfMessages];\n  }\n  return new Promise((resolve) => {\n    for (let i = 0; i < typeOfMessages.length; i++) {\n      const message = typeOfMessages[i];\n      const unlisten = listenFor(\n        iframe,\n        message,\n        (data, source, origin, event) => {\n          for (let i = 0; i < unlistenList.length; i++) {\n            unlistenList[i]();\n          }\n          resolve({data, source, origin, event});\n        },\n        opt_is3P\n      );\n      unlistenList.push(unlisten);\n    }\n  });\n}\n\n/**\n * Posts a message to the iframe.\n * @param {!Element} iframe The iframe.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {string} targetOrigin origin of the target.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessage(iframe, type, object, targetOrigin, opt_is3P) {\n  postMessageToWindows(\n    iframe,\n    [{win: iframe.contentWindow, origin: targetOrigin}],\n    type,\n    object,\n    opt_is3P\n  );\n}\n\n/**\n * Posts an identical message to multiple target windows with the same\n * sentinel.\n * The message is serialized only once.\n * @param {!Element} iframe The iframe.\n * @param {!Array<{win: !Window, origin: string}>} targets to send the message\n *     to, pairs of window and its origin.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessageToWindows(iframe, targets, type, object, opt_is3P) {\n  if (!iframe.contentWindow) {\n    return;\n  }\n  object['type'] = type;\n  object['sentinel'] = getSentinel_(iframe, opt_is3P);\n  let payload = object;\n  if (opt_is3P) {\n    // Serialize ourselves because that is much faster in Chrome.\n    payload = 'amp-' + JSON.stringify(object);\n  }\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n    target.win./*OK*/ postMessage(payload, target.origin);\n  }\n}\n\n/**\n * Gets the sentinel string.\n * @param {!Element} iframe The iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {string} Sentinel string.\n * @private\n */\nfunction getSentinel_(iframe, opt_is3P) {\n  return opt_is3P ? iframe.getAttribute('data-amp-3p-sentinel') : 'amp';\n}\n\n/**\n * JSON parses event.data if it needs to be\n * @param {*} data\n * @return {?JsonObject} object message\n * @private\n * @visibleForTesting\n */\nexport function parseIfNeeded(data) {\n  if (typeof data == 'string') {\n    if (data.charAt(0) == '{') {\n      data =\n        tryParseJson(data, (e) => {\n          dev().warn(\n            'IFRAME-HELPER',\n            'Postmessage could not be parsed. ' +\n              'Is it in a valid JSON format?',\n            e\n          );\n        }) || null;\n    } else if (isAmpMessage(data)) {\n      data = deserializeMessage(data);\n    } else {\n      data = null;\n    }\n  }\n  return /** @type {?JsonObject} */ (data);\n}\n\n/**\n * Manages a postMessage API for an iframe with a subscription message and\n * a way to broadcast messages to all subscribed windows, which\n * in turn must all be descendants of the contentWindow of the iframe.\n */\nexport class SubscriptionApi {\n  /**\n   * @param {!Element} iframe The iframe.\n   * @param {string} type Type of the subscription message.\n   * @param {boolean} is3p set to true if the iframe is 3p.\n   * @param {function(!JsonObject, !Window, string)} requestCallback Callback\n   *     invoked whenever a new window subscribes.\n   */\n  constructor(iframe, type, is3p, requestCallback) {\n    /** @private @const {!Element} */\n    this.iframe_ = iframe;\n    /** @private @const {boolean} */\n    this.is3p_ = is3p;\n    /** @private @const {!Array<{win: !Window, origin: string}>} */\n    this.clientWindows_ = [];\n\n    /** @private @const {!UnlistenDef} */\n    this.unlisten_ = listenFor(\n      this.iframe_,\n      type,\n      (data, source, origin) => {\n        // This message might be from any window within the iframe, we need\n        // to keep track of which windows want to be sent updates.\n        if (!this.clientWindows_.some((entry) => entry.win == source)) {\n          this.clientWindows_.push({win: source, origin});\n        }\n        requestCallback(data, source, origin);\n      },\n      this.is3p_,\n      // For 3P frames we also allow nested frames within them to subscribe..\n      this.is3p_ /* opt_includingNestedWindows */\n    );\n  }\n\n  /**\n   * Sends a message to all subscribed windows.\n   * @param {string} type Type of the message.\n   * @param {!JsonObject} data Message payload.\n   */\n  send(type, data) {\n    // Remove clients that have been removed from the DOM.\n    remove(this.clientWindows_, (client) => !client.win.parent);\n    postMessageToWindows(\n      this.iframe_,\n      this.clientWindows_,\n      type,\n      data,\n      this.is3p_\n    );\n  }\n\n  /**\n   * Destroys iframe.\n   */\n  destroy() {\n    this.unlisten_();\n    this.clientWindows_.length = 0;\n  }\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function looksLikeTrackingIframe(element) {\n  const {height, width} = element.getLayoutSize();\n  // This heuristic is subject to change.\n  if (width > 10 || height > 10) {\n    return false;\n  }\n  // Iframe is not tracking iframe if open with user interaction\n  return !closestAncestorElementBySelector(element, '.i-amphtml-overlay');\n}\n\n// Most common ad sizes\n// Array of [width, height] pairs.\nconst adSizes = [\n  [300, 250],\n  [320, 50],\n  [300, 50],\n  [320, 100],\n];\n\n/**\n * Guess whether this element might be an ad.\n * @param {!Element} element An amp-iframe element.\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isAdLike(element) {\n  const {height, width} = element.getLayoutSize();\n  for (let i = 0; i < adSizes.length; i++) {\n    const refWidth = adSizes[i][0];\n    const refHeight = adSizes[i][1];\n    if (refHeight > height) {\n      continue;\n    }\n    if (refWidth > width) {\n      continue;\n    }\n    // Fuzzy matching to account for padding.\n    if (height - refHeight <= 20 && width - refWidth <= 20) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {!Element} iframe\n * @return {!Element}\n */\nexport function disableScrollingOnIframe(iframe) {\n  addAttributesToElement(iframe, dict({'scrolling': 'no'}));\n\n  // This shouldn't work, but it does on Firefox.\n  // https://stackoverflow.com/a/15494969\n  setStyle(iframe, 'overflow', 'hidden');\n\n  return iframe;\n}\n\n/**\n * Returns true if win's properties can be accessed and win is defined.\n * This functioned is used to determine if a window is cross-domained\n * from the perspective of the current window.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function canInspectWindow(win) {\n  // TODO: this is not reliable.  The compiler assumes that property reads are\n  // side-effect free.  The recommended fix is to use goog.reflect.sinkValue\n  // but since we're not using the closure library I'm not sure how to do this.\n  // See https://github.com/google/closure-compiler/issues/3156\n  try {\n    // win['test'] could be truthy but not true the compiler shouldn't be able\n    // to optimize this check away.\n    return !!win.location.href && (win['test'] || true);\n  } catch (unusedErr) {\n    return false;\n  }\n}\n\n/** @const {string} */\nexport const FIE_EMBED_PROP = '__AMP_EMBED__';\n\n/**\n * Returns the embed created using `installFriendlyIframeEmbed` or `null`.\n * Caution: This will only return the FIE after the iframe has 'loaded'. If you\n * are checking before this signal you may be in a race condition that returns\n * null.\n * @param {!HTMLIFrameElement} iframe\n * @return {?./friendly-iframe-embed.FriendlyIframeEmbed}\n */\nexport function getFriendlyIframeEmbedOptional(iframe) {\n  return /** @type {?./friendly-iframe-embed.FriendlyIframeEmbed} */ (\n    iframe[FIE_EMBED_PROP]\n  );\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isInFie(element) {\n  return (\n    element.classList.contains('i-amphtml-fie') ||\n    !!closestAncestorElementBySelector(element, '.i-amphtml-fie')\n  );\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getCookie} from '../../../src/cookies';\nimport {getMode} from '../../../src/mode';\nimport {isInFie} from '../../../src/iframe-helper';\nimport {isProxyOrigin} from '../../../src/url';\n\n/**\n * COOKIE macro resolver\n * @param {!Window} win\n * @param {!Element} element\n * @param {string} name\n * @return {?string}\n */\nexport function cookieReader(win, element, name) {\n  if (!isCookieAllowed(win, element)) {\n    return null;\n  }\n  return getCookie(win, name);\n}\n\n/**\n * Determine if cookie writing/reading feature is supported in current\n * environment.\n * Disable cookie writer in friendly iframe and proxy origin and inabox.\n * @param {!Window} win\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isCookieAllowed(win, element) {\n  return (\n    !isInFie(element) &&\n    !isProxyOrigin(win.location) &&\n    !(getMode(win).runtime == 'inabox')\n  );\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSENT_POLICY_STATE, // eslint-disable-line no-unused-vars\n} from './core/constants/consent-state';\nimport {Services} from './services';\nimport {dict} from './core/types/object';\n\n/**\n * Returns a promise that resolve when all consent state the policy wait\n * for resolve. Or if consent service is not available.\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?CONSENT_POLICY_STATE>}\n */\nexport function getConsentPolicyState(element, policyId = 'default') {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.whenPolicyResolved(/** @type {string} */ (policyId));\n    }\n  );\n}\n\n/**\n * Returns a promise that resolves to a sharedData retrieved from consent\n * remote endpoint.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<?Object>}\n */\nexport function getConsentPolicySharedData(element, policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getMergedSharedData(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<string>}\n */\nexport function getConsentPolicyInfo(element, policyId = 'default') {\n  // Return the stored consent string.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentStringInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?Object|undefined>}\n */\nexport function getConsentMetadata(element, policyId = 'default') {\n  // Return the stored consent metadata.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentMetadataInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * Returns a set of consent values to forward to a 3rd party (like an iframe).\n * @param {!Element} element\n * @param {?string=} opt_policyId\n * @return {!Promise<!JsonObject>}\n *   See extensions/amp-consent/customizing-extension-behaviors-on-consent.md:\n *    - consentMetadata\n *    - consentString\n *    - consentPolicyState\n *    - consentPolicySharedData\n */\nexport function getConsentDataToForward(element, opt_policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then((policy) => {\n    const gettersOrNull = dict({\n      'consentMetadata': policy && policy.getConsentMetadataInfo,\n      'consentString': policy && policy.getConsentStringInfo,\n      'consentPolicyState': policy && policy.whenPolicyResolved,\n      'consentPolicySharedData': policy && policy.getMergedSharedData,\n    });\n    if (!policy) {\n      return gettersOrNull;\n    }\n    return /** @type {!JsonObject} */ (\n      Promise.all(\n        Object.keys(gettersOrNull).map((key) =>\n          gettersOrNull[key]\n            .call(policy, opt_policyId || 'default')\n            .then((value) => ({[key]: value}))\n        )\n      ).then((objs) => Object.assign.apply({}, objs))\n    );\n  });\n}\n\n/**\n * Determine if an element needs to be blocked by consent based on meta tags.\n * @param {*} element\n * @return {boolean}\n */\nexport function shouldBlockOnConsentByMeta(element) {\n  const ampdoc = element.getAmpDoc();\n  let content = ampdoc.getMetaByName('amp-consent-blocking');\n  if (!content) {\n    return false;\n  }\n\n  // Handles whitespace\n  content = content.toUpperCase().replace(/\\s+/g, '');\n\n  const contents = /** @type {Array<string>} */ (content.split(','));\n  return contents.includes(element.tagName);\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An interface to interact with browser window object.\n * Mainly used to mock out read only APIs in test.\n * See test-helper.js#mockWindowInterface\n */\nexport class WindowInterface {\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {!Window}\n   */\n  static getTop(win) {\n    return win.top;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {!Location}\n   */\n  static getLocation(win) {\n    return win.location;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getDocumentReferrer(win) {\n    return win.document.referrer;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getHostname(win) {\n    return win.location.hostname;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getUserAgent(win) {\n    return win.navigator.userAgent;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getUserLanguage(win) {\n    // The `navigator.userLanguage` is only supported by IE. The standard is\n    // the `navigator.language`.\n    return win.navigator['userLanguage'] || win.navigator.language;\n  }\n\n  /**\n   * @static\n   * @return {number}\n   */\n  static getDevicePixelRatio() {\n    // No matter the window, the device-pixel-ratio is always one.\n    return self.devicePixelRatio || 1;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {function(string,(ArrayBufferView|Blob|FormData|null|string)=):boolean|undefined}\n   */\n  static getSendBeacon(win) {\n    if (!win.navigator.sendBeacon) {\n      return undefined;\n    }\n    return win.navigator.sendBeacon.bind(win.navigator);\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {typeof XMLHttpRequest}\n   */\n  static getXMLHttpRequest(win) {\n    return win.XMLHttpRequest;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {typeof Image}\n   */\n  static getImage(win) {\n    return win.Image;\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {utf8Encode} from '../../../src/core/types/string/bytes';\n\n/**\n * Standard key for CRC32\n * https://en.wikipedia.org/wiki/Cyclic_redundancy_check#Polynomial_representations_of_cyclic_redundancy_checks\n * @const {number}\n */\nconst CRC32_KEY = 0xedb88320;\n\n/** @private {?Array<number>} */\nlet crcTable = null;\n\n/**\n * Returns CRC32 checksum for provided string.\n * @param {string} str\n * @return {number}\n */\nexport function crc32(str) {\n  if (!crcTable) {\n    crcTable = makeCrcTable();\n  }\n\n  const bytes = utf8Encode(str);\n\n  // Shrink to 32 bits.\n  let crc = -1 >>> 0;\n  for (let i = 0; i < bytes.length; i++) {\n    const lookupIndex = (crc ^ bytes[i]) & 0xff;\n    crc = (crc >>> 8) ^ crcTable[lookupIndex];\n  }\n  return (crc ^ -1) >>> 0;\n}\n\n/**\n * Generates CRC lookup table.\n * @return {!Array<number>}\n */\nfunction makeCrcTable() {\n  const crcTable = new Array(256);\n  for (let i = 0; i < 256; i++) {\n    let c = i;\n    for (let j = 0; j < 8; j++) {\n      if (c & 1) {\n        c = (c >>> 1) ^ CRC32_KEY;\n      } else {\n        c = c >>> 1;\n      }\n    }\n    crcTable[i] = c;\n  }\n  return crcTable;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {WindowInterface} from '../../../src/core/window/interface';\nimport {\n  base64UrlDecodeFromString,\n  base64UrlEncodeFromString,\n} from '../../../src/core/types/string/base64';\nimport {crc32} from './crc32';\nimport {user} from '../../../src/log';\n\n/** @const {string} */\nconst DELIMITER = '*';\nconst KEY_VALIDATOR = /^[a-zA-Z0-9\\-_.]+$/;\nconst CHECKSUM_OFFSET_MAX_MIN = 1;\nconst VALID_VERSION = 1;\nconst TAG = 'amp-analytics/linker';\n\n/**\n * Creates the linker string, in the format of\n * <version>*<checksum>*<serializedIds>\n *\n * where\n *   checksum: base36(CRC32(<fingerprint>*<minuteSinceEpoch>*<serializedIds>))\n *   serializedIds: <id1>*<idValue1>*<id2>*<idValue2>...\n *                  values are base64 encoded\n *   fingerprint: <userAgent>*<timezoneOffset>*<userLanguage>\n *\n * @param {string} version\n * @param {!Object} ids\n * @return {string}\n */\nexport function createLinker(version, ids) {\n  const serializedIds = serialize(ids);\n  if (serializedIds === '') {\n    return '';\n  }\n  const checksum = getCheckSum(serializedIds);\n  return [version, checksum, serializedIds].join(DELIMITER);\n}\n\n/**\n * Return the key value pairs\n * @param {string} value\n * @return {?Object<string, string>}\n */\nexport function parseLinker(value) {\n  const linkerObj = parseLinkerParamValue(value);\n  if (!linkerObj) {\n    return null;\n  }\n  const {checksum, serializedIds} = linkerObj;\n  if (!isCheckSumValid(serializedIds, checksum)) {\n    user().error(TAG, 'LINKER_PARAM value checksum not valid');\n    return null;\n  }\n  return deserialize(serializedIds);\n}\n\n/**\n * Parse the linker param value to version checksum and serializedParams\n * @param {string} value\n * @return {?Object}\n */\nfunction parseLinkerParamValue(value) {\n  const parts = value.split(DELIMITER);\n  const isEven = parts.length % 2 == 0;\n\n  if (parts.length < 4 || !isEven) {\n    // Format <version>*<checksum>*<key1>*<value1>\n    // Note: linker makes sure there's at least one pair of non empty key value\n    // Make sure there is at least three delimiters.\n    user().error(TAG, `Invalid linker_param value ${value}`);\n    return null;\n  }\n\n  const version = Number(parts.shift());\n  if (version !== VALID_VERSION) {\n    user().error(TAG, `Invalid version number ${version}`);\n    return null;\n  }\n\n  const checksum = parts.shift();\n  const serializedIds = parts.join(DELIMITER);\n  return {\n    checksum,\n    serializedIds,\n  };\n}\n\n/**\n * Check if the checksum is valid with time offset tolerance.\n * @param {string} serializedIds\n * @param {string} checksum\n * @return {boolean}\n */\nfunction isCheckSumValid(serializedIds, checksum) {\n  for (let i = 0; i <= CHECKSUM_OFFSET_MAX_MIN; i++) {\n    const calculateCheckSum = getCheckSum(serializedIds, i);\n    if (calculateCheckSum == checksum) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Create a unique checksum hashing the fingerprint and a few other values.\n * @param {string} serializedIds\n * @param {number=} opt_offsetMin\n * @return {string}\n */\nfunction getCheckSum(serializedIds, opt_offsetMin) {\n  const fingerprint = getFingerprint();\n  const offset = opt_offsetMin || 0;\n  const timestamp = getMinSinceEpoch() - offset;\n  const crc = crc32([fingerprint, timestamp, serializedIds].join(DELIMITER));\n  // Encoded to base36 for less bytes.\n  return crc.toString(36);\n}\n\n/**\n * Generates a semi-unique value for page visitor.\n * @return {string}\n */\nfunction getFingerprint() {\n  const date = new Date();\n  const timezone = date.getTimezoneOffset();\n\n  const language = WindowInterface.getUserLanguage(window);\n  return [WindowInterface.getUserAgent(window), timezone, language].join(\n    DELIMITER\n  );\n}\n\n/**\n * Encode all values & join them together\n * @param {!Object} pairs\n * @return {string}\n */\nfunction serialize(pairs) {\n  if (!pairs) {\n    return '';\n  }\n  return Object.keys(pairs)\n    .filter((key) => {\n      const valid = KEY_VALIDATOR.test(key);\n      if (!valid) {\n        user().error(TAG, 'Invalid linker key: ' + key);\n      }\n      return valid;\n    })\n    .map((key) => key + DELIMITER + encode(pairs[key]))\n    .join(DELIMITER);\n}\n\n/**\n * Deserialize the serializedIds and return keyValue pairs.\n * @param {string} serializedIds\n * @return {!Object<string, string>}\n */\nfunction deserialize(serializedIds) {\n  const keyValuePairs = {};\n  const params = serializedIds.split(DELIMITER);\n  for (let i = 0; i < params.length; i += 2) {\n    const key = params[i];\n    const valid = KEY_VALIDATOR.test(key);\n    if (!valid) {\n      user().error(TAG, `Invalid linker key ${key}, value ignored`);\n      continue;\n    }\n    const value = decode(params[i + 1]);\n    keyValuePairs[key] = value;\n  }\n  return keyValuePairs;\n}\n\n/**\n * Rounded time used to check if t2 - t1 is within our time tolerance.\n * @return {number}\n */\nfunction getMinSinceEpoch() {\n  // Timestamp in minutes, floored.\n  return Math.floor(Date.now() / 60000);\n}\n\n/**\n * Function that encodesURIComponent but also tilde, since we are using it as\n * our delimiter.\n * @param {string} value\n * @return {*} TODO(#23582): Specify return type\n */\nfunction encode(value) {\n  return base64UrlEncodeFromString(String(value));\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nfunction decode(value) {\n  return base64UrlDecodeFromString(String(value));\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getService, registerServiceBuilder} from '../../../src/service';\nimport {hasOwn} from '../../../src/core/types/object';\nimport {parseLinker} from './linker';\nimport {parseQueryString} from '../../../src/core/types/string/url';\nimport {removeParamsFromSearch} from '../../../src/url';\n\nimport {user} from '../../../src/log';\n\nconst TAG = 'amp-analytics/linker-reader';\n\nexport class LinkerReader {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @private {!Window} */\n    this.win_ = win;\n\n    /** @private {!Object<string, ?Object<string, string>>} */\n    this.linkerParams_ = {};\n  }\n\n  /**\n   * Get the LINKER_PARAM(name, id) value from url and clean the value\n   * @param {string} name\n   * @param {string} id\n   * @return {?string}\n   */\n  get(name, id) {\n    if (!name || !id) {\n      user().error(TAG, 'LINKER_PARAM requires two params, name and id');\n      return null;\n    }\n\n    if (!hasOwn(this.linkerParams_, name)) {\n      this.linkerParams_[name] = this.parseAndCleanQueryString_(name);\n    }\n\n    if (this.linkerParams_[name] && this.linkerParams_[name][id]) {\n      return this.linkerParams_[name][id];\n    }\n\n    return null;\n  }\n\n  /**\n   * Parse the url get the key value pair for the linker name\n   * and remove the LINKER_PARAM from window location\n   * @param {string} name\n   * @return {?Object<string, string>}\n   */\n  parseAndCleanQueryString_(name) {\n    const params = parseQueryString(this.win_.location.search);\n    if (!hasOwn(params, name)) {\n      // Linker param not found.\n      return null;\n    }\n    const value = params[name];\n    this.removeLinkerParam_(this.win_.location, name);\n    return parseLinker(value);\n  }\n\n  /**\n   * Remove the linker param from the current url\n   * @param {!Location} url\n   * @param {string} name\n   */\n  removeLinkerParam_(url, name) {\n    if (!this.win_.history.replaceState) {\n      // Can't replace state. Ignore\n      return;\n    }\n    const searchUrl = url.search;\n    const removedLinkerParamSearchUrl = removeParamsFromSearch(searchUrl, name);\n    const newHref =\n      url.origin +\n      url.pathname +\n      removedLinkerParamSearchUrl +\n      (url.hash || '');\n    this.win_.history.replaceState(null, '', newHref);\n  }\n}\n\n/**\n * @param {!Window} win\n */\nexport function installLinkerReaderService(win) {\n  registerServiceBuilder(win, 'amp-analytics-linker-reader', LinkerReader);\n}\n\n/**\n * @param {!Window} win\n * @return {!LinkerReader}\n */\nexport function linkerReaderServiceFor(win) {\n  return getService(win, 'amp-analytics-linker-reader');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {TickLabel} from '../../../src/core/constants/enums';\nimport {asyncStringReplace} from '../../../src/core/types/string';\nimport {base64UrlEncodeFromString} from '../../../src/core/types/string/base64';\nimport {cookieReader} from './cookie-reader';\nimport {dev, devAssert, user, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {\n  getActiveExperimentBranches,\n  getExperimentBranch,\n} from '../../../src/experiments';\nimport {\n  getConsentMetadata,\n  getConsentPolicyInfo,\n  getConsentPolicyState,\n} from '../../../src/consent';\nimport {\n  getServiceForDoc,\n  getServicePromiseForDoc,\n  registerServiceBuilderForDoc,\n} from '../../../src/service';\nimport {isArray, isFiniteNumber} from '../../../src/core/types';\n\nimport {isInFie} from '../../../src/iframe-helper';\nimport {linkerReaderServiceFor} from './linker-reader';\n\n/** @const {string} */\nconst TAG = 'amp-analytics/variables';\n\n/** @const {RegExp} */\nconst VARIABLE_ARGS_REGEXP = /^(?:([^\\s]*)(\\([^)]*\\))|[^]+)$/;\n\nconst EXTERNAL_CONSENT_POLICY_STATE_STRING = {\n  1: 'sufficient',\n  2: 'insufficient',\n  3: 'not_required',\n  4: 'unknown',\n};\n\n/** @typedef {{name: string, argList: string}} */\nlet FunctionNameArgsDef;\n\n/**\n * The structure that contains all details needed to expand a template\n * @struct\n * @const\n * @package For type.\n */\nexport class ExpansionOptions {\n  /**\n   * @param {!Object<string, *>} vars\n   * @param {number=} opt_iterations\n   * @param {boolean=} opt_noEncode\n   */\n  constructor(vars, opt_iterations, opt_noEncode) {\n    /** @const {!Object<string, string|Array<string>>} */\n    this.vars = vars;\n    /** @const {number} */\n    this.iterations = opt_iterations === undefined ? 2 : opt_iterations;\n    /** @const {boolean} */\n    this.noEncode = !!opt_noEncode;\n    this.freezeVars = {};\n  }\n\n  /**\n   * Freeze special variable name so that they don't get expanded.\n   * For example ${extraUrlParams}\n   * @param {string} str\n   */\n  freezeVar(str) {\n    this.freezeVars[str] = true;\n  }\n\n  /**\n   * @param {string} name\n   * @return {*}\n   */\n  getVar(name) {\n    let value = this.vars[name];\n    if (value == null) {\n      value = '';\n    }\n    return value;\n  }\n}\n\n/**\n * @param {string} value\n * @param {string} s\n * @param {string=} opt_l\n * @return {string}\n */\nfunction substrMacro(value, s, opt_l) {\n  const start = Number(s);\n  let {length} = value;\n  userAssert(\n    isFiniteNumber(start),\n    'Start index ' + start + 'in substr macro should be a number'\n  );\n  if (opt_l) {\n    length = Number(opt_l);\n    userAssert(\n      isFiniteNumber(length),\n      'Length ' + length + ' in substr macro should be a number'\n    );\n  }\n\n  return value.substr(start, length);\n}\n\n/**\n * @param {string} value\n * @param {string} defaultValue\n * @return {string}\n */\nfunction defaultMacro(value, defaultValue) {\n  if (!value || !value.length) {\n    return defaultValue;\n  }\n  return value;\n}\n\n/**\n * @param {string} string input to be replaced\n * @param {string} matchPattern string representation of regex pattern\n * @param {string=} opt_newSubStr pattern to be substituted in\n * @return {string}\n */\nfunction replaceMacro(string, matchPattern, opt_newSubStr) {\n  if (!matchPattern) {\n    user().warn(TAG, 'REPLACE macro must have two or more arguments');\n  }\n  if (!opt_newSubStr) {\n    opt_newSubStr = '';\n  }\n  const regex = new RegExp(matchPattern, 'g');\n  return string.replace(regex, opt_newSubStr);\n}\n\n/**\n * Applies the match function to the given string with the given regex\n * @param {string} string input to be replaced\n * @param {string} matchPattern string representation of regex pattern\n * @param {string=} opt_matchingGroupIndexStr the matching group to return.\n *                  Index of 0 indicates the full match. Defaults to 0\n * @return {string} returns the matching group given by opt_matchingGroupIndexStr\n */\nfunction matchMacro(string, matchPattern, opt_matchingGroupIndexStr) {\n  if (!matchPattern) {\n    user().warn(TAG, 'MATCH macro must have two or more arguments');\n  }\n\n  let index = 0;\n  if (opt_matchingGroupIndexStr) {\n    index = parseInt(opt_matchingGroupIndexStr, 10);\n\n    // if given a non-number or negative number\n    if ((index != 0 && !index) || index < 0) {\n      user().error(TAG, 'Third argument in MATCH macro must be a number >= 0');\n      index = 0;\n    }\n  }\n\n  const regex = new RegExp(matchPattern);\n  const matches = string.match(regex);\n  return matches && matches[index] ? matches[index] : '';\n}\n\n/**\n * This macro function allows arithmetic operations over other analytics variables.\n *\n * @param {string} leftOperand\n * @param {string} rightOperand\n * @param {string} operation\n * @param {string} round If this flag is truthy the result will be rounded\n * @return {number}\n */\nfunction calcMacro(leftOperand, rightOperand, operation, round) {\n  const left = Number(leftOperand);\n  const right = Number(rightOperand);\n  userAssert(!isNaN(left), 'CALC macro - left operand must be a number');\n  userAssert(!isNaN(right), 'CALC macro - right operand must be a number');\n  let result = 0;\n  switch (operation) {\n    case 'add':\n      result = left + right;\n      break;\n    case 'subtract':\n      result = left - right;\n      break;\n    case 'multiply':\n      result = left * right;\n      break;\n    case 'divide':\n      userAssert(right, 'CALC macro - cannot divide by 0');\n      result = left / right;\n      break;\n    default:\n      user().error(TAG, 'CALC macro - Invalid operation');\n  }\n  return stringToBool(round) ? Math.round(result) : result;\n}\n\n/**\n * If given an experiment name returns the branch id if a branch is selected.\n * If no branch name given, it returns a comma separated list of active branch\n * experiment ids and their names or an empty string if none exist.\n * @param {!Window} win\n * @param {string=} opt_expName\n * @return {string}\n */\nfunction experimentBranchesMacro(win, opt_expName) {\n  if (opt_expName) {\n    return getExperimentBranch(win, opt_expName) || '';\n  }\n  const branches = getActiveExperimentBranches(win);\n  return Object.keys(branches)\n    .map((expName) => `${expName}:${branches[expName]}`)\n    .join(',');\n}\n\n/**\n * Provides support for processing of advanced variable syntax like nested\n * expansions macros etc.\n */\nexport class VariableService {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {!JsonObject} */\n    this.macros_ = dict({});\n\n    /** @const @private {!./linker-reader.LinkerReader} */\n    this.linkerReader_ = linkerReaderServiceFor(this.ampdoc_.win);\n\n    this.register_('$DEFAULT', defaultMacro);\n    this.register_('$SUBSTR', substrMacro);\n    this.register_('$TRIM', (value) => value.trim());\n    this.register_('$TOLOWERCASE', (value) => value.toLowerCase());\n    this.register_('$TOUPPERCASE', (value) => value.toUpperCase());\n    this.register_('$NOT', (value) => String(!value));\n    this.register_('$BASE64', (value) => base64UrlEncodeFromString(value));\n    this.register_('$HASH', this.hashMacro_.bind(this));\n    this.register_('$IF', (value, thenValue, elseValue) =>\n      stringToBool(value) ? thenValue : elseValue\n    );\n    this.register_('$REPLACE', replaceMacro);\n    this.register_('$MATCH', matchMacro);\n    this.register_('$CALC', calcMacro);\n    this.register_(\n      '$EQUALS',\n      (firstValue, secValue) => firstValue === secValue\n    );\n    this.register_('LINKER_PARAM', (name, id) =>\n      this.linkerReader_.get(name, id)\n    );\n\n    // Returns the IANA timezone code\n    this.register_('TIMEZONE_CODE', () => {\n      let tzCode = '';\n      if (\n        'Intl' in this.ampdoc_.win &&\n        'DateTimeFormat' in this.ampdoc_.win.Intl\n      ) {\n        // It could be undefined (i.e. IE11)\n        tzCode = new this.ampdoc_.win.Intl.DateTimeFormat().resolvedOptions()\n          .timeZone;\n      }\n\n      return tzCode;\n    });\n\n    // Returns a promise resolving to viewport.getScrollTop.\n    this.register_('SCROLL_TOP', () =>\n      Math.round(Services.viewportForDoc(this.ampdoc_).getScrollTop())\n    );\n\n    // Returns a promise resolving to viewport.getScrollLeft.\n    this.register_('SCROLL_LEFT', () =>\n      Math.round(Services.viewportForDoc(this.ampdoc_).getScrollLeft())\n    );\n\n    this.register_('EXPERIMENT_BRANCHES', (opt_expName) =>\n      experimentBranchesMacro(this.ampdoc_.win, opt_expName)\n    );\n\n    // Returns the content of a meta tag in the ampdoc\n    this.register_('AMPDOC_META', (meta, defaultValue = '') => {\n      return this.ampdoc_.getMetaByName(meta) ?? defaultValue;\n    });\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {!JsonObject} contains all registered macros\n   */\n  getMacros(element) {\n    const elementMacros = {\n      'COOKIE': (name) =>\n        cookieReader(this.ampdoc_.win, dev().assertElement(element), name),\n      'CONSENT_STATE': getConsentStateStr(element),\n      'CONSENT_STRING': getConsentPolicyInfo(element),\n      'CONSENT_METADATA': (key) =>\n        getConsentMetadataValue(\n          element,\n          userAssert(key, 'CONSENT_METADATA macro must contain a key')\n        ),\n    };\n    const perfMacros = isInFie(element)\n      ? {}\n      : {\n          'FIRST_CONTENTFUL_PAINT': () =>\n            Services.performanceFor(this.ampdoc_.win).getMetric(\n              TickLabel.FIRST_CONTENTFUL_PAINT_VISIBLE\n            ),\n          'FIRST_VIEWPORT_READY': () =>\n            Services.performanceFor(this.ampdoc_.win).getMetric(\n              TickLabel.FIRST_VIEWPORT_READY\n            ),\n          'MAKE_BODY_VISIBLE': () =>\n            Services.performanceFor(this.ampdoc_.win).getMetric(\n              TickLabel.MAKE_BODY_VISIBLE\n            ),\n          'LARGEST_CONTENTFUL_PAINT': () =>\n            Services.performanceFor(this.ampdoc_.win).getMetric(\n              TickLabel.LARGEST_CONTENTFUL_PAINT_VISIBLE\n            ),\n          'FIRST_INPUT_DELAY': () =>\n            Services.performanceFor(this.ampdoc_.win).getMetric(\n              TickLabel.FIRST_INPUT_DELAY\n            ),\n          'CUMULATIVE_LAYOUT_SHIFT': () =>\n            Services.performanceFor(this.ampdoc_.win).getMetric(\n              TickLabel.CUMULATIVE_LAYOUT_SHIFT\n            ),\n        };\n    const merged = {...this.macros_, ...elementMacros, ...perfMacros};\n    return /** @type {!JsonObject} */ (merged);\n  }\n\n  /**\n   * TODO (micajuineho): If we add new synchronous macros, we\n   * will need to split this method and getMacros into sync and\n   * async version (currently all macros are async).\n   * @param {string} name\n   * @param {*} macro\n   */\n  register_(name, macro) {\n    devAssert(!this.macros_[name], 'Macro \"' + name + '\" already registered.');\n    this.macros_[name] = macro;\n  }\n\n  /**\n   * Converts templates from ${} format to MACRO() and resolves any platform\n   * level macros when encountered.\n   * @param {string} template The template to expand.\n   * @param {!ExpansionOptions} options configuration to use for expansion.\n   * @param {!Element} element amp-analytics element.\n   * @param {!JsonObject=} opt_bindings\n   * @param {!Object=} opt_allowlist\n   * @return {!Promise<string>} The expanded string.\n   */\n  expandTemplate(template, options, element, opt_bindings, opt_allowlist) {\n    return asyncStringReplace(template, /\\${([^}]*)}/g, (match, key) => {\n      if (options.iterations < 0) {\n        user().error(\n          TAG,\n          'Maximum depth reached while expanding variables. ' +\n            'Please ensure that the variables are not recursive.'\n        );\n        return match;\n      }\n\n      if (!key) {\n        return '';\n      }\n\n      // Split the key to name and args\n      // e.g.: name='SOME_MACRO', args='(arg1, arg2)'\n      const {argList, name} = getNameArgs(key);\n      if (options.freezeVars[name]) {\n        // Do nothing with frozen params\n        return match;\n      }\n\n      let value = options.getVar(name);\n      const urlReplacements = Services.urlReplacementsForDoc(element);\n\n      if (typeof value == 'string') {\n        value = this.expandValueAndReplaceAsync_(\n          value,\n          options,\n          element,\n          urlReplacements,\n          opt_bindings,\n          opt_allowlist,\n          argList\n        );\n      } else if (isArray(value)) {\n        // Treat each value as a template and expand\n        for (let i = 0; i < value.length; i++) {\n          value[i] =\n            typeof value[i] == 'string'\n              ? this.expandValueAndReplaceAsync_(\n                  value[i],\n                  options,\n                  element,\n                  urlReplacements,\n                  opt_bindings,\n                  opt_allowlist\n                )\n              : value[i];\n        }\n        value = Promise.all(/** @type {!Array<string>} */ (value));\n      }\n\n      return Promise.resolve(value).then((value) =>\n        !options.noEncode\n          ? encodeVars(/** @type {string|?Array<string>} */ (value))\n          : value\n      );\n    });\n  }\n\n  /**\n   * @param {string} value\n   * @param {!ExpansionOptions} options\n   * @param {!Element} element amp-analytics element.\n   * @param {!../../../src/service/url-replacements-impl.UrlReplacements} urlReplacements\n   * @param {!JsonObject=} opt_bindings\n   * @param {!Object=} opt_allowlist\n   * @param {string=} opt_argList\n   * @return {Promise<string>}\n   */\n  expandValueAndReplaceAsync_(\n    value,\n    options,\n    element,\n    urlReplacements,\n    opt_bindings,\n    opt_allowlist,\n    opt_argList\n  ) {\n    return this.expandTemplate(\n      value,\n      new ExpansionOptions(\n        options.vars,\n        options.iterations - 1,\n        true /* noEncode */\n      ),\n      element,\n      opt_bindings,\n      opt_allowlist\n    ).then((val) =>\n      urlReplacements.expandStringAsync(\n        opt_argList ? val + opt_argList : val,\n        opt_bindings || this.getMacros(element),\n        opt_allowlist\n      )\n    );\n  }\n\n  /**\n   * @param {string} value\n   * @return {!Promise<string>}\n   */\n  hashMacro_(value) {\n    return Services.cryptoFor(this.ampdoc_.win).sha384Base64(value);\n  }\n}\n\n/**\n * @param {string|?Array<string>} raw The values to URI encode.\n * @return {string} The encoded value.\n */\nexport function encodeVars(raw) {\n  if (raw == null) {\n    return '';\n  }\n\n  if (isArray(raw)) {\n    return raw.map(encodeVars).join(',');\n  }\n  // Separate out names and arguments from the value and encode the value.\n  const {argList, name} = getNameArgs(String(raw));\n  return encodeURIComponent(name) + argList;\n}\n\n/**\n * Returns an array containing two values: name and args parsed from the key.\n *\n * case 1) 'SOME_MACRO(abc,def)' => name='SOME_MACRO', argList='(abc,def)'\n * case 2) 'randomString' => name='randomString', argList=''\n * @param {string} key The key to be parsed.\n * @return {!FunctionNameArgsDef}\n */\nexport function getNameArgs(key) {\n  if (!key) {\n    return {name: '', argList: ''};\n  }\n  const match = key.match(VARIABLE_ARGS_REGEXP);\n  userAssert(match, 'Variable with invalid format found: ' + key);\n\n  return {name: match[1] || match[0], argList: match[2] || ''};\n}\n\n/**\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installVariableServiceForTesting(ampdoc) {\n  registerServiceBuilderForDoc(\n    ampdoc,\n    'amp-analytics-variables',\n    VariableService\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!VariableService}\n */\nexport function variableServiceForDoc(elementOrAmpDoc) {\n  return getServiceForDoc(elementOrAmpDoc, 'amp-analytics-variables');\n}\n\n/**\n * @param {!Element|!ShadowRoot|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Promise<!VariableService>}\n */\nexport function variableServicePromiseForDoc(elementOrAmpDoc) {\n  return /** @type {!Promise<!VariableService>} */ (\n    getServicePromiseForDoc(elementOrAmpDoc, 'amp-analytics-variables')\n  );\n}\n\n/**\n * @param {string} key\n * @return {{name, argList}|!FunctionNameArgsDef}\n * @visibleForTesting\n */\nexport function getNameArgsForTesting(key) {\n  return getNameArgs(key);\n}\n\n/**\n * Get the resolved consent state value to send with analytics request\n * @param {!Element} element\n * @return {!Promise<?string>}\n */\nfunction getConsentStateStr(element) {\n  return getConsentPolicyState(element).then((consent) => {\n    if (!consent) {\n      return null;\n    }\n    return EXTERNAL_CONSENT_POLICY_STATE_STRING[consent];\n  });\n}\n\n/**\n * Get the associated value from the resolved consent metadata object\n * @param {!Element} element\n * @param {string} key\n * @return {!Promise<?Object>}\n */\nfunction getConsentMetadataValue(element, key) {\n  // Get the metadata using the default policy id\n  return getConsentMetadata(element).then((consentMetadata) => {\n    if (!consentMetadata) {\n      return null;\n    }\n    return consentMetadata[key];\n  });\n}\n\n/**\n * Converts string to boolean\n * @param {string} str\n * @return {boolean}\n */\nexport function stringToBool(str) {\n  return (\n    str !== 'false' &&\n    str !== '' &&\n    str !== '0' &&\n    str !== 'null' &&\n    str !== 'NaN' &&\n    str !== 'undefined'\n  );\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DEFAULT_CONFIG} from './default-config';\nimport {Services} from '../../../src/services';\nimport {assertHttpsUrl} from '../../../src/url';\nimport {calculateScriptBaseUrl} from '../../../src/service/extension-script';\nimport {deepMerge, dict, hasOwn} from '../../../src/core/types/object';\nimport {dev, user, userAssert} from '../../../src/log';\nimport {getChildJsonConfig} from '../../../src/json';\nimport {getMode} from '../../../src/mode';\nimport {isArray, isObject} from '../../../src/core/types';\nimport {isCanary} from '../../../src/experiments';\n\nimport {toWin} from '../../../src/core/window';\nimport {variableServiceForDoc} from './variables';\n\nconst TAG = 'amp-analytics/config';\n\nexport class AnalyticsConfig {\n  /**\n   * @param {!Element} element\n   */\n  constructor(element) {\n    /** @private {!Element} */\n    this.element_ = element;\n\n    /** @private {?Window} */\n    this.win_ = null;\n\n    /**\n     * @const {!JsonObject}\n     * @private\n     */\n    this.defaultConfig_ = DEFAULT_CONFIG || dict();\n\n    /** @private {!JsonObject} */\n    this.vendorConfig_ = dict();\n\n    /**\n     * @private {JsonObject}\n     */\n    this.config_ = dict();\n\n    /**\n     * @private {JsonObject}\n     */\n    this.remoteConfig_ = dict();\n\n    /** @private {boolean} */\n    this.isSandbox_ = false;\n\n    /** @private {!./variables.VariableService} */\n    this.variableService_ = variableServiceForDoc(element);\n  }\n\n  /**\n   * @return {!Promise<JsonObject>}\n   */\n  loadConfig() {\n    this.win_ = this.element_.ownerDocument.defaultView;\n    this.isSandbox_ = this.element_.hasAttribute('sandbox');\n\n    return Promise.all([this.fetchRemoteConfig_(), this.fetchVendorConfig_()])\n      .then(this.processConfigs_.bind(this))\n      .then(this.checkWarningMessage_.bind(this))\n      .then(() => this.config_);\n  }\n\n  /**\n   * Constructs the URL where the given vendor config is located\n   * @private\n   * @param {string} vendor the vendor name\n   * @return {string} the URL to request the vendor config file from\n   */\n  getVendorUrl_(vendor) {\n    const baseUrl = calculateScriptBaseUrl(\n      this.win_.location,\n      getMode().localDev\n    );\n    // bg has a special canary config\n    const canary = vendor === 'bg' && isCanary(self) ? '.canary' : '';\n    return `${baseUrl}/rtv/${\n      getMode().rtvVersion\n    }/v0/analytics-vendors/${vendor}${canary}.json`;\n  }\n\n  /**\n   * Returns a promise that resolves when vendor config is ready (or\n   * immediately if no vendor config is specified)\n   * @private\n   * @return {!Promise<undefined>}\n   */\n  fetchVendorConfig_() {\n    const type = this.element_.getAttribute('type');\n    if (!type) {\n      return Promise.resolve();\n    }\n\n    const vendorUrl = this.getVendorUrl_(type);\n\n    const TAG = this.getName_();\n    dev().fine(TAG, 'Fetching vendor config', vendorUrl);\n\n    return Services.xhrFor(toWin(this.win_))\n      .fetchJson(vendorUrl, {ampCors: false})\n      .then((res) => res.json())\n      .then(\n        (jsonValue) => {\n          this.vendorConfig_ = jsonValue || dict();\n          dev().fine(TAG, 'Vendor config loaded for ' + type, jsonValue);\n        },\n        (err) => {\n          user().error(TAG, 'Error loading vendor config: ', vendorUrl, err);\n        }\n      );\n  }\n\n  /**\n   * Returns a promise that resolves when remote config is ready (or\n   * immediately if no remote config is specified.)\n   * @private\n   * @return {!Promise<undefined>}\n   */\n  fetchRemoteConfig_() {\n    let remoteConfigUrl = this.element_.getAttribute('config');\n    if (!remoteConfigUrl || this.isSandbox_) {\n      return Promise.resolve();\n    }\n    assertHttpsUrl(remoteConfigUrl, this.element_);\n    const TAG = this.getName_();\n    dev().fine(TAG, 'Fetching remote config', remoteConfigUrl);\n    const fetchConfig = {};\n    if (this.element_.hasAttribute('data-credentials')) {\n      fetchConfig.credentials = this.element_.getAttribute('data-credentials');\n    }\n    return Services.urlReplacementsForDoc(this.element_)\n      .expandUrlAsync(\n        remoteConfigUrl,\n        this.variableService_.getMacros(this.element_)\n      )\n      .then((expandedUrl) => {\n        remoteConfigUrl = expandedUrl;\n        return Services.xhrFor(toWin(this.win_)).fetchJson(\n          remoteConfigUrl,\n          fetchConfig\n        );\n      })\n      .then((res) => res.json())\n      .then(\n        (jsonValue) => {\n          this.remoteConfig_ = jsonValue;\n          dev().fine(TAG, 'Remote config loaded', remoteConfigUrl);\n        },\n        (err) => {\n          user().error(\n            TAG,\n            'Error loading remote config: ',\n            remoteConfigUrl,\n            err\n          );\n        }\n      );\n  }\n\n  /**\n   * Returns a promise that resolves when configuration is re-written if\n   * configRewriter is configured by a vendor.\n   * @private\n   * @return {!Promise<undefined>}\n   */\n  processConfigs_() {\n    const configRewriterUrl = this.getConfigRewriter_()['url'];\n\n    const config = dict({});\n    const inlineConfig = this.getInlineConfig_();\n    this.validateTransport_(inlineConfig);\n    mergeObjects(inlineConfig, config);\n    mergeObjects(this.remoteConfig_, config);\n\n    if (!configRewriterUrl || this.isSandbox_) {\n      this.config_ = this.mergeConfigs_(config);\n      // use default configuration merge.\n      return Promise.resolve();\n    }\n\n    return this.handleConfigRewriter_(config, configRewriterUrl);\n  }\n\n  /**\n   * Handles logic if configRewriter is enabled.\n   * @param {!JsonObject} config\n   * @param {string} configRewriterUrl\n   * @return {!Promise<undefined>}\n   */\n  handleConfigRewriter_(config, configRewriterUrl) {\n    assertHttpsUrl(configRewriterUrl, this.element_);\n    const TAG = this.getName_();\n    dev().fine(TAG, 'Rewriting config', configRewriterUrl);\n\n    return this.handleVarGroups_(config).then(() => {\n      const fetchConfig = {\n        method: 'POST',\n        body: config,\n      };\n      if (this.element_.hasAttribute('data-credentials')) {\n        fetchConfig.credentials =\n          this.element_.getAttribute('data-credentials');\n      }\n      return (\n        Services.urlReplacementsForDoc(this.element_)\n          // Pass bindings if requested\n          .expandUrlAsync(configRewriterUrl)\n          .then((expandedUrl) => {\n            return Services.xhrFor(toWin(this.win_)).fetchJson(\n              expandedUrl,\n              fetchConfig\n            );\n          })\n          .then((res) => res.json())\n          .then(\n            (jsonValue) => {\n              this.config_ = this.mergeConfigs_(jsonValue);\n              dev().fine(TAG, 'Configuration re-written', configRewriterUrl);\n            },\n            (err) => {\n              user().error(\n                TAG,\n                'Error rewriting configuration: ',\n                configRewriterUrl,\n                err\n              );\n            }\n          )\n      );\n    });\n  }\n\n  /**\n   * Check if config has warning, display on console and\n   * remove the property.\n   * @private\n   */\n  checkWarningMessage_() {\n    if (this.config_['warningMessage']) {\n      const TAG = this.getName_();\n      const type = this.element_.getAttribute('type');\n      const remoteConfigUrl = this.element_.getAttribute('config');\n\n      user().warn(\n        TAG,\n        'Warning from analytics vendor%s%s: %s',\n        type ? ' ' + type : '',\n        remoteConfigUrl ? ' with remote config url ' + remoteConfigUrl : '',\n        String(this.config_['warningMessage'])\n      );\n      delete this.config_['warningMessage'];\n    }\n  }\n\n  /**\n   * Check to see which varGroups are enabled, resolve and merge them into\n   * vars object.\n   * @param {!JsonObject} pubConfig\n   * @return {!Promise}\n   */\n  handleVarGroups_(pubConfig) {\n    const pubRewriterConfig = pubConfig['configRewriter'];\n    const pubVarGroups = pubRewriterConfig && pubRewriterConfig['varGroups'];\n    const vendorVarGroups = this.getConfigRewriter_()['varGroups'];\n\n    if (!pubVarGroups && !vendorVarGroups) {\n      return Promise.resolve();\n    }\n\n    if (pubVarGroups && !vendorVarGroups) {\n      const TAG = this.getName_();\n      user().warn(\n        TAG,\n        'This analytics provider does not currently support varGroups'\n      );\n      return Promise.resolve();\n    }\n\n    // Create object that will later hold all the resolved variables, and any\n    // intermediary objects as necessary.\n    pubConfig['configRewriter'] = pubConfig['configRewriter'] || dict();\n    const rewriterConfig = pubConfig['configRewriter'];\n    rewriterConfig['vars'] = dict({});\n\n    const allPromises = [];\n    // Merge publisher && vendor varGroups to see what has been enabled.\n    const mergedConfig = pubVarGroups || dict();\n    deepMerge(mergedConfig, vendorVarGroups);\n\n    Object.keys(mergedConfig).forEach((groupName) => {\n      const group = mergedConfig[groupName];\n      if (!group['enabled']) {\n        // Any varGroups must be explicitly enabled.\n        return;\n      }\n\n      const groupPromise = this.shallowExpandObject(this.element_, group).then(\n        (expandedGroup) => {\n          // This is part of the user config and should not be sent.\n          delete expandedGroup['enabled'];\n          // Merge all groups into single `vars` object.\n          Object.assign(rewriterConfig['vars'], expandedGroup);\n        }\n      );\n      allPromises.push(groupPromise);\n    });\n\n    return Promise.all(allPromises).then(() => {\n      // Don't send an empty vars payload.\n      if (!Object.keys(rewriterConfig['vars']).length) {\n        return delete pubConfig['configRewriter'];\n      }\n      // Don't send varGroups in payload to configRewriter endpoint.\n      pubVarGroups && delete rewriterConfig['varGroups'];\n    });\n  }\n\n  /**\n   * Merges various sources of configs and stores them in a member variable.\n   *\n   * Order of precedence for configs from highest to lowest:\n   * - Remote config: specified through an attribute of the tag.\n   * - Inline config: specified insize the tag.\n   * - Predefined Vendor config: Defined as part of the platform.\n   * - Default config: Built-in config shared by all amp-analytics tags.\n   *\n   * @private\n   * @param {!JsonObject} rewrittenConfig\n   * @return {!JsonObject}\n   */\n  mergeConfigs_(rewrittenConfig) {\n    // Initialize config with analytics related vars.\n    const config = dict({\n      'vars': {\n        'requestCount': 0,\n      },\n    });\n    mergeObjects(expandConfigRequest(this.defaultConfig_), config);\n    mergeObjects(\n      expandConfigRequest(this.vendorConfig_),\n      config,\n      /* predefined-vendor */ true\n    );\n    mergeObjects(\n      expandConfigRequest(rewrittenConfig),\n      config,\n      /* predefined-vendor */ true\n    );\n    return config;\n  }\n\n  /**\n   * Reads configRewriter from a vendor config.\n   * @return {!JsonObject}\n   */\n  getConfigRewriter_() {\n    return this.vendorConfig_['configRewriter'] || {};\n  }\n\n  /**\n   * @private\n   * @return {!JsonObject}\n   */\n  getInlineConfig_() {\n    if (this.element_.CONFIG) {\n      // If the analytics element is created by runtime, return cached config.\n      return this.element_.CONFIG;\n    }\n    let inlineConfig = {};\n    const TAG = this.getName_();\n    try {\n      const {children} = this.element_;\n      if (children.length == 1) {\n        inlineConfig = getChildJsonConfig(this.element_);\n      } else if (children.length > 1) {\n        user().error(TAG, 'The tag should contain only one <script> child.');\n      }\n    } catch (er) {\n      user().error(TAG, er.message);\n    }\n    return /** @type {!JsonObject} */ (inlineConfig);\n  }\n\n  /**\n   * Validates transport configuration.\n   * @param {!JsonObject} inlineConfig\n   */\n  validateTransport_(inlineConfig) {\n    if (this.element_.getAttribute('type')) {\n      // TODO(zhouyx, #7096) Track overwrite percentage. Prevent transport\n      // overwriting\n      if (inlineConfig['transport'] || this.remoteConfig_['transport']) {\n        const TAG = this.getName_();\n        user().error(\n          TAG,\n          'Inline or remote config should not ' +\n            'overwrite vendor transport settings'\n        );\n      }\n    }\n\n    // Do NOT allow inline or remote config to use 'transport: iframe'\n    if (inlineConfig['transport'] && inlineConfig['transport']['iframe']) {\n      user().error(\n        TAG,\n        'Inline configs are not allowed to specify transport iframe'\n      );\n      if (!getMode().localDev || getMode().test) {\n        inlineConfig['transport']['iframe'] = undefined;\n      }\n    }\n\n    if (\n      this.remoteConfig_['transport'] &&\n      this.remoteConfig_['transport']['iframe']\n    ) {\n      user().error(\n        TAG,\n        'Remote configs are not allowed to specify transport iframe'\n      );\n      this.remoteConfig_['transport']['iframe'] = undefined;\n    }\n  }\n\n  /**\n   * @return {string} Returns a string to identify this tag. May not be unique\n   * if the element id is not unique.\n   * @private\n   */\n  getName_() {\n    return (\n      'AmpAnalytics ' + (this.element_.getAttribute('id') || '<unknown id>')\n    );\n  }\n\n  /**\n   * Expands all key value pairs asynchronously and returns a promise that will\n   * resolve with the expanded object.\n   * @param {!Element} element\n   * @param {!Object} obj\n   * @return {!Promise<!Object>}\n   */\n  shallowExpandObject(element, obj) {\n    const expandedObj = dict();\n    const keys = [];\n    const expansionPromises = [];\n\n    const urlReplacements = Services.urlReplacementsForDoc(element);\n    const bindings = variableServiceForDoc(element).getMacros(element);\n\n    Object.keys(obj).forEach((key) => {\n      keys.push(key);\n      const expanded = urlReplacements.expandStringAsync(obj[key], bindings);\n      expansionPromises.push(expanded);\n    });\n\n    return Promise.all(expansionPromises).then((expandedValues) => {\n      keys.forEach((key, i) => (expandedObj[key] = expandedValues[i]));\n      return expandedObj;\n    });\n  }\n}\n\n/**\n * Merges two objects. If the value is array or plain object, the values are\n * merged otherwise the value is overwritten.\n *\n * @param {Object|Array} from Object or array to merge from\n * @param {Object|Array} to Object or Array to merge into\n * @param {boolean=} opt_predefinedVendorConfig\n * @return {*} TODO(#23582): Specify return type\n */\nexport function mergeObjects(from, to, opt_predefinedVendorConfig) {\n  if (to === null || to === undefined) {\n    to = {};\n  }\n\n  // Assert that optouts are allowed only in predefined vendor configs.\n  // The last expression adds an exception of known, safe optout function\n  // that is already being used in the wild.\n  userAssert(\n    opt_predefinedVendorConfig ||\n      !from ||\n      !from['optout'] ||\n      from['optout'] == '_gaUserPrefs.ioo' ||\n      from['optoutElementId'] == '__gaOptOutExtension',\n    'optout property is only available to vendor config.'\n  );\n\n  for (const property in from) {\n    userAssert(\n      opt_predefinedVendorConfig || property != 'iframePing',\n      'iframePing config is only available to vendor config.'\n    );\n    // Only deal with own properties.\n    if (hasOwn(from, property)) {\n      if (isArray(from[property])) {\n        if (!isArray(to[property])) {\n          to[property] = [];\n        }\n        to[property] = mergeObjects(\n          from[property],\n          to[property],\n          opt_predefinedVendorConfig\n        );\n      } else if (isObject(from[property])) {\n        if (!isObject(to[property])) {\n          to[property] = {};\n        }\n        to[property] = mergeObjects(\n          from[property],\n          to[property],\n          opt_predefinedVendorConfig\n        );\n      } else {\n        to[property] = from[property];\n      }\n    }\n  }\n  return to;\n}\n\n/**\n * Expand config's request to object\n * @param {!JsonObject} config\n * @return {?JsonObject}\n * @visibleForTesting\n */\nexport function expandConfigRequest(config) {\n  if (!config['requests']) {\n    return config;\n  }\n  for (const k in config['requests']) {\n    if (hasOwn(config['requests'], k)) {\n      config['requests'][k] = expandRequestStr(config['requests'][k]);\n    }\n  }\n\n  return handleTopLevelAttributes_(config);\n}\n\n/**\n * Expand single request to an object\n * @param {!JsonObject} request\n * @return {*} TODO(#23582): Specify return type\n */\nfunction expandRequestStr(request) {\n  if (isObject(request)) {\n    return request;\n  }\n  return {\n    'baseUrl': request,\n  };\n}\n\n/**\n * Handles top level fields in the given config\n * @param {!JsonObject} config\n * @return {JsonObject}\n */\nfunction handleTopLevelAttributes_(config) {\n  // handle a top level requestOrigin\n  if (hasOwn(config, 'requests') && hasOwn(config, 'requestOrigin')) {\n    const requestOrigin = config['requestOrigin'];\n\n    for (const requestName in config['requests']) {\n      // only add top level request origin into request if it doesn't have one\n      if (!hasOwn(config['requests'][requestName], 'origin')) {\n        config['requests'][requestName]['origin'] = requestOrigin;\n      }\n    }\n  }\n\n  return config;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element's implementation has been registered and ready for upgrade.\n   */\n  READY_TO_UPGRADE: 'ready-upgrade',\n\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has been mounted.\n   */\n  MOUNTED: 'mounted',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {removeItem} from '../types/array';\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    removeItem(this.handlers_, handler);\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    for (const handler of this.handlers_) {\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    return this.handlers_?.length ?? 0;\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from './log';\nimport {whenUpgradedToCustomElement} from './dom';\n\nexport const MIN_VISIBILITY_RATIO_FOR_AUTOPLAY = 0.5;\n\n/**\n * VideoInterface defines a common video API which any AMP component that plays\n * videos is expected to implement.\n *\n * AMP runtime uses this common API to provide consistent video experience and\n * analytics across all video players.\n *\n * Components implementing this interface must also extend\n * {@link ./base-element.BaseElement} and register with the\n * Video Manager {@link ./service/video-manager-impl.VideoManager} during\n * their `builtCallback`.\n *\n * @interface\n */\nexport class VideoInterface {\n  /**\n   * See `BaseElement`.\n   * @return {!./utils/signals.Signals}\n   */\n  signals() {}\n\n  /**\n   * See `BaseElement`.\n   * @param {function()} unusedMutator\n   * @return {!Promise}\n   */\n  mutateElementSkipRemeasure(unusedMutator) {}\n\n  /**\n   * Whether the component supports video playback in the current platform.\n   * If false, component will be not treated as a video component.\n   * @return {boolean}\n   */\n  supportsPlatform() {}\n\n  /**\n   * Whether users can interact with the video such as pausing it.\n   * Example of non-interactive videos include design background videos where\n   * all controls are hidden from the user.\n   *\n   * @return {boolean}\n   */\n  isInteractive() {}\n\n  /**\n   * Current playback time in seconds at time of trigger.\n   *\n   * This is used for analytics metadata.\n   *\n   * @return {number}\n   */\n  getCurrentTime() {}\n\n  /**\n   * Total duration of the video in seconds\n   *\n   * This is used for analytics metadata.\n   *\n   * @return {number}\n   */\n  getDuration() {}\n\n  /**\n   * Get a 2d array of start and stop times that the user has watched.\n   * This is used for analytics metadata.\n   * @return {!Array<Array<number>>}\n   */\n  getPlayedRanges() {}\n\n  /**\n   * Plays the video.\n   *\n   * @param {boolean} unusedIsAutoplay Whether the call to the `play` method is\n   * triggered by the autoplay functionality. Video players can use this hint\n   * to make decisions such as not playing pre-roll video ads.\n   */\n  play(unusedIsAutoplay) {}\n\n  /**\n   * Pauses the video.\n   */\n  pause() {}\n\n  /**\n   * Mutes the video.\n   * Implementation is required for autoplay and mute/unmute controls on docked\n   * video.\n   */\n  mute() {}\n\n  /**\n   * Unmutes the video.\n   * Implementation is required for autoplay and mute/unmute controls on docked\n   * video.\n   */\n  unmute() {}\n\n  /**\n   * Makes the video UI controls visible.\n   *\n   * AMP will not call this method if `controls` attribute is not set.\n   *\n   * Implementation is required for docked video.\n   */\n  showControls() {}\n\n  /**\n   * Hides the video UI controls.\n   *\n   * AMP will not call this method if `controls` attribute is not set.\n   *\n   * Implementation is required for docked video.\n   */\n  hideControls() {}\n\n  /**\n   * Returns video's meta data (artwork, title, artist, album, etc.) for use\n   * with the Media Session API\n   * @return {!./mediasession-helper.MetadataDef|undefined} metadata\n   *   - artwork (Array): URL to the poster image (preferably a 512x512 PNG)\n   *   - title (string): Name of the video\n   *   - artist (string): Name of the video's author/artist\n   *   - album (string): Name of the video's album if it exists\n   */\n  getMetadata() {}\n\n  /**\n   * If returning true, it's assumed that the embedded video document internally\n   * implements a feature to enter fullscreen on device rotation, so that the\n   * VideoManager does not override it.\n   *\n   * Otherwise, the feature is implemented automatically when using the\n   * `rotate-to-fullscreen` attribute.\n   *\n   * @return {boolean}\n   */\n  preimplementsAutoFullscreen() {}\n\n  /**\n   * If returning true, it's assumed that the embedded video document internally\n   * implements the MediaSession API internally so that the VideoManager won't\n   * replace it.\n   *\n   * Otherwise provided and inferred metadata are used to update the video's\n   * Media Session.\n   *\n   * @return {boolean}\n   */\n  preimplementsMediaSessionAPI() {}\n\n  /**\n   * Enables fullscreen on the internal video element\n   * NOTE: While implementing, keep in mind that Safari/iOS do not allow taking\n   * any element other than <video> to fullscreen, if the player has an internal\n   * implementation of fullscreen (flash for example) then check\n   * if Services.platformFor(this.win).isSafari is true and use the internal\n   * implementation instead. If not, it is recommended to take the iframe\n   * to fullscreen using fullscreenEnter from dom.js\n   */\n  fullscreenEnter() {}\n\n  /**\n   * Quits fullscreen mode\n   */\n  fullscreenExit() {}\n\n  /**\n   * Returns whether the video is currently in fullscreen mode or not.\n   * @return {boolean}\n   */\n  isFullscreen() {}\n\n  /**\n   * Seeks the video to a specified time.\n   * @param {number} unusedTimeSeconds\n   */\n  seekTo(unusedTimeSeconds) {}\n}\n\n/** @type {!AmpElement} */\nVideoInterface.prototype.element;\n\n/** @type {!Window} */\nVideoInterface.prototype.win;\n\n/**\n * Attributes\n *\n * Components implementing the VideoInterface are expected to support\n * the following attributes.\n *\n * @enum {string}\n */\nexport const VideoAttributes = {\n  /**\n   * autoplay\n   *\n   * Whether the developer has configured autoplay on the component.\n   * This is normally done by setting `autoplay` attribute on the component.\n   *\n   * AMP runtime manages autoplay behavior itself using methods such as `play`,\n   * `pause`, `showControls`, `hideControls`, `mute`, etc.. therefore components\n   * should not propagate the autoplay attribute to the underlying player\n   * implementation.\n   *\n   * When a video is requested to autoplay, AMP will automatically\n   * mute and hide the controls for the video, when video is 75% visible in\n   * the viewport, AMP will play the video and later pauses it when 25%\n   * or more of the video exits the viewport. If an auto-playing video also has\n   * controls, AMP will install a tap\n   * handler on the video, and when an end-user taps the video, AMP will show\n   * the controls.\n   *\n   */\n  AUTOPLAY: 'autoplay',\n  /**\n   * dock\n   *\n   * Setting the `dock` attribute on the component makes the video minimize\n   * to the corner when scrolled out of view and has been interacted with.\n   */\n  DOCK: 'dock',\n  /**\n   * rotate-to-fullscreen\n   *\n   * If enabled, this automatically expands the currently visible video and\n   * playing to fullscreen when the user changes the device's orientation to\n   * landscape if the video was started following a user interaction\n   * (not autoplay)\n   *\n   * Dependent upon browser support of\n   * http://caniuse.com/#feat=screen-orientation\n   * and http://caniuse.com/#feat=fullscreen\n   */\n  ROTATE_TO_FULLSCREEN: 'rotate-to-fullscreen',\n  /**\n   * noaudio\n   *\n   * If set and autoplay, the equalizer icon will not be displayed.\n   */\n  NO_AUDIO: 'noaudio',\n};\n\n/**\n * Events\n *\n * Components implementing the VideoInterface are expected to dispatch\n * the following DOM events.\n *\n * @enum {string}\n */\nexport const VideoEvents = {\n  /**\n   * registered\n   *\n   * Fired when the video player element is built and has been registered with\n   * the video manager.\n   *\n   * @event registered\n   */\n  REGISTERED: 'registered',\n\n  /**\n   * load\n   *\n   * Fired when the video player is loaded and calls to methods such as `play()`\n   * are allowed.\n   *\n   * @event load\n   */\n  LOAD: 'load',\n\n  /**\n   * loadedmetadata\n   *\n   * Fired when the video's metadata becomes available (e.g. duration).\n   *\n   * @event loadedmetadata\n   */\n  LOADEDMETADATA: 'loadedmetadata',\n\n  /**\n   * loadeddata\n   *\n   * Fired when the user agent can render the media for the first time.\n   *\n   * @event loadeddata\n   */\n  LOADEDDATA: 'loadeddata',\n\n  /**\n   * play\n   *\n   * Fired when the video plays (either because of autoplay or the play method).\n   *\n   * Note: Because this event was not originally present in this interface, we\n   * cannot rely on all all implementations to emit it.\n   *\n   * @event play\n   */\n  PLAY: 'play',\n\n  /**\n   * playing\n   *\n   * Fired when the video begins playing.\n   *\n   * @event playing\n   */\n  PLAYING: 'playing',\n\n  /**\n   * pause\n   *\n   * Fired when the video pauses.\n   *\n   * @event pause\n   */\n  PAUSE: 'pause',\n\n  /**\n   * ended\n   *\n   * Fired when the video ends.\n   *\n   * This event should be fired in addition to `pause` when video ends.\n   *\n   * @event ended\n   */\n  ENDED: 'ended',\n\n  /**\n   * muted\n   *\n   * Fired when the video is muted.\n   *\n   * @event muted\n   */\n  MUTED: 'muted',\n\n  /**\n   * unmuted\n   *\n   * Fired when the video is unmuted.\n   *\n   * @event unmuted\n   */\n  UNMUTED: 'unmuted',\n\n  /**\n   * amp:video:visibility\n   *\n   * Fired when the video's visibility changes.\n   *\n   * @event amp:video:visibility\n   * @property {boolean} visible Whether the video player is visible or not.\n   */\n  VISIBILITY: 'amp:video:visibility',\n\n  /**\n   * reload\n   *\n   * Fired when the video's src changes.\n   *\n   * @event reloaded\n   */\n  RELOAD: 'reloaded',\n\n  /**\n   * pre/mid/post Ad start\n   *\n   * Fired when an Ad starts playing.\n   *\n   * This is used to remove any overlay shims during Ad play during autoplay\n   * or minimized-to-corner version of the player.\n   *\n   * @event ad_start\n   */\n  AD_START: 'ad_start',\n\n  /**\n   * pre/mid/post Ad ends\n   *\n   * Fired when an Ad ends playing.\n   *\n   * This is used to restore any overlay shims during Ad play during autoplay\n   * or minimized-to-corner version of the player.\n   *\n   * @event ad_end\n   */\n  AD_END: 'ad_end',\n\n  /**\n   * A 3p video player can send signals for analytics whose meaning doesn't\n   * fit for other events. In this case, a `tick` event is sent with additional\n   * information in its data property.\n   *\n   * @event amp:video:tick\n   */\n  CUSTOM_TICK: 'amp:video:tick',\n};\n\n/** @typedef {string} */\nexport let PlayingStateDef;\n\n/**\n * Playing States\n *\n * Internal playing states used to distinguish between video playing on user's\n * command and videos playing automatically\n *\n * @enum {string}\n */\nexport const PlayingStates = {\n  /**\n   * playing_manual\n   *\n   * When the video user manually interacted with the video and the video\n   * is now playing\n   *\n   * @event playing_manual\n   */\n  PLAYING_MANUAL: 'playing_manual',\n\n  /**\n   * playing_auto\n   *\n   * When the video has autoplay and the user hasn't interacted with it yet\n   *\n   * @event playing_auto\n   */\n  PLAYING_AUTO: 'playing_auto',\n\n  /**\n   * paused\n   *\n   * When the video is paused.\n   *\n   * @event paused\n   */\n  PAUSED: 'paused',\n};\n\n/** @enum {string} */\nexport const VideoAnalyticsEvents = {\n  /**\n   * video-ended\n   *\n   * Indicates that a video ended.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ended\n   */\n  ENDED: 'video-ended',\n\n  /**\n   * video-pause\n   *\n   * Indicates that a video paused.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-pause\n   */\n  PAUSE: 'video-pause',\n\n  /**\n   * video-play\n   *\n   * Indicates that a video began to play.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-play\n   */\n  PLAY: 'video-play',\n\n  /**\n   * video-session\n   *\n   * Indicates that some segment of the video played.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session\n   */\n  SESSION: 'video-session',\n\n  /**\n   * video-session-visible\n   *\n   * Indicates that some segment of the video played in the viewport.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session-visible\n   */\n  SESSION_VISIBLE: 'video-session-visible',\n\n  /**\n   * video-seconds-played\n   *\n   * Indicates that a video was playing when the\n   * video-seconds-played interval fired.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-session-visible\n   */\n  SECONDS_PLAYED: 'video-seconds-played',\n\n  /**\n   * video-hosted-custom\n   *\n   * Indicates that a custom event incoming from a 3p frame is to be logged.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-custom\n   */\n  CUSTOM: 'video-hosted-custom',\n\n  /**\n   * video-percentage-played\n   *\n   * Indicates that a percentage interval has been played.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-custom\n   */\n  PERCENTAGE_PLAYED: 'video-percentage-played',\n\n  /**\n   * video-ad-start\n   *\n   * Indicates that an ad begins to play.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ad-start\n   */\n  AD_START: 'video-ad-start',\n\n  /**\n   * video-ad-end\n   *\n   * Indicates that an ad ended.\n   * @property {!VideoAnalyticsDetailsDef} details\n   * @event video-ad-end\n   */\n  AD_END: 'video-ad-end',\n};\n\n/**\n * This key can't predictably collide with custom var names as defined in\n * analytics user configuration.\n * @type {string}\n */\nexport const videoAnalyticsCustomEventTypeKey = '__amp:eventType';\n\n/**\n * Helper union type to be used internally, so that the compiler treats\n * `VideoInterface` objects as `BaseElement`s, which they should be anyway.\n *\n * WARNING: Don't use to `register` at the Service level. Registering should\n * only allow `VideoInterface` as a guarding measure.\n *\n * @typedef {!VideoInterface|!./base-element.BaseElement}\n */\nexport let VideoOrBaseElementDef;\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isDockable(element) {\n  return element.hasAttribute(VideoAttributes.DOCK);\n}\n\n/** @enum {string} */\nexport const VideoServiceSignals = {\n  USER_INTERACTED: 'user-interacted',\n  PLAYBACK_DELEGATED: 'playback-delegated',\n};\n\n/** @param {!AmpElement|!VideoOrBaseElementDef} video */\nexport function delegateAutoplay(video) {\n  whenUpgradedToCustomElement(dev().assertElement(video)).then((el) => {\n    el.signals().signal(VideoServiceSignals.PLAYBACK_DELEGATED);\n  });\n}\n\n/** @param {!AmpElement|!VideoOrBaseElementDef} video */\nexport function userInteractedWith(video) {\n  video.signals().signal(VideoServiceSignals.USER_INTERACTED);\n}\n\n/**\n * Classname that media components should annotate themselves with.\n * This applies to all video and audio playback components, regardless of\n * whether they implement a common interface or not.\n *\n * TODO(go.amp.dev/issue/26984): This isn't exclusive to video, but there's no\n * better place to put this now due to OWNERShip. Move.\n */\nexport const MEDIA_COMPONENT_CLASSNAME = 'i-amphtml-media-component';\n\n/**\n * Annotates media component element with a common classname.\n * This applies to all video and audio playback components, regardless of\n * whether they implement a common interface or not.\n * @param {!Element} element\n *\n * TODO(go.amp.dev/issue/26984): This isn't exclusive to video, but there's no\n * better place to put this now due to OWNERShip. Move.\n */\nexport function setIsMediaComponent(element) {\n  element.classList.add(MEDIA_COMPONENT_CLASSNAME);\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from '../../../src/core/constants/common-signals';\nimport {Deferred} from '../../../src/core/data-structures/promise';\nimport {Observable} from '../../../src/core/data-structures/observable';\nimport {\n  PlayingStates,\n  VideoAnalyticsEvents,\n  videoAnalyticsCustomEventTypeKey,\n} from '../../../src/video-interface';\nimport {deepMerge, dict, hasOwn} from '../../../src/core/types/object';\nimport {dev, devAssert, user, userAssert} from '../../../src/log';\nimport {getData} from '../../../src/event-helper';\nimport {getDataParamsFromAttributes, isAmpElement} from '../../../src/dom';\nimport {isArray, isEnumValue, isFiniteNumber} from '../../../src/core/types';\n\nconst SCROLL_PRECISION_PERCENT = 5;\nconst VAR_H_SCROLL_BOUNDARY = 'horizontalScrollBoundary';\nconst VAR_V_SCROLL_BOUNDARY = 'verticalScrollBoundary';\nconst MIN_TIMER_INTERVAL_SECONDS = 0.5;\nconst DEFAULT_MAX_TIMER_LENGTH_SECONDS = 7200;\nconst VARIABLE_DATA_ATTRIBUTE_KEY = /^vars(.+)/;\nconst NO_UNLISTEN = function () {};\nconst TAG = 'amp-analytics/events';\n\n/**\n * Events that can result in analytics data to be sent.\n * @const\n * @enum {string}\n */\nexport const AnalyticsEventType = {\n  CLICK: 'click',\n  CUSTOM: 'custom',\n  HIDDEN: 'hidden',\n  INI_LOAD: 'ini-load',\n  RENDER_START: 'render-start',\n  SCROLL: 'scroll',\n  STORY: 'story',\n  TIMER: 'timer',\n  VIDEO: 'video',\n  VISIBLE: 'visible',\n};\n\nconst ALLOWED_FOR_ALL_ROOT_TYPES = ['ampdoc', 'embed'];\n\n/**\n * Events that can result in analytics data to be sent.\n * @const {!Object<string, {\n *     name: string,\n *     allowedFor: !Array<string>,\n *     klass: typeof ./events.EventTracker\n *   }>}\n */\nconst TRACKER_TYPE = Object.freeze({\n  [AnalyticsEventType.CLICK]: {\n    name: AnalyticsEventType.CLICK,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    // Escape the temporal dead zone by not referencing a class directly.\n    klass: function (root) {\n      return new ClickEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.CUSTOM]: {\n    name: AnalyticsEventType.CUSTOM,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    klass: function (root) {\n      return new CustomEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.HIDDEN]: {\n    name: AnalyticsEventType.VISIBLE, // Reuse tracker with visibility\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    klass: function (root) {\n      return new VisibilityTracker(root);\n    },\n  },\n  [AnalyticsEventType.INI_LOAD]: {\n    name: AnalyticsEventType.INI_LOAD,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer', 'visible']),\n    klass: function (root) {\n      return new IniLoadTracker(root);\n    },\n  },\n  [AnalyticsEventType.RENDER_START]: {\n    name: AnalyticsEventType.RENDER_START,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer', 'visible']),\n    klass: function (root) {\n      return new SignalTracker(root);\n    },\n  },\n  [AnalyticsEventType.SCROLL]: {\n    name: AnalyticsEventType.SCROLL,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    klass: function (root) {\n      return new ScrollEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.STORY]: {\n    name: AnalyticsEventType.STORY,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES,\n    klass: function (root) {\n      return new AmpStoryEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.TIMER]: {\n    name: AnalyticsEventType.TIMER,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES,\n    klass: function (root) {\n      return new TimerEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.VIDEO]: {\n    name: AnalyticsEventType.VIDEO,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    klass: function (root) {\n      return new VideoEventTracker(root);\n    },\n  },\n  [AnalyticsEventType.VISIBLE]: {\n    name: AnalyticsEventType.VISIBLE,\n    allowedFor: ALLOWED_FOR_ALL_ROOT_TYPES.concat(['timer']),\n    klass: function (root) {\n      return new VisibilityTracker(root);\n    },\n  },\n});\n\n/** @visibleForTesting */\nexport const trackerTypeForTesting = TRACKER_TYPE;\n\n/**\n * @param {string} triggerType\n * @return {boolean}\n */\nfunction isAmpStoryTriggerType(triggerType) {\n  return triggerType.startsWith('story');\n}\n\n/**\n * @param {string} triggerType\n * @return {boolean}\n */\nfunction isVideoTriggerType(triggerType) {\n  return triggerType.startsWith('video');\n}\n\n/**\n * @param {string} triggerType\n * @return {boolean}\n */\nfunction isReservedTriggerType(triggerType) {\n  return isEnumValue(AnalyticsEventType, triggerType);\n}\n\n/**\n * @param {string} eventType\n * @return {string}\n */\nexport function getTrackerKeyName(eventType) {\n  if (isVideoTriggerType(eventType)) {\n    return AnalyticsEventType.VIDEO;\n  }\n  if (isAmpStoryTriggerType(eventType)) {\n    return AnalyticsEventType.STORY;\n  }\n  if (!isReservedTriggerType(eventType)) {\n    return AnalyticsEventType.CUSTOM;\n  }\n  return hasOwn(TRACKER_TYPE, eventType)\n    ? TRACKER_TYPE[eventType].name\n    : eventType;\n}\n\n/**\n * @param {string} parentType\n * @return {!Object<string, typeof EventTracker>}\n */\nexport function getTrackerTypesForParentType(parentType) {\n  const filtered = {};\n  Object.keys(TRACKER_TYPE).forEach((key) => {\n    if (\n      hasOwn(TRACKER_TYPE, key) &&\n      TRACKER_TYPE[key].allowedFor.indexOf(parentType) != -1\n    ) {\n      filtered[key] = TRACKER_TYPE[key].klass;\n    }\n  });\n  return filtered;\n}\n\n/**\n * Expand the event variables to include default data-vars\n * eventVars value will override data-vars value\n * @param {!Element} target\n * @param {!JsonObject} eventVars\n * @return {!JsonObject}\n */\nfunction mergeDataVars(target, eventVars) {\n  const vars = getDataParamsFromAttributes(\n    target,\n    /* computeParamNameFunc */ undefined,\n    VARIABLE_DATA_ATTRIBUTE_KEY\n  );\n  // Merge eventVars into vars, depth=0 because\n  // vars and eventVars are not supposed to contain nested object.\n  deepMerge(vars, eventVars, 0);\n  return vars;\n}\n\n/**\n * @interface\n */\nclass SignalTrackerDef {\n  /**\n   * @param {string} unusedEventType\n   * @return {!Promise}\n   */\n  getRootSignal(unusedEventType) {}\n\n  /**\n   * @param {string} unusedEventType\n   * @param {!Element} unusedElement\n   * @return {!Promise}\n   */\n  getElementSignal(unusedEventType, unusedElement) {}\n}\n\n/**\n * The analytics event.\n * @dict\n */\nexport class AnalyticsEvent {\n  /**\n   * @param {!Element} target The most relevant target element.\n   * @param {string} type The type of event.\n   * @param {!JsonObject} vars A map of vars and their values.\n   * @param {boolean} enableDataVars A boolean to indicate if data-vars-*\n   * attribute value from target element should be included.\n   */\n  constructor(target, type, vars = dict(), enableDataVars = true) {\n    /** @const */\n    this['target'] = target;\n    /** @const */\n    this['type'] = type;\n    /** @const */\n    this['vars'] = enableDataVars ? mergeDataVars(target, vars) : vars;\n  }\n}\n\n/**\n * The base class for all trackers. A tracker tracks all events of the same\n * type for a single analytics root.\n *\n * @implements {../../../src/service.Disposable}\n * @abstract\n * @visibleForTesting\n */\nexport class EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    /** @const */\n    this.root = root;\n  }\n\n  /** @override @abstract */\n  dispose() {}\n\n  /**\n   * @param {!Element} unusedContext\n   * @param {string} unusedEventType\n   * @param {!JsonObject} unusedConfig\n   * @param {function(!AnalyticsEvent)} unusedListener\n   * @return {!UnlistenDef}\n   * @abstract\n   */\n  add(unusedContext, unusedEventType, unusedConfig, unusedListener) {}\n}\n\n/**\n * Tracks custom events.\n */\nexport class CustomEventTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n\n    /** @const @private {!Object<string, !Observable<!AnalyticsEvent>>} */\n    this.observables_ = {};\n\n    /**\n     * Early events have to be buffered because there's no way to predict\n     * how fast all `amp-analytics` elements will be instrumented.\n     * @private {!Object<string, !Array<!AnalyticsEvent>>|undefined}\n     */\n    this.buffer_ = {};\n\n    /**\n     * Sandbox events get their own buffer, because handler to those events will\n     * be added after parent element's layout. (Time varies, can be later than\n     * 10s) sandbox events buffer will never expire but will cleared when\n     * handler is ready.\n     * @private {!Object<string, !Array<!AnalyticsEvent>|undefined>|undefined}\n     */\n    this.sandboxBuffer_ = {};\n\n    // Stop buffering of custom events after 10 seconds. Assumption is that all\n    // `amp-analytics` elements will have been instrumented by this time.\n    setTimeout(() => {\n      this.buffer_ = undefined;\n    }, 10000);\n  }\n\n  /** @override */\n  dispose() {\n    this.buffer_ = undefined;\n    this.sandboxBuffer_ = undefined;\n    for (const k in this.observables_) {\n      this.observables_[k].removeAll();\n    }\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    let selector = config['selector'];\n    if (!selector) {\n      selector = ':root';\n    }\n    const selectionMethod = config['selectionMethod'] || null;\n\n    const targetReady = this.root.getElement(\n      context,\n      selector,\n      selectionMethod\n    );\n\n    const isSandboxEvent = eventType.startsWith('sandbox-');\n\n    // Push recent events if any.\n    const buffer = isSandboxEvent\n      ? this.sandboxBuffer_ && this.sandboxBuffer_[eventType]\n      : this.buffer_ && this.buffer_[eventType];\n\n    if (buffer) {\n      const bufferLength = buffer.length;\n      targetReady.then((target) => {\n        setTimeout(() => {\n          for (let i = 0; i < bufferLength; i++) {\n            const event = buffer[i];\n            if (target.contains(event['target'])) {\n              listener(event);\n            }\n          }\n          if (isSandboxEvent) {\n            // We assume sandbox event will only has single listener.\n            // It is safe to clear buffer once handler is ready.\n            this.sandboxBuffer_[eventType] = undefined;\n          }\n        }, 1);\n      });\n    }\n\n    let observables = this.observables_[eventType];\n    if (!observables) {\n      observables = new Observable();\n      this.observables_[eventType] = observables;\n    }\n\n    return this.observables_[eventType].add((event) => {\n      // Wait for target selected\n      targetReady.then((target) => {\n        if (target.contains(event['target'])) {\n          listener(event);\n        }\n      });\n    });\n  }\n\n  /**\n   * Triggers a custom event for the associated root.\n   * @param {!AnalyticsEvent} event\n   */\n  trigger(event) {\n    const eventType = event['type'];\n    const isSandboxEvent = eventType.startsWith('sandbox-');\n    const observables = this.observables_[eventType];\n\n    // If listeners already present - trigger right away.\n    if (observables) {\n      observables.fire(event);\n      if (isSandboxEvent) {\n        // No need to buffer sandbox event if handler ready\n        return;\n      }\n    }\n\n    // Create buffer and enqueue buffer if needed\n    if (isSandboxEvent) {\n      this.sandboxBuffer_[eventType] = this.sandboxBuffer_[eventType] || [];\n      this.sandboxBuffer_[eventType].push(event);\n    } else {\n      // Check if buffer has expired\n      if (this.buffer_) {\n        this.buffer_[eventType] = this.buffer_[eventType] || [];\n        this.buffer_[eventType].push(event);\n      }\n    }\n  }\n}\n\n// TODO(Enriqe): If needed, add support for sandbox story event.\n// (e.g. sandbox-story-xxx).\nexport class AmpStoryEventTracker extends CustomEventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    const rootTarget = this.root.getRootElement();\n\n    // Fire buffered events if any.\n    const buffer = this.buffer_ && this.buffer_[eventType];\n    if (buffer) {\n      const bufferLength = buffer.length;\n\n      for (let i = 0; i < bufferLength; i++) {\n        const event = buffer[i];\n        this.fireListener_(event, rootTarget, config, listener);\n      }\n    }\n\n    let observables = this.observables_[eventType];\n    if (!observables) {\n      observables = new Observable();\n      this.observables_[eventType] = observables;\n    }\n\n    return this.observables_[eventType].add((event) => {\n      this.fireListener_(event, rootTarget, config, listener);\n    });\n  }\n\n  /**\n   * Fires listener given the specified configuration.\n   * @param {!AnalyticsEvent} event\n   * @param {!Element} rootTarget\n   * @param {!JsonObject} config\n\n   * @param {function(!AnalyticsEvent)} listener\n   */\n  fireListener_(event, rootTarget, config, listener) {\n    const type = event['type'];\n    const vars = event['vars'];\n\n    const storySpec = config['storySpec'] || {};\n    const repeat =\n      storySpec['repeat'] === undefined ? true : storySpec['repeat'];\n    const eventDetails = vars['eventDetails'];\n    const tagName = config['tagName'];\n\n    if (\n      tagName &&\n      eventDetails['tagName'] &&\n      tagName.toLowerCase() !== eventDetails['tagName']\n    ) {\n      return;\n    }\n\n    if (repeat === false && eventDetails['repeated']) {\n      return;\n    }\n\n    listener(new AnalyticsEvent(rootTarget, type, vars));\n  }\n\n  /**\n   * Triggers a custom event for the associated root, or buffers them if the\n   * observables aren't present yet.\n   * @param {!AnalyticsEvent} event\n   */\n  trigger(event) {\n    const eventType = event['type'];\n    const observables = this.observables_[eventType];\n\n    // If listeners already present - trigger right away.\n    if (observables) {\n      observables.fire(event);\n    }\n\n    // Create buffer and enqueue event if needed.\n    if (this.buffer_) {\n      this.buffer_[eventType] = this.buffer_[eventType] || [];\n      this.buffer_[eventType].push(event);\n    }\n  }\n}\n\n/**\n * Tracks click events.\n */\nexport class ClickEventTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n\n    /** @private {!Observable<!Event>} */\n    this.clickObservable_ = new Observable();\n\n    /** @private @const {function(!Event)} */\n    this.boundOnClick_ = this.clickObservable_.fire.bind(this.clickObservable_);\n    this.root.getRoot().addEventListener('click', this.boundOnClick_);\n  }\n\n  /** @override */\n  dispose() {\n    this.root.getRoot().removeEventListener('click', this.boundOnClick_);\n    this.clickObservable_.removeAll();\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    const selector = userAssert(\n      config['selector'],\n      'Missing required selector on click trigger'\n    );\n    const selectionMethod = config['selectionMethod'] || null;\n    return this.clickObservable_.add(\n      this.root.createSelectiveListener(\n        this.handleClick_.bind(this, listener),\n        context.parentElement || context,\n        selector,\n        selectionMethod\n      )\n    );\n  }\n\n  /**\n   * @param {function(!AnalyticsEvent)} listener\n   * @param {!Element} target\n   * @param {!Event} unusedEvent\n   * @private\n   */\n  handleClick_(listener, target, unusedEvent) {\n    listener(new AnalyticsEvent(target, 'click'));\n  }\n}\n\n/**\n * Tracks scroll events.\n */\nexport class ScrollEventTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n\n    /** @private {!./analytics-root.AnalyticsRoot} root */\n    this.root_ = root;\n\n    /** @private {?function(!Object)} */\n    this.boundScrollHandler_ = null;\n  }\n\n  /** @override */\n  dispose() {\n    if (this.boundScrollHandler_ !== null) {\n      this.root_\n        .getScrollManager()\n        .removeScrollHandler(this.boundScrollHandler_);\n      this.boundScrollHandler_ = null;\n    }\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    if (!config['scrollSpec']) {\n      user().error(TAG, 'Missing scrollSpec on scroll trigger.');\n      return NO_UNLISTEN;\n    }\n\n    if (\n      !Array.isArray(config['scrollSpec']['verticalBoundaries']) &&\n      !Array.isArray(config['scrollSpec']['horizontalBoundaries'])\n    ) {\n      user().error(\n        TAG,\n        'Boundaries are required for the scroll trigger to work.'\n      );\n      return NO_UNLISTEN;\n    }\n\n    const boundsV = this.normalizeBoundaries_(\n      config['scrollSpec']['verticalBoundaries']\n    );\n    const boundsH = this.normalizeBoundaries_(\n      config['scrollSpec']['horizontalBoundaries']\n    );\n    const useInitialPageSize = !!config['scrollSpec']['useInitialPageSize'];\n\n    this.boundScrollHandler_ = this.scrollHandler_.bind(\n      this,\n      boundsH,\n      boundsV,\n      useInitialPageSize,\n      listener\n    );\n\n    return this.root_\n      .getScrollManager()\n      .addScrollHandler(this.boundScrollHandler_);\n  }\n\n  /**\n   * Function to handle scroll events from the Scroll manager\n   * @param {!Object<number,boolean>} boundsH\n   * @param {!Object<number,boolean>} boundsV\n   * @param {boolean} useInitialPageSize\n   * @param {function(!AnalyticsEvent)} listener\n   * @param {!Object} e\n   * @private\n   */\n  scrollHandler_(boundsH, boundsV, useInitialPageSize, listener, e) {\n    // Calculates percentage scrolled by adding screen height/width to\n    // top/left and dividing by the total scroll height/width.\n    const {scrollHeight, scrollWidth} = useInitialPageSize ? e.initialSize : e;\n\n    this.triggerScrollEvents_(\n      boundsV,\n      ((e.top + e.height) * 100) / scrollHeight,\n      VAR_V_SCROLL_BOUNDARY,\n      listener\n    );\n\n    this.triggerScrollEvents_(\n      boundsH,\n      ((e.left + e.width) * 100) / scrollWidth,\n      VAR_H_SCROLL_BOUNDARY,\n      listener\n    );\n  }\n\n  /**\n   * Rounds the boundaries for scroll trigger to nearest\n   * SCROLL_PRECISION_PERCENT and returns an object with normalized boundaries\n   * as keys and false as values.\n   *\n   * @param {!Array<number>} bounds array of bounds.\n   * @return {!JsonObject} Object with normalized bounds as keys\n   * and false as value.\n   * @private\n   */\n  normalizeBoundaries_(bounds) {\n    const result = dict({});\n    if (!bounds || !Array.isArray(bounds)) {\n      return result;\n    }\n\n    for (let b = 0; b < bounds.length; b++) {\n      let bound = bounds[b];\n      if (typeof bound !== 'number' || !isFinite(bound)) {\n        user().error(TAG, 'Scroll trigger boundaries must be finite.');\n        return result;\n      }\n\n      bound = Math.min(\n        Math.round(bound / SCROLL_PRECISION_PERCENT) * SCROLL_PRECISION_PERCENT,\n        100\n      );\n      result[bound] = false;\n    }\n    return result;\n  }\n\n  /**\n   * @param {!Object<number, boolean>} bounds\n   * @param {number} scrollPos Number representing the current scroll\n   * @param {string} varName variable name to assign to the bound that\n   * @param {function(!AnalyticsEvent)} listener\n   * triggers the event position.\n   */\n  triggerScrollEvents_(bounds, scrollPos, varName, listener) {\n    if (!scrollPos) {\n      return;\n    }\n\n    // Goes through each of the boundaries and fires an event if it has not\n    // been fired so far and it should be.\n    for (const b in bounds) {\n      if (!hasOwn(bounds, b)) {\n        continue;\n      }\n      const bound = parseInt(b, 10);\n      if (bound > scrollPos || bounds[bound]) {\n        continue;\n      }\n      bounds[bound] = true;\n      const vars = dict();\n      vars[varName] = b;\n      listener(\n        new AnalyticsEvent(\n          this.root_.getRootElement(),\n          AnalyticsEventType.SCROLL,\n          vars,\n          /** enableDataVars */ false\n        )\n      );\n    }\n  }\n}\n\n/**\n * Tracks events based on signals.\n * @implements {SignalTrackerDef}\n */\nexport class SignalTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n  }\n\n  /** @override */\n  dispose() {}\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    let target;\n    let signalsPromise;\n    const selector = config['selector'] || ':root';\n    if (selector == ':root' || selector == ':host') {\n      // Root selectors are delegated to analytics roots.\n      target = this.root.getRootElement();\n      signalsPromise = this.getRootSignal(eventType);\n    } else {\n      // Look for the AMP-element. Wait for DOM to be fully parsed to avoid\n      // false missed searches.\n      const selectionMethod = config['selectionMethod'];\n      signalsPromise = this.root\n        .getAmpElement(\n          context.parentElement || context,\n          selector,\n          selectionMethod\n        )\n        .then((element) => {\n          target = element;\n          return this.getElementSignal(eventType, target);\n        });\n    }\n\n    // Wait for the target and the event signal.\n    signalsPromise.then(() => {\n      listener(new AnalyticsEvent(target, eventType));\n    });\n    return NO_UNLISTEN;\n  }\n\n  /** @override */\n  getRootSignal(eventType) {\n    return this.root.signals().whenSignal(eventType);\n  }\n\n  /** @override */\n  getElementSignal(eventType, element) {\n    if (typeof element.signals != 'function') {\n      return Promise.resolve();\n    }\n    return element.signals().whenSignal(eventType);\n  }\n}\n\n/**\n * Tracks when the elements in the first viewport has been loaded - \"ini-load\".\n * @implements {SignalTrackerDef}\n */\nexport class IniLoadTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n  }\n\n  /** @override */\n  dispose() {}\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    let target;\n    let promise;\n    const selector = config['selector'] || ':root';\n    if (selector == ':root' || selector == ':host') {\n      // Root selectors are delegated to analytics roots.\n      target = this.root.getRootElement();\n      promise = this.getRootSignal();\n    } else {\n      // An AMP-element. Wait for DOM to be fully parsed to avoid\n      // false missed searches.\n      const selectionMethod = config['selectionMethod'];\n      promise = this.root\n        .getAmpElement(\n          context.parentElement || context,\n          selector,\n          selectionMethod\n        )\n        .then((element) => {\n          target = element;\n          return this.getElementSignal('ini-load', target);\n        });\n    }\n    // Wait for the target and the event.\n    promise.then(() => {\n      listener(new AnalyticsEvent(target, eventType));\n    });\n    return NO_UNLISTEN;\n  }\n\n  /** @override */\n  getRootSignal() {\n    return this.root.whenIniLoaded();\n  }\n\n  /** @override */\n  getElementSignal(unusedEventType, element) {\n    if (typeof element.signals != 'function') {\n      return Promise.resolve();\n    }\n    const signals = element.signals();\n    return Promise.race([\n      signals.whenSignal(CommonSignals.INI_LOAD),\n      signals.whenSignal(CommonSignals.LOAD_END),\n    ]);\n  }\n}\n\n/**\n * Timer event handler.\n */\nclass TimerEventHandler {\n  /**\n   * @param {JsonObject} timerSpec The timer specification.\n   * @param {function(): UnlistenDef=} opt_startBuilder Factory for building\n   *     start trackers for this timer.\n   * @param {function(): UnlistenDef=} opt_stopBuilder Factory for building stop\n   *     trackers for this timer.\n   */\n  constructor(timerSpec, opt_startBuilder, opt_stopBuilder) {\n    /** @private {number|undefined} */\n    this.intervalId_ = undefined;\n\n    userAssert(\n      'interval' in timerSpec,\n      'Timer interval specification required'\n    );\n    /** @private @const {number} */\n    this.intervalLength_ = Number(timerSpec['interval']) || 0;\n    userAssert(\n      this.intervalLength_ >= MIN_TIMER_INTERVAL_SECONDS,\n      'Bad timer interval specification'\n    );\n\n    /** @private @const {number} */\n    this.maxTimerLength_ =\n      'maxTimerLength' in timerSpec\n        ? Number(timerSpec['maxTimerLength'])\n        : DEFAULT_MAX_TIMER_LENGTH_SECONDS;\n    userAssert(this.maxTimerLength_ > 0, 'Bad maxTimerLength specification');\n\n    /** @private @const {boolean} */\n    this.maxTimerInSpec_ = 'maxTimerLength' in timerSpec;\n\n    /** @private @const {boolean} */\n    this.callImmediate_ =\n      'immediate' in timerSpec ? Boolean(timerSpec['immediate']) : true;\n\n    /** @private {?function()} */\n    this.intervalCallback_ = null;\n\n    /** @private {?UnlistenDef} */\n    this.unlistenStart_ = null;\n\n    /** @private {?UnlistenDef} */\n    this.unlistenStop_ = null;\n\n    /** @private @const {?function(): UnlistenDef} */\n    this.startBuilder_ = opt_startBuilder || null;\n\n    /** @private @const {?function(): UnlistenDef} */\n    this.stopBuilder_ = opt_stopBuilder || null;\n\n    /** @private {number|undefined} */\n    this.startTime_ = undefined; // milliseconds\n\n    /** @private {number|undefined} */\n    this.lastRequestTime_ = undefined; // milliseconds\n  }\n\n  /**\n   * @param {function()} startTimer\n   */\n  init(startTimer) {\n    if (!this.startBuilder_) {\n      // Timer starts on load.\n      startTimer();\n    } else {\n      // Timer starts on event.\n      this.listenForStart_();\n    }\n  }\n\n  /**\n   * Unlistens for start and stop.\n   */\n  dispose() {\n    this.unlistenForStop_();\n    this.unlistenForStart_();\n  }\n\n  /** @private */\n  listenForStart_() {\n    if (this.startBuilder_) {\n      this.unlistenStart_ = this.startBuilder_();\n    }\n  }\n\n  /** @private */\n  unlistenForStart_() {\n    if (this.unlistenStart_) {\n      this.unlistenStart_();\n      this.unlistenStart_ = null;\n    }\n  }\n\n  /** @private */\n  listenForStop_() {\n    if (this.stopBuilder_) {\n      try {\n        this.unlistenStop_ = this.stopBuilder_();\n      } catch (e) {\n        this.dispose(); // Stop timer and then throw error.\n        throw e;\n      }\n    }\n  }\n\n  /** @private */\n  unlistenForStop_() {\n    if (this.unlistenStop_) {\n      this.unlistenStop_();\n      this.unlistenStop_ = null;\n    }\n  }\n\n  /** @return {boolean} */\n  isRunning() {\n    return !!this.intervalId_;\n  }\n\n  /**\n   * @param {!Window} win\n   * @param {function()} timerCallback\n   * @param {function()} timeoutCallback\n   */\n  startIntervalInWindow(win, timerCallback, timeoutCallback) {\n    if (this.isRunning()) {\n      return;\n    }\n    this.startTime_ = Date.now();\n    this.lastRequestTime_ = undefined;\n    this.intervalCallback_ = timerCallback;\n    this.intervalId_ = win.setInterval(() => {\n      timerCallback();\n    }, this.intervalLength_ * 1000);\n\n    // If there's no way to turn off the timer, cap it.\n    if (!this.stopBuilder_ || (this.stopBuilder_ && this.maxTimerInSpec_)) {\n      win.setTimeout(() => {\n        timeoutCallback();\n      }, this.maxTimerLength_ * 1000);\n    }\n\n    this.unlistenForStart_();\n    if (this.callImmediate_) {\n      timerCallback();\n    }\n    this.listenForStop_();\n  }\n\n  /**\n   * @param {!Window} win\n   * @restricted\n   */\n  stopTimer_(win) {\n    if (!this.isRunning()) {\n      return;\n    }\n    this.intervalCallback_();\n    this.intervalCallback_ = null;\n    win.clearInterval(this.intervalId_);\n    this.intervalId_ = undefined;\n    this.lastRequestTime_ = undefined;\n    this.unlistenForStop_();\n    this.listenForStart_();\n  }\n\n  /**\n   * @private\n   * @return {number}\n   */\n  calculateDuration_() {\n    if (this.startTime_) {\n      return Date.now() - (this.lastRequestTime_ || this.startTime_);\n    }\n    return 0;\n  }\n\n  /** @return {!JsonObject} */\n  getTimerVars() {\n    let timerDuration = 0;\n    if (this.isRunning()) {\n      timerDuration = this.calculateDuration_();\n      this.lastRequestTime_ = Date.now();\n    }\n    return dict({\n      'timerDuration': timerDuration,\n      'timerStart': this.startTime_ || 0,\n    });\n  }\n}\n\n/**\n * Tracks timer events.\n */\nexport class TimerEventTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n    /** @const @private {!Object<number, TimerEventHandler>} */\n    this.trackers_ = {};\n\n    /** @private {number} */\n    this.timerIdSequence_ = 1;\n  }\n\n  /**\n   * @return {!Array<number>}\n   * @visibleForTesting\n   */\n  getTrackedTimerKeys() {\n    return /** @type {!Array<number>} */ (Object.keys(this.trackers_));\n  }\n\n  /** @override */\n  dispose() {\n    this.getTrackedTimerKeys().forEach((timerId) => {\n      this.removeTracker_(timerId);\n    });\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    const timerSpec = config['timerSpec'];\n    userAssert(\n      timerSpec && typeof timerSpec == 'object',\n      'Bad timer specification'\n    );\n    const timerStart = 'startSpec' in timerSpec ? timerSpec['startSpec'] : null;\n    userAssert(\n      !timerStart || typeof timerStart == 'object',\n      'Bad timer start specification'\n    );\n    const timerStop = 'stopSpec' in timerSpec ? timerSpec['stopSpec'] : null;\n    userAssert(\n      (!timerStart && !timerStop) || typeof timerStop == 'object',\n      'Bad timer stop specification'\n    );\n\n    const timerId = this.generateTimerId_();\n    let startBuilder;\n    let stopBuilder;\n    if (timerStart) {\n      const startTracker = this.getTracker_(timerStart);\n      userAssert(startTracker, 'Cannot track timer start');\n      startBuilder = startTracker.add.bind(\n        startTracker,\n        context,\n        timerStart['on'],\n        timerStart,\n        this.handleTimerToggle_.bind(this, timerId, eventType, listener)\n      );\n    }\n    if (timerStop) {\n      const stopTracker = this.getTracker_(timerStop);\n      userAssert(stopTracker, 'Cannot track timer stop');\n      stopBuilder = stopTracker.add.bind(\n        stopTracker,\n        context,\n        timerStop['on'],\n        timerStop,\n        this.handleTimerToggle_.bind(this, timerId, eventType, listener)\n      );\n    }\n\n    const timerHandler = new TimerEventHandler(\n      /** @type {!JsonObject} */ (timerSpec),\n      startBuilder,\n      stopBuilder\n    );\n    this.trackers_[timerId] = timerHandler;\n\n    timerHandler.init(\n      this.startTimer_.bind(this, timerId, eventType, listener)\n    );\n    return () => {\n      this.removeTracker_(timerId);\n    };\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  generateTimerId_() {\n    return ++this.timerIdSequence_;\n  }\n\n  /**\n   * @param {!JsonObject} config\n   * @return {?EventTracker}\n   * @private\n   */\n  getTracker_(config) {\n    const eventType = user().assertString(config['on']);\n    const trackerKey = getTrackerKeyName(eventType);\n\n    return this.root.getTrackerForAllowlist(\n      trackerKey,\n      getTrackerTypesForParentType('timer')\n    );\n  }\n\n  /**\n   * Toggles which listeners are active depending on timer state, so no race\n   * conditions can occur in the case where the timer starts and stops on the\n   * same event type from the same target.\n   * @param {number} timerId\n   * @param {string} eventType\n   * @param {function(!AnalyticsEvent)} listener\n   * @private\n   */\n  handleTimerToggle_(timerId, eventType, listener) {\n    const timerHandler = this.trackers_[timerId];\n    if (!timerHandler) {\n      return;\n    }\n    if (timerHandler.isRunning()) {\n      this.stopTimer_(timerId);\n    } else {\n      this.startTimer_(timerId, eventType, listener);\n    }\n  }\n\n  /**\n   * @param {number} timerId\n   * @param {string} eventType\n   * @param {function(!AnalyticsEvent)} listener\n   * @private\n   */\n  startTimer_(timerId, eventType, listener) {\n    const timerHandler = this.trackers_[timerId];\n    const timerCallback = () => {\n      listener(this.createEvent_(timerId, eventType));\n    };\n    timerHandler.startIntervalInWindow(\n      this.root.ampdoc.win,\n      timerCallback,\n      this.removeTracker_.bind(this, timerId)\n    );\n  }\n\n  /**\n   * @param {number} timerId\n   * @private\n   */\n  stopTimer_(timerId) {\n    this.trackers_[timerId].stopTimer_(this.root.ampdoc.win);\n  }\n\n  /**\n   * @param {number} timerId\n   * @param {string} eventType\n   * @return {!AnalyticsEvent}\n   * @private\n   */\n  createEvent_(timerId, eventType) {\n    return new AnalyticsEvent(\n      this.root.getRootElement(),\n      eventType,\n      this.trackers_[timerId].getTimerVars(),\n      /** enableDataVars */ false\n    );\n  }\n\n  /**\n   * @param {number} timerId\n   * @private\n   */\n  removeTracker_(timerId) {\n    if (this.trackers_[timerId]) {\n      this.stopTimer_(timerId);\n      this.trackers_[timerId].dispose();\n      delete this.trackers_[timerId];\n    }\n  }\n}\n\n/**\n * Tracks video session events\n */\nexport class VideoEventTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n\n    /** @private {?Observable<!Event>} */\n    this.sessionObservable_ = new Observable();\n\n    /** @private {?function(!Event)} */\n    this.boundOnSession_ = this.sessionObservable_.fire.bind(\n      this.sessionObservable_\n    );\n\n    Object.keys(VideoAnalyticsEvents).forEach((key) => {\n      this.root\n        .getRoot()\n        .addEventListener(VideoAnalyticsEvents[key], this.boundOnSession_);\n    });\n  }\n\n  /** @override */\n  dispose() {\n    const root = this.root.getRoot();\n    Object.keys(VideoAnalyticsEvents).forEach((key) => {\n      root.removeEventListener(VideoAnalyticsEvents[key], this.boundOnSession_);\n    });\n    this.boundOnSession_ = null;\n    this.sessionObservable_ = null;\n  }\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    const videoSpec = config['videoSpec'] || {};\n    const selector = config['selector'] || videoSpec['selector'];\n    const selectionMethod = config['selectionMethod'] || null;\n    const targetReady = this.root.getElement(\n      context,\n      selector,\n      selectionMethod\n    );\n\n    const endSessionWhenInvisible = videoSpec['end-session-when-invisible'];\n    const excludeAutoplay = videoSpec['exclude-autoplay'];\n    const interval = videoSpec['interval'];\n    const percentages = videoSpec['percentages'];\n\n    const on = config['on'];\n\n    const percentageInterval = 5;\n\n    let intervalCounter = 0;\n    let lastPercentage = 0;\n\n    return this.sessionObservable_.add((event) => {\n      const {type} = event;\n      const details = /** @type {?JsonObject|undefined} */ (getData(event));\n      const normalizedType = normalizeVideoEventType(type, details);\n\n      if (normalizedType !== on) {\n        return;\n      }\n\n      if (normalizedType === VideoAnalyticsEvents.SECONDS_PLAYED && !interval) {\n        user().error(\n          TAG,\n          'video-seconds-played requires interval spec with non-zero value'\n        );\n        return;\n      }\n\n      if (normalizedType === VideoAnalyticsEvents.SECONDS_PLAYED) {\n        intervalCounter++;\n        if (intervalCounter % interval !== 0) {\n          return;\n        }\n      }\n\n      if (normalizedType === VideoAnalyticsEvents.PERCENTAGE_PLAYED) {\n        if (!percentages) {\n          user().error(\n            TAG,\n            'video-percentage-played requires percentages spec.'\n          );\n          return;\n        }\n\n        for (let i = 0; i < percentages.length; i++) {\n          const percentage = percentages[i];\n\n          if (percentage <= 0 || percentage % percentageInterval != 0) {\n            user().error(\n              TAG,\n              'Percentages must be set in increments of %s with non-zero ' +\n                'values',\n              percentageInterval\n            );\n\n            return;\n          }\n        }\n\n        const normalizedPercentage = details['normalizedPercentage'];\n        const normalizedPercentageInt = parseInt(normalizedPercentage, 10);\n\n        devAssert(isFiniteNumber(normalizedPercentageInt));\n        devAssert(normalizedPercentageInt % percentageInterval == 0);\n\n        // Don't trigger if current percentage is the same as\n        // last triggered percentage\n        if (\n          lastPercentage == normalizedPercentageInt &&\n          percentages.length > 1\n        ) {\n          return;\n        }\n\n        if (percentages.indexOf(normalizedPercentageInt) < 0) {\n          return;\n        }\n\n        lastPercentage = normalizedPercentageInt;\n      }\n\n      if (\n        type === VideoAnalyticsEvents.SESSION_VISIBLE &&\n        !endSessionWhenInvisible\n      ) {\n        return;\n      }\n\n      if (excludeAutoplay && details['state'] === PlayingStates.PLAYING_AUTO) {\n        return;\n      }\n\n      const el = dev().assertElement(\n        event.target,\n        'No target specified by video session event.'\n      );\n      targetReady.then((target) => {\n        if (!target.contains(el)) {\n          return;\n        }\n        const normalizedDetails = removeInternalVars(details);\n        listener(new AnalyticsEvent(target, normalizedType, normalizedDetails));\n      });\n    });\n  }\n}\n\n/**\n * Normalize video type from internal representation into the observed string\n * from the analytics configuration.\n * @param {string} type\n * @param {?JsonObject|undefined} details\n * @return {string}\n */\nfunction normalizeVideoEventType(type, details) {\n  if (type == VideoAnalyticsEvents.SESSION_VISIBLE) {\n    return VideoAnalyticsEvents.SESSION;\n  }\n\n  // Custom video analytics events are listened to from one signal type,\n  // but they're configured by user with their custom name.\n  if (type == VideoAnalyticsEvents.CUSTOM) {\n    return dev().assertString(details[videoAnalyticsCustomEventTypeKey]);\n  }\n\n  return type;\n}\n\n/**\n * @param {?JsonObject|undefined} details\n * @return {!JsonObject|undefined}\n */\nfunction removeInternalVars(details) {\n  if (!details) {\n    return dict();\n  }\n  const clean = {...details};\n  delete clean[videoAnalyticsCustomEventTypeKey];\n  return /** @type {!JsonObject} */ (clean);\n}\n\n/**\n * Tracks visibility events.\n */\nexport class VisibilityTracker extends EventTracker {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    super(root);\n\n    /** @private */\n    this.waitForTrackers_ = {};\n  }\n\n  /** @override */\n  dispose() {}\n\n  /** @override */\n  add(context, eventType, config, listener) {\n    const visibilitySpec = config['visibilitySpec'] || {};\n    const selector = config['selector'] || visibilitySpec['selector'];\n    const waitForSpec = visibilitySpec['waitFor'];\n    let reportWhenSpec = visibilitySpec['reportWhen'];\n    let createReportReadyPromiseFunc = null;\n    if (reportWhenSpec) {\n      userAssert(\n        !visibilitySpec['repeat'],\n        'reportWhen and repeat are mutually exclusive.'\n      );\n    }\n\n    if (eventType === AnalyticsEventType.HIDDEN) {\n      if (reportWhenSpec) {\n        user().error(\n          TAG,\n          'ReportWhen should not be defined when eventType is \"hidden\"'\n        );\n      }\n      // special polyfill for eventType: 'hidden'\n      reportWhenSpec = 'documentHidden';\n    }\n\n    const visibilityManager = this.root.getVisibilityManager();\n\n    if (reportWhenSpec == 'documentHidden') {\n      createReportReadyPromiseFunc =\n        this.createReportReadyPromiseForDocumentHidden_.bind(this);\n    } else if (reportWhenSpec == 'documentExit') {\n      createReportReadyPromiseFunc =\n        this.createReportReadyPromiseForDocumentExit_.bind(this);\n    } else {\n      userAssert(\n        !reportWhenSpec,\n        'reportWhen value \"%s\" not supported.',\n        reportWhenSpec\n      );\n    }\n\n    // Root selectors are delegated to analytics roots.\n    if (!selector || selector == ':root' || selector == ':host') {\n      // When `selector` is specified, we always use \"ini-load\" signal as\n      // a \"ready\" signal.\n      const readyPromiseWaitForSpec =\n        waitForSpec || (selector ? 'ini-load' : 'none');\n      return visibilityManager.listenRoot(\n        visibilitySpec,\n        this.getReadyPromise(readyPromiseWaitForSpec),\n        createReportReadyPromiseFunc,\n        this.onEvent_.bind(\n          this,\n          eventType,\n          listener,\n          this.root.getRootElement()\n        )\n      );\n    }\n\n    // An element. Wait for DOM to be fully parsed to avoid\n    // false missed searches.\n    // Array selectors do not suppor the special cases: ':host' & ':root'\n    const selectionMethod =\n      config['selectionMethod'] || visibilitySpec['selectionMethod'];\n    this.assertUniqueSelectors_(selector);\n    const unlistenPromise = this.root\n      .getElements(context.parentElement || context, selector, selectionMethod)\n      .then((elements) => {\n        const unlistenCallbacks = [];\n        for (let i = 0; i < elements.length; i++) {\n          unlistenCallbacks.push(\n            visibilityManager.listenElement(\n              elements[i],\n              visibilitySpec,\n              this.getReadyPromise(waitForSpec, elements[i]),\n              createReportReadyPromiseFunc,\n              this.onEvent_.bind(this, eventType, listener, elements[i])\n            )\n          );\n        }\n        return unlistenCallbacks;\n      });\n\n    return function () {\n      unlistenPromise.then((unlistenCallbacks) => {\n        for (let i = 0; i < unlistenCallbacks.length; i++) {\n          unlistenCallbacks[i]();\n        }\n      });\n    };\n  }\n\n  /**\n   * Assert that the selectors are all unique\n   * @param {!Array<string>|string} selectors\n   */\n  assertUniqueSelectors_(selectors) {\n    if (isArray(selectors)) {\n      const map = {};\n      for (let i = 0; i < selectors.length; i++) {\n        userAssert(\n          !map[selectors[i]],\n          'Cannot have duplicate selectors in selectors list: %s',\n          selectors\n        );\n        map[selectors[i]] = selectors[i];\n      }\n    }\n  }\n\n  /**\n   * Returns a Promise indicating that we're ready to report the analytics,\n   * in the case of reportWhen: documentHidden\n   * @return {!Promise}\n   * @private\n   */\n  createReportReadyPromiseForDocumentHidden_() {\n    const {ampdoc} = this.root;\n\n    if (!ampdoc.isVisible()) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve) => {\n      ampdoc.onVisibilityChanged(() => {\n        if (!ampdoc.isVisible()) {\n          resolve();\n        }\n      });\n    });\n  }\n\n  /**\n   * Returns a Promise indicating that we're ready to report the analytics,\n   * in the case of reportWhen: documentExit\n   * @return {!Promise}\n   * @private\n   */\n  createReportReadyPromiseForDocumentExit_() {\n    const deferred = new Deferred();\n    const {win} = this.root.ampdoc;\n    let unloadListener, pageHideListener;\n\n    // Do not add an unload listener unless pagehide is not available.\n    // If an unload listener is present, the back/forward cache will not work.\n    // The BFCache saves pages to be instantly loaded when navigating back\n    // or forward and pauses their JavaScript. The pagehide event was added\n    // to give developers control over the behavior, and the unload listener\n    // interferes with it. To allow publishers to use the default BFCache\n    // behavior, we should not add an unload listener.\n    if (!this.supportsPageHide_()) {\n      win.addEventListener(\n        /*OK*/ 'unload',\n        (unloadListener = () => {\n          win.removeEventListener('unload', unloadListener);\n          deferred.resolve();\n        })\n      );\n    }\n\n    // Note: pagehide is currently not supported on Opera Mini, nor IE<=10.\n    // Documentation conflicts as to whether Safari on iOS will also fire it\n    // when switching tabs or switching to another app. Chrome does not fire it\n    // in this case.\n    // Good, but several years old, analysis at:\n    // https://www.igvita.com/2015/11/20/dont-lose-user-and-app-state-use-page-visibility/\n    // Especially note the event table on this page.\n    win.addEventListener(\n      'pagehide',\n      (pageHideListener = () => {\n        win.removeEventListener('pagehide', pageHideListener);\n        deferred.resolve();\n      })\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Detect support for the pagehide event.\n   * IE<=10 and Opera Mini do not support the pagehide event and\n   * possibly others, so we feature-detect support with this method.\n   * This is in a stubbable method for testing.\n   * @return {boolean}\n   * @private visible for testing\n   */\n  supportsPageHide_() {\n    return 'onpagehide' in this.root.ampdoc.win;\n  }\n\n  /**\n   * @param {string|undefined} waitForSpec\n   * @param {Element=} opt_element\n   * @return {?Promise}\n   * @visibleForTesting\n   */\n  getReadyPromise(waitForSpec, opt_element) {\n    if (opt_element) {\n      if (!isAmpElement(opt_element)) {\n        userAssert(\n          !waitForSpec || waitForSpec == 'none',\n          'waitFor for non-AMP elements must be none or null. Found %s',\n          waitForSpec\n        );\n      } else {\n        waitForSpec = waitForSpec || 'ini-load';\n      }\n    }\n\n    if (!waitForSpec || waitForSpec == 'none') {\n      // Default case, waitFor selector is not defined, wait for nothing\n      return null;\n    }\n\n    const trackerAllowlist = getTrackerTypesForParentType('visible');\n    userAssert(\n      trackerAllowlist[waitForSpec] !== undefined,\n      'waitFor value %s not supported',\n      waitForSpec\n    );\n\n    const waitForTracker =\n      this.waitForTrackers_[waitForSpec] ||\n      this.root.getTrackerForAllowlist(waitForSpec, trackerAllowlist);\n    if (waitForTracker) {\n      this.waitForTrackers_[waitForSpec] = waitForTracker;\n    } else {\n      return null;\n    }\n\n    // Wait for root signal if there's no element selected.\n    return opt_element\n      ? waitForTracker.getElementSignal(waitForSpec, opt_element)\n      : waitForTracker.getRootSignal(waitForSpec);\n  }\n\n  /**\n   * @param {string} eventType\n   * @param {function(!AnalyticsEvent)} listener\n   * @param {!Element} target\n   * @param {!JsonObject} state\n   * @private\n   */\n  onEvent_(eventType, listener, target, state) {\n    // TODO: Verify usage and change behavior to have state override data-vars\n    const attr = getDataParamsFromAttributes(\n      target,\n      /* computeParamNameFunc */ undefined,\n      VARIABLE_DATA_ATTRIBUTE_KEY\n    );\n    for (const key in attr) {\n      state[key] = attr[key];\n    }\n    listener(\n      new AnalyticsEvent(target, eventType, state, /** enableDataVars */ false)\n    );\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './core/constants/common-signals';\nimport {Services} from './services';\nimport {TickLabel} from './core/constants/enums';\nimport {dev, devAssert} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './core/types/object';\nimport {rethrowAsync} from './core/error';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch((reason) => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then((services) => {\n      bodyMadeVisible = true;\n      if (INI_LOAD_INOB) {\n        // Force sync measurement to ensure that style recalc is complete\n        // before showing body, which would trigger FCP. This should reduce\n        // make it less likely that a CLS would be triggered after FCP.\n        doc.body./*OK*/ getBoundingClientRect();\n      }\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick(TickLabel.MAKE_BODY_VISIBLE);\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A priority queue backed with sorted array.\n * @template T\n */\nexport default class PriorityQueue {\n  /**\n   * Creates an instance of PriorityQueue.\n   */\n  constructor() {\n    /** @private @const {Array<{item: T, priority: number}>} */\n    this.queue_ = [];\n  }\n\n  /**\n   * Returns the max priority item without dequeueing it.\n   * @return {T}\n   */\n  peek() {\n    const l = this.length;\n    if (!l) {\n      return null;\n    }\n    return this.queue_[l - 1].item;\n  }\n\n  /**\n   * Enqueues an item with the given priority.\n   * @param {T} item\n   * @param {number} priority\n   */\n  enqueue(item, priority) {\n    if (isNaN(priority)) {\n      throw new Error('Priority must not be NaN.');\n    }\n    const i = this.binarySearch_(priority);\n    this.queue_.splice(i, 0, {item, priority});\n  }\n\n  /**\n   * Returns index at which item with `target` priority should be inserted.\n   * @param {number} target\n   * @return {number}\n   * @private\n   */\n  binarySearch_(target) {\n    let i = -1;\n    let lo = 0;\n    let hi = this.length;\n    while (lo <= hi) {\n      i = Math.floor((lo + hi) / 2);\n      // This means `target` is the new max priority in the queue.\n      if (i === this.length) {\n        break;\n      }\n      // Stop searching once p[i] >= target AND p[i-1] < target.\n      // This way, we'll return the index of the first occurence of `target`\n      // priority (if any), which preserves FIFO order of same-priority items.\n      if (this.queue_[i].priority < target) {\n        lo = i + 1;\n      } else if (i > 0 && this.queue_[i - 1].priority >= target) {\n        hi = i - 1;\n      } else {\n        break;\n      }\n    }\n    return i;\n  }\n\n  /**\n   * @param {function(T)} callback\n   */\n  forEach(callback) {\n    let index = this.length;\n    while (index--) {\n      callback(this.queue_[index].item);\n    }\n  }\n\n  /**\n   * Dequeues the max priority item.\n   * Items with the same priority are dequeued in FIFO order.\n   * @return {T}\n   */\n  dequeue() {\n    if (!this.length) {\n      return null;\n    }\n    return this.queue_.pop().item;\n  }\n\n  /**\n   * The number of items in the queue.\n   * @return {number}\n   */\n  get length() {\n    return this.queue_.length;\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {dev} from './log';\nimport {getData} from './event-helper';\nimport {getServiceForDoc, registerServiceBuilderForDoc} from './service';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport PriorityQueue from './core/data-structures/priority-queue';\n\n/**\n * @const {string}\n */\nconst TAG = 'CHUNK';\n\n/**\n * @type {boolean}\n */\nlet deactivated = /nochunking=1/.test(self.location.hash);\nlet allowLongTasks = false;\n\n/**\n * @const {!Promise}\n */\nconst resolved = Promise.resolve();\n\n/**\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n * @private\n */\nfunction chunkServiceForDoc(elementOrAmpDoc) {\n  registerServiceBuilderForDoc(elementOrAmpDoc, 'chunk', Chunks);\n  return getServiceForDoc(elementOrAmpDoc, 'chunk');\n}\n\n/**\n * Run the given function. For visible documents the function will be\n * called in a micro task (Essentially ASAP). If the document is\n * not visible, tasks will yield to the event loop (to give the browser\n * time to do other things) and may even be further delayed until\n * there is time.\n *\n * @param {!Document|!./service/ampdoc-impl.AmpDoc} doc\n * @param {function(?IdleDeadline)} fn\n * @param {boolean=} opt_makesBodyVisible Pass true if this service makes\n *     the body visible. This is relevant because it may influence the\n *     task scheduling strategy.\n */\nexport function startupChunk(doc, fn, opt_makesBodyVisible) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n  const service = chunkServiceForDoc(doc.documentElement || doc);\n  service.runForStartup(fn);\n  if (opt_makesBodyVisible) {\n    service.runForStartup(() => {\n      service.bodyIsVisible_ = true;\n    });\n  }\n}\n\n/**\n * Run the given function sometime in the future without blocking UI.\n *\n * Higher priority tasks are executed before lower priority tasks.\n * Tasks with the same priority are executed in FIFO order.\n *\n * Uses `requestIdleCallback` if available and passes the `IdleDeadline`\n * object to the function, which can be used to perform a variable amount\n * of work depending on the remaining amount of idle time.\n *\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {function(?IdleDeadline)} fn\n * @param {ChunkPriority} priority\n */\nexport function chunk(elementOrAmpDoc, fn, priority) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n  const service = chunkServiceForDoc(elementOrAmpDoc);\n  service.run(fn, priority);\n}\n\n/**\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n */\nexport function chunkInstanceForTesting(elementOrAmpDoc) {\n  return chunkServiceForDoc(elementOrAmpDoc);\n}\n\n/**\n * Use a standard micro task for every invocation. This should only\n * be called from the AMP bootstrap script if it is known that\n * chunking makes no sense. In particular this is the case when\n * AMP runs in the `amp-shadow` multi document mode.\n */\nexport function deactivateChunking() {\n  deactivated = true;\n}\n\n/**\n * Allow continuing macro tasks after a long task (>5ms).\n * In particular this is the case when AMP runs in the `amp-inabox` ads mode.\n */\nexport function allowLongTasksInChunking() {\n  allowLongTasks = true;\n}\n\n/**\n * @visibleForTesting\n */\nexport function activateChunkingForTesting() {\n  deactivated = false;\n}\n\n/**\n * Runs all currently scheduled chunks.\n * Independent of errors it will unwind the queue. Will afterwards\n * throw the first encountered error.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n */\nexport function runChunksForTesting(elementOrAmpDoc) {\n  const service = chunkInstanceForTesting(elementOrAmpDoc);\n  const errors = [];\n  while (true) {\n    try {\n      if (!service.execute_(/* idleDeadline */ null)) {\n        break;\n      }\n    } catch (e) {\n      errors.push(e);\n    }\n  }\n  if (errors.length) {\n    throw errors[0];\n  }\n}\n\n/**\n * The priority of a chunk task. Higher priority tasks have higher values.\n * @enum {number}\n */\nexport const ChunkPriority = {\n  HIGH: 20,\n  LOW: 10,\n  BACKGROUND: 0,\n};\n\n/** @enum {string} */\nconst TaskState = {\n  NOT_RUN: 'not_run',\n  RUN: 'run',\n};\n\n/**\n * A default chunkable task.\n * @private\n */\nclass Task {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   */\n  constructor(fn) {\n    /** @public {TaskState} */\n    this.state = TaskState.NOT_RUN;\n\n    /** @private @const {!function(?IdleDeadline)} */\n    this.fn_ = fn;\n  }\n\n  /**\n   * Executes the wrapped function.\n   * @param {?IdleDeadline} idleDeadline\n   * @throws {Error}\n   * @protected\n   */\n  runTask_(idleDeadline) {\n    if (this.state == TaskState.RUN) {\n      return;\n    }\n    this.state = TaskState.RUN;\n    try {\n      this.fn_(idleDeadline);\n    } catch (e) {\n      this.onTaskError_(e);\n      throw e;\n    }\n  }\n\n  /**\n   * @return {string}\n   * @protected\n   */\n  getName_() {\n    return this.fn_.displayName || this.fn_.name;\n  }\n\n  /**\n   * Optional handling when a task run throws an error.\n   * @param {Error} unusedError\n   * @private\n   */\n  onTaskError_(unusedError) {\n    // By default, no-op.\n  }\n\n  /**\n   * Returns true if this task should be run without delay.\n   * @return {boolean}\n   * @protected\n   */\n  immediateTriggerCondition_() {\n    // By default, there are no immediate trigger conditions.\n    return false;\n  }\n\n  /**\n   * Returns true if this task should be scheduled using `requestIdleCallback`.\n   * Otherwise, task is scheduled as macro-task on next event loop.\n   * @return {boolean}\n   * @protected\n   */\n  useRequestIdleCallback_() {\n    // By default, never use requestIdleCallback.\n    return false;\n  }\n}\n\n/**\n * A task that's run as part of AMP's startup sequence.\n * @private\n */\nclass StartupTask extends Task {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   * @param {!Window} win\n   * @param {!Chunks} chunks\n   */\n  constructor(fn, win, chunks) {\n    super(fn);\n\n    /** @private @const */\n    this.chunks_ = chunks;\n  }\n\n  /** @override */\n  onTaskError_(unusedError) {\n    // Startup tasks run early in init. All errors should show the doc.\n    makeBodyVisibleRecovery(self.document);\n  }\n\n  /** @override */\n  immediateTriggerCondition_() {\n    // Run in a micro task when the doc is visible. Otherwise, run after\n    // having yielded to the event queue once.\n    return this.isVisible_();\n  }\n\n  /** @override */\n  useRequestIdleCallback_() {\n    // We only start using requestIdleCallback when the core runtime has\n    // been initialized. Otherwise we risk starving ourselves\n    // before the render-critical work is done.\n    return this.chunks_.coreReady_;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isVisible_() {\n    return this.chunks_.ampdoc.isVisible();\n  }\n}\n\n/**\n * Handles queueing, scheduling and executing tasks.\n */\nclass Chunks {\n  /**\n   * @param {!./service/ampdoc-impl.AmpDoc} ampDoc\n   */\n  constructor(ampDoc) {\n    /** @protected @const {!./service/ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampDoc;\n    /** @private @const {!Window} */\n    this.win_ = ampDoc.win;\n    /** @private @const {!PriorityQueue<Task>} */\n    this.tasks_ = new PriorityQueue();\n    /** @private @const {function(?IdleDeadline)} */\n    this.boundExecute_ = this.execute_.bind(this);\n    /** @private {number} */\n    this.durationOfLastExecution_ = 0;\n    /** @private @const {boolean} */\n    this.supportsInputPending_ = !!(\n      this.win_.navigator.scheduling &&\n      this.win_.navigator.scheduling.isInputPending\n    );\n\n    /**\n     * Set to true if we scheduled a macro or micro task to execute the next\n     * task. If true, we don't schedule another one.\n     * Not set to true if we use rIC, because we always want to transition\n     * to immeditate invocation from that state.\n     * @private {boolean}\n     */\n    this.scheduledImmediateInvocation_ = false;\n    /** @private {boolean} Whether the document can actually be painted. */\n    this.bodyIsVisible_ = this.win_.document.documentElement.hasAttribute(\n      'i-amphtml-no-boilerplate'\n    );\n\n    this.win_.addEventListener('message', (e) => {\n      if (getData(e) == 'amp-macro-task') {\n        this.execute_(/* idleDeadline */ null);\n      }\n    });\n\n    /** @protected {boolean} */\n    this.coreReady_ = false;\n    Services.viewerPromiseForDoc(ampDoc).then(() => {\n      // Once the viewer has been resolved, most of core runtime has been\n      // initialized as well.\n      this.coreReady_ = true;\n    });\n\n    ampDoc.onVisibilityChanged(() => {\n      if (ampDoc.isVisible()) {\n        this.schedule_();\n      }\n    });\n  }\n\n  /**\n   * Run fn as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   * @param {number} priority\n   */\n  run(fn, priority) {\n    const t = new Task(fn);\n    this.enqueueTask_(t, priority);\n  }\n\n  /**\n   * Run a fn that's part of AMP's startup sequence as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   */\n  runForStartup(fn) {\n    const t = new StartupTask(fn, this.win_, this);\n    this.enqueueTask_(t, Number.POSITIVE_INFINITY);\n  }\n\n  /**\n   * Queues a task to be executed later with given priority.\n   * @param {!Task} task\n   * @param {number} priority\n   * @private\n   */\n  enqueueTask_(task, priority) {\n    this.tasks_.enqueue(task, priority);\n    this.schedule_();\n  }\n\n  /**\n   * Returns the next task that hasn't been run yet.\n   * If `opt_dequeue` is true, remove the returned task from the queue.\n   * @param {boolean=} opt_dequeue\n   * @return {?Task}\n   * @private\n   */\n  nextTask_(opt_dequeue) {\n    let t = this.tasks_.peek();\n    // Dequeue tasks until we find one that hasn't been run yet.\n    while (t && t.state !== TaskState.NOT_RUN) {\n      this.tasks_.dequeue();\n      t = this.tasks_.peek();\n    }\n    // If `opt_dequeue` is true, remove this task from the queue.\n    if (t && opt_dequeue) {\n      this.tasks_.dequeue();\n    }\n    return t;\n  }\n\n  /**\n   * Run a task.\n   * Schedule the next round if there are more tasks.\n   * @param {?IdleDeadline} idleDeadline\n   * @return {boolean} Whether anything was executed.\n   * @private\n   */\n  execute_(idleDeadline) {\n    const t = this.nextTask_(/* opt_dequeue */ true);\n    if (!t) {\n      this.scheduledImmediateInvocation_ = false;\n      this.durationOfLastExecution_ = 0;\n      return false;\n    }\n    let before;\n    try {\n      before = Date.now();\n      t.runTask_(idleDeadline);\n    } finally {\n      // We want to capture the time of the entire task duration including\n      // scheduled immediate (from resolved promises) micro tasks.\n      // Lacking a better way to do this we just scheduled 10 nested\n      // micro tasks.\n      resolved\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then(() => {\n          this.scheduledImmediateInvocation_ = false;\n          this.durationOfLastExecution_ += Date.now() - before;\n          dev().fine(\n            TAG,\n            t.getName_(),\n            'Chunk duration',\n            Date.now() - before,\n            this.durationOfLastExecution_\n          );\n\n          this.schedule_();\n        });\n    }\n    return true;\n  }\n\n  /**\n   * Calls `execute_()` asynchronously.\n   * @param {?IdleDeadline} idleDeadline\n   * @private\n   */\n  executeAsap_(idleDeadline) {\n    // If the user-agent supports isInputPending, use it to break to a macro task as necessary.\n    // Otherwise If we've spent over 5 millseconds executing the\n    // last instruction yield back to the main thread.\n    // 5 milliseconds is a magic number.\n    if (\n      !allowLongTasks &&\n      this.bodyIsVisible_ &&\n      (this.supportsInputPending_\n        ? /** @type {!{scheduling: {isInputPending: Function}}} */ (\n            this.win_.navigator\n          ).scheduling.isInputPending()\n        : this.durationOfLastExecution_ > 5)\n    ) {\n      this.durationOfLastExecution_ = 0;\n      this.requestMacroTask_();\n      return;\n    }\n    resolved.then(() => {\n      this.boundExecute_(idleDeadline);\n    });\n  }\n\n  /**\n   * Schedule running the next queued task.\n   * @private\n   */\n  schedule_() {\n    if (this.scheduledImmediateInvocation_) {\n      return;\n    }\n    const nextTask = this.nextTask_();\n    if (!nextTask) {\n      return;\n    }\n    if (nextTask.immediateTriggerCondition_()) {\n      this.scheduledImmediateInvocation_ = true;\n      this.executeAsap_(/* idleDeadline */ null);\n      return;\n    }\n    // If requestIdleCallback exists, schedule a task with it, but\n    // do not wait longer than two seconds.\n    if (nextTask.useRequestIdleCallback_() && this.win_.requestIdleCallback) {\n      onIdle(\n        this.win_,\n        // Wait until we have a budget of at least 15ms.\n        // 15ms is a magic number. Budgets are higher when the user\n        // is completely idle (around 40), but that occurs too\n        // rarely to be usable. 15ms budgets can happen during scrolling\n        // but only if the device is doing super, super well, and no\n        // real processing is done between frames.\n        15 /* minimumTimeRemaining */,\n        2000 /* timeout */,\n        this.boundExecute_\n      );\n      return;\n    }\n    this.requestMacroTask_();\n  }\n\n  /**\n   * Requests executing of a macro task. Yields to the event queue\n   * before executing the task.\n   * Places task on browser message queue which then respectively\n   * triggers dequeuing and execution of a chunk.\n   */\n  requestMacroTask_() {\n    // The message doesn't actually matter.\n    this.win_./*OK*/ postMessage('amp-macro-task', '*');\n  }\n}\n\n/**\n * Delays calling the given function until the browser is notifying us\n * about a certain minimum budget or the timeout is reached.\n * @param {!Window} win\n * @param {number} minimumTimeRemaining Minimum number of millis idle\n *     budget for callback to fire.\n * @param {number} timeout in millis for callback to fire.\n * @param {function(?IdleDeadline)} fn Callback.\n * @visibleForTesting\n */\nexport function onIdle(win, minimumTimeRemaining, timeout, fn) {\n  const startTime = Date.now();\n  /**\n   * @param {!IdleDeadline} info\n   */\n  function rIC(info) {\n    if (info.timeRemaining() < minimumTimeRemaining) {\n      const remainingTimeout = timeout - (Date.now() - startTime);\n      if (remainingTimeout <= 0 || info.didTimeout) {\n        dev().fine(TAG, 'Timed out', timeout, info.didTimeout);\n        fn(info);\n      } else {\n        dev().fine(\n          TAG,\n          'Rescheduling with',\n          remainingTimeout,\n          info.timeRemaining()\n        );\n        win.requestIdleCallback(rIC, {timeout: remainingTimeout});\n      }\n    } else {\n      dev().fine(TAG, 'Running idle callback with ', minimumTimeRemaining);\n      fn(info);\n    }\n  }\n  win.requestIdleCallback(rIC, {timeout});\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../services';\nimport {WindowInterface} from '../core/window/interface';\nimport {dev} from '../log';\nimport {dict} from '../core/types/object';\nimport {getCookie, setCookie} from '../cookies';\nimport {isProxyOrigin, parseUrlDeprecated} from '../url';\n\nconst GOOGLE_API_URL =\n  'https://ampcid.google.com/v1/publisher:getClientId?key=';\n\nconst TAG = 'GoogleCidApi';\nconst AMP_TOKEN = 'AMP_TOKEN';\n\n/** @enum {string} */\nexport const TokenStatus = {\n  RETRIEVING: '$RETRIEVING',\n  OPT_OUT: '$OPT_OUT',\n  NOT_FOUND: '$NOT_FOUND',\n  ERROR: '$ERROR',\n};\n\nconst TIMEOUT = 30000;\nconst HOUR = 60 * 60 * 1000;\nconst DAY = 24 * HOUR;\nconst YEAR = 365 * DAY;\n\n/**\n * Client impl for Google CID API\n */\nexport class GoogleCidApi {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  constructor(ampdoc) {\n    /**\n     * @private {!Window}\n     */\n    this.win_ = ampdoc.win;\n    /**\n     * @private {!./timer-impl.Timer}\n     */\n    this.timer_ = Services.timerFor(this.win_);\n\n    /**\n     * @private {!Object<string, !Promise<?string>>}\n     */\n    this.cidPromise_ = {};\n\n    const {canonicalUrl} = Services.documentInfoForDoc(ampdoc);\n\n    /** @private {?string} */\n    this.canonicalOrigin_ = canonicalUrl\n      ? parseUrlDeprecated(canonicalUrl).origin\n      : null;\n  }\n\n  /**\n   * @param {string} apiKey\n   * @param {string} scope\n   * @return {!Promise<?string>}\n   */\n  getScopedCid(apiKey, scope) {\n    if (this.cidPromise_[scope]) {\n      return this.cidPromise_[scope];\n    }\n    let token;\n    // Block the request if a previous request is on flight\n    // Poll every 200ms. Longer interval means longer latency for the 2nd CID.\n    return (this.cidPromise_[scope] = this.timer_\n      .poll(200, () => {\n        token = getCookie(this.win_, AMP_TOKEN);\n        return token !== TokenStatus.RETRIEVING;\n      })\n      .then(() => {\n        if (token === TokenStatus.OPT_OUT) {\n          return TokenStatus.OPT_OUT;\n        }\n        // If the page referrer is proxy origin, we force to use API even the\n        // token indicates a previous fetch returned nothing\n        const forceFetch =\n          token === TokenStatus.NOT_FOUND && this.isReferrerProxyOrigin_();\n\n        // Token is in a special state, fallback to existing cookie\n        if (!forceFetch && this.isStatusToken_(token)) {\n          return null;\n        }\n\n        if (!token || this.isStatusToken_(token)) {\n          this.persistToken_(TokenStatus.RETRIEVING, TIMEOUT);\n        }\n\n        const url = GOOGLE_API_URL + apiKey;\n        return this.fetchCid_(dev().assertString(url), scope, token)\n          .then((response) => {\n            const cid = this.handleResponse_(response);\n            if (!cid && response['alternateUrl']) {\n              // If an alternate url is provided, try again with the alternate\n              // url The client is still responsible for appending API keys to\n              // the URL.\n              const altUrl = `${response['alternateUrl']}?key=${apiKey}`;\n              return this.fetchCid_(\n                dev().assertString(altUrl),\n                scope,\n                token\n              ).then(this.handleResponse_.bind(this));\n            }\n            return cid;\n          })\n          .catch((e) => {\n            this.persistToken_(TokenStatus.ERROR, TIMEOUT);\n            if (e && e.response) {\n              e.response.json().then((res) => {\n                dev().error(TAG, JSON.stringify(res));\n              });\n            } else {\n              dev().error(TAG, e);\n            }\n            return null;\n          });\n      }));\n  }\n\n  /**\n   * @param {string} url\n   * @param {string} scope\n   * @param {?string} token\n   * @return {!Promise<!JsonObject>}\n   */\n  fetchCid_(url, scope, token) {\n    const payload = dict({\n      'originScope': scope,\n      'canonicalOrigin': this.canonicalOrigin_,\n    });\n    if (token) {\n      payload['securityToken'] = token;\n    }\n    return this.timer_.timeoutPromise(\n      TIMEOUT,\n      Services.xhrFor(this.win_)\n        .fetchJson(url, {\n          method: 'POST',\n          ampCors: false,\n          credentials: 'include',\n          mode: 'cors',\n          body: payload,\n        })\n        .then((res) => res.json())\n    );\n  }\n\n  /**\n   * @param {!JsonObject} res\n   * @return {?string}\n   */\n  handleResponse_(res) {\n    if (res['optOut']) {\n      this.persistToken_(TokenStatus.OPT_OUT, YEAR);\n      return TokenStatus.OPT_OUT;\n    }\n    if (res['clientId']) {\n      this.persistToken_(res['securityToken'], YEAR);\n      return res['clientId'];\n    }\n    if (res['alternateUrl']) {\n      return null;\n    }\n    this.persistToken_(TokenStatus.NOT_FOUND, HOUR);\n    return null;\n  }\n\n  /**\n   * @param {string|undefined} tokenValue\n   * @param {number} expires\n   */\n  persistToken_(tokenValue, expires) {\n    if (tokenValue) {\n      setCookie(this.win_, AMP_TOKEN, tokenValue, this.expiresIn_(expires), {\n        highestAvailableDomain: true,\n      });\n    }\n  }\n\n  /**\n   * @param {number} time\n   * @return {number}\n   */\n  expiresIn_(time) {\n    return this.win_.Date.now() + time;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isReferrerProxyOrigin_() {\n    return isProxyOrigin(WindowInterface.getDocumentReferrer(this.win_));\n  }\n\n  /**\n   * @param {?string} token\n   * @return {boolean}\n   */\n  isStatusToken_(token) {\n    return /** @type {boolean} */ (token && token[0] === '$');\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides per AMP document source origin and use case\n * persistent client identifiers for use in analytics and similar use\n * cases.\n *\n * For details, see https://goo.gl/Mwaacs\n */\n\nimport {CacheCidApi} from './cache-cid-api';\nimport {GoogleCidApi, TokenStatus} from './cid-api';\nimport {Services} from '../services';\nimport {ViewerCidApi} from './viewer-cid-api';\nimport {base64UrlEncodeFromBytes} from '../core/types/string/base64';\nimport {dev, user, userAssert} from '../log';\nimport {dict} from '../core/types/object';\nimport {getCookie, setCookie} from '../cookies';\nimport {getCryptoRandomBytesArray} from '../core/types/string/bytes';\nimport {getServiceForDoc, registerServiceBuilderForDoc} from '../service';\nimport {getSourceOrigin, isProxyOrigin, parseUrlDeprecated} from '../url';\nimport {isExperimentOn} from '../../src/experiments';\nimport {isIframed} from '../dom';\nimport {parseJson, tryParseJson} from '../core/types/object/json';\nimport {rethrowAsync} from '../core/error';\nimport {tryResolve} from '../core/data-structures/promise';\n\nconst ONE_DAY_MILLIS = 24 * 3600 * 1000;\n\n/**\n * We ignore base cids that are older than (roughly) one year.\n */\nexport const BASE_CID_MAX_AGE_MILLIS = 365 * ONE_DAY_MILLIS;\n\nconst SCOPE_NAME_VALIDATOR = /^[a-zA-Z0-9-_.]+$/;\n\nconst CID_OPTOUT_STORAGE_KEY = 'amp-cid-optout';\n\nconst CID_OPTOUT_VIEWER_MESSAGE = 'cidOptOut';\n\nconst CID_BACKUP_STORAGE_KEY = 'amp-cid:';\n\n/**\n * Tag for debug logging.\n * @const @private {string}\n */\nconst TAG_ = 'CID';\n\n/**\n * The name of the Google CID API as it appears in the meta tag to opt-in.\n * @const @private {string}\n */\nconst GOOGLE_CID_API_META_NAME = 'amp-google-client-id-api';\n\n/**\n * The mapping from analytics providers to CID scopes.\n * @const @private {Object<string, string>}\n */\nconst CID_API_SCOPE_ALLOWLIST = {\n  'googleanalytics': 'AMP_ECID_GOOGLE',\n};\n\n/**\n * The mapping from analytics providers to their CID API service keys.\n * @const @private {Object<string, string>}\n */\nconst API_KEYS = {\n  'googleanalytics': 'AIzaSyA65lEHUEizIsNtlbNo-l2K18dT680nsaM',\n};\n\n/**\n * A base cid string value and the time it was last read / stored.\n * @typedef {{time: time, cid: string}}\n */\nlet BaseCidInfoDef;\n\n/**\n * The \"get CID\" parameters.\n * - createCookieIfNotPresent: Whether CID is allowed to create a cookie when.\n *   Default value is `false`.\n * - cookieName: Name of the cookie to be used if defined for non-proxy case.\n * - disableBackup: Whether CID should not be backed up in Storage.\n *   Default value is `false`.\n * @typedef {{\n *   scope: string,\n *   createCookieIfNotPresent: (boolean|undefined),\n *   cookieName: (string|undefined),\n *   disableBackup: (boolean|undefined),\n * }}\n */\nlet GetCidDef;\n\n/**\n * @interface\n */\nexport class CidDef {\n  /**\n   * @param {!GetCidDef} unusedGetCidStruct an object provides CID scope name for\n   *     proxy case and cookie name for non-proxy case.\n   * @param {!Promise} unusedConsent Promise for when the user has given consent\n   *     (if deemed necessary by the publisher) for use of the client\n   *     identifier.\n   * @param {!Promise=} opt_persistenceConsent Dedicated promise for when\n   *     it is OK to persist a new tracking identifier. This could be\n   *     supplied ONLY by the code that supplies the actual consent\n   *     cookie.\n   *     If this is given, the consent param should be a resolved promise\n   *     because this call should be only made in order to get consent.\n   *     The consent promise passed to other calls should then itself\n   *     depend on the opt_persistenceConsent promise (and the actual\n   *     consent, of course).\n   * @return {!Promise<?string>} A client identifier that should be used\n   *      within the current source origin and externalCidScope. Might be\n   *      null if user has opted out of cid or no identifier was found\n   *      or it could be made.\n   *      This promise may take a long time to resolve if consent isn't\n   *      given.\n   */\n  get(unusedGetCidStruct, unusedConsent, opt_persistenceConsent) {}\n\n  /**\n   * User will be opted out of Cid issuance for all scopes.\n   * When opted-out Cid service will reject all `get` requests.\n   *\n   * @return {!Promise}\n   */\n  optOut() {}\n}\n\n/**\n * @implements {CidDef}\n */\nclass Cid {\n  /** @param {!./ampdoc-impl.AmpDoc} ampdoc */\n  constructor(ampdoc) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /**\n     * Cached base cid once read from storage to avoid repeated\n     * reads.\n     * @private {?Promise<string>}\n     * @restricted\n     */\n    this.baseCid_ = null;\n\n    /**\n     * Cache to store external cids. Scope is used as the key and cookie value\n     * is the value.\n     * @private {!Object<string, !Promise<string>>}\n     * @restricted\n     */\n    this.externalCidCache_ = Object.create(null);\n\n    /**\n     * @private @const {!CacheCidApi}\n     */\n    this.cacheCidApi_ = new CacheCidApi(ampdoc);\n\n    /**\n     * @private {!ViewerCidApi}\n     */\n    this.viewerCidApi_ = new ViewerCidApi(ampdoc);\n\n    this.cidApi_ = new GoogleCidApi(ampdoc);\n\n    /** @private {?Object<string, string>} */\n    this.apiKeyMap_ = null;\n\n    /** @const {boolean} */\n    this.isBackupCidExpOn = isExperimentOn(this.ampdoc.win, 'amp-cid-backup');\n  }\n\n  /** @override */\n  get(getCidStruct, consent, opt_persistenceConsent) {\n    userAssert(\n      SCOPE_NAME_VALIDATOR.test(getCidStruct.scope) &&\n        SCOPE_NAME_VALIDATOR.test(getCidStruct.cookieName),\n      'The CID scope and cookie name must only use the characters ' +\n        '[a-zA-Z0-9-_.]+\\nInstead found: %s',\n      getCidStruct.scope\n    );\n    return consent\n      .then(() => {\n        return this.ampdoc.whenFirstVisible();\n      })\n      .then(() => {\n        // Check if user has globally opted out of CID, we do this after\n        // consent check since user can optout during consent process.\n        return isOptedOutOfCid(this.ampdoc);\n      })\n      .then((optedOut) => {\n        if (optedOut) {\n          return '';\n        }\n        const cidPromise = this.getExternalCid_(\n          getCidStruct,\n          opt_persistenceConsent || consent\n        );\n        // Getting the CID might involve an HTTP request. We timeout after 10s.\n        return Services.timerFor(this.ampdoc.win)\n          .timeoutPromise(\n            10000,\n            cidPromise,\n            `Getting cid for \"${getCidStruct.scope}\" timed out`\n          )\n          .catch((error) => {\n            rethrowAsync(error);\n          });\n      });\n  }\n\n  /** @override */\n  optOut() {\n    return optOutOfCid(this.ampdoc);\n  }\n\n  /**\n   * Returns the \"external cid\". This is a cid for a specific purpose\n   * (Say Analytics provider X). It is unique per user, userAssert, that purpose\n   * and the AMP origin site.\n   * @param {!GetCidDef} getCidStruct\n   * @param {!Promise} persistenceConsent\n   * @return {!Promise<?string>}\n   */\n  getExternalCid_(getCidStruct, persistenceConsent) {\n    const {scope} = getCidStruct;\n    /** @const {!Location} */\n    const url = parseUrlDeprecated(this.ampdoc.win.location.href);\n    if (!isProxyOrigin(url)) {\n      const apiKey = this.isScopeOptedIn_(scope);\n      if (apiKey) {\n        return this.cidApi_.getScopedCid(apiKey, scope).then((scopedCid) => {\n          if (scopedCid == TokenStatus.OPT_OUT) {\n            return null;\n          }\n          if (scopedCid) {\n            const cookieName = getCidStruct.cookieName || scope;\n            setCidCookie(this.ampdoc.win, cookieName, scopedCid);\n            return scopedCid;\n          }\n          return getOrCreateCookie(this, getCidStruct, persistenceConsent);\n        });\n      }\n      return getOrCreateCookie(this, getCidStruct, persistenceConsent);\n    }\n\n    return this.viewerCidApi_.isSupported().then((supported) => {\n      if (supported) {\n        const apiKey = this.isScopeOptedIn_(scope);\n        return this.viewerCidApi_.getScopedCid(apiKey, scope);\n      }\n\n      if (this.cacheCidApi_.isSupported() && this.isScopeOptedIn_(scope)) {\n        return this.cacheCidApi_.getScopedCid(scope).then((scopedCid) => {\n          if (scopedCid) {\n            return scopedCid;\n          }\n          return this.scopeBaseCid_(persistenceConsent, scope, url);\n        });\n      }\n      return this.scopeBaseCid_(persistenceConsent, scope, url);\n    });\n  }\n\n  /**\n   *\n   * @param {!Promise} persistenceConsent\n   * @param {*} scope\n   * @param {!Location} url\n   * @return {*}\n   */\n  scopeBaseCid_(persistenceConsent, scope, url) {\n    return getBaseCid(this, persistenceConsent).then((baseCid) => {\n      return Services.cryptoFor(this.ampdoc.win).sha384Base64(\n        baseCid + getProxySourceOrigin(url) + scope\n      );\n    });\n  }\n\n  /**\n   * Checks if the page has opted in CID API for the given scope.\n   * Returns the API key that should be used, or null if page hasn't opted in.\n   *\n   * @param {string} scope\n   * @return {string|undefined}\n   */\n  isScopeOptedIn_(scope) {\n    if (!this.apiKeyMap_) {\n      this.apiKeyMap_ = this.getOptedInScopes_();\n    }\n    return this.apiKeyMap_[scope];\n  }\n\n  /**\n   * Reads meta tags for opted in scopes.  Meta tags will have the form\n   * <meta name=\"provider-api-name\" content=\"provider-name\">\n   * @return {!Object<string, string>}\n   */\n  getOptedInScopes_() {\n    const apiKeyMap = {};\n    const optInMeta = this.ampdoc.getMetaByName(GOOGLE_CID_API_META_NAME);\n    if (optInMeta) {\n      optInMeta.split(',').forEach((item) => {\n        item = item.trim();\n        if (item.indexOf('=') > 0) {\n          const pair = item.split('=');\n          const scope = pair[0].trim();\n          apiKeyMap[scope] = pair[1].trim();\n        } else {\n          const clientName = item;\n          const scope = CID_API_SCOPE_ALLOWLIST[clientName];\n          if (scope) {\n            apiKeyMap[scope] = API_KEYS[clientName];\n          } else {\n            user().warn(\n              TAG_,\n              `Unsupported client for Google CID API: ${clientName}.` +\n                `Please remove or correct meta[name=\"${GOOGLE_CID_API_META_NAME}\"]`\n            );\n          }\n        }\n      });\n    }\n    return apiKeyMap;\n  }\n}\n\n/**\n * User will be opted out of Cid issuance for all scopes.\n * When opted-out Cid service will reject all `get` requests.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise}\n * @visibleForTesting\n */\nexport function optOutOfCid(ampdoc) {\n  // Tell the viewer that user has opted out.\n  Services.viewerForDoc(ampdoc)./*OK*/ sendMessage(\n    CID_OPTOUT_VIEWER_MESSAGE,\n    dict()\n  );\n\n  // Store the optout bit in storage\n  return Services.storageForDoc(ampdoc).then((storage) => {\n    return storage.set(CID_OPTOUT_STORAGE_KEY, true);\n  });\n}\n\n/**\n * Whether user has opted out of Cid issuance for all scopes.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<boolean>}\n * @visibleForTesting\n */\nexport function isOptedOutOfCid(ampdoc) {\n  return Services.storageForDoc(ampdoc)\n    .then((storage) => {\n      return storage.get(CID_OPTOUT_STORAGE_KEY).then((val) => !!val);\n    })\n    .catch(() => {\n      // If we fail to read the flag, assume not opted out.\n      return false;\n    });\n}\n\n/**\n * Sets a new CID cookie for expire 1 year from now.\n * @param {!Window} win\n * @param {string} scope\n * @param {string} cookie\n */\nfunction setCidCookie(win, scope, cookie) {\n  const expiration = Date.now() + BASE_CID_MAX_AGE_MILLIS;\n  setCookie(win, scope, cookie, expiration, {\n    highestAvailableDomain: true,\n  });\n}\n\n/**\n * Sets a new CID backup in Storage\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {string} cookieName\n * @param {string} cookie\n */\nfunction setCidBackup(ampdoc, cookieName, cookie) {\n  Services.storageForDoc(ampdoc).then((storage) => {\n    const isViewerStorage = storage.isViewerStorage();\n    if (!isViewerStorage) {\n      const key = getStorageKey(cookieName);\n      storage.setNonBoolean(key, cookie);\n    }\n  });\n}\n\n/**\n * @param {string} cookieName\n * @return {string}\n */\nfunction getStorageKey(cookieName) {\n  return CID_BACKUP_STORAGE_KEY + cookieName;\n}\n\n/**\n * Maybe gets the CID from cookie or, if allowed, gets backup CID\n * from Storage.\n * @param {!Cid} cid\n * @param {!GetCidDef} getCidStruct\n * @return {!Promise<?string>}\n */\nfunction maybeGetCidFromCookieOrBackup(cid, getCidStruct) {\n  const {ampdoc, isBackupCidExpOn} = cid;\n  const {win} = ampdoc;\n  const {disableBackup, scope} = getCidStruct;\n  const cookieName = getCidStruct.cookieName || scope;\n  const existingCookie = getCookie(win, cookieName);\n\n  if (existingCookie) {\n    return Promise.resolve(existingCookie);\n  }\n  if (isBackupCidExpOn && !disableBackup) {\n    return Services.storageForDoc(ampdoc)\n      .then((storage) => {\n        const key = getStorageKey(cookieName);\n        return storage.get(key, BASE_CID_MAX_AGE_MILLIS);\n      })\n      .then((backupCid) => {\n        if (!backupCid || typeof backupCid != 'string') {\n          return null;\n        }\n        return backupCid;\n      });\n  }\n  return Promise.resolve(null);\n}\n\n/**\n * If cookie exists it's returned immediately. Otherwise, if instructed, the\n * new cookie is created.\n * @param {!Cid} cid\n * @param {!GetCidDef} getCidStruct\n * @param {!Promise} persistenceConsent\n * @return {!Promise<?string>}\n */\nfunction getOrCreateCookie(cid, getCidStruct, persistenceConsent) {\n  const {ampdoc, isBackupCidExpOn} = cid;\n  const {win} = ampdoc;\n  const {disableBackup, scope} = getCidStruct;\n  const cookieName = getCidStruct.cookieName || scope;\n\n  return maybeGetCidFromCookieOrBackup(cid, getCidStruct).then(\n    (existingCookie) => {\n      if (!existingCookie && !getCidStruct.createCookieIfNotPresent) {\n        return /** @type {!Promise<?string>} */ (Promise.resolve(null));\n      }\n\n      if (existingCookie) {\n        // If we created the cookie, update it's expiration time.\n        if (/^amp-/.test(existingCookie)) {\n          setCidCookie(win, cookieName, existingCookie);\n          if (isBackupCidExpOn && !disableBackup) {\n            setCidBackup(ampdoc, cookieName, existingCookie);\n          }\n        }\n        return /** @type {!Promise<?string>} */ (\n          Promise.resolve(existingCookie)\n        );\n      }\n\n      if (cid.externalCidCache_[scope]) {\n        return /** @type {!Promise<?string>} */ (cid.externalCidCache_[scope]);\n      }\n\n      const newCookiePromise = getRandomString64(win)\n        // Create new cookie, always prefixed with \"amp-\", so that we can see from\n        // the value whether we created it.\n        .then((randomStr) => 'amp-' + randomStr);\n\n      // Store it as a cookie based on the persistence consent.\n      Promise.all([newCookiePromise, persistenceConsent]).then((results) => {\n        // The initial CID generation is inherently racy. First one that gets\n        // consent wins.\n        const newCookie = results[0];\n        const relookup = getCookie(win, cookieName);\n        if (!relookup) {\n          setCidCookie(win, cookieName, newCookie);\n          if (isBackupCidExpOn && !disableBackup) {\n            setCidBackup(ampdoc, cookieName, newCookie);\n          }\n        }\n      });\n      return (cid.externalCidCache_[scope] = newCookiePromise);\n    }\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin. Throws an error if the doc is not on a proxy origin.\n * @param {!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n * @visibleForTesting BUT if this is needed elsewhere it could be\n *     factored into its own package.\n */\nexport function getProxySourceOrigin(url) {\n  userAssert(isProxyOrigin(url), 'Expected proxy origin %s', url.origin);\n  return getSourceOrigin(url);\n}\n\n/**\n * Returns the base cid for the current user(). This string must not\n * be exposed to users without hashing with the current source origin\n * and the externalCidScope.\n * On a proxy this value is the same for a user across all source\n * origins.\n * @param {!Cid} cid\n * @param {!Promise} persistenceConsent\n * @return {!Promise<string>}\n */\nfunction getBaseCid(cid, persistenceConsent) {\n  if (cid.baseCid_) {\n    return cid.baseCid_;\n  }\n  const {win} = cid.ampdoc;\n\n  return (cid.baseCid_ = read(cid.ampdoc).then((stored) => {\n    let needsToStore = false;\n    let baseCid;\n\n    // See if we have a stored base cid and whether it is still valid\n    // in terms of expiration.\n    if (stored && !isExpired(stored)) {\n      baseCid = Promise.resolve(stored.cid);\n      if (shouldUpdateStoredTime(stored)) {\n        needsToStore = true;\n      }\n    } else {\n      // We need to make a new one.\n      baseCid = Services.cryptoFor(win).sha384Base64(getEntropy(win));\n      needsToStore = true;\n    }\n\n    if (needsToStore) {\n      baseCid.then((baseCid) => {\n        store(cid.ampdoc, persistenceConsent, baseCid);\n      });\n    }\n\n    return baseCid;\n  }));\n}\n\n/**\n * Stores a new cidString in localStorage. Adds the current time to the\n * stored value.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Promise} persistenceConsent\n * @param {string} cidString Actual cid string to store.\n */\nfunction store(ampdoc, persistenceConsent, cidString) {\n  const {win} = ampdoc;\n  if (isIframed(win)) {\n    // If we are being embedded, try to save the base cid to the viewer.\n    viewerBaseCid(ampdoc, createCidData(cidString));\n  } else {\n    // To use local storage, we need user's consent.\n    persistenceConsent.then(() => {\n      try {\n        win.localStorage.setItem('amp-cid', createCidData(cidString));\n      } catch (ignore) {\n        // Setting localStorage may fail. In practice we don't expect that to\n        // happen a lot (since we don't go anywhere near the quota, but\n        // in particular in Safari private browsing mode it always fails.\n        // In that case we just don't store anything, which is just fine.\n      }\n    });\n  }\n}\n\n/**\n * Get/set the Base CID from/to the viewer.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {string=} opt_data Stringified JSON object {cid, time}.\n * @return {!Promise<string|undefined>}\n */\nexport function viewerBaseCid(ampdoc, opt_data) {\n  const viewer = Services.viewerForDoc(ampdoc);\n  return viewer.isTrustedViewer().then((trusted) => {\n    if (!trusted) {\n      return undefined;\n    }\n    // TODO(lannka, #11060): clean up when all Viewers get migrated\n    dev().expectedError('CID', 'Viewer does not provide cap=cid');\n    return viewer.sendMessageAwaitResponse('cid', opt_data).then((data) => {\n      // For backward compatibility: #4029\n      if (data && !tryParseJson(data)) {\n        // TODO(lannka, #11060): clean up when all Viewers get migrated\n        dev().expectedError('CID', 'invalid cid format');\n        return JSON.stringify(\n          dict({\n            'time': Date.now(), // CID returned from old API is always fresh\n            'cid': data,\n          })\n        );\n      }\n      return data;\n    });\n  });\n}\n\n/**\n * Creates a JSON object that contains the given CID and the current time as\n * a timestamp.\n * @param {string} cidString\n * @return {string}\n */\nfunction createCidData(cidString) {\n  return JSON.stringify(\n    dict({\n      'time': Date.now(),\n      'cid': cidString,\n    })\n  );\n}\n\n/**\n * Gets the persisted CID data as a promise. It tries to read from\n * localStorage first then from viewer if it is in embedded mode.\n * Returns null if none was found.\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<?BaseCidInfoDef>}\n */\nfunction read(ampdoc) {\n  const {win} = ampdoc;\n  let data;\n  try {\n    data = win.localStorage.getItem('amp-cid');\n  } catch (ignore) {\n    // If reading from localStorage fails, we assume it is empty.\n  }\n  let dataPromise = Promise.resolve(data);\n  if (!data && isIframed(win)) {\n    // If we are being embedded, try to get the base cid from the viewer.\n    dataPromise = viewerBaseCid(ampdoc);\n  }\n  return dataPromise.then((data) => {\n    if (!data) {\n      return null;\n    }\n    const item = parseJson(data);\n    return {\n      time: item['time'],\n      cid: item['cid'],\n    };\n  });\n}\n\n/**\n * Whether the retrieved cid object is expired and should be ignored.\n * @param {!BaseCidInfoDef} storedCidInfo\n * @return {boolean}\n */\nfunction isExpired(storedCidInfo) {\n  const createdTime = storedCidInfo.time;\n  const now = Date.now();\n  return createdTime + BASE_CID_MAX_AGE_MILLIS < now;\n}\n\n/**\n * Whether we should write a new timestamp to the stored cid value.\n * We say yes if it is older than 1 day, so we only do this max once\n * per day to avoid writing to localStorage all the time.\n * @param {!BaseCidInfoDef} storedCidInfo\n * @return {boolean}\n */\nfunction shouldUpdateStoredTime(storedCidInfo) {\n  const createdTime = storedCidInfo.time;\n  const now = Date.now();\n  return createdTime + ONE_DAY_MILLIS < now;\n}\n\n/**\n * Returns an array with a total of 128 of random values based on the\n * `win.crypto.getRandomValues` API. If that is not available concatenates\n * a string of other values that might be hard to guess including\n * `Math.random` and the current time.\n * @param {!Window} win\n * @return {!Uint8Array|string} Entropy.\n */\nfunction getEntropy(win) {\n  // Use win.crypto.getRandomValues to get 128 bits of random value\n  const uint8array = getCryptoRandomBytesArray(win, 16); // 128 bit\n  if (uint8array) {\n    return uint8array;\n  }\n\n  // Support for legacy browsers.\n  return String(\n    win.location.href +\n      Date.now() +\n      win.Math.random() +\n      win.screen.width +\n      win.screen.height\n  );\n}\n\n/**\n * Produces an external CID for use in a cookie.\n * @param {!Window} win\n * @return {!Promise<string>} The cid\n */\nexport function getRandomString64(win) {\n  const entropy = getEntropy(win);\n  if (typeof entropy == 'string') {\n    return Services.cryptoFor(win).sha384Base64(entropy);\n  } else {\n    // If our entropy is a pure random number, we can just directly turn it\n    // into base 64\n    const cast = /** @type {!Uint8Array} */ (entropy);\n    return tryResolve(() =>\n      base64UrlEncodeFromBytes(cast)\n        // Remove trailing padding\n        .replace(/\\.+$/, '')\n    );\n  }\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {*} TODO(#23582): Specify return type\n */\nexport function installCidService(ampdoc) {\n  return registerServiceBuilderForDoc(ampdoc, 'cid', Cid);\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @return {!Cid}\n * @private visible for testing\n */\nexport function cidServiceForDocForTesting(ampdoc) {\n  registerServiceBuilderForDoc(ampdoc, 'cid', Cid);\n  return getServiceForDoc(ampdoc, 'cid');\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {BASE_CID_MAX_AGE_MILLIS} from '../../../src/service/cid-impl';\nimport {ChunkPriority, chunk} from '../../../src/chunk';\nimport {Deferred} from '../../../src/core/data-structures/promise';\nimport {SameSite, setCookie} from '../../../src/cookies';\nimport {Services} from '../../../src/services';\nimport {hasOwn} from '../../../src/core/types/object';\nimport {isCookieAllowed} from './cookie-reader';\nimport {isObject} from '../../../src/core/types';\nimport {user} from '../../../src/log';\nimport {variableServiceForDoc} from './variables';\n\nconst TAG = 'amp-analytics/cookie-writer';\n\nconst RESERVED_KEYS = {\n  'referrerDomains': true,\n  'enabled': true,\n  'cookiePath': true,\n  'cookieMaxAge': true,\n  'cookieSecure': true,\n  'cookieDomain': true,\n  'sameSite': true,\n  'SameSite': true,\n  'secure': true,\n};\n\nexport class CookieWriter {\n  /**\n   * @param {!Window} win\n   * @param {!Element} element\n   * @param {!JsonObject} config\n   */\n  constructor(win, element, config) {\n    /** @private {!Window} */\n    this.win_ = win;\n\n    /** @private {!Element} */\n    this.element_ = element;\n\n    /** @private {!../../../src/service/url-replacements-impl.UrlReplacements} */\n    this.urlReplacementService_ = Services.urlReplacementsForDoc(element);\n\n    /** @private {?Deferred} */\n    this.writeDeferred_ = null;\n\n    /** @private {!JsonObject} */\n    this.config_ = config;\n\n    /** @const @private {!JsonObject} */\n    this.bindings_ = variableServiceForDoc(element).getMacros(element);\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  write() {\n    if (!this.writeDeferred_) {\n      this.writeDeferred_ = new Deferred();\n      const task = () => {\n        this.writeDeferred_.resolve(this.init_());\n      };\n      // CookieWriter is not supported in inabox ad. Always chunk\n      chunk(this.element_, task, ChunkPriority.LOW);\n    }\n    return this.writeDeferred_.promise;\n  }\n\n  /**\n   * Parse the config and write to cookie\n   * Config looks like\n   * cookies: {\n   *   enabled: true/false, //Default to true\n   *   cookieNameA: {\n   *     value: cookieValueA (QUERY_PARAM/LINKER_PARAM)\n   *   },\n   *   cookieValueB: {\n   *     value: cookieValueB\n   *   }\n   *   ...\n   * }\n   * @return {!Promise}\n   */\n  init_() {\n    // TODO: Need the consider the case for shadow doc.\n    if (!isCookieAllowed(this.win_, this.element_)) {\n      // Note: It's important to check origin here so that setCookie doesn't\n      // throw error \"should not attempt ot set cookie on proxy origin\"\n      return Promise.resolve();\n    }\n\n    if (!hasOwn(this.config_, 'cookies')) {\n      return Promise.resolve();\n    }\n\n    if (!isObject(this.config_['cookies'])) {\n      user().error(TAG, 'cookies config must be an object');\n      return Promise.resolve();\n    }\n\n    const inputConfig = this.config_['cookies'];\n\n    if (inputConfig['enabled'] === false) {\n      // Enabled by default\n      // TODO: Allow individual cookie object to override the value\n      return Promise.resolve();\n    }\n\n    const cookieExpireDateMs = this.getCookieMaxAgeMs_(inputConfig);\n\n    const ids = Object.keys(inputConfig);\n    const promises = [];\n    for (let i = 0; i < ids.length; i++) {\n      const cookieName = ids[i];\n      const cookieObj = inputConfig[cookieName];\n      const sameSite = this.getSameSiteType_(\n        // individual cookie sameSite/SameSite overrides config sameSite/SameSite\n        cookieObj['sameSite'] ||\n          cookieObj['SameSite'] ||\n          inputConfig['sameSite'] ||\n          inputConfig['SameSite']\n      );\n      if (this.isValidCookieConfig_(cookieName, cookieObj)) {\n        promises.push(\n          this.expandAndWrite_(\n            cookieName,\n            cookieObj['value'],\n            cookieExpireDateMs,\n            sameSite\n          )\n        );\n      }\n    }\n\n    return Promise.all(promises);\n  }\n\n  /**\n   * Retrieves cookieMaxAge from given config, provides default value if no\n   * value is found or value is invalid\n   * @param {JsonObject} inputConfig\n   * @return {number}\n   */\n  getCookieMaxAgeMs_(inputConfig) {\n    if (!hasOwn(inputConfig, 'cookieMaxAge')) {\n      return BASE_CID_MAX_AGE_MILLIS;\n    }\n\n    const cookieMaxAgeNumber = Number(inputConfig['cookieMaxAge']);\n\n    // 0 is a special case which we allow\n    if (!cookieMaxAgeNumber && cookieMaxAgeNumber !== 0) {\n      user().error(\n        TAG,\n        'invalid cookieMaxAge %s, falling back to default value (1 year)',\n        inputConfig['cookieMaxAge']\n      );\n      return BASE_CID_MAX_AGE_MILLIS;\n    }\n\n    if (cookieMaxAgeNumber <= 0) {\n      user().warn(\n        TAG,\n        'cookieMaxAge %s less than or equal to 0, cookie will immediately expire',\n        inputConfig['cookieMaxAge']\n      );\n    }\n\n    // convert cookieMaxAge (sec) to milliseconds\n    return cookieMaxAgeNumber * 1000;\n  }\n\n  /**\n   * Check whether the cookie value is supported. Currently only support\n   * QUERY_PARAM(***) and LINKER_PARAM(***, ***)\n   *\n   * CookieObj should looks like\n   * cookieName: {\n   *  value: string (cookieValue),\n   * }\n   * @param {string} cookieName\n   * @param {*} cookieConfig\n   * @return {boolean}\n   */\n  isValidCookieConfig_(cookieName, cookieConfig) {\n    if (RESERVED_KEYS[cookieName]) {\n      return false;\n    }\n\n    if (!isObject(cookieConfig)) {\n      user().error(TAG, 'cookieValue must be configured in an object');\n      return false;\n    }\n\n    if (!hasOwn(cookieConfig, 'value')) {\n      user().error(TAG, 'value is required in the cookieValue object');\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Expand the value and write to cookie if necessary\n   * @param {string} cookieName\n   * @param {string} cookieValue\n   * @param {number} cookieExpireDateMs\n   * @param {!SameSite=} sameSite\n   * @return {!Promise}\n   */\n  expandAndWrite_(cookieName, cookieValue, cookieExpireDateMs, sameSite) {\n    // Note: Have to use `expandStringAsync` because QUERY_PARAM can wait for\n    // trackImpressionPromise and resolve async\n    return this.urlReplacementService_\n      .expandStringAsync(cookieValue, this.bindings_)\n      .then((value) => {\n        // Note: We ignore empty cookieValue, that means currently we don't\n        // provide a way to overwrite or erase existing cookie\n        if (value) {\n          const expireDate = Date.now() + cookieExpireDateMs;\n          // SameSite=None must be secure as per\n          // https://web.dev/samesite-cookies-explained/#samesitenone-must-be-secure\n          const secure = sameSite === SameSite.NONE;\n          setCookie(this.win_, cookieName, value, expireDate, {\n            highestAvailableDomain: true,\n            sameSite,\n            secure,\n          });\n        }\n      })\n      .catch((e) => {\n        user().error(TAG, 'Error expanding cookie string', e);\n      });\n  }\n\n  /**\n   * Converts SameSite string to SameSite type.\n   * @param {string=} sameSite\n   * @return {SameSite|undefined}\n   */\n  getSameSiteType_(sameSite) {\n    switch (sameSite) {\n      case 'Strict':\n        return SameSite.STRICT;\n      case 'Lax':\n        return SameSite.LAX;\n      case 'None':\n        return SameSite.NONE;\n      default:\n        return;\n    }\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Observable} from '../../../src/core/data-structures/observable';\nimport {Services} from '../../../src/services';\nimport {devAssert} from '../../../src/log';\n\n/**\n * @typedef {{\n *   top: number,\n *   left: number,\n *   width: number,\n *   height: number,\n *   scrollHeight: number,\n *   scrollWidth: number,\n *   initialSize: {\n *      scrollHeight: number,\n *      scrollWidth: number\n *  }\n * }}\n */\nexport let ScrollEventDef;\n\n/**\n * A manager for handling multiple Scroll Event Trackers.\n * The instance of this class corresponds 1:1 to `AnalyticsRoot`. It represents\n * a collection of all scroll triggers declared within the `AnalyticsRoot`.\n * @implements {../../../src/service.Disposable}\n */\nexport class ScrollManager {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   */\n  constructor(root) {\n    /** @const @private {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(root.ampdoc);\n\n    /** @const @private {!../../../src/service/mutator-interface.MutatorInterface} */\n    this.mutator_ = Services.mutatorForDoc(root.ampdoc);\n\n    /** @private {?UnlistenDef} */\n    this.viewportOnChangedUnlistener_ = null;\n\n    /** @private {!Observable<!./scroll-manager.ScrollEventDef>} */\n    this.scrollObservable_ = new Observable();\n\n    /** @const @private {!Element} */\n    this.root_ = root.getRootElement();\n\n    /**  @private {?Promise} */\n    this.initialRootRectPromise_ = null;\n  }\n\n  /**\n   * Function to dispose of all handlers on the scroll observable\n   */\n  dispose() {\n    this.scrollObservable_.removeAll();\n    this.removeViewportOnChangedListener_();\n  }\n\n  /**\n   * @param {function(!Object)} handler\n   */\n  removeScrollHandler(handler) {\n    this.scrollObservable_.remove(handler);\n\n    if (this.scrollObservable_.getHandlerCount() <= 0) {\n      this.removeViewportOnChangedListener_();\n    }\n  }\n\n  /**\n   * @param {function(!Object)} handler\n   * @return {!UnlistenDef}\n   */\n  addScrollHandler(handler) {\n    // Trigger an event to fire events that might have already happened.\n    const size = this.viewport_.getSize();\n\n    this.getInitRootElementRect_().then((initRootElementRect) => {\n      // In the case of shadow/embedded documents, the root element's\n      // layoutRect is relative to the parent doc's origin\n      const {\n        height: scrollHeight,\n        left: scrollLeft,\n        top: scrollTop,\n        width: scrollWidth,\n      } = initRootElementRect;\n\n      /** {./scroll-manager.ScrollEventDef} */\n      const scrollEvent = {\n        // In the case of shadow documents (e.g. amp-next-page), we offset\n        // the event's top and left coordinates by the top/left position of\n        // the document's container element (so that scroll triggers become relative to\n        // container instead of the top-level host page). In the case of a top-level\n        // page, the container/root is the document body so scrollTop and scrollLeft\n        // are both 0 and the measurements are not affected\n        top: this.viewport_.getScrollTop() - scrollTop,\n        left: this.viewport_.getScrollLeft() - scrollLeft,\n        width: size.width,\n        height: size.height,\n        scrollHeight,\n        scrollWidth,\n        initialSize: {scrollHeight, scrollWidth},\n      };\n      handler(scrollEvent);\n    });\n\n    if (this.scrollObservable_.getHandlerCount() === 0) {\n      this.addViewportOnChangedListener_();\n    }\n\n    return this.scrollObservable_.add(handler);\n  }\n\n  /**\n   * @param {!../../../src/service/viewport/viewport-interface.ViewportChangedEventDef} e\n   * @return {!Promise}\n   * @private\n   */\n  onScroll_(e) {\n    return Promise.all([\n      // Initial root layout rectangle\n      this.getInitRootElementRect_(),\n      // Current root layout rectangle\n      this.measureRootElement_(),\n    ]).then((rects) => {\n      // Initial root layout rectangle\n      const {height: initialScrollHeight, width: initialScrollWidth} = rects[0];\n      // Current root layout rectangle\n      const {\n        height: scrollHeight,\n        left: scrollLeft,\n        top: scrollTop,\n        width: scrollWidth,\n      } = rects[1];\n      /** {./scroll-manager.ScrollEventDef} */\n      const scrollEvent = {\n        // In the case of shadow documents (e.g. amp-next-page), we offset\n        // the event's top and left coordinates by the top/left position of\n        // the document's container element (so that scroll triggers become relative to\n        // container instead of the top-level host page). In the case of a top-level\n        // page, the container/root is the document body so scrollTop and scrollLeft\n        // are both 0 and the measurements are not affected\n        top: e.top - scrollTop,\n        left: e.left - scrollLeft,\n        width: e.width,\n        height: e.height,\n        scrollWidth,\n        scrollHeight,\n        initialSize: {\n          scrollHeight: initialScrollHeight,\n          scrollWidth: initialScrollWidth,\n        },\n      };\n      // Fire all of our children scroll observables\n      this.scrollObservable_.fire(scrollEvent);\n    });\n  }\n\n  /**\n   * Function to remove the viewport onChanged listener\n   * @private\n   */\n  removeViewportOnChangedListener_() {\n    if (this.viewportOnChangedUnlistener_) {\n      this.viewportOnChangedUnlistener_();\n      this.viewportOnChangedUnlistener_ = null;\n    }\n  }\n\n  /**\n   * Function to add the viewport onChanged listener\n   * @private\n   */\n  addViewportOnChangedListener_() {\n    this.viewportOnChangedUnlistener_ = this.viewport_.onChanged(\n      this.onScroll_.bind(this)\n    );\n  }\n\n  /**\n   * Gets the cached layout rectangle of the root element\n   * @return {!Promise<!../../../src/layout-rect.LayoutRectDef>}\n   */\n  getInitRootElementRect_() {\n    return devAssert(\n      this.initialRootRectPromise_ || this.measureRootElement_()\n    );\n  }\n\n  /**\n   * Gets the layout rectangle of the root element\n   * @return {!Promise<!../../../src/layout-rect.LayoutRectDef>}\n   */\n  measureRootElement_() {\n    const rectPromise = this.mutator_.measureElement(() =>\n      this.viewport_.getLayoutRect(this.root_)\n    );\n    this.initialRootRectPromise_ = this.initialRootRectPromise_ || rectPromise;\n    return rectPromise;\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TODO(rcebulko): Migrate the actual ViewportInterface into core or an extern.\n * @typedef {{\n *   getHeight: function(this:ViewportInterfaceDef):number,\n *   getWidth: function(this:ViewportInterfaceDef):number,\n * }}\n */\nlet ViewportInterfaceDef;\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nexport let LayoutRectDef;\n\n/**\n * The structure that contains the size for an element. The exact\n * interpretation of the size depends on the use case.\n *\n * @typedef {{\n *   width: number,\n *   height: number,\n * }}\n */\nexport let LayoutSizeDef;\n\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nexport let LayoutMarginsDef;\n\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\nexport let LayoutMarginsChangeDef;\n\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\nexport const RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n};\n\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\nexport function layoutRectLtwh(left, top, width, height) {\n  return {\n    left,\n    top,\n    width,\n    height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top,\n  };\n}\n\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\nexport function layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(\n    Number(rect.left),\n    Number(rect.top),\n    Number(rect.width),\n    Number(rect.height)\n  );\n}\n\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef|!ClientRect} r1\n * @param {!LayoutRectDef|!ClientRect} r2\n * @return {boolean}\n */\nexport function rectsOverlap(r1, r2) {\n  return (\n    r1.top <= r2.bottom &&\n    r2.top <= r1.bottom &&\n    r1.left <= r2.right &&\n    r2.left <= r1.right\n  );\n}\n\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\nexport function rectIntersection(var_args) {\n  let x0 = -Infinity;\n  let x1 = Infinity;\n  let y0 = -Infinity;\n  let y1 = Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    const current = arguments[i];\n    if (!current) {\n      continue;\n    }\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n  if (x1 == Infinity) {\n    return null;\n  }\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {!RelativePositions}\n */\nexport function layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!ViewportInterfaceDef} viewport\n * @param {number} scrollPos\n * @return {!RelativePositions}\n */\nexport function layoutPositionRelativeToScrolledViewport(\n  layoutBox,\n  viewport,\n  scrollPos\n) {\n  const scrollLayoutBox = layoutRectFromDomRect(\n    /** @type {!ClientRect} */ ({\n      top: scrollPos,\n      bottom: scrollPos + viewport.getHeight(),\n      left: 0,\n      right: viewport.getWidth(),\n    })\n  );\n  if (rectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\nexport function expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(\n    rect.left - rect.width * dw,\n    rect.top - rect.height * dh,\n    rect.width * (1 + dw * 2),\n    rect.height * (1 + dh * 2)\n  );\n}\n\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\nexport function moveLayoutRect(rect, dx, dy) {\n  if ((dx == 0 && dy == 0) || (rect.width == 0 && rect.height == 0)) {\n    return rect;\n  }\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\nexport function areMarginsChanged(margins, change) {\n  return (\n    (change.top !== undefined && change.top != margins.top) ||\n    (change.right !== undefined && change.right != margins.right) ||\n    (change.bottom !== undefined && change.bottom != margins.bottom) ||\n    (change.left !== undefined && change.left != margins.left)\n  );\n}\n\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\nexport function layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n  return (\n    r1.left == r2.left &&\n    r1.top == r2.top &&\n    r1.width == r2.width &&\n    r1.height == r2.height\n  );\n}\n\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\nexport function cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right,\n  };\n}\n\n/**\n * @param {!LayoutRectDef|!ClientRect|!DOMRect} rect\n * @return {!LayoutSizeDef}\n */\nexport function layoutSizeFromRect(rect) {\n  const {height, width} = rect;\n  return {width, height};\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from '../../../src/core/data-structures/promise';\nimport {Observable} from '../../../src/core/data-structures/observable';\nimport {devAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\n\n/**\n * This class implements visibility calculations based on the\n * visibility ratio. It's used for documents, embeds and individual element.\n * @implements {../../../src/service.Disposable}\n */\nexport class VisibilityModel {\n  /**\n   * @param {!JsonObject} spec\n   * @param {function():number} calcVisibility\n   */\n  constructor(spec, calcVisibility) {\n    /** @const @private */\n    this.calcVisibility_ = calcVisibility;\n\n    /**\n     * Spec parameters.\n     * @private {!JsonObject}\n     */\n    this.spec_ = dict({\n      'visiblePercentageMin': Number(spec['visiblePercentageMin']) / 100 || 0,\n      'visiblePercentageMax': Number(spec['visiblePercentageMax']) / 100 || 1,\n      'totalTimeMin': Number(spec['totalTimeMin']) || 0,\n      'totalTimeMax': Number(spec['totalTimeMax']) || Infinity,\n      'continuousTimeMin': Number(spec['continuousTimeMin']) || 0,\n      'continuousTimeMax': Number(spec['continuousTimeMax']) || Infinity,\n    });\n    // Above, if visiblePercentageMax was not specified, assume 100%.\n    // Here, do allow 0% to be the value if that is what was specified.\n    if (String(spec['visiblePercentageMax']).trim() === '0') {\n      this.spec_['visiblePercentageMax'] = 0;\n    }\n\n    /**\n     * Accumulate visibility counters but do not fire the trigger until the\n     * ready promise resolves.\n     * @private @const {boolean}\n     */\n    this.ignoreVisibilityForReport_ = spec['reportWhen'] !== undefined;\n\n    /** @private {boolean} */\n    this.repeat_ = spec['repeat'] === true;\n\n    /** @private {?Observable} */\n    this.onTriggerObservable_ = new Observable();\n\n    const deferred = new Deferred();\n\n    /** @private */\n    this.eventPromise_ = deferred.promise;\n\n    /** @private {?function()} */\n    this.eventResolver_ = deferred.resolve;\n\n    this.eventPromise_.then(() => {\n      this.onTriggerObservable_.fire();\n    });\n\n    /** @private {!Array<!UnlistenDef>} */\n    this.unsubscribe_ = [];\n\n    /** @const @private {time} */\n    this.createdTime_ = Date.now();\n\n    // TODO(warrengm): Consider refactoring so that the ready defaults are\n    // false.\n\n    /** @private {boolean} */\n    this.ready_ = true;\n\n    /** @private {boolean} */\n    this.reportReady_ = true;\n\n    /** @private {?function():!Promise} */\n    this.createReportReadyPromise_ = null;\n\n    /** @private {?number} */\n    this.scheduledUpdateTimeoutId_ = null;\n\n    /** @private {boolean} */\n    this.matchesVisibility_ = false;\n\n    /** @private {boolean} */\n    this.everMatchedVisibility_ = false;\n\n    /** @private {time} duration in milliseconds */\n    this.continuousTime_ = 0;\n\n    /** @private {time} duration in milliseconds */\n    this.maxContinuousVisibleTime_ = 0;\n\n    /** @private {time} duration in milliseconds */\n    this.totalVisibleTime_ = 0;\n\n    /** @private {time} milliseconds since epoch */\n    this.firstSeenTime_ = 0;\n\n    /** @private {time} milliseconds since epoch */\n    this.lastSeenTime_ = 0;\n\n    /** @private {time} milliseconds since epoch */\n    this.firstVisibleTime_ = 0;\n\n    /** @private {time} milliseconds since epoch */\n    this.lastVisibleTime_ = 0;\n\n    /** @private {time} percent value in a [0, 1] range */\n    this.loadTimeVisibility_ = 0;\n\n    /** @private {number} percent value in a [0, 1] range */\n    this.minVisiblePercentage_ = 0;\n\n    /** @private {number} percent value in a [0, 1] range */\n    this.maxVisiblePercentage_ = 0;\n\n    /** @private {time} milliseconds since epoch */\n    this.lastVisibleUpdateTime_ = 0;\n\n    /** @private {number} Scroll position at ini-load time */\n    this.initialScrollDepth_ = 0;\n\n    /**\n     * @private {boolean} Whether scroll position at ini-load time has\n     * been set\n     */\n    this.initialScrollDepthAlreadySet_ = false;\n\n    /** @private {boolean} */\n    this.waitToReset_ = false;\n\n    /** @private {?number} */\n    this.scheduleRepeatId_ = null;\n  }\n\n  /**\n   * Refresh counter on visible reset.\n   * TODO: Right now all state value are scoped state values that gets reset.\n   * We may need to add support to global state values,\n   * that never reset like globalTotalVisibleTime.\n   * Note: loadTimeVisibility is an exception.\n   * @private\n   */\n  reset_() {\n    devAssert(\n      !this.eventResolver_,\n      'Attempt to refresh visible event before previous one resolve'\n    );\n    const deferred = new Deferred();\n    this.eventPromise_ = deferred.promise;\n    this.eventResolver_ = deferred.resolve;\n\n    this.eventPromise_.then(() => {\n      this.onTriggerObservable_.fire();\n    });\n    this.scheduleRepeatId_ = null;\n    this.everMatchedVisibility_ = false;\n    this.matchesVisibility_ = false;\n    this.continuousTime_ = 0;\n    this.maxContinuousVisibleTime_ = 0;\n    this.totalVisibleTime_ = 0;\n    this.firstVisibleTime_ = 0;\n    this.firstSeenTime_ = 0;\n    this.lastSeenTime_ = 0;\n    this.lastVisibleTime_ = 0;\n    this.minVisiblePercentage_ = 0;\n    this.maxVisiblePercentage_ = 0;\n    this.lastVisibleUpdateTime_ = 0;\n    this.waitToReset_ = false;\n  }\n\n  /**\n   * Function that visibilityManager can used to dispose model or reset model\n   */\n  maybeDispose() {\n    if (!this.repeat_) {\n      this.dispose();\n    }\n  }\n\n  /** @override */\n  dispose() {\n    if (this.scheduledUpdateTimeoutId_) {\n      clearTimeout(this.scheduledUpdateTimeoutId_);\n      this.scheduledUpdateTimeoutId_ = null;\n    }\n    if (this.scheduleRepeatId_) {\n      clearTimeout(this.scheduleRepeatId_);\n      this.scheduleRepeatId_ = null;\n    }\n    this.unsubscribe_.forEach((unsubscribe) => {\n      unsubscribe();\n    });\n    this.unsubscribe_.length = 0;\n    this.eventResolver_ = null;\n    if (this.onTriggerObservable_) {\n      this.onTriggerObservable_.removeAll();\n      this.onTriggerObservable_ = null;\n    }\n  }\n\n  /**\n   * Adds the unsubscribe handler that will be called when this visibility\n   * model is destroyed.\n   * @param {!UnlistenDef} handler\n   */\n  unsubscribe(handler) {\n    this.unsubscribe_.push(handler);\n  }\n\n  /**\n   * Adds the event handler that will be called when all visibility conditions\n   * have been met.\n   * @param {function()} handler\n   */\n  onTriggerEvent(handler) {\n    if (this.onTriggerObservable_) {\n      this.onTriggerObservable_.add(handler);\n    }\n    if (this.eventPromise_ && !this.eventResolver_) {\n      // If eventPromise has already resolved, need to call handler manually.\n      handler();\n    }\n  }\n\n  /**\n   * Sets whether this object is ready. Ready means that visibility is\n   * ready to be calculated, e.g. because an element has been\n   * sufficiently rendered.\n   * @param {boolean} ready\n   */\n  setReady(ready) {\n    this.ready_ = ready;\n    this.update();\n  }\n\n  /**\n   * Sets that the model needs to wait on extra report ready promise\n   * after all visibility conditions have been met to call report handler\n   * @param {function():!Promise} callback\n   */\n  setReportReady(callback) {\n    this.reportReady_ = false;\n    this.createReportReadyPromise_ = callback;\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  getVisibility_() {\n    return this.ready_ ? this.calcVisibility_() : 0;\n  }\n\n  /**\n   * Runs the calculation cycle.\n   */\n  update() {\n    this.update_(this.getVisibility_());\n  }\n\n  /**\n   * Returns the calculated state of visibility.\n   * @param {time} startTime\n   * @return {!JsonObject}\n   */\n  getState(startTime) {\n    return dict({\n      // Observed times, relative to the `startTime`.\n      'firstSeenTime': timeBase(this.firstSeenTime_, startTime),\n      'lastSeenTime': timeBase(this.lastSeenTime_, startTime),\n      'lastVisibleTime': timeBase(this.lastVisibleTime_, startTime),\n      'firstVisibleTime': timeBase(this.firstVisibleTime_, startTime),\n\n      // Durations.\n      'maxContinuousVisibleTime': this.maxContinuousVisibleTime_,\n      'totalVisibleTime': this.totalVisibleTime_,\n\n      // Visibility percents.\n      'loadTimeVisibility': this.loadTimeVisibility_ * 100 || 0,\n      'minVisiblePercentage': this.minVisiblePercentage_ * 100,\n      'maxVisiblePercentage': this.maxVisiblePercentage_ * 100,\n    });\n  }\n\n  /**\n   * @param {number} visibility\n   * @private\n   */\n  update_(visibility) {\n    // Update state and check if all conditions are satisfied\n    if (this.waitToReset_) {\n      if (!this.isVisibilityMatch_(visibility)) {\n        // We were waiting for a condition to become unmet, and now it has\n        this.reset_();\n      }\n      return;\n    }\n    if (!this.eventResolver_) {\n      return;\n    }\n\n    // When ignoreVisibilityForReport_ is true, we update counters but fire the\n    // event when the report ready promise is resolved.\n    const conditionsMet =\n      this.updateCounters_(visibility) || this.ignoreVisibilityForReport_;\n    if (conditionsMet) {\n      if (this.scheduledUpdateTimeoutId_) {\n        clearTimeout(this.scheduledUpdateTimeoutId_);\n        this.scheduledUpdateTimeoutId_ = null;\n      }\n      if (this.reportReady_) {\n        // TODO(jonkeller): Can we eliminate eventResolver_?\n        this.eventResolver_();\n        this.eventResolver_ = null;\n        if (this.repeat_) {\n          this.waitToReset_ = true;\n          this.continuousTime_ = 0;\n        }\n      } else if (this.createReportReadyPromise_) {\n        // Report when report ready promise resolve\n        const reportReadyPromise = this.createReportReadyPromise_();\n        this.createReportReadyPromise_ = null;\n        reportReadyPromise.then(() => {\n          this.reportReady_ = true;\n          // Need to update one more time in case time exceeds\n          // maxContinuousVisibleTime.\n          this.update();\n        });\n      }\n    } else if (this.matchesVisibility_ && !this.scheduledUpdateTimeoutId_) {\n      // There is unmet duration condition, schedule a check\n      const timeToWait = this.computeTimeToWait_();\n      if (timeToWait > 0) {\n        this.scheduledUpdateTimeoutId_ = setTimeout(() => {\n          this.scheduledUpdateTimeoutId_ = null;\n          this.update();\n        }, timeToWait);\n      }\n    } else if (!this.matchesVisibility_ && this.scheduledUpdateTimeoutId_) {\n      clearTimeout(this.scheduledUpdateTimeoutId_);\n      this.scheduledUpdateTimeoutId_ = null;\n    }\n  }\n\n  /**\n   * Check if visibility fall into the percentage range\n   * @param {number} visibility\n   * @return {boolean}\n   */\n  isVisibilityMatch_(visibility) {\n    devAssert(\n      visibility >= 0 && visibility <= 1,\n      'invalid visibility value: %s',\n      visibility\n    );\n    // Special case: If visiblePercentageMin is 100%, then it doesn't make\n    // sense to do the usual (min, max] since that would never be true.\n    if (this.spec_['visiblePercentageMin'] == 1) {\n      return visibility == 1;\n    }\n    // Special case: If visiblePercentageMax is 0%, then we\n    // want to ping when the creative becomes not visible.\n    if (this.spec_['visiblePercentageMax'] == 0) {\n      return visibility == 0;\n    }\n    return (\n      visibility > this.spec_['visiblePercentageMin'] &&\n      visibility <= this.spec_['visiblePercentageMax']\n    );\n  }\n\n  /**\n   * @param {number} visibility\n   * @return {boolean} true\n   * @private\n   */\n  updateCounters_(visibility) {\n    devAssert(\n      visibility >= 0 && visibility <= 1,\n      'invalid visibility value: %s',\n      visibility\n    );\n    const now = Date.now();\n\n    if (visibility > 0) {\n      this.firstSeenTime_ = this.firstSeenTime_ || now;\n      this.lastSeenTime_ = now;\n      // Consider it as load time visibility if this happens within 300ms of\n      // page load.\n      if (!this.loadTimeVisibility_ && now - this.createdTime_ < 300) {\n        this.loadTimeVisibility_ = visibility;\n      }\n    }\n\n    const prevMatchesVisibility = this.matchesVisibility_;\n    const timeSinceLastUpdate = this.lastVisibleUpdateTime_\n      ? now - this.lastVisibleUpdateTime_\n      : 0;\n    this.matchesVisibility_ = this.isVisibilityMatch_(visibility);\n    if (this.matchesVisibility_) {\n      this.everMatchedVisibility_ = true;\n      if (prevMatchesVisibility) {\n        // Keep counting.\n        this.totalVisibleTime_ += timeSinceLastUpdate;\n        this.continuousTime_ += timeSinceLastUpdate;\n        this.maxContinuousVisibleTime_ = Math.max(\n          this.maxContinuousVisibleTime_,\n          this.continuousTime_\n        );\n      } else {\n        // The resource came into view: start counting.\n        devAssert(!this.lastVisibleUpdateTime_);\n        this.firstVisibleTime_ = this.firstVisibleTime_ || now;\n      }\n      this.lastVisibleUpdateTime_ = now;\n      this.minVisiblePercentage_ =\n        this.minVisiblePercentage_ > 0\n          ? Math.min(this.minVisiblePercentage_, visibility)\n          : visibility;\n\n      this.maxVisiblePercentage_ = Math.max(\n        this.maxVisiblePercentage_,\n        visibility\n      );\n      this.lastVisibleTime_ = now;\n    } else if (prevMatchesVisibility) {\n      // The resource went out of view. Do final calculations and reset state.\n      devAssert(this.lastVisibleUpdateTime_ > 0);\n\n      this.maxContinuousVisibleTime_ = Math.max(\n        this.maxContinuousVisibleTime_,\n        this.continuousTime_ + timeSinceLastUpdate\n      );\n\n      // Reset for next visibility event.\n      this.lastVisibleUpdateTime_ = 0;\n      this.totalVisibleTime_ += timeSinceLastUpdate;\n      this.continuousTime_ = 0; // Clear only after max is calculated above.\n      this.lastVisibleTime_ = now;\n    }\n\n    return (\n      this.everMatchedVisibility_ &&\n      this.totalVisibleTime_ >= this.spec_['totalTimeMin'] &&\n      this.totalVisibleTime_ <= this.spec_['totalTimeMax'] &&\n      this.maxContinuousVisibleTime_ >= this.spec_['continuousTimeMin'] &&\n      this.maxContinuousVisibleTime_ <= this.spec_['continuousTimeMax']\n    );\n  }\n\n  /**\n   * Set the amount that the user had scrolled down the page at the time of\n   * page loading.\n   * @param {number} depth\n   */\n  maybeSetInitialScrollDepth(depth) {\n    if (!this.initialScrollDepthAlreadySet_) {\n      this.initialScrollDepth_ = depth;\n      this.initialScrollDepthAlreadySet_ = true;\n    }\n  }\n\n  /**\n   * Gets the amount that the user had scrolled down the page, at the time of\n   * ini-load.\n   * @return {number} depth\n   */\n  getInitialScrollDepth() {\n    return this.initialScrollDepth_;\n  }\n\n  /**\n   * Computes time, assuming the object is currently visible, that it'd take\n   * it to match all timing requirements.\n   * @return {time}\n   * @private\n   */\n  computeTimeToWait_() {\n    const waitForContinuousTime = Math.max(\n      this.spec_['continuousTimeMin'] - this.continuousTime_,\n      0\n    );\n    const waitForTotalTime = Math.max(\n      this.spec_['totalTimeMin'] - this.totalVisibleTime_,\n      0\n    );\n    const maxWaitTime = Math.max(waitForContinuousTime, waitForTotalTime);\n    return Math.min(\n      maxWaitTime,\n      waitForContinuousTime || Infinity,\n      waitForTotalTime || Infinity\n    );\n  }\n}\n\n/**\n * Calculates the specified time based on the given `baseTime`.\n * @param {time} time\n * @param {time} baseTime\n * @return {time}\n */\nfunction timeBase(time, baseTime) {\n  return time >= baseTime ? time - baseTime : 0;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {computedStyle} from '../../../src/style';\n\n/**\n *  Returns the min opacity found amongst the element and its ancestors\n *  @param {?Element} el\n *  @return {number} minimum opacity value\n */\nexport function getMinOpacity(el) {\n  const parentNodeTree = getElementNodeTree(el.parentElement);\n  parentNodeTree.push(el);\n  let minOpacityFound = 1;\n  let opacity;\n\n  for (let i = 0; i < parentNodeTree.length; i++) {\n    const node = parentNodeTree[i];\n    opacity = getElementOpacity(node);\n\n    if (opacity < minOpacityFound) {\n      minOpacityFound = opacity;\n    }\n\n    if (minOpacityFound === 0) {\n      return minOpacityFound;\n    }\n  }\n\n  return minOpacityFound;\n}\n\n/**\n * Returns the Opacity value of the element.\n * @param {!Element} el\n * @return {number}\n */\nfunction getElementOpacity(el) {\n  const win = window;\n  const fullyVisibleValue = 1;\n  const fullyHiddenValue = 0;\n\n  if (!el) {\n    return fullyVisibleValue;\n  }\n  const {opacity, visibility} = computedStyle(win, el);\n\n  if (visibility === 'hidden') {\n    return fullyHiddenValue;\n  }\n  const opacityValue = opacity === '' ? fullyVisibleValue : parseFloat(opacity);\n\n  if (isNaN(opacityValue)) {\n    return fullyVisibleValue;\n  }\n\n  return opacityValue;\n}\n\n/**\n * Returns the node tree of the current element starting from\n * the document root\n * @param {?Element} el\n * @return {Array} node list of the element's node tree\n */\nfunction getElementNodeTree(el) {\n  const nodeList = [];\n  if (!el) {\n    return nodeList;\n  }\n\n  const CAP = 50;\n  const DOCUMENT_NODE_TYPE = 9;\n  const ELEMENT_WITH_PARENT_TYPE = 1;\n  let parent;\n  let element = el;\n  nodeList.push(element);\n\n  for (let i = 0; i < CAP; i++) {\n    parent = element.parentNode || element.parentElement;\n\n    if (parent && parent.nodeType == ELEMENT_WITH_PARENT_TYPE) {\n      element = parent;\n      nodeList.push(element);\n    } else if (parent && parent.nodeType == DOCUMENT_NODE_TYPE) {\n      parent = element.ownerDocument.defaultView.frameElement;\n\n      if (parent && parent.nodeType == ELEMENT_WITH_PARENT_TYPE) {\n        element = parent;\n        nodeList.push(element);\n      } else {\n        break;\n      }\n    } else {\n      break;\n    }\n  }\n\n  return nodeList;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {VisibilityModel} from './visibility-model';\nimport {dev, user} from '../../../src/log';\nimport {dict, map} from '../../../src/core/types/object';\nimport {getFriendlyIframeEmbedOptional} from '../../../src/iframe-helper';\nimport {getMinOpacity} from './opacity';\nimport {getMode} from '../../../src/mode';\nimport {getParentWindowFrameElement} from '../../../src/service';\nimport {isArray, isFiniteNumber} from '../../../src/core/types';\n\nimport {\n  layoutPositionRelativeToScrolledViewport,\n  layoutRectLtwh,\n} from '../../../src/core/math/layout-rect';\nimport {rootNodeFor} from '../../../src/dom';\n\nconst TAG = 'amp-analytics/visibility-manager';\n\nconst PROP = '__AMP_VIS';\nconst VISIBILITY_ID_PROP = '__AMP_VIS_ID';\n\nexport const DEFAULT_THRESHOLD = [\n  0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65,\n  0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1,\n];\n\n/** @type {number} */\nlet visibilityIdCounter = 1;\n\n/**\n * @param {!Element} element\n * @return {number}\n */\nfunction getElementId(element) {\n  let id = element[VISIBILITY_ID_PROP];\n  if (!id) {\n    id = ++visibilityIdCounter;\n    element[VISIBILITY_ID_PROP] = id;\n  }\n  return id;\n}\n\n/**\n * @param {!Node} rootNode\n * @return {!VisibilityManager}\n */\nexport function provideVisibilityManager(rootNode) {\n  if (!rootNode[PROP]) {\n    rootNode[PROP] = createVisibilityManager(rootNode);\n  }\n  return rootNode[PROP];\n}\n\n/**\n * @param {!Node} rootNode\n * @return {!VisibilityManager}\n */\nfunction createVisibilityManager(rootNode) {\n  // TODO(#22733): cleanup when ampdoc-fie is launched.\n  const ampdoc = Services.ampdoc(rootNode);\n  const frame = getParentWindowFrameElement(rootNode);\n  const embed = frame && getFriendlyIframeEmbedOptional(frame);\n  const frameRootNode = frame && rootNodeFor(frame);\n  if (embed && frameRootNode) {\n    return new VisibilityManagerForEmbed(\n      provideVisibilityManager(frameRootNode),\n      embed\n    );\n  }\n  return new VisibilityManagerForDoc(ampdoc);\n}\n\n/**\n * A base class for `VisibilityManagerForDoc` and `VisibilityManagerForEmbed`.\n * The instance of this class corresponds 1:1 to `AnalyticsRoot`. It represents\n * a collection of all visibility triggers declared within the `AnalyticsRoot`.\n * @implements {../../../src/service.Disposable}\n * @abstract\n */\nexport class VisibilityManager {\n  /**\n   * @param {?VisibilityManager} parent\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(parent, ampdoc) {\n    /** @const @protected */\n    this.parent = parent;\n\n    /** @const @protected */\n    this.ampdoc = ampdoc;\n\n    /** @private {number} */\n    this.rootVisibility_ = 0;\n\n    /** @const @private {!Array<!VisibilityModel>}> */\n    this.models_ = [];\n\n    /** @private {?Array<!VisibilityManager>} */\n    this.children_ = null;\n\n    /** @const @private {!Array<!UnlistenDef>} */\n    this.unsubscribe_ = [];\n\n    /** @private {number} Maximum scroll position attained */\n    this.maxScrollDepth_ = 0;\n\n    if (this.parent) {\n      this.parent.addChild_(this);\n    }\n\n    const viewport = Services.viewportForDoc(this.ampdoc);\n    viewport.onChanged(() => {\n      this.maybeUpdateMaxScrollDepth(viewport.getScrollTop());\n    });\n  }\n\n  /**\n   * @param {!VisibilityManager} child\n   * @private\n   */\n  addChild_(child) {\n    if (!this.children_) {\n      this.children_ = [];\n    }\n    this.children_.push(child);\n  }\n\n  /**\n   * @param {!VisibilityManager} child\n   * @private\n   */\n  removeChild_(child) {\n    if (this.children_) {\n      const index = this.children_.indexOf(child);\n      if (index != -1) {\n        this.children_.splice(index, 1);\n      }\n    }\n  }\n\n  /** @override */\n  dispose() {\n    // Give the chance for all events to complete.\n    this.setRootVisibility(0);\n\n    // Dispose all models.\n    for (let i = this.models_.length - 1; i >= 0; i--) {\n      this.models_[i].dispose();\n    }\n\n    // Unsubscribe everything else.\n    this.unsubscribe_.forEach((unsubscribe) => {\n      unsubscribe();\n    });\n    this.unsubscribe_.length = 0;\n\n    if (this.parent) {\n      this.parent.removeChild_(this);\n    }\n    if (this.children_) {\n      for (let i = 0; i < this.children_.length; i++) {\n        this.children_[i].dispose();\n      }\n    }\n  }\n\n  /**\n   * @param {!UnlistenDef} handler\n   */\n  unsubscribe(handler) {\n    this.unsubscribe_.push(handler);\n  }\n\n  /**\n   * The start time from which all visibility events and times are measured.\n   * @return {number}\n   * @abstract\n   */\n  getStartTime() {}\n\n  /**\n   * Whether the visibility root is currently in the background.\n   * @return {boolean}\n   * @abstract\n   */\n  isBackgrounded() {}\n\n  /**\n   * Whether the visibility root has been created in the background mode.\n   * @return {boolean}\n   * @abstract\n   */\n  isBackgroundedAtStart() {}\n\n  /**\n   * Returns the root's, root's parent's and root's children's\n   * lowest opacity value\n   * @return {number}\n   * @abstract\n   */\n  getRootMinOpacity() {}\n\n  /**\n   * Returns the root's layout rect.\n   * @return {!../../../src/layout-rect.LayoutRectDef}\n   * @abstract\n   */\n  getRootLayoutBox() {}\n\n  /**\n   * @return {number}\n   */\n  getRootVisibility() {\n    if (!this.parent) {\n      return this.rootVisibility_;\n    }\n    return this.parent.getRootVisibility() > 0 ? this.rootVisibility_ : 0;\n  }\n\n  /**\n   * @param {number} visibility\n   */\n  setRootVisibility(visibility) {\n    this.rootVisibility_ = visibility;\n    this.updateModels_();\n    if (this.children_) {\n      for (let i = 0; i < this.children_.length; i++) {\n        this.children_[i].updateModels_();\n      }\n    }\n  }\n\n  /**\n   * Update the maximum amount that the user has scrolled down the page.\n   * @param {number} depth\n   */\n  maybeUpdateMaxScrollDepth(depth) {\n    if (depth > this.maxScrollDepth_) {\n      this.maxScrollDepth_ = depth;\n    }\n  }\n\n  /**\n   * Gets the maximum amount that the user has scrolled down the page.\n   * @return {number} depth\n   */\n  getMaxScrollDepth() {\n    return this.maxScrollDepth_;\n  }\n\n  /** @private */\n  updateModels_() {\n    for (let i = 0; i < this.models_.length; i++) {\n      this.models_[i].update();\n    }\n  }\n\n  /**\n   * Listens to the visibility events on the root as the whole and the given\n   * visibility spec. The visibility tracking can be deferred until\n   * `readyPromise` is resolved, if specified.\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @return {!UnlistenDef}\n   */\n  listenRoot(spec, readyPromise, createReportPromiseFunc, callback) {\n    const calcVisibility = this.getRootVisibility.bind(this);\n    return this.createModelAndListen_(\n      calcVisibility,\n      spec,\n      readyPromise,\n      createReportPromiseFunc,\n      callback\n    );\n  }\n\n  /**\n   * Listens to the visibility events for the specified element and the given\n   * visibility spec. The visibility tracking can be deferred until\n   * `readyPromise` is resolved, if specified.\n   * @param {!Element} element\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @return {!UnlistenDef}\n   */\n  listenElement(\n    element,\n    spec,\n    readyPromise,\n    createReportPromiseFunc,\n    callback\n  ) {\n    const calcVisibility = this.getElementVisibility.bind(this, element);\n    return this.createModelAndListen_(\n      calcVisibility,\n      spec,\n      readyPromise,\n      createReportPromiseFunc,\n      callback,\n      element\n    );\n  }\n\n  /**\n   * Create visibilityModel and listen to visible events.\n   * @param {function():number} calcVisibility\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @param {!Element=} opt_element\n   * @return {!UnlistenDef}\n   */\n  createModelAndListen_(\n    calcVisibility,\n    spec,\n    readyPromise,\n    createReportPromiseFunc,\n    callback,\n    opt_element\n  ) {\n    if (\n      spec['visiblePercentageThresholds'] &&\n      spec['visiblePercentageMin'] == undefined &&\n      spec['visiblePercentageMax'] == undefined\n    ) {\n      const unlisteners = [];\n      const ranges = spec['visiblePercentageThresholds'];\n      if (!ranges || !isArray(ranges)) {\n        user().error(TAG, 'invalid visiblePercentageThresholds');\n        return () => {};\n      }\n      for (let i = 0; i < ranges.length; i++) {\n        const percents = ranges[i];\n        if (!isArray(percents) || percents.length != 2) {\n          user().error(\n            TAG,\n            'visiblePercentageThresholds entry length is not 2'\n          );\n          continue;\n        }\n        if (!isFiniteNumber(percents[0]) || !isFiniteNumber(percents[1])) {\n          // not valid number\n          user().error(\n            TAG,\n            'visiblePercentageThresholds entry is not valid number'\n          );\n          continue;\n        }\n        const min = Number(percents[0]);\n        const max = Number(percents[1]);\n        // Min and max must be valid percentages. Min may not be more than max.\n        // Max is inclusive. Min is usually exclusive, but there are two\n        // special cases: if min and max are both 0, or both 100, then both\n        // are inclusive. Otherwise it would not be possible to trigger an\n        // event on exactly 0% or 100%.\n        if (\n          min < 0 ||\n          max > 100 ||\n          min > max ||\n          (min == max && min != 100 && max != 0)\n        ) {\n          user().error(\n            TAG,\n            'visiblePercentageThresholds entry invalid min/max value'\n          );\n          continue;\n        }\n        const newSpec = spec;\n        newSpec['visiblePercentageMin'] = min;\n        newSpec['visiblePercentageMax'] = max;\n        const model = new VisibilityModel(\n          newSpec,\n          calcVisibility,\n          /** @type {?../../../src/service/viewport/viewport-impl.ViewportImpl} */\n          (Services.viewportForDoc(this.ampdoc))\n        );\n        unlisteners.push(\n          this.listen_(\n            model,\n            spec,\n            readyPromise,\n            createReportPromiseFunc,\n            callback,\n            opt_element\n          )\n        );\n      }\n      return () => {\n        unlisteners.forEach((unlistener) => unlistener());\n      };\n    }\n    const model = new VisibilityModel(\n      spec,\n      calcVisibility,\n      /** @type {?../../../src/service/viewport/viewport-impl.ViewportImpl} */\n      (Services.viewportForDoc(this.ampdoc))\n    );\n    return this.listen_(\n      model,\n      spec,\n      readyPromise,\n      createReportPromiseFunc,\n      callback,\n      opt_element\n    );\n  }\n\n  /**\n   * @param {!VisibilityModel} model\n   * @param {!JsonObject} spec\n   * @param {?Promise} readyPromise\n   * @param {?function():!Promise} createReportPromiseFunc\n   * @param {function(!JsonObject)} callback\n   * @param {!Element=} opt_element\n   * @return {!UnlistenDef}\n   * @private\n   */\n  listen_(\n    model,\n    spec,\n    readyPromise,\n    createReportPromiseFunc,\n    callback,\n    opt_element\n  ) {\n    if (createReportPromiseFunc) {\n      model.setReportReady(createReportPromiseFunc);\n    }\n\n    const viewport = Services.viewportForDoc(this.ampdoc);\n    const scrollDepth = viewport.getScrollTop();\n    this.maybeUpdateMaxScrollDepth(scrollDepth);\n\n    // Block visibility.\n    if (readyPromise) {\n      model.setReady(false);\n      readyPromise.then(() => {\n        model.setReady(true);\n        model.maybeSetInitialScrollDepth(scrollDepth);\n      });\n    } else {\n      model.maybeSetInitialScrollDepth(scrollDepth);\n    }\n\n    // Process the event.\n    model.onTriggerEvent(() => {\n      const startTime = this.getStartTime();\n      const state = model.getState(startTime);\n\n      // Additional doc-level state.\n      state['backgrounded'] = this.isBackgrounded() ? 1 : 0;\n      state['backgroundedAtStart'] = this.isBackgroundedAtStart() ? 1 : 0;\n      state['totalTime'] = Date.now() - startTime;\n\n      // Optionally, element-level state.\n      let layoutBox;\n      if (opt_element) {\n        state['elementId'] = opt_element.id;\n        state['opacity'] = getMinOpacity(opt_element);\n        layoutBox = viewport.getLayoutRect(opt_element);\n        const intersectionRatio = this.getElementVisibility(opt_element);\n        const intersectionRect = this.getElementIntersectionRect(opt_element);\n        Object.assign(\n          state,\n          dict({\n            'intersectionRatio': intersectionRatio,\n            'intersectionRect': JSON.stringify(intersectionRect),\n          })\n        );\n      } else {\n        state['opacity'] = this.getRootMinOpacity();\n        state['intersectionRatio'] = this.getRootVisibility();\n        layoutBox = this.getRootLayoutBox();\n      }\n      model.maybeDispose();\n\n      if (layoutBox) {\n        Object.assign(\n          state,\n          dict({\n            'elementX': layoutBox.left,\n            'elementY': layoutBox.top,\n            'elementWidth': layoutBox.width,\n            'elementHeight': layoutBox.height,\n          })\n        );\n        state['initialScrollDepth'] = layoutPositionRelativeToScrolledViewport(\n          layoutBox,\n          viewport,\n          model.getInitialScrollDepth()\n        );\n        state['maxScrollDepth'] = layoutPositionRelativeToScrolledViewport(\n          layoutBox,\n          viewport,\n          this.getMaxScrollDepth()\n        );\n      }\n      callback(state);\n    });\n\n    this.models_.push(model);\n    model.unsubscribe(() => {\n      const index = this.models_.indexOf(model);\n      if (index != -1) {\n        this.models_.splice(index, 1);\n      }\n    });\n\n    // Observe the element via InOb.\n    if (opt_element) {\n      // It's important that this happens after all the setup is done, b/c\n      // intersection observer can fire immedidately. Per spec, this should\n      // NOT happen. However, all of the existing InOb polyfills, as well as\n      // some versions of native implementations, make this mistake.\n      model.unsubscribe(this.observe(opt_element, () => model.update()));\n    }\n\n    // Start update.\n    model.update();\n    return function () {\n      model.dispose();\n    };\n  }\n\n  /**\n   * Observes the intersections of the specified element in the viewport.\n   * @param {!Element} unusedElement\n   * @param {function(number)} unusedListener\n   * @return {!UnlistenDef}\n   * @protected\n   * @abstract\n   */\n  observe(unusedElement, unusedListener) {}\n\n  /**\n   * @param {!Element} unusedElement\n   * @return {number}\n   * @abstract\n   */\n  getElementVisibility(unusedElement) {}\n\n  /**\n   * @param {!Element} unusedElement\n   * @return {?JsonObject}\n   * @abstract\n   */\n  getElementIntersectionRect(unusedElement) {}\n}\n\n/**\n * The implementation of `VisibilityManager` for an AMP document. Two\n * distinct modes are supported: the main AMP doc and a in-a-box doc.\n */\nexport class VisibilityManagerForDoc extends VisibilityManager {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    super(/* parent */ null, ampdoc);\n\n    /** @const @private */\n    this.viewport_ = Services.viewportForDoc(ampdoc);\n\n    /** @private {boolean} */\n    this.backgrounded_ = !ampdoc.isVisible();\n\n    /** @const @private {boolean} */\n    this.backgroundedAtStart_ = this.isBackgrounded();\n\n    /**\n     * @const\n     * @private {!Object<number, {\n     *   element: !Element,\n     *   intersectionRatio: number,\n     *   isVisible: boolean,\n     *   boundingClientRect: ?../../../src/layout-rect.LayoutRectDef,\n     *   listeners: !Array<function(number)>\n     * }>}\n     */\n    this.trackedElements_ = map();\n\n    /** @private {?IntersectionObserver} */\n    this.intersectionObserver_ = null;\n\n    if (getMode(this.ampdoc.win).runtime == 'inabox') {\n      // In-a-box: visibility depends on the InOb.\n      const root = this.ampdoc.getRootNode();\n      const rootElement = dev().assertElement(\n        root.documentElement || root.body || root\n      );\n      this.unsubscribe(\n        this.observe(rootElement, this.setRootVisibility.bind(this))\n      );\n      // Observe inabox window resize event.\n      const resizeListener = () => {\n        const id = getElementId(rootElement);\n        const trackedRoot = this.trackedElements_[id];\n        if (!trackedRoot) {\n          return;\n        }\n        if (\n          this.ampdoc.win./*OK*/ innerHeight < 1 ||\n          this.ampdoc.win./*OK*/ innerWidth < 1\n        ) {\n          trackedRoot.isVisible = false;\n        } else {\n          trackedRoot.isVisible = true;\n        }\n        this.setRootVisibility(\n          trackedRoot.isVisible ? trackedRoot.intersectionRatio : 0\n        );\n      };\n      this.ampdoc.win.addEventListener('resize', resizeListener);\n\n      this.unsubscribe(() => {\n        this.ampdoc.win.removeEventListener('resize', resizeListener);\n      });\n    } else {\n      // Main document: visibility is based on the ampdoc.\n      this.setRootVisibility(this.ampdoc.isVisible() ? 1 : 0);\n      this.unsubscribe(\n        this.ampdoc.onVisibilityChanged(() => {\n          const isVisible = this.ampdoc.isVisible();\n          if (!isVisible) {\n            this.backgrounded_ = true;\n          }\n          this.setRootVisibility(isVisible ? 1 : 0);\n        })\n      );\n    }\n  }\n\n  /** @override */\n  dispose() {\n    super.dispose();\n    if (this.intersectionObserver_) {\n      this.intersectionObserver_.disconnect();\n      this.intersectionObserver_ = null;\n    }\n  }\n\n  /** @override */\n  getStartTime() {\n    return dev().assertNumber(this.ampdoc.getFirstVisibleTime());\n  }\n\n  /** @override */\n  isBackgrounded() {\n    return this.backgrounded_;\n  }\n\n  /** @override */\n  isBackgroundedAtStart() {\n    return this.backgroundedAtStart_;\n  }\n\n  /** @override */\n  getRootMinOpacity() {\n    const root = this.ampdoc.getRootNode();\n    const rootElement = dev().assertElement(\n      root.documentElement || root.body || root\n    );\n    return getMinOpacity(rootElement);\n  }\n\n  /** @override */\n  getRootLayoutBox() {\n    // This code is the same for \"in-a-box\" and standalone doc.\n    const root = this.ampdoc.getRootNode();\n    const rootElement = dev().assertElement(\n      root.documentElement || root.body || root\n    );\n    return this.viewport_.getLayoutRect(rootElement);\n  }\n\n  /** @override */\n  observe(element, listener) {\n    const id = getElementId(element);\n    let trackedElement = this.trackedElements_[id];\n    if (!trackedElement) {\n      trackedElement = {\n        element,\n        intersectionRatio: 0,\n        intersectionRect: null,\n        isVisible: false,\n        boundingClientRect: null,\n        listeners: [],\n      };\n      this.trackedElements_[id] = trackedElement;\n    } else if (\n      trackedElement.intersectionRatio > 0 &&\n      trackedElement.isVisible\n    ) {\n      // This has already been tracked and the `intersectionRatio` is fresh.\n      listener(trackedElement.intersectionRatio);\n    }\n    trackedElement.listeners.push(listener);\n    this.getIntersectionObserver_().observe(element);\n    return () => {\n      const trackedElement = this.trackedElements_[id];\n      if (trackedElement) {\n        const index = trackedElement.listeners.indexOf(listener);\n        if (index != -1) {\n          trackedElement.listeners.splice(index, 1);\n        }\n        if (trackedElement.listeners.length == 0) {\n          this.intersectionObserver_.unobserve(element);\n          delete this.trackedElements_[id];\n        }\n      }\n    };\n  }\n\n  /** @override */\n  getElementVisibility(element) {\n    if (this.getRootVisibility() == 0) {\n      return 0;\n    }\n    const id = getElementId(element);\n    const trackedElement = this.trackedElements_[id];\n    return (\n      (trackedElement &&\n        trackedElement.isVisible &&\n        trackedElement.intersectionRatio) ||\n      0\n    );\n  }\n\n  /**\n   * Gets the intersection element.\n   *\n   * @param {!Element} element\n   * @return {?JsonObject}\n   */\n  getElementIntersectionRect(element) {\n    if (this.getElementVisibility(element) <= 0) {\n      return null;\n    }\n    const id = getElementId(element);\n    const trackedElement = this.trackedElements_[id];\n    if (trackedElement) {\n      return /** @type {!JsonObject} */ (trackedElement.intersectionRect);\n    }\n    return null;\n  }\n\n  /**\n   * @return {!IntersectionObserver}\n   * @private\n   */\n  getIntersectionObserver_() {\n    if (!this.intersectionObserver_) {\n      const {win} = this.ampdoc;\n      this.intersectionObserver_ = new win.IntersectionObserver(\n        this.onIntersectionChanges_.bind(this),\n        {threshold: DEFAULT_THRESHOLD}\n      );\n    }\n    return this.intersectionObserver_;\n  }\n\n  /**\n   * @param {!Array<!IntersectionObserverEntry>} entries\n   * @private\n   */\n  onIntersectionChanges_(entries) {\n    entries.forEach((change) => {\n      let intersection = change.intersectionRect;\n      // IntersectionRect type now changed from ClientRect to DOMRectReadOnly.\n      // TODO(@zhouyx): Fix all InOb related type.\n      intersection = layoutRectLtwh(\n        Number(intersection.left),\n        Number(intersection.top),\n        Number(intersection.width),\n        Number(intersection.height)\n      );\n      let {boundingClientRect} = change;\n      boundingClientRect =\n        boundingClientRect &&\n        layoutRectLtwh(\n          Number(boundingClientRect.left),\n          Number(boundingClientRect.top),\n          Number(boundingClientRect.width),\n          Number(boundingClientRect.height)\n        );\n      this.onIntersectionChange_(\n        change.target,\n        change.intersectionRatio,\n        intersection,\n        boundingClientRect\n      );\n    });\n  }\n\n  /**\n   * @param {!Element} target\n   * @param {number} intersectionRatio\n   * @param {!../../../src/layout-rect.LayoutRectDef} intersectionRect\n   * @param {!../../../src/layout-rect.LayoutRectDef} boundingClientRect\n   * @private\n   */\n  onIntersectionChange_(\n    target,\n    intersectionRatio,\n    intersectionRect,\n    boundingClientRect\n  ) {\n    intersectionRatio = Math.min(Math.max(intersectionRatio, 0), 1);\n    const id = getElementId(target);\n    const trackedElement = this.trackedElements_[id];\n\n    // This is different from the InOb v2 isVisible definition.\n    // isVisible here only checks for element size\n    let isVisible = true;\n\n    if (boundingClientRect.width < 1 || boundingClientRect.height < 1) {\n      // Set isVisible to false when the element is not visible.\n      // Use < 1 because the width/height can\n      // be a double value on high resolution screen\n      isVisible = false;\n    }\n    if (trackedElement) {\n      trackedElement.isVisible = isVisible;\n      trackedElement.intersectionRatio = intersectionRatio;\n      trackedElement.intersectionRect = intersectionRect;\n      trackedElement.boundingClientRect = boundingClientRect;\n      for (let i = 0; i < trackedElement.listeners.length; i++) {\n        trackedElement.listeners[i](\n          trackedElement.isVisible ? intersectionRatio : 0\n        );\n      }\n    }\n  }\n}\n\n/**\n * The implementation of `VisibilityManager` for a FIE embed. This visibility\n * root delegates most of tracking functions to its parent, the ampdoc root.\n */\nexport class VisibilityManagerForEmbed extends VisibilityManager {\n  /**\n   * @param {!VisibilityManager} parent\n   * @param {!../../../src/friendly-iframe-embed.FriendlyIframeEmbed} embed\n   */\n  constructor(parent, embed) {\n    super(parent, parent.ampdoc);\n\n    /** @const */\n    this.embed = embed;\n\n    /** @const @private {boolean} */\n    this.backgroundedAtStart_ = this.parent.isBackgrounded();\n\n    this.unsubscribe(\n      this.parent.observe(\n        dev().assertElement(embed.host),\n        this.setRootVisibility.bind(this)\n      )\n    );\n  }\n\n  /** @override */\n  getStartTime() {\n    return this.embed.getStartTime();\n  }\n\n  /** @override */\n  isBackgrounded() {\n    return this.parent.isBackgrounded();\n  }\n\n  /** @override */\n  isBackgroundedAtStart() {\n    return this.backgroundedAtStart_;\n  }\n\n  /** @override */\n  getRootMinOpacity() {\n    const rootElement = dev().assertElement(this.embed.iframe);\n    return getMinOpacity(rootElement);\n  }\n\n  /**\n   * Gets the layout box of the embedded document. Note that this may be\n   * smaller than the size allocated by the host. In that case, the document\n   * will be centered, and the unfilled space will not be reflected in this\n   * return value.\n   * embed.iframe is used to calculate the root layoutbox, since it is more\n   * important for the embedded document to know its own size, rather than\n   * the size of the host rectangle which it may or may not entirely fill.\n   * embed.host is used to calculate the root visibility, however, since\n   * the visibility of the host element directly determines the embedded\n   * document's visibility.\n   * @override\n   */\n  getRootLayoutBox() {\n    const rootElement = dev().assertElement(this.embed.iframe);\n    return Services.viewportForDoc(this.ampdoc).getLayoutRect(rootElement);\n  }\n\n  /** @override */\n  observe(element, listener) {\n    return this.parent.observe(element, listener);\n  }\n\n  /** @override */\n  getElementVisibility(element) {\n    if (this.getRootVisibility() == 0) {\n      return 0;\n    }\n    return this.parent.getElementVisibility(element);\n  }\n\n  /**\n   * Returns intersecting element.\n   * @override\n   */\n  getElementIntersectionRect(element) {\n    if (this.getRootVisibility() == 0) {\n      return null;\n    }\n    return this.parent.getElementIntersectionRect(element);\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nexport const READY_SCAN_SIGNAL = 'ready-scan';\n\n/**\n * The internal structure of a ChangeHeightRequest.\n * @typedef {{\n *   newMargins: !../layout-rect.LayoutMarginsChangeDef,\n *   currentMargins: !../layout-rect.LayoutMarginsDef\n * }}\n */\nexport let MarginChangeDef;\n\n/**\n * The internal structure of a ChangeHeightRequest.\n * @typedef {{\n *   resource: !./resource.Resource,\n *   newHeight: (number|undefined),\n *   newWidth: (number|undefined),\n *   marginChange: (!MarginChangeDef|undefined),\n *   event: (?Event|undefined),\n *   force: boolean,\n *   callback: (function(boolean)|undefined),\n * }}\n */\nexport let ChangeSizeRequestDef;\n\n/* eslint-disable no-unused-vars */\n/**\n * @interface\n */\nexport class ResourcesInterface {\n  /**\n   * Returns a list of resources.\n   * @return {!Array<!./resource.Resource>}\n   */\n  get() {}\n\n  /**\n   * @return {!./ampdoc-impl.AmpDoc}\n   */\n  getAmpdoc() {}\n\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. If no Resource is found, the exception is thrown.\n   * @param {!AmpElement} element\n   * @return {!./resource.Resource}\n   */\n  getResourceForElement(element) {}\n\n  /**\n   * Returns the {@link Resource} instance corresponding to the specified AMP\n   * Element. Returns null if no resource is found.\n   * @param {!AmpElement} element\n   * @return {?./resource.Resource}\n   */\n  getResourceForElementOptional(element) {}\n\n  /**\n   * Returns the direction the user last scrolled.\n   *  - -1 for scrolling up\n   *  - 1 for scrolling down\n   *  - Defaults to 1\n   * TODO(lannka): this method should not belong to resources.\n   * @return {number}\n   */\n  getScrollDirection() {}\n\n  /**\n   * Signals that an element has been added to the DOM. Resources manager\n   * will start tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  add(element) {}\n\n  /**\n   * Signals that an element has been upgraded to the DOM. Resources manager\n   * will perform build and enable layout/viewport signals for this element.\n   * @param {!AmpElement} element\n   */\n  upgraded(element) {}\n\n  /**\n   * Signals that an element has been removed to the DOM. Resources manager\n   * will stop tracking it from this point on.\n   * @param {!AmpElement} element\n   */\n  remove(element) {}\n\n  /**\n   * Schedules layout or preload for the specified resource.\n   * @param {!./resource.Resource} resource\n   * @param {boolean} layout\n   * @param {number=} opt_parentPriority\n   * @param {boolean=} opt_forceOutsideViewport\n   */\n  scheduleLayoutOrPreload(\n    resource,\n    layout,\n    opt_parentPriority,\n    opt_forceOutsideViewport\n  ) {}\n\n  /**\n   * Schedules the work pass at the latest with the specified delay.\n   * @param {number=} opt_delay\n   * @param {boolean=} opt_relayoutAll\n   * @return {boolean}\n   */\n  schedulePass(opt_delay, opt_relayoutAll) {}\n\n  /**\n   * Enqueue, or update if already exists, a mutation task for a resource.\n   * @param {./resource.Resource} resource\n   * @param {ChangeSizeRequestDef} newRequest\n   * @package\n   */\n  updateOrEnqueueMutateTask(resource, newRequest) {}\n\n  /**\n   * Schedules the work pass at the latest with the specified delay.\n   * @package\n   */\n  schedulePassVsync() {}\n\n  /**\n   * Registers a callback to be called when the next pass happens.\n   * @param {function()} callback\n   */\n  onNextPass(callback) {}\n\n  /**\n   * @return {!Promise} when first pass executed.\n   */\n  whenFirstPass() {}\n\n  /**\n   * Called when main AMP binary is fully initialized.\n   * May never be called in Shadow Mode.\n   */\n  ampInitComplete() {}\n\n  /**\n   * @param {number} relayoutTop\n   * @package\n   */\n  setRelayoutTop(relayoutTop) {}\n\n  /**\n   * Flag that the height could have been changed.\n   * @package\n   */\n  maybeHeightChanged() {}\n\n  /**\n   * Updates the priority of the resource. If there are tasks currently\n   * scheduled, their priority is updated as well.\n   * @param {!Element} element\n   * @param {number} newLayoutPriority\n   */\n  updateLayoutPriority(element, newLayoutPriority) {}\n}\n/* eslint-enable no-unused-vars */\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {READY_SCAN_SIGNAL} from './service/resources-interface';\nimport {Services} from './services';\nimport {isIframed} from './dom';\n\n/** @const {!Array<string>} */\nconst EXCLUDE_INI_LOAD = [\n  'AMP-AD',\n  'AMP-ANALYTICS',\n  'AMP-PIXEL',\n  'AMP-AD-EXIT',\n];\n\n/**\n * Returns the promise that will be resolved when all content elements\n * have been loaded in the initially visible set.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {!Window} hostWin\n * @param {!./layout-rect.LayoutRectDef} rect\n * @param {boolean=} opt_prerenderableOnly signifies if we are in prerender mode.\n * @return {!Promise}\n */\nexport function whenContentIniLoad(\n  elementOrAmpDoc,\n  hostWin,\n  rect,\n  opt_prerenderableOnly\n) {\n  if (INI_LOAD_INOB) {\n    return whenContentIniLoadInOb(elementOrAmpDoc, opt_prerenderableOnly);\n  }\n  return whenContentIniLoadMeasure(\n    elementOrAmpDoc,\n    hostWin,\n    rect,\n    opt_prerenderableOnly\n  );\n}\n\n/**\n * A legacy way using direct measurement.\n *\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {!Window} hostWin\n * @param {!./layout-rect.LayoutRectDef} rect\n * @param {boolean=} opt_prerenderableOnly signifies if we are in prerender mode.\n * @return {!Promise}\n * @visibleForTesting\n * TODO(#31915): remove, once launched.\n */\nexport function whenContentIniLoadMeasure(\n  elementOrAmpDoc,\n  hostWin,\n  rect,\n  opt_prerenderableOnly\n) {\n  const ampdoc = Services.ampdoc(elementOrAmpDoc);\n  return getMeasuredResources(ampdoc, hostWin, (r) => {\n    // TODO(jridgewell): Remove isFixed check here once the position\n    // is calculted correctly in a separate layer for embeds.\n    if (\n      !r.isDisplayed() ||\n      (!r.overlaps(rect) && !r.isFixed()) ||\n      (opt_prerenderableOnly && !r.prerenderAllowed())\n    ) {\n      return false;\n    }\n    return true;\n  }).then((resources) => {\n    const promises = [];\n    resources.forEach((r) => {\n      if (!EXCLUDE_INI_LOAD.includes(r.element.tagName)) {\n        promises.push(r.loadedOnce());\n      }\n    });\n    return Promise.all(promises);\n  });\n}\n\n/**\n * A new way using direct measurement.\n *\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {boolean=} opt_prerenderableOnly signifies if we are in prerender mode.\n * @return {!Promise}\n * @visibleForTesting\n * TODO(#31915): remove visibility\n */\nexport function whenContentIniLoadInOb(elementOrAmpDoc, opt_prerenderableOnly) {\n  const ampdoc = Services.ampdoc(elementOrAmpDoc);\n  // First, wait for the `ready-scan` signal. Waiting for each element\n  // individually is too expensive and `ready-scan` will cover most of\n  // the initially parsed elements.\n  const whenReady = ampdoc.signals().whenSignal(READY_SCAN_SIGNAL);\n  return whenReady.then(() => {\n    // Filter elements.\n    const resources = Services.resourcesForDoc(ampdoc);\n    const elements = resources\n      .get()\n      .filter((r) => {\n        if (opt_prerenderableOnly && !r.prerenderAllowed()) {\n          return false;\n        }\n        return !EXCLUDE_INI_LOAD.includes(r.element.tagName);\n      })\n      .map((r) => r.element);\n\n    if (elements.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    // Find intersecting elements.\n    return new Promise((resolve) => {\n      const {win} = ampdoc;\n      const io = new win.IntersectionObserver(\n        (entries) => {\n          io.disconnect();\n          const intersecting = [];\n          for (let i = 0; i < entries.length; i++) {\n            const {isIntersecting, target} = entries[i];\n            if (isIntersecting) {\n              intersecting.push(target);\n            }\n          }\n          resolve(intersecting);\n        },\n        {\n          // We generally always want `root: document` here. However, in\n          // many browsers this is still polyfilled and `{root: null}` is\n          // a lot faster.\n          root: isIframed(win) ? /** @type {?} */ (win.document) : null,\n          threshold: 0.01,\n        }\n      );\n      // Limit check to the first 100 elements.\n      for (let i = 0; i < Math.min(elements.length, 100); i++) {\n        io.observe(elements[i]);\n      }\n    }).then((elements) => {\n      return Promise.all(elements.map((element) => element.whenLoaded()));\n    });\n  });\n}\n\n/**\n * Returns a subset of resources which are (1) belong to the specified host\n * window, and (2) meet the filterFn given.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {!Window} hostWin\n * @param {function(!./service/resource.Resource):boolean} filterFn\n * @return {!Promise<!Array<!./service/resource.Resource>>}\n */\nexport function getMeasuredResources(ampdoc, hostWin, filterFn) {\n  // First, wait for the `ready-scan` signal. Waiting for each element\n  // individually is too expensive and `ready-scan` will cover most of\n  // the initially parsed elements.\n  return ampdoc\n    .signals()\n    .whenSignal(READY_SCAN_SIGNAL)\n    .then(() => {\n      // Second, wait for any left-over elements to complete measuring.\n      const measurePromiseArray = [];\n      const resources = Services.resourcesForDoc(ampdoc);\n      resources.get().forEach((r) => {\n        if (!r.hasBeenMeasured() && r.hostWin == hostWin && !r.hasOwner()) {\n          measurePromiseArray.push(r.ensureMeasured());\n        }\n      });\n      return Promise.all(measurePromiseArray);\n    })\n    .then(() => {\n      const resources = Services.resourcesForDoc(ampdoc);\n      return resources.get().filter((r) => {\n        return (\n          r.hostWin == hostWin &&\n          !r.hasOwner() &&\n          r.hasBeenMeasured() &&\n          filterFn(r)\n        );\n      });\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ScrollManager} from './scroll-manager';\nimport {Services} from '../../../src/services';\nimport {\n  closestAncestorElementBySelector,\n  matches,\n  scopedQuerySelector,\n} from '../../../src/core/dom/query';\nimport {dev, user, userAssert} from '../../../src/log';\nimport {getDataParamsFromAttributes} from '../../../src/dom';\nimport {getMode} from '../../../src/mode';\nimport {isArray} from '../../../src/core/types';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {layoutRectLtwh} from '../../../src/core/math/layout-rect';\nimport {map} from '../../../src/core/types/object';\n\nimport {provideVisibilityManager} from './visibility-manager';\n\nimport {tryResolve} from '../../../src/core/data-structures/promise';\nimport {whenContentIniLoad} from '../../../src/ini-load';\n\nconst TAG = 'amp-analytics/analytics-root';\nconst VARIABLE_DATA_ATTRIBUTE_KEY = /^vars(.+)/;\n\n/**\n * An analytics root. Analytics can be scoped to either ampdoc, embed or\n * an arbitrary AMP element.\n *\n * TODO(#22733): merge analytics root properties into ampdoc.\n *\n * @implements {../../../src/service.Disposable}\n * @abstract\n */\nexport class AnalyticsRoot {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /** @const */\n    this.trackers_ = map();\n\n    /** @private {?./visibility-manager.VisibilityManager} */\n    this.visibilityManager_ = null;\n\n    /** @private {?./scroll-manager.ScrollManager} */\n    this.scrollManager_ = null;\n  }\n\n  /** @override */\n  dispose() {\n    for (const k in this.trackers_) {\n      this.trackers_[k].dispose();\n      delete this.trackers_[k];\n    }\n    if (this.visibilityManager_) {\n      this.visibilityManager_.dispose();\n    }\n    if (this.scrollManager_) {\n      this.scrollManager_.dispose();\n    }\n  }\n\n  /**\n   * Returns the type of the tracker.\n   * @return {string}\n   * @abstract\n   */\n  getType() {}\n\n  /**\n   * The root node the analytics is scoped to.\n   *\n   * @return {!Document|!ShadowRoot}\n   * @abstract\n   */\n  getRoot() {}\n\n  /**\n   * The viewer of analytics root\n   * @return {!../../../src/service/viewer-interface.ViewerInterface}\n   */\n  getViewer() {\n    return Services.viewerForDoc(this.ampdoc);\n  }\n\n  /**\n   * The root element within the analytics root.\n   *\n   * @return {!Element}\n   */\n  getRootElement() {\n    const root = this.getRoot();\n    // In the case of a shadow doc, its host will be used as\n    // a refrence point\n    return dev().assertElement(\n      root.host || root.documentElement || root.body || root\n    );\n  }\n\n  /**\n   * The host element of the analytics root.\n   *\n   * @return {?Element}\n   * @abstract\n   */\n  getHostElement() {}\n\n  /**\n   * The signals for the root.\n   *\n   * @return {!../../../src/utils/signals.Signals}\n   * @abstract\n   */\n  signals() {}\n\n  /**\n   * Whether this analytics root contains the specified node.\n   *\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  contains(node) {\n    return this.getRoot().contains(node);\n  }\n\n  /**\n   * Returns the element with the specified ID in the scope of this root.\n   *\n   * @param {string} unusedId\n   * @return {?Element}\n   * @abstract\n   */\n  getElementById(unusedId) {}\n\n  /**\n   * Returns the tracker for the specified name and list of allowed types.\n   *\n   * @param {string} name\n   * @param {!Object<string, typeof ./events.EventTracker>} allowlist\n   * @return {?./events.EventTracker}\n   */\n  getTrackerForAllowlist(name, allowlist) {\n    const trackerProfile = allowlist[name];\n    if (trackerProfile) {\n      return this.getTracker(name, trackerProfile);\n    }\n    return null;\n  }\n\n  /**\n   * Returns the tracker for the specified name and type. If the tracker\n   * has not been requested before, it will be created.\n   *\n   * @param {string} name\n   * @param {typeof ./events.CustomEventTracker|typeof ./events.ClickEventTracker|typeof ./events.ScrollEventTracker|typeof ./events.SignalTracker|typeof ./events.IniLoadTracker|typeof ./events.VideoEventTracker|typeof ./events.VideoEventTracker|typeof ./events.VisibilityTracker|typeof ./events.AmpStoryEventTracker} klass\n   * @return {!./events.EventTracker}\n   */\n  getTracker(name, klass) {\n    let tracker = this.trackers_[name];\n    if (!tracker) {\n      tracker = new klass(this);\n      this.trackers_[name] = tracker;\n    }\n    return tracker;\n  }\n\n  /**\n   * Returns the tracker for the specified name or `null`.\n   * @param {string} name\n   * @return {?./events.EventTracker}\n   */\n  getTrackerOptional(name) {\n    return this.trackers_[name] || null;\n  }\n\n  /**\n   * Searches the element that matches the selector within the scope of the\n   * analytics root in relationship to the specified context node.\n   *\n   * @param {!Element} context\n   * @param {string} selector DOM query selector.\n   * @param {?string=} selectionMethod Allowed values are `null`,\n   *   `'closest'` and `'scope'`.\n   * @return {!Promise<!Element>} Element corresponding to the selector.\n   */\n  getElement(context, selector, selectionMethod = null) {\n    // Special case selectors. The selection method is irrelavant.\n    // And no need to wait for document ready.\n    if (selector == ':root') {\n      return tryResolve(() => this.getRootElement());\n    }\n    if (selector == ':host') {\n      return new Promise((resolve) => {\n        resolve(\n          user().assertElement(\n            this.getHostElement(),\n            `Element \"${selector}\" not found`\n          )\n        );\n      });\n    }\n\n    // Wait for document-ready to avoid false missed searches\n    return this.ampdoc.whenReady().then(() => {\n      let found;\n      let result = null;\n      // Query search based on the selection method.\n      try {\n        if (selectionMethod == 'scope') {\n          found = scopedQuerySelector(context, selector);\n        } else if (selectionMethod == 'closest') {\n          found = closestAncestorElementBySelector(context, selector);\n        } else {\n          found = this.getRoot().querySelector(selector);\n        }\n      } catch (e) {\n        userAssert(false, `Invalid query selector ${selector}`);\n      }\n\n      // DOM search can \"look\" outside the boundaries of the root, thus make\n      // sure the result is contained.\n      if (found && this.contains(found)) {\n        result = found;\n      }\n      return user().assertElement(result, `Element \"${selector}\" not found`);\n    });\n  }\n\n  /**\n   * @param {!Array<string>} selectors Array of DOM query selectors.\n   * @return {!Promise<!Array<!Element>>} Element corresponding to the selector.\n   */\n  getElementsByQuerySelectorAll_(selectors) {\n    // Wait for document-ready to avoid false missed searches\n    return this.ampdoc.whenReady().then(() => {\n      let elements = [];\n      for (let i = 0; i < selectors.length; i++) {\n        let nodeList;\n        let elementArray = [];\n        const selector = selectors[i];\n        try {\n          nodeList = this.getRoot().querySelectorAll(selector);\n        } catch (e) {\n          userAssert(false, `Invalid query selector ${selector}`);\n        }\n        for (let j = 0; j < nodeList.length; j++) {\n          if (this.contains(nodeList[j])) {\n            elementArray.push(nodeList[j]);\n          }\n        }\n        elementArray = this.getDataVarsElements_(elementArray, selector);\n        userAssert(elementArray.length, `Element \"${selector}\" not found`);\n        elements = elements.concat(elementArray);\n      }\n      // Return unique\n      return elements.filter(\n        (element, index) => elements.indexOf(element) === index\n      );\n    });\n  }\n\n  /**\n   * Return all elements that have a data-vars attribute.\n   * @param {!Array<!Element>} elementArray\n   * @param {string} selector\n   * @return {!Array<!Element>}\n   */\n  getDataVarsElements_(elementArray, selector) {\n    let removedCount = 0;\n    const dataVarsArray = [];\n    for (let i = 0; i < elementArray.length; i++) {\n      const dataVarKeys = Object.keys(\n        getDataParamsFromAttributes(\n          elementArray[i],\n          /* computeParamNameFunc */ undefined,\n          VARIABLE_DATA_ATTRIBUTE_KEY\n        )\n      );\n      if (dataVarKeys.length) {\n        dataVarsArray.push(elementArray[i]);\n      } else {\n        removedCount++;\n      }\n    }\n    if (removedCount) {\n      user().warn(\n        TAG,\n        '%s element(s) ommited from selector \"%s\"' +\n          ' because no data-vars-* attribute was found.',\n        removedCount,\n        selector\n      );\n    }\n    return dataVarsArray;\n  }\n\n  /**\n   * Searches the AMP element that matches the selector within the scope of the\n   * analytics root in relationship to the specified context node.\n   *\n   * @param {!Element} context\n   * @param {string} selector DOM query selector.\n   * @param {?string=} selectionMethod Allowed values are `null`,\n   *   `'closest'` and `'scope'`.\n   * @return {!Promise<!AmpElement>} AMP element corresponding to the selector if found.\n   */\n  getAmpElement(context, selector, selectionMethod) {\n    return this.getElement(context, selector, selectionMethod).then(\n      (element) => {\n        this.verifyAmpElements_([element], selector);\n        return element;\n      }\n    );\n  }\n\n  /**\n   * Searches for the element(s) that matches the selector\n   * within the scope of the analytics root in relationship to\n   * the specified context node.\n   *\n   * @param {!Element} context\n   * @param {!Array<string>|string} selectors DOM query selector(s).\n   * @param {?string=} selectionMethod Allowed values are `null`,\n   *   `'closest'` and `'scope'`.\n   * @return {!Promise<!Array<!Element>>} Array of elements corresponding to the selector if found.\n   */\n  getElements(context, selectors, selectionMethod) {\n    if (\n      isExperimentOn(this.ampdoc.win, 'visibility-trigger-improvements') &&\n      isArray(selectors)\n    ) {\n      userAssert(\n        !selectionMethod,\n        'Cannot have selectionMethod %s defined with an array selector.',\n        selectionMethod\n      );\n      return this.getElementsByQuerySelectorAll_(\n        /** @type {!Array<string>} */ (selectors)\n      );\n    }\n    return this.getElement(\n      context,\n      /** @type {string} */ (selectors),\n      selectionMethod\n    ).then((element) => [element]);\n  }\n\n  /**\n   * @param {!Array<Element>} elements\n   * @param {string} selector\n   */\n  verifyAmpElements_(elements, selector) {\n    for (let i = 0; i < elements.length; i++) {\n      userAssert(\n        elements[i].classList.contains('i-amphtml-element'),\n        'Element \"%s\" is required to be an AMP element',\n        selector\n      );\n    }\n  }\n\n  /**\n   * Creates listener-filter for DOM events to check against the specified\n   * selector. If the node (or its ancestors) match the selector the listener\n   * will be called.\n   *\n   * @param {function(!Element, !Event)} listener The first argument is the\n   *   matched target node and the second is the original event.\n   * @param {!Element} context\n   * @param {string} selector DOM query selector.\n   * @param {?string=} selectionMethod Allowed values are `null`,\n   *   `'closest'` and `'scope'`.\n   * @return {function(!Event)}\n   */\n  createSelectiveListener(listener, context, selector, selectionMethod = null) {\n    return (event) => {\n      if (selector == ':host') {\n        // `:host` is not reachable via selective listener b/c event path\n        // cannot be retargeted across the boundary of the embed.\n        return;\n      }\n\n      // Navigate up the DOM tree to find the actual target.\n      const rootElement = this.getRootElement();\n      const isSelectAny = selector == '*';\n      const isSelectRoot = selector == ':root';\n      let {target} = event;\n      while (target) {\n        // Target must be contained by this root.\n        if (!this.contains(target)) {\n          break;\n        }\n        // `:scope` context must contain the target.\n        if (\n          selectionMethod == 'scope' &&\n          !isSelectRoot &&\n          !context.contains(target)\n        ) {\n          break;\n        }\n        // `closest()` target must contain the conext.\n        if (selectionMethod == 'closest' && !target.contains(context)) {\n          // However, the search must continue!\n          target = target.parentElement;\n          continue;\n        }\n\n        // Check if the target matches the selector.\n        if (\n          isSelectAny ||\n          (isSelectRoot && target == rootElement) ||\n          tryMatches_(target, selector)\n        ) {\n          listener(target, event);\n          // Don't fire the event multiple times even if the more than one\n          // ancestor matches the selector.\n          break;\n        }\n\n        target = target.parentElement;\n      }\n    };\n  }\n\n  /**\n   * Returns the promise that will be resolved as soon as the elements within\n   * the root have been loaded inside the first viewport of the root.\n   * @return {!Promise}\n   * @abstract\n   */\n  whenIniLoaded() {}\n\n  /**\n   * Returns the visibility root corresponding to this analytics root (ampdoc\n   * or embed). The visibility root is created lazily as needed and takes\n   * care of all visibility tracking functions.\n   * @return {!./visibility-manager.VisibilityManager}\n   */\n  getVisibilityManager() {\n    if (!this.visibilityManager_) {\n      this.visibilityManager_ = provideVisibilityManager(this.getRoot());\n    }\n    return this.visibilityManager_;\n  }\n\n  /**\n   *  Returns the Scroll Managet corresponding to this analytics root.\n   * The Scroll Manager is created lazily as needed, and will handle\n   * calling all handlers for a scroll event.\n   * @return {!./scroll-manager.ScrollManager}\n   */\n  getScrollManager() {\n    // TODO (zhouyx@): Disallow scroll trigger with host API\n    if (!this.scrollManager_) {\n      this.scrollManager_ = new ScrollManager(this);\n    }\n\n    return this.scrollManager_;\n  }\n}\n\n/**\n * The implementation of the analytics root for an ampdoc.\n */\nexport class AmpdocAnalyticsRoot extends AnalyticsRoot {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    super(ampdoc);\n  }\n\n  /** @override */\n  getType() {\n    return 'ampdoc';\n  }\n\n  /** @override */\n  getRoot() {\n    return this.ampdoc.getRootNode();\n  }\n\n  /** @override */\n  getHostElement() {\n    // ampdoc is always the root of everything - no host.\n    return null;\n  }\n\n  /** @override */\n  signals() {\n    return this.ampdoc.signals();\n  }\n\n  /** @override */\n  getElementById(id) {\n    return this.ampdoc.getElementById(id);\n  }\n\n  /** @override */\n  whenIniLoaded() {\n    const viewport = Services.viewportForDoc(this.ampdoc);\n    let rect;\n    if (getMode(this.ampdoc.win).runtime == 'inabox') {\n      // TODO(dvoytenko, #7971): This is currently addresses incorrect position\n      // calculations in a in-a-box viewport where all elements are offset\n      // to the bottom of the embed. The current approach, even if fixed, still\n      // creates a significant probability of risk condition.\n      // Once address, we can simply switch to the 0/0 approach in the `else`\n      // clause.\n      rect = viewport.getLayoutRect(this.getRootElement());\n    } else {\n      const size = viewport.getSize();\n      rect = layoutRectLtwh(0, 0, size.width, size.height);\n    }\n    return whenContentIniLoad(this.ampdoc, this.ampdoc.win, rect);\n  }\n}\n\n/**\n * The implementation of the analytics root for FIE.\n * TODO(#22733): merge into AnalyticsRoot once ampdoc-fie is launched.\n */\nexport class EmbedAnalyticsRoot extends AnalyticsRoot {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!../../../src/friendly-iframe-embed.FriendlyIframeEmbed} embed\n   */\n  constructor(ampdoc, embed) {\n    super(ampdoc);\n    /** @const */\n    this.embed = embed;\n  }\n\n  /** @override */\n  getType() {\n    return 'embed';\n  }\n\n  /** @override */\n  getRoot() {\n    return this.embed.win.document;\n  }\n\n  /** @override */\n  getHostElement() {\n    return this.embed.iframe;\n  }\n\n  /** @override */\n  signals() {\n    return this.embed.signals();\n  }\n\n  /** @override */\n  getElementById(id) {\n    return this.embed.win.document.getElementById(id);\n  }\n\n  /** @override */\n  whenIniLoaded() {\n    return this.embed.whenIniLoaded();\n  }\n}\n\n/**\n * @param  {!Element} el\n * @param  {string} selector\n * @return {boolean}\n */\nfunction tryMatches_(el, selector) {\n  try {\n    return matches(el, selector);\n  } catch (e) {\n    user().error(TAG, 'Bad query selector.', selector, e);\n    return false;\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChunkPriority, chunk} from '../../../src/chunk';\nimport {Deferred} from '../../../src/core/data-structures/promise';\nimport {dev, userAssert} from '../../../src/log';\nimport {getMode} from '../../../src/mode';\nimport {getTrackerKeyName, getTrackerTypesForParentType} from './events';\nimport {toWin} from '../../../src/core/window';\n\n/**\n * @const {number}\n * We want to execute the first trigger immediately to reduce the viewability\n * delay as much as possible.\n */\nconst IMMEDIATE_TRIGGER_THRES = 1;\n\n/** @const {number} */\nconst HIGH_PRIORITY_TRIGGER_THRES = 3;\n\n/**\n * Represents the group of analytics triggers for a single config. All triggers\n * are declared and released at the same time.\n *\n * @implements {../../../src/service.Disposable}\n */\nexport class AnalyticsGroup {\n  /**\n   * @param {!./analytics-root.AnalyticsRoot} root\n   * @param {!Element} analyticsElement\n   */\n  constructor(root, analyticsElement) {\n    /** @const */\n    this.root_ = root;\n    /** @const */\n    this.analyticsElement_ = analyticsElement;\n\n    /** @private @const {!Array<!UnlistenDef>} */\n    this.listeners_ = [];\n\n    /** @private {number} */\n    this.triggerCount_ = 0;\n\n    /** @private @const {!Window} */\n    this.win_ = toWin(analyticsElement.ownerDocument.defaultView);\n  }\n\n  /** @override */\n  dispose() {\n    this.listeners_.forEach((listener) => {\n      listener();\n    });\n  }\n\n  /**\n   * Adds a trigger with the specified config and listener. The config must\n   * contain `on` property specifying the type of the event.\n   *\n   * Triggers registered on a group are automatically released when the\n   * group is disposed.\n   *\n   * @param {!JsonObject} config\n   * @param {function(!./events.AnalyticsEvent)} handler\n   * @return {!Promise}\n   */\n  addTrigger(config, handler) {\n    const eventType = dev().assertString(config['on']);\n    const trackerKey = getTrackerKeyName(eventType);\n    const trackerAllowlist = getTrackerTypesForParentType(this.root_.getType());\n\n    const tracker = this.root_.getTrackerForAllowlist(\n      trackerKey,\n      trackerAllowlist\n    );\n    userAssert(\n      !!tracker,\n      'Trigger type \"%s\" is not allowed in the %s',\n      eventType,\n      this.root_.getType()\n    );\n    let unlisten;\n    const deferred = new Deferred();\n    const task = () => {\n      unlisten = tracker.add(\n        this.analyticsElement_,\n        eventType,\n        config,\n        handler\n      );\n      this.listeners_.push(unlisten);\n      deferred.resolve();\n    };\n    if (\n      this.triggerCount_ < IMMEDIATE_TRIGGER_THRES ||\n      getMode(this.win_).runtime == 'inabox'\n    ) {\n      task();\n    } else {\n      const priority =\n        this.triggerCount_ < HIGH_PRIORITY_TRIGGER_THRES\n          ? ChunkPriority.HIGH\n          : ChunkPriority.LOW;\n      chunk(this.analyticsElement_, task, priority);\n    }\n    this.triggerCount_++;\n    return deferred.promise;\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AmpStoryEventTracker,\n  AnalyticsEvent,\n  AnalyticsEventType,\n  CustomEventTracker,\n  getTrackerKeyName,\n} from './events';\nimport {AmpdocAnalyticsRoot, EmbedAnalyticsRoot} from './analytics-root';\nimport {AnalyticsGroup} from './analytics-group';\nimport {Services} from '../../../src/services';\nimport {dict} from '../../../src/core/types/object';\nimport {getFriendlyIframeEmbedOptional} from '../../../src/iframe-helper';\nimport {\n  getParentWindowFrameElement,\n  getServiceForDoc,\n  getServicePromiseForDoc,\n  registerServiceBuilderForDoc,\n} from '../../../src/service';\n\nconst PROP = '__AMP_AN_ROOT';\n\n/**\n * @implements {../../../src/service.Disposable}\n * @package\n * @visibleForTesting\n */\nexport class InstrumentationService {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const */\n    this.ampdoc = ampdoc;\n\n    /** @const */\n    this.root_ = this.findRoot_(ampdoc.getRootNode());\n  }\n\n  /** @override */\n  dispose() {\n    this.root_.dispose();\n  }\n\n  /**\n   * @param {!Node} context\n   * @return {!./analytics-root.AnalyticsRoot}\n   */\n  getAnalyticsRoot(context) {\n    return this.findRoot_(context);\n  }\n\n  /**\n   * @param {!Element} analyticsElement\n   * @return {!AnalyticsGroup}\n   */\n  createAnalyticsGroup(analyticsElement) {\n    const root = this.findRoot_(analyticsElement);\n    return new AnalyticsGroup(root, analyticsElement);\n  }\n\n  /**\n   * @param {string} trackerName\n   * @private\n   */\n  getTrackerClass_(trackerName) {\n    switch (trackerName) {\n      case AnalyticsEventType.STORY:\n        return AmpStoryEventTracker;\n      default:\n        return CustomEventTracker;\n    }\n  }\n\n  /**\n   * Triggers the analytics event with the specified type.\n   *\n   * @param {!Element} target\n   * @param {string} eventType\n   * @param {!JsonObject} vars A map of vars and their values.\n   * @param {boolean} enableDataVars A boolean to indicate if data-vars-*\n   * attribute value from target element should be included.\n   */\n  triggerEventForTarget(\n    target,\n    eventType,\n    vars = dict(),\n    enableDataVars = true\n  ) {\n    const event = new AnalyticsEvent(target, eventType, vars, enableDataVars);\n    const root = this.findRoot_(target);\n    const trackerName = getTrackerKeyName(eventType);\n    const tracker = /** @type {!CustomEventTracker|!AmpStoryEventTracker} */ (\n      root.getTracker(trackerName, this.getTrackerClass_(trackerName))\n    );\n    tracker.trigger(event);\n  }\n\n  /**\n   * @param {!Node} context\n   * @return {!./analytics-root.AnalyticsRoot}\n   */\n  findRoot_(context) {\n    // TODO(#22733): cleanup when ampdoc-fie is launched. Just use\n    // `ampdoc.getParent()`.\n    const ampdoc = Services.ampdoc(context);\n    const frame = getParentWindowFrameElement(context);\n    const embed = frame && getFriendlyIframeEmbedOptional(frame);\n    if (ampdoc == this.ampdoc && !embed && this.root_) {\n      // Main root already exists.\n      return this.root_;\n    }\n    return this.getOrCreateRoot_(embed || ampdoc, () => {\n      if (embed) {\n        return new EmbedAnalyticsRoot(ampdoc, embed);\n      }\n      return new AmpdocAnalyticsRoot(ampdoc);\n    });\n  }\n\n  /**\n   * @param {!Object} holder\n   * @param {function():!./analytics-root.AnalyticsRoot} factory\n   * @return {!./analytics-root.AnalyticsRoot}\n   */\n  getOrCreateRoot_(holder, factory) {\n    let root = /** @type {?./analytics-root.AnalyticsRoot} */ (holder[PROP]);\n    if (!root) {\n      root = factory();\n      holder[PROP] = root;\n    }\n    return root;\n  }\n}\n\n/**\n * It's important to resolve instrumentation asynchronously in elements that\n * depends on it in multi-doc scope. Otherwise an element life-cycle could\n * resolve way before we have the service available.\n *\n * @param {!Element|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Promise<InstrumentationService>}\n */\nexport function instrumentationServicePromiseForDoc(elementOrAmpDoc) {\n  return /** @type {!Promise<InstrumentationService>} */ (\n    getServicePromiseForDoc(elementOrAmpDoc, 'amp-analytics-instrumentation')\n  );\n}\n\n/**\n * @param {!Element|!../../../src/service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!InstrumentationService}\n */\nexport function instrumentationServiceForDocForTesting(elementOrAmpDoc) {\n  registerServiceBuilderForDoc(\n    elementOrAmpDoc,\n    'amp-analytics-instrumentation',\n    InstrumentationService\n  );\n  return getServiceForDoc(elementOrAmpDoc, 'amp-analytics-instrumentation');\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isExperimentOn} from './experiments';\nimport {isFiniteNumber} from './core/types';\nimport {setStyle, setStyles, toggle} from './style';\nimport {toWin} from './core/window';\nimport {transparentPng} from './core/dom/img';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-RENDER': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe =\n  /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n * @type {?boolean}\n */\nlet aspectRatioCssCache = null;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && tagName.toLowerCase().startsWith('i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  const m = userAssert(\n    /[a-z]+/i.exec(length),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element allowlisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified element. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ allowlist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @param {boolean} fixIeIntrinsic\n * @return {!Layout}\n */\nexport function applyStaticLayout(element, fixIeIntrinsic = false) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (\n      devAssert(parseLayout(completedLayoutAttr))\n    );\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n      if (element.sizerElement) {\n        element.sizerElement.setAttribute('slot', 'i-amphtml-svc');\n      }\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(\n    inputLayout !== undefined,\n    'Invalid \"layout\" value: %s, %s',\n    layoutAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(\n    inputWidth !== undefined,\n    'Invalid \"width\" value: %s, %s',\n    widthAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(\n    inputHeight !== undefined,\n    'Invalid \"height\" value: %s, %s',\n    heightAttr,\n    element\n  );\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'The \"height\" attribute is missing: %s', element);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'The \"width\" attribute must be missing or \"auto\": %s',\n      element\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'The \"width\" attribute must be present and not \"auto\": %s',\n      element\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for \"width\" and \"height\": %s, %s, %s',\n      widthAttr,\n      heightAttr,\n      element\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      '\"heights\" attribute must be missing: %s',\n      element\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    if (shouldUseAspectRatioCss(toWin(element.ownerDocument.defaultView))) {\n      setStyle(\n        element,\n        'aspect-ratio',\n        `${getLengthNumeral(width)}/${getLengthNumeral(height)}`\n      );\n    } else {\n      const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n      sizer.setAttribute('slot', 'i-amphtml-svc');\n      setStyles(sizer, {\n        paddingTop:\n          (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n      });\n      element.insertBefore(sizer, element.firstChild);\n      element.sizerElement = sizer;\n    }\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\" slot=\"i-amphtml-svc\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      !IS_ESM && fixIeIntrinsic && element.ownerDocument\n        ? transparentPng(\n            element.ownerDocument,\n            dev().assertNumber(getLengthNumeral(width)),\n            dev().assertNumber(getLengthNumeral(height))\n          )\n        : `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n *\n * @param {!Window} win\n * @return {boolean}\n */\nfunction shouldUseAspectRatioCss(win) {\n  if (aspectRatioCssCache == null) {\n    aspectRatioCssCache =\n      (isExperimentOn(win, 'layout-aspect-ratio-css') &&\n        win.CSS &&\n        win.CSS.supports &&\n        win.CSS.supports('aspect-ratio: 1/1')) ||\n      false;\n  }\n  return aspectRatioCssCache;\n}\n\n/** @visibleForTesting */\nexport function resetShouldUseAspectRatioCssForTesting() {\n  aspectRatioCssCache = null;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../services';\nimport {closestAncestorElementBySelector} from '../core/dom/query';\nimport {dev, user, userAssert} from '../log';\nimport {dict} from '../core/types/object';\nimport {escapeCssSelectorIdent} from '../core/dom/css-selectors';\nimport {getExtraParamsUrl, shouldAppendExtraParams} from '../impression';\nimport {getMode} from '../mode';\nimport {isIframed, openWindowDialog, tryFocus} from '../dom';\nimport {isLocalhostOrigin} from '../url';\nimport {registerServiceBuilderForDoc} from '../service';\nimport {toWin} from '../core/window';\nimport PriorityQueue from '../core/data-structures/priority-queue';\n\nconst TAG = 'navigation';\n\n/** @private @const {string} */\nconst EVENT_TYPE_CLICK = 'click';\n\n/** @private @const {string} */\nconst EVENT_TYPE_CONTEXT_MENU = 'contextmenu';\n\nconst VALID_TARGETS = ['_top', '_blank'];\n\n/** @private @const {string} */\nconst ORIG_HREF_ATTRIBUTE = 'data-a4a-orig-href';\n\n/**\n * Key used for retargeting event target originating from shadow DOM.\n * @const {string}\n */\nconst AMP_CUSTOM_LINKER_TARGET = '__AMP_CUSTOM_LINKER_TARGET__';\n\n/**\n * @enum {number} Priority reserved for extensions in anchor mutations.\n * The higher the priority, the sooner it's invoked.\n */\nexport const Priority = {\n  LINK_REWRITER_MANAGER: 0,\n  ANALYTICS_LINKER: 2,\n};\n\n/**\n * Install navigation service for ampdoc, which handles navigations from anchor\n * tag clicks and other runtime features like AMP.navigateTo().\n *\n * Immediately instantiates the service.\n *\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installGlobalNavigationHandlerForDoc(ampdoc) {\n  registerServiceBuilderForDoc(\n    ampdoc,\n    TAG,\n    Navigation,\n    /* opt_instantiate */ true\n  );\n}\n\n/**\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Event} e\n * @visibleForTesting\n */\nexport function maybeExpandUrlParamsForTesting(ampdoc, e) {\n  maybeExpandUrlParams(ampdoc, e);\n}\n\n/**\n * Intercept any click on the current document and prevent any\n * linking to an identifier from pushing into the history stack.\n * @visibleForTesting\n */\nexport class Navigation {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @private @const {!Document|!ShadowRoot} */\n    this.rootNode_ = ampdoc.getRootNode();\n\n    /** @private @const {!./viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.ampdoc);\n\n    /** @private @const {!./viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(this.ampdoc);\n\n    /** @private @const {!./history-impl.History} */\n    this.history_ = Services.historyForDoc(this.ampdoc);\n\n    /** @private @const {!./platform-impl.Platform} */\n    this.platform_ = Services.platformFor(this.ampdoc.win);\n\n    /** @private @const {boolean} */\n    this.isIosSafari_ = this.platform_.isIos() && this.platform_.isSafari();\n\n    /** @private @const {boolean} */\n    this.isIframed_ =\n      isIframed(this.ampdoc.win) && this.viewer_.isOvertakeHistory();\n\n    /** @private @const {boolean} */\n    this.isEmbed_ =\n      this.rootNode_ != this.ampdoc.getRootNode() || !!this.ampdoc.getParent();\n\n    /** @private @const {boolean} */\n    this.isInABox_ = getMode(this.ampdoc.win).runtime == 'inabox';\n\n    /**\n     * Must use URL parsing scoped to `rootNode_` for correct FIE behavior.\n     * @private @const {!Element|!ShadowRoot}\n     */\n    this.serviceContext_ = /** @type {!Element|!ShadowRoot} */ (\n      this.rootNode_.nodeType == Node.DOCUMENT_NODE\n        ? this.rootNode_.documentElement\n        : this.rootNode_\n    );\n\n    /** @private @const {!function(!Event)|undefined} */\n    this.boundHandle_ = this.handle_.bind(this);\n    this.rootNode_.addEventListener(EVENT_TYPE_CLICK, this.boundHandle_);\n    this.rootNode_.addEventListener(EVENT_TYPE_CONTEXT_MENU, this.boundHandle_);\n    /** @private {boolean} */\n    this.appendExtraParams_ = false;\n    shouldAppendExtraParams(this.ampdoc).then((res) => {\n      this.appendExtraParams_ = res;\n    });\n\n    /** @private {boolean} */\n    this.isTrustedViewer_ = false;\n    /** @private {boolean} */\n    this.isLocalViewer_ = false;\n    Promise.all([\n      this.viewer_.isTrustedViewer(),\n      this.viewer_.getViewerOrigin(),\n    ]).then((values) => {\n      this.isTrustedViewer_ = values[0];\n      this.isLocalViewer_ = isLocalhostOrigin(values[1]);\n    });\n\n    /**\n     * Lazy-generated list of A2A-enabled navigation features.\n     * @private {?Array<string>}\n     */\n    this.a2aFeatures_ = null;\n\n    /**\n     * @type {!PriorityQueue<function(!Element, !Event)>}\n     * @private\n     * @const\n     */\n    this.anchorMutators_ = new PriorityQueue();\n\n    /**\n     * @type {!PriorityQueue<function(string)>}\n     * @private\n     * @const\n     */\n    this.navigateToMutators_ = new PriorityQueue();\n  }\n\n  /**\n   * Registers a handler that performs URL replacement on the href\n   * of an ad click.\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {!Window} win\n   */\n  static installAnchorClickInterceptor(ampdoc, win) {\n    win.document.documentElement.addEventListener(\n      'click',\n      maybeExpandUrlParams.bind(null, ampdoc),\n      /* capture */ true\n    );\n  }\n\n  /**\n   * Removes all event listeners.\n   */\n  cleanup() {\n    if (this.boundHandle_) {\n      this.rootNode_.removeEventListener(EVENT_TYPE_CLICK, this.boundHandle_);\n      this.rootNode_.removeEventListener(\n        EVENT_TYPE_CONTEXT_MENU,\n        this.boundHandle_\n      );\n    }\n  }\n\n  /**\n   * Opens a new window with the specified target.\n   *\n   * @param {!Window} win A window to use to open a new window.\n   * @param {string} url THe URL to open.\n   * @param {string} target The target for the newly opened window.\n   * @param {boolean} opener Whether or not the new window should have acccess\n   *   to the opener (win).\n   */\n  openWindow(win, url, target, opener) {\n    let options = '';\n    // We don't pass noopener for Chrome since it opens a new window without\n    // tabs. Instead, we remove the opener property from the newly opened\n    // window.\n    // Note: for Safari, we need to use noopener instead of clearing the opener\n    // property.\n    if ((this.platform_.isIos() || !this.platform_.isChrome()) && !opener) {\n      options += 'noopener';\n    }\n\n    const newWin = openWindowDialog(win, url, target, options);\n    // For Chrome, since we cannot use noopener.\n    if (newWin && !opener) {\n      newWin.opener = null;\n    }\n  }\n\n  /**\n   * Navigates a window to a URL.\n   *\n   * If opt_requestedBy matches a feature name in a <meta> tag with attribute\n   * name=\"amp-to-amp-navigation\", then treats the URL as an AMP URL (A2A).\n   *\n   * @param {!Window} win\n   * @param {string} url\n   * @param {string=} opt_requestedBy\n   * @param {!{\n   *   target: (string|undefined),\n   *   opener: (boolean|undefined),\n   * }=} options\n   */\n  navigateTo(win, url, opt_requestedBy, options = {}) {\n    const {opener = false, target = '_top'} = options;\n    url = this.applyNavigateToMutators_(url);\n    const urlService = Services.urlForDoc(this.serviceContext_);\n    if (!urlService.isProtocolValid(url)) {\n      user().error(TAG, 'Cannot navigate to invalid protocol: ' + url);\n      return;\n    }\n\n    userAssert(\n      VALID_TARGETS.includes(target),\n      `Target '${target}' not supported.`\n    );\n\n    // If we're on cache, resolve relative URLs to the publisher (non-cache) origin.\n    const sourceUrl = urlService.getSourceUrl(win.location);\n    url = urlService.resolveRelativeUrl(url, sourceUrl);\n\n    // If we have a target of \"_blank\", we will want to open a new window. A\n    // target of \"_top\" should behave like it would on an anchor tag and\n    // update the URL.\n    if (target == '_blank') {\n      this.openWindow(win, url, target, opener);\n      return;\n    }\n\n    // If this redirect was requested by a feature that opted into A2A,\n    // try to ask the viewer to navigate this AMP URL.\n    if (opt_requestedBy) {\n      if (!this.a2aFeatures_) {\n        this.a2aFeatures_ = this.queryA2AFeatures_();\n      }\n      if (this.a2aFeatures_.includes(opt_requestedBy)) {\n        if (this.navigateToAmpUrl(url, opt_requestedBy)) {\n          return;\n        }\n      }\n    }\n\n    // Otherwise, perform normal behavior of navigating the top frame.\n    win.top.location.href = url;\n  }\n\n  /**\n   * Requests A2A navigation to the given destination. If the viewer does\n   * not support this operation, does nothing.\n   * The URL is assumed to be in AMP Cache format already.\n   * @param {string} url An AMP article URL.\n   * @param {string} requestedBy Informational string about the entity that\n   *     requested the navigation.\n   * @return {boolean} Returns true if navigation message was sent to viewer.\n   *     Otherwise, returns false.\n   */\n  navigateToAmpUrl(url, requestedBy) {\n    if (this.viewer_.hasCapability('a2a')) {\n      this.viewer_.sendMessage(\n        'a2aNavigate',\n        dict({\n          'url': url,\n          'requestedBy': requestedBy,\n        })\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {!Array<string>}\n   * @private\n   */\n  queryA2AFeatures_() {\n    const meta = this.rootNode_.querySelector(\n      'meta[name=\"amp-to-amp-navigation\"]'\n    );\n    if (meta && meta.hasAttribute('content')) {\n      return meta\n        .getAttribute('content')\n        .split(',')\n        .map((s) => s.trim());\n    }\n    return [];\n  }\n\n  /**\n   * Intercept any click on the current document and prevent any\n   * linking to an identifier from pushing into the history stack.\n   *\n   * This also handles custom protocols (e.g. whatsapp://) when iframed\n   * on iOS Safari.\n   *\n   * @param {!Event} e\n   * @private\n   */\n  handle_(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    const element = dev().assertElement(\n      e[AMP_CUSTOM_LINKER_TARGET] || e.target\n    );\n    const target = closestAncestorElementBySelector(element, 'A');\n    if (!target || !target.href) {\n      return;\n    }\n    if (e.type == EVENT_TYPE_CLICK) {\n      this.handleClick_(target, e);\n    } else if (e.type == EVENT_TYPE_CONTEXT_MENU) {\n      this.handleContextMenuClick_(target, e);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {!Event} e\n   * @private\n   */\n  handleClick_(element, e) {\n    this.expandVarsForAnchor_(element);\n\n    let toLocation = this.parseUrl_(element.href);\n\n    // Handle AMP-to-AMP navigation and early-outs, if rel=amphtml.\n    if (this.handleA2AClick_(e, element, toLocation)) {\n      return;\n    }\n\n    // Handle navigating to custom protocol and early-outs, if applicable.\n    if (this.handleCustomProtocolClick_(e, element, toLocation)) {\n      return;\n    }\n\n    const fromLocation = this.getLocation_();\n    // Only apply anchor mutator if this is an external navigation.\n    // Note that anchor mutators may theoretically change the navigation\n    // from external to internal, so we re-parse the new targetLocation\n    // in handleNavigation_().\n    if (getHrefMinusHash(toLocation) != getHrefMinusHash(fromLocation)) {\n      this.applyAnchorMutators_(element, e);\n      toLocation = this.parseUrl_(element.href);\n    }\n\n    // Finally, handle normal click-navigation behavior.\n    this.handleNavigation_(e, element, toLocation, fromLocation);\n  }\n\n  /**\n   * Handles \"contextmenu\" event e.g. right mouse button click.\n   * @param {!Element} element\n   * @param {!Event} e\n   * @private\n   */\n  handleContextMenuClick_(element, e) {\n    // TODO(wg-performance): Handle A2A, custom link protocols, and ITP 2.3 mitigation.\n    this.expandVarsForAnchor_(element);\n    this.applyAnchorMutators_(element, e);\n  }\n\n  /**\n   * Apply anchor transformations.\n   * @param {!Element} element\n   * @param {!Event} e\n   */\n  applyAnchorMutators_(element, e) {\n    this.anchorMutators_.forEach((anchorMutator) => {\n      anchorMutator(element, e);\n    });\n  }\n\n  /**\n   * Apply URL transformations for AMP.navigateTo.\n   * @param {string} url\n   * @return {string}\n   */\n  applyNavigateToMutators_(url) {\n    this.navigateToMutators_.forEach((mutator) => {\n      url = mutator(url);\n    });\n    return url;\n  }\n\n  /**\n   * @param {!Element} el\n   * @private\n   */\n  expandVarsForAnchor_(el) {\n    // First check if need to handle external link decoration.\n    let defaultExpandParamsUrl = null;\n    if (this.appendExtraParams_ && !this.isEmbed_) {\n      // Only decorate outgoing link when needed to and is not in FIE.\n      defaultExpandParamsUrl = getExtraParamsUrl(this.ampdoc.win, el);\n    }\n\n    const urlReplacements = Services.urlReplacementsForDoc(el);\n    urlReplacements.maybeExpandLink(el, defaultExpandParamsUrl);\n  }\n\n  /**\n   * Handles clicking on a custom protocol link.\n   * Returns true if the navigation was handled. Otherwise, returns false.\n   * @param {!Event} e\n   * @param {!Element} element\n   * @param {!Location} location\n   * @return {boolean}\n   * @private\n   */\n  handleCustomProtocolClick_(e, element, location) {\n    // Handle custom protocols only if the document is iframed.\n    if (!this.isIframed_) {\n      return false;\n    }\n\n    /** @const {!Window} */\n    const win = toWin(element.ownerDocument.defaultView);\n    const url = element.href;\n    const {protocol} = location;\n\n    // On Safari iOS, custom protocol links will fail to open apps when the\n    // document is iframed - in order to go around this, we set the top.location\n    // to the custom protocol href.\n    const isFTP = protocol == 'ftp:';\n\n    // In case of FTP Links in embedded documents always open then in _blank.\n    if (isFTP) {\n      openWindowDialog(win, url, '_blank');\n      e.preventDefault();\n      return true;\n    }\n\n    const isNormalProtocol = /^(https?|mailto):$/.test(protocol);\n    if (this.isIosSafari_ && !isNormalProtocol) {\n      openWindowDialog(win, url, '_top');\n      // Without preventing default the page would should an alert error twice\n      // in the case where there's no app to handle the custom protocol.\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles clicking on an AMP link.\n   * Returns true if the navigation was handled. Otherwise, returns false.\n   * @param {!Event} e\n   * @param {!Element} element\n   * @param {!Location} location\n   * @return {boolean}\n   * @private\n   */\n  handleA2AClick_(e, element, location) {\n    if (!element.hasAttribute('rel')) {\n      return false;\n    }\n    const relations = element\n      .getAttribute('rel')\n      .split(' ')\n      .map((s) => s.trim());\n    if (!relations.includes('amphtml')) {\n      return false;\n    }\n    // The viewer may not support the capability for navigating AMP links.\n    if (this.navigateToAmpUrl(location.href, '<a rel=amphtml>')) {\n      e.preventDefault();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handles click-navigation on a non-A2A, standard-protocol link.\n   * @param {!Event} e\n   * @param {!Element} element\n   * @param {!Location} toLocation\n   * @param {!Location} fromLocation\n   * @private\n   */\n  handleNavigation_(e, element, toLocation, fromLocation) {\n    const to = getHrefMinusHash(toLocation);\n    const from = getHrefMinusHash(fromLocation);\n\n    // Handle same-page (hash) navigation separately.\n    if (toLocation.hash && to == from) {\n      this.handleHashNavigation_(e, toLocation, fromLocation);\n    } else {\n      // Otherwise, this is an other-page (external) navigation.\n      let target = (element.getAttribute('target') || '').toLowerCase();\n\n      if (this.isEmbed_ || this.isInABox_) {\n        // Target in the embed must be either _top or _blank (default).\n        if (target != '_top' && target != '_blank') {\n          target = '_blank';\n          element.setAttribute('target', target);\n        }\n      }\n\n      // ITP 2.3 mitigation. See https://github.com/ampproject/amphtml/issues/25179.\n      const {win} = this.ampdoc;\n      const platform = Services.platformFor(win);\n      const viewer = Services.viewerForDoc(element);\n      if (\n        fromLocation.search &&\n        platform.isSafari() &&\n        platform.getMajorVersion() >= 13 &&\n        viewer.isProxyOrigin() &&\n        viewer.isEmbedded()\n      ) {\n        this.removeViewerQueryBeforeNavigation_(win, fromLocation, target);\n      }\n\n      if (this.viewerInterceptsNavigation(to, 'intercept_click')) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Temporarily remove viewer query params from iframe (e.g. amp_js_v, usqp)\n   * to prevent document.referrer from being reduced to eTLD+1 (e.g. ampproject.org).\n   * @param {!Window} win\n   * @param {!Location} fromLocation\n   * @param {string} target\n   * @private\n   */\n  removeViewerQueryBeforeNavigation_(win, fromLocation, target) {\n    dev().info(\n      TAG,\n      'Removing iframe query string before navigation:',\n      fromLocation.search\n    );\n    const original = fromLocation.href;\n    const noQuery = `${fromLocation.origin}${fromLocation.pathname}${fromLocation.hash}`;\n    win.history.replaceState(null, '', noQuery);\n\n    const restoreQuery = () => {\n      const currentHref = win.location.href;\n      if (currentHref == noQuery) {\n        dev().info(TAG, 'Restored iframe URL with query string:', original);\n        win.history.replaceState(null, '', original);\n      } else {\n        dev().error(TAG, 'Unexpected iframe URL change:', currentHref, noQuery);\n      }\n    };\n\n    // For blank_, restore query params after the new page opens.\n    if (target === '_blank') {\n      win.setTimeout(restoreQuery, 0);\n    } else {\n      // For _top etc., wait until page is restored from page cache (bfcache).\n      // https://webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\n      win.addEventListener('pageshow', function onPageShow(e) {\n        if (e.persisted) {\n          restoreQuery();\n          win.removeEventListener('pageshow', onPageShow);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles clicking on an internal link\n   * @param {!Event} e\n   * @param {!Location} toLocation\n   * @param {!Location} fromLocation\n   * @private\n   */\n  handleHashNavigation_(e, toLocation, fromLocation) {\n    // Anchor navigation in IE doesn't change input focus, which can result in\n    // confusing behavior e.g. when pressing \"tab\" button.\n    // @see https://humanwhocodes.com/blog/2013/01/15/fixing-skip-to-content-links/\n    // @see https://github.com/ampproject/amphtml/issues/18671\n    if (!IS_ESM && Services.platformFor(this.ampdoc.win).isIe()) {\n      const id = toLocation.hash.substring(1);\n      const elementWithId = this.ampdoc.getElementById(id);\n      if (elementWithId) {\n        if (\n          !/^(?:a|select|input|button|textarea)$/i.test(elementWithId.tagName)\n        ) {\n          elementWithId.tabIndex = -1;\n        }\n        tryFocus(elementWithId);\n      }\n    }\n\n    // We prevent default so that the current click does not push\n    // into the history stack as this messes up the external documents\n    // history which contains the amp document.\n    e.preventDefault();\n\n    // For an embed, do not perform scrolling or global history push - both have\n    // significant UX and browser problems.\n    if (this.isEmbed_) {\n      return;\n    }\n\n    // Look for the referenced element.\n    const hash = toLocation.hash.slice(1);\n    let el = null;\n    if (hash) {\n      const escapedHash = escapeCssSelectorIdent(hash);\n      el =\n        this.rootNode_.getElementById(hash) ||\n        // Fallback to anchor[name] if element with id is not found.\n        // Linking to an anchor element with name is obsolete in html5.\n        this.rootNode_./*OK*/ querySelector(`a[name=\"${escapedHash}\"]`);\n    }\n\n    // If possible do update the URL with the hash. As explained above\n    // we do `replace` to avoid messing with the container's history.\n    if (toLocation.hash != fromLocation.hash) {\n      this.history_.replaceStateForTarget(toLocation.hash).then(() => {\n        this.scrollToElement_(el, hash);\n      });\n    } else {\n      // If the hash did not update just scroll to the element.\n      this.scrollToElement_(el, hash);\n    }\n  }\n\n  /**\n   * @param {function(!Element, !Event)} callback\n   * @param {number} priority\n   */\n  registerAnchorMutator(callback, priority) {\n    this.anchorMutators_.enqueue(callback, priority);\n  }\n\n  /**\n   * @param {function(string)} callback\n   * @param {number} priority\n   */\n  registerNavigateToMutator(callback, priority) {\n    this.navigateToMutators_.enqueue(callback, priority);\n  }\n\n  /**\n   * Scrolls the page to the given element.\n   * @param {?Element} elem\n   * @param {string} hash\n   * @private\n   */\n  scrollToElement_(elem, hash) {\n    // Scroll to the element if found.\n    if (elem) {\n      // The first call to scrollIntoView overrides browsers' default scrolling\n      // behavior. The second call insides setTimeout allows us to scroll to\n      // that element properly. Without doing this, the viewport will not catch\n      // the updated scroll position on iOS Safari and hence calculate the wrong\n      // scrollTop for the scrollbar jumping the user back to the top for\n      // failing to calculate the new jumped offset. Without the first call\n      // there will be a visual jump due to browser scroll. See\n      // https://github.com/ampproject/amphtml/issues/5334 for more details.\n      this.viewport_./*OK*/ scrollIntoView(elem);\n      Services.timerFor(this.ampdoc.win).delay(\n        () => this.viewport_./*OK*/ scrollIntoView(dev().assertElement(elem)),\n        1\n      );\n    } else {\n      dev().warn(\n        TAG,\n        `failed to find element with id=${hash} or a[name=${hash}]`\n      );\n    }\n  }\n\n  /**\n   * @param {string} url\n   * @return {!Location}\n   * @private\n   */\n  parseUrl_(url) {\n    return Services.urlForDoc(this.serviceContext_).parse(url);\n  }\n\n  /**\n   * @return {!Location}\n   * @private\n   */\n  getLocation_() {\n    // In test mode, we're not able to properly fix the anchor tag's base URL.\n    // So, we have to use the (mocked) window's location instead.\n    const baseHref =\n      getMode().test && !this.isEmbed_ ? this.ampdoc.win.location.href : '';\n    return this.parseUrl_(baseHref);\n  }\n\n  /**\n   * Requests navigation through a Viewer to the given destination.\n   *\n   * This function only proceeds if:\n   * 1. The viewer supports the 'interceptNavigation' capability.\n   * 2. The contained AMP doc has 'opted in' via including the 'allow-navigation-interception'\n   * attribute on the <html> tag.\n   * 3. The viewer is trusted or from localhost.\n   *\n   * @param {string} url A URL.\n   * @param {string} requestedBy Informational string about the entity that\n   *     requested the navigation.\n   * @return {boolean} Returns true if navigation message was sent to viewer.\n   *     Otherwise, returns false.\n   */\n  viewerInterceptsNavigation(url, requestedBy) {\n    const viewerHasCapability = this.viewer_.hasCapability(\n      'interceptNavigation'\n    );\n    const docOptedIn =\n      this.ampdoc.isSingleDoc() &&\n      this.ampdoc\n        .getRootNode()\n        .documentElement.hasAttribute('allow-navigation-interception');\n\n    if (\n      !viewerHasCapability ||\n      !docOptedIn ||\n      !(this.isTrustedViewer_ || this.isLocalViewer_)\n    ) {\n      return false;\n    }\n\n    this.viewer_.sendMessage(\n      'navigateTo',\n      dict({\n        'url': url,\n        'requestedBy': requestedBy,\n      })\n    );\n    return true;\n  }\n}\n\n/**\n * Handle click on links and replace variables in the click URL.\n * The function changes the actual href value and stores the\n * template in the ORIGINAL_HREF_ATTRIBUTE attribute\n * @param {!./ampdoc-impl.AmpDoc} ampdoc\n * @param {!Event} e\n */\nfunction maybeExpandUrlParams(ampdoc, e) {\n  const target = closestAncestorElementBySelector(\n    dev().assertElement(e.target),\n    'A'\n  );\n  if (!target || !target.href) {\n    // Not a click on a link.\n    return;\n  }\n  const hrefToExpand =\n    target.getAttribute(ORIG_HREF_ATTRIBUTE) || target.getAttribute('href');\n  if (!hrefToExpand) {\n    return;\n  }\n  const vars = {\n    'CLICK_X': () => {\n      return e.pageX;\n    },\n    'CLICK_Y': () => {\n      return e.pageY;\n    },\n  };\n  const newHref = Services.urlReplacementsForDoc(target).expandUrlSync(\n    hrefToExpand,\n    vars,\n    /* opt_allowlist */ {\n      // For now we only allow to replace the click location vars\n      // and nothing else.\n      // NOTE: Addition to this allowlist requires additional review.\n      'CLICK_X': true,\n      'CLICK_Y': true,\n    }\n  );\n  if (newHref != hrefToExpand) {\n    // Store original value so that later clicks can be processed with\n    // freshest values.\n    if (!target.getAttribute(ORIG_HREF_ATTRIBUTE)) {\n      target.setAttribute(ORIG_HREF_ATTRIBUTE, hrefToExpand);\n    }\n    target.setAttribute('href', newHref);\n  }\n}\n\n/**\n * Returns href without hash.\n * @param {!Location} location\n * @return {string}\n */\nfunction getHrefMinusHash(location) {\n  return `${location.origin}${location.pathname}${location.search}`;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AMPDOC_SINGLETON_NAME} from '../../../src/core/constants/enums';\nimport {ExpansionOptions, variableServiceForDoc} from './variables';\nimport {Priority} from '../../../src/service/navigation';\nimport {Services} from '../../../src/services';\nimport {WindowInterface} from '../../../src/core/window/interface';\nimport {addMissingParamsToUrl, addParamToUrl} from '../../../src/url';\nimport {createElementWithAttributes} from '../../../src/dom';\nimport {createLinker} from './linker';\nimport {dict} from '../../../src/core/types/object';\nimport {getHighestAvailableDomain} from '../../../src/cookies';\nimport {isObject} from '../../../src/core/types';\nimport {user} from '../../../src/log';\n\n/** @const {string} */\nconst TAG = 'amp-analytics/linker-manager';\n\nexport class LinkerManager {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!JsonObject} config\n   * @param {?string} type\n   * @param {!Element} element\n   */\n  constructor(ampdoc, config, type, element) {\n    /** @const @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {?JsonObject|undefined} */\n    this.config_ = config['linkers'];\n\n    /** @const @private {!JsonObject} */\n    this.vars_ = config['vars'] || {};\n\n    /** @const @private {?string} */\n    this.type_ = type;\n\n    /** @const @private {!Element} */\n    this.element_ = element;\n\n    /** @const @private {!JsonObject} */\n    this.resolvedIds_ = dict();\n\n    /** @const @private {!../../../src/service/url-impl.Url} */\n    this.urlService_ = Services.urlForDoc(this.element_);\n\n    /** @const @private {!Promise<../../amp-form/0.1/form-submit-service.FormSubmitService>} */\n    this.formSubmitService_ = Services.formSubmitForDoc(ampdoc);\n\n    /** @private {?UnlistenDef} */\n    this.formSubmitUnlistener_ = null;\n\n    /** @const @private {!./variables.VariableService} */\n    this.variableService_ = variableServiceForDoc(this.ampdoc_);\n\n    /** @private {?string} */\n    this.highestAvailableDomain_ = null;\n  }\n\n  /**\n   * Start resolving any macros that may exist in the linker configuration\n   * and register the callback with the navigation service. Since macro\n   * resolution is asynchronous the callback may be looking for these values\n   * before they are ready.\n   * init() is asynchronouse and non blocking.\n   * Return a promise for testing only.\n   * @return {!Promise}\n   */\n  init() {\n    if (!isObject(this.config_)) {\n      return Promise.resolve();\n    }\n\n    this.highestAvailableDomain_ = getHighestAvailableDomain(this.ampdoc_.win);\n\n    this.config_ = this.processConfig_(\n      /** @type {!JsonObject} */ (this.config_)\n    );\n    // Each linker config has it's own set of macros to resolve.\n    const allLinkerPromises = Object.keys(this.config_).map((name) => {\n      const ids = this.config_[name]['ids'];\n      // Keys for linker data.\n      const keys = Object.keys(ids);\n      // Expand the value of each key value pair (if necessary).\n      const valuePromises = keys.map((key) => {\n        const expansionOptions = new ExpansionOptions(\n          this.vars_,\n          /* opt_iterations */ undefined,\n          /* opt_noencode */ true\n        );\n        return this.expandTemplateWithUrlParams_(ids[key], expansionOptions);\n      });\n\n      return Promise.all(valuePromises).then((values) => {\n        // Rejoin each key with its expanded value.\n        const expandedIds = {};\n        values.forEach((value, i) => {\n          // Omit pair if value resolves to empty.\n          if (value) {\n            expandedIds[keys[i]] = value;\n          }\n        });\n        this.resolvedIds_[name] = expandedIds;\n        return expandedIds;\n      });\n    });\n\n    if (allLinkerPromises.length) {\n      const navigation = Services.navigationForDoc(this.ampdoc_);\n      navigation.registerAnchorMutator((element, event) => {\n        if (!element.href || event.type !== 'click') {\n          return;\n        }\n        element.href = this.applyLinkers_(element.href);\n      }, Priority.ANALYTICS_LINKER);\n      navigation.registerNavigateToMutator(\n        (url) => this.applyLinkers_(url),\n        Priority.ANALYTICS_LINKER\n      );\n    }\n\n    this.enableFormSupport_();\n\n    return Promise.all(allLinkerPromises);\n  }\n\n  /**\n   * Remove any listeners created to manage form submission.\n   */\n  dispose() {\n    if (this.formSubmitUnlistener_) {\n      this.formSubmitUnlistener_();\n    }\n  }\n\n  /**\n   * @param {!JsonObject} config\n   * @return {!JsonObject}\n   * @private\n   */\n  processConfig_(config) {\n    const processedConfig = dict();\n    const defaultConfig = {\n      enabled: this.isLegacyOptIn_() && this.isSafari12OrAbove_(),\n    };\n    const linkerNames = Object.keys(config).filter((key) => {\n      const value = config[key];\n      const isLinkerConfig = isObject(value);\n      if (!isLinkerConfig) {\n        defaultConfig[key] = value;\n      }\n      return isLinkerConfig;\n    });\n\n    const location = WindowInterface.getLocation(this.ampdoc_.win);\n    const isProxyOrigin = this.urlService_.isProxyOrigin(location);\n    linkerNames.forEach((name) => {\n      const mergedConfig = {...defaultConfig, ...config[name]};\n\n      if (mergedConfig['enabled'] !== true) {\n        user().info(\n          TAG,\n          'linker config for %s is not enabled and will be ignored.',\n          name\n        );\n        return;\n      }\n\n      if (!isProxyOrigin && mergedConfig['proxyOnly'] !== false) {\n        return;\n      }\n\n      if (!mergedConfig['ids']) {\n        user().error(TAG, '\"ids\" is a required field for use of \"linkers\".');\n        return;\n      }\n\n      processedConfig[name] = mergedConfig;\n    });\n    return processedConfig;\n  }\n\n  /**\n   * Expands spec using provided expansion options and applies url replacement\n   * if necessary.\n   * @param {string} template Expression that needs to be expanded.\n   * @param {!ExpansionOptions} expansionOptions Expansion options.\n   * @return {!Promise<string>} expanded template.\n   */\n  expandTemplateWithUrlParams_(template, expansionOptions) {\n    const bindings = this.variableService_.getMacros(this.element_);\n    return this.variableService_\n      .expandTemplate(template, expansionOptions, this.element_)\n      .then((expanded) => {\n        const urlReplacements = Services.urlReplacementsForDoc(this.element_);\n        return urlReplacements.expandUrlAsync(expanded, bindings);\n      });\n  }\n\n  /**\n   * If the document has existing cid meta tag they do not need to explicitly\n   * opt-in to use linker.\n   * @return {boolean}\n   * @private\n   */\n  isLegacyOptIn_() {\n    if (this.type_ !== 'googleanalytics') {\n      return false;\n    }\n\n    if (\n      this.ampdoc_.getMetaByName('amp-google-client-id-api') !==\n      'googleanalytics'\n    ) {\n      return false;\n    }\n\n    return this.ampdoc_.registerSingleton(AMPDOC_SINGLETON_NAME.LINKER);\n  }\n\n  /**\n   * If the browser is Safari 12 or above.\n   * @return {boolean}\n   * @private\n   */\n  isSafari12OrAbove_() {\n    const platform = Services.platformFor(this.ampdoc_.win);\n    return platform.isSafari() && platform.getMajorVersion() >= 12;\n  }\n\n  /**\n   * Apply linkers to the given url. Linker params are appended if there\n   * are matching linker configs.\n   *\n   * @param {string} url\n   * @return {string}\n   * @private\n   */\n  applyLinkers_(url) {\n    const linkerConfigs = this.config_;\n    for (const linkerName in linkerConfigs) {\n      // The linker param is created asynchronously. This callback should be\n      // synchronous, so we skip if value is not there yet.\n      if (this.resolvedIds_[linkerName]) {\n        url = this.maybeAppendLinker_(\n          url,\n          linkerName,\n          linkerConfigs[linkerName]\n        );\n      }\n    }\n    return url;\n  }\n\n  /**\n   * Appends the linker param if the given url falls within rules defined in\n   * linker configuration.\n   * @param {string} url\n   * @param {string} name\n   * @param {!Object} config\n   * @return {string}\n   * @private\n   */\n  maybeAppendLinker_(url, name, config) {\n    const /** @type {Array} */ domains = config['destinationDomains'];\n    const location = this.urlService_.parse(url);\n    if (\n      this.isDomainMatch_(location, name, domains) &&\n      this.isProtocolMatch_(location)\n    ) {\n      const linkerValue = createLinker(\n        /* version */ '1',\n        this.resolvedIds_[name]\n      );\n      if (linkerValue) {\n        const params = dict();\n        params[name] = linkerValue;\n        return addMissingParamsToUrl(url, params);\n      }\n    }\n    return url;\n  }\n\n  /**\n   * Check to see if the url is a match for the given set of domains.\n   * @param {Location} location\n   * @param {string} name Name given in linker config.\n   * @param {?Array} domains\n   * @return {boolean}\n   */\n  isDomainMatch_(location, name, domains) {\n    const {hostname} = location;\n    // Don't append linker for exact domain match, relative urls, or\n    // fragments.\n    const winHostname = WindowInterface.getHostname(this.ampdoc_.win);\n    if (winHostname === hostname) {\n      return false;\n    }\n\n    // If given domains, but not in the right format.\n    if (domains && !Array.isArray(domains)) {\n      user().warn(TAG, '%s destinationDomains must be an array.', name);\n      return false;\n    }\n\n    // If destinationDomain is specified specifically, respect it.\n    if (domains) {\n      return this.destinationDomainsMatch_(domains, hostname);\n    }\n\n    // Fallback to default behavior\n    const {canonicalUrl, sourceUrl} = Services.documentInfoForDoc(this.ampdoc_);\n    const canonicalOrigin = this.urlService_.parse(canonicalUrl).hostname;\n    const isFriendlyCanonicalOrigin = areFriendlyDomains(\n      canonicalOrigin,\n      hostname\n    );\n    // Default to all subdomains matching (if there's one) plus canonicalOrigin\n\n    if (this.highestAvailableDomain_) {\n      const destinationDomain = [\n        this.highestAvailableDomain_,\n        '*' + this.highestAvailableDomain_,\n      ];\n      return (\n        this.destinationDomainsMatch_(destinationDomain, hostname) ||\n        isFriendlyCanonicalOrigin\n      );\n    }\n\n    // In the case where highestAvailableDomain cannot be found.\n    // (proxyOrigin, no <meta name='amp-cookie-scope'> found)\n    // default to friendly domain matching.\n    const sourceOrigin = this.urlService_.parse(sourceUrl).hostname;\n    return (\n      areFriendlyDomains(sourceOrigin, hostname) || isFriendlyCanonicalOrigin\n    );\n  }\n\n  /**\n   * Only matching protocols should use Linker parameters.\n   * @param {Location} location\n   * @return {boolean}\n   */\n  isProtocolMatch_(location) {\n    return location.protocol === 'https:' || location.protocol === 'http:';\n  }\n\n  /**\n   * Helper method to find out if hostname match the destinationDomain array.\n   * @param {Array<string>} domains\n   * @param {string} hostname\n   * @return {boolean}\n   */\n  destinationDomainsMatch_(domains, hostname) {\n    for (let i = 0; i < domains.length; i++) {\n      const domain = domains[i];\n      // Exact match.\n      if (domain === hostname) {\n        return true;\n      }\n      // Allow wildcard subdomain matching.\n      if (domain.indexOf('*') !== -1 && isWildCardMatch(hostname, domain)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Register callback that will handle form sumbits.\n   */\n  enableFormSupport_() {\n    if (this.formSubmitUnlistener_) {\n      return;\n    }\n\n    this.formSubmitService_.then((formService) => {\n      this.formSubmitUnlistener_ = formService.beforeSubmit(\n        this.handleFormSubmit_.bind(this)\n      );\n    });\n  }\n\n  /**\n   * Check to see if any linker configs match this form's url, if so, send\n   * along the resolved linker value\n   * @param {!../../amp-form/0.1/form-submit-service.FormSubmitEventDef} event\n   */\n  handleFormSubmit_(event) {\n    const {actionXhrMutator, form} = event;\n\n    for (const linkerName in this.config_) {\n      const config = this.config_[linkerName];\n      const /** @type {Array} */ domains = config['destinationDomains'];\n\n      const url =\n        form.getAttribute('action-xhr') || form.getAttribute('action');\n      const location = this.urlService_.parse(url);\n      if (this.isDomainMatch_(location, linkerName, domains)) {\n        this.addDataToForm_(form, actionXhrMutator, linkerName);\n      }\n    }\n  }\n\n  /**\n   * Add the linker data to form. If action-xhr is present we can update the\n   * action-xhr, if not we fallback to adding hidden inputs.\n   * @param {!Element} form\n   * @param {function(string)} actionXhrMutator\n   * @param {string} linkerName\n   * @return {*} TODO(#23582): Specify return type\n   */\n  addDataToForm_(form, actionXhrMutator, linkerName) {\n    const ids = this.resolvedIds_[linkerName];\n    if (!ids) {\n      // Form was clicked before macros resolved.\n      return;\n    }\n\n    const linkerValue = createLinker(/* version */ '1', ids);\n\n    // Runtime controls submits with `action-xhr`, so we can append the linker\n    // param\n    const actionXhrUrl = form.getAttribute('action-xhr');\n    if (actionXhrUrl) {\n      const decoratedUrl = addParamToUrl(actionXhrUrl, linkerName, linkerValue);\n      return actionXhrMutator(decoratedUrl);\n    }\n\n    // If we are not using `action-xhr` it must be a GET request using the\n    // standard action attribute. Browsers will not let you change this in the\n    // middle of a submit, so we add the input hidden attributes.\n    this.addHiddenInputs_(form, linkerName, linkerValue);\n  }\n\n  /**\n   * Add the linker pairs as <input> elements to form.\n   * @param {!Element} form\n   * @param {string} linkerName\n   * @param {string} linkerValue\n   */\n  addHiddenInputs_(form, linkerName, linkerValue) {\n    const attrs = dict({\n      'type': 'hidden',\n      'name': linkerName,\n      'value': linkerValue,\n    });\n\n    const inputEl = createElementWithAttributes(\n      /** @type {!Document} */ (form.ownerDocument),\n      'input',\n      attrs\n    );\n    form.appendChild(inputEl);\n  }\n}\n\n/**\n * Domains are considered to be friends if they are identical\n * after removing these prefixes: m. www. amp.\n * URL scheme & port are not taken into consideration.\n *\n * Note that this algorithm will break corner cases like\n *   www.com vs amp.com vs m.com\n * Or\n *   amp.wordpress.com vs www.wordpress.com\n *\n * @param {string} domain1\n * @param {string} domain2\n * @return {boolean}\n * @visibleForTesting\n */\nexport function areFriendlyDomains(domain1, domain2) {\n  return getBaseDomain(domain1) === getBaseDomain(domain2);\n}\n\n/**\n * Strips out all prefixing m. www. amp. from a domain name.\n * @param {string} domain\n * @return {string}\n */\nfunction getBaseDomain(domain) {\n  return domain.replace(/^(?:www\\.|m\\.|amp\\.)+/, '');\n}\n\n/**\n * Escape any regex flags other than `*`\n * @param {string} str\n * @return {*} TODO(#23582): Specify return type\n */\nfunction regexEscape(str) {\n  return str.replace(/[-\\/\\\\^$+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n/**\n * Allows specified wildcard matching of domains.\n * Example:\n *    `*.foo.com` matches `amp.foo.com`\n *    `*.foo.com*` matches `amp.foo.com.uk`\n * @param {string} hostname\n * @param {string} domain\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isWildCardMatch(hostname, domain) {\n  const escaped = regexEscape(domain);\n  const regex = escaped.replace(/\\*/g, '.*');\n  return new RegExp('^' + regex + '$').test(hostname);\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  appendEncodedParamStringToUrl,\n  serializeQueryString,\n} from '../../../src/url';\n\nconst EXTRA_URL_PARAM_VAR = '${extraUrlParams}';\n\n/**\n * @typedef {{\n *   trigger: (string|undefined),\n *   timestamp: (number|undefined),\n *   extraUrlParams: (!JsonObject|undefined)\n * }}\n */\nexport let BatchSegmentDef;\n\n/**\n * @typedef {{\n *   url: string,\n *   payload: (string|undefined),\n * }}\n */\nexport let RequestDef;\n\n/**\n * The interface for all TransportSerializer to implement.\n * @interface\n */\nexport class TransportSerializerDef {\n  /**\n   * @param {string} unusedBaseUrl\n   * @param {!BatchSegmentDef} unusedSegment\n   * @param {boolean} unusedWithPayload\n   * @return {!RequestDef}\n   */\n  generateRequest(unusedBaseUrl, unusedSegment, unusedWithPayload) {}\n\n  /**\n   * @param {string} unusedBaseUrl\n   * @param {!Array<!BatchSegmentDef>} unusedSegments\n   * @param {boolean} unusedWithPayload\n   * @return {!RequestDef}\n   */\n  generateBatchRequest(unusedBaseUrl, unusedSegments, unusedWithPayload) {}\n}\n\n/**\n * The default serializer.\n *\n * @implements {TransportSerializerDef}\n */\nclass DefaultTransportSerializer {\n  /** @override */\n  generateRequest(baseUrl, segment, withPayload = false) {\n    if (withPayload) {\n      return {\n        url: baseUrl.replace(EXTRA_URL_PARAM_VAR, ''),\n        payload: JSON.stringify(segment['extraUrlParams']),\n      };\n    }\n    return {\n      url: defaultSerializer(baseUrl, [segment]),\n    };\n  }\n\n  /** @override */\n  generateBatchRequest(baseUrl, segments, withPayload = false) {\n    if (withPayload) {\n      return {\n        url: baseUrl.replace(EXTRA_URL_PARAM_VAR, ''),\n        payload: JSON.stringify(\n          segments.map((segment) => segment['extraUrlParams'])\n        ),\n      };\n    }\n    return {\n      url: defaultSerializer(baseUrl, segments),\n    };\n  }\n}\n\n/**\n * Please register your serializer below.\n * Please keep the object in alphabetic order.\n *\n * @const {Object<string, TransportSerializerDef>}\n */\nexport const TransportSerializers = {\n  'default': new DefaultTransportSerializer(),\n};\n\n/**\n * The default way for merging batch segments\n *\n * @param {string} baseUrl\n * @param {!Array<!BatchSegmentDef>} batchSegments\n * @return {string}\n */\nexport function defaultSerializer(baseUrl, batchSegments) {\n  const extraUrlParamsStr = batchSegments\n    .map((item) => serializeQueryString(item['extraUrlParams']))\n    .filter(Boolean)\n    .join('&');\n  let requestUrl;\n  if (baseUrl.indexOf(EXTRA_URL_PARAM_VAR) >= 0) {\n    requestUrl = baseUrl.replace(EXTRA_URL_PARAM_VAR, extraUrlParamsStr);\n  } else {\n    requestUrl = appendEncodedParamStringToUrl(baseUrl, extraUrlParamsStr);\n  }\n  return requestUrl;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Used for inserted scoped analytics element.\n * @const {!Object<string, boolean>}\n */\nexport const SANDBOX_AVAILABLE_VARS = {\n  'AMPDOC_HOST': true,\n  'AMPDOC_HOSTNAME': true,\n  'AMPDOC_URL': true,\n  'AMP_VERSION': true,\n  'AVAILABLE_SCREEN_HEIGHT': true,\n  'AVAILABLE_SCREEN_WIDTH': true,\n  'BACKGROUND_STATE': true,\n  'BROWSER_LANGUAGE': true,\n  'CANONICAL_HOST': true,\n  'CANONICAL_HOSTNAME': true,\n  'CANONICAL_PATH': true,\n  'CANONICAL_URL': true,\n  'DOCUMENT_CHARSET': true,\n  'FIRST_CONTENTFUL_PAINT': true,\n  'FIRST_VIEWPORT_READY': true,\n  'MAKE_BODY_VISIBLE': true,\n  'RANDOM': true,\n  'SCREEN_COLOR_DEPTH': true,\n  'SCREEN_HEIGHT': true,\n  'SCREEN_WIDTH': true,\n  'SOURCE_HOST': true,\n  'SOURCE_HOSTNAME': true,\n  'SOURCE_PATH': true,\n  'SOURCE_URL': true,\n  'TIMESTAMP': true,\n  'TIMEZONE': true,\n  'TIMEZONE_CODE': true,\n  'USER_AGENT': true,\n  'VIEWPORT_HEIGHT': true,\n  'VIEWPORT_WIDTH': true,\n};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ExpansionOptions, variableServiceForDoc} from './variables';\nimport {findIndex} from '../../../src/core/types/array';\nimport {isObject} from '../../../src/core/types';\nimport {user} from '../../../src/log';\n\n/**\n * A user-supplied JSON object that defines a resource to be reported. It is\n * expected to have some fields.\n * A resource timing enty will match against this resource if all of the\n * following properties match.\n * @property {string=} host A string whose value should be a RegExp. It defines\n *     a host or set of hosts to match against. By default, the RegExp will\n *     match all hosts if omitted.\n * @property {string=} path A string whose value should be a RegExp. It defines\n *     a path or set of paths to match against. By default, the RegExp will\n *     match all paths if omitted.\n * @property {string=} query A string whose value should be a RegExp. It defines\n *     a query string or set of query strings to match against. By default, the\n *     RegExp will match all query strings if omitted.\n * @typedef {!JsonObject}\n */\nlet IndividualResourceSpecDef;\n\n/**\n * A parsed resource spec for a specific host or sets of hosts (as defined by\n * the hostPattern).\n * @typedef {{\n *   hostPattern: !RegExp,\n *   resources: !Array<{\n *     name: string,\n *     pathPattern: !RegExp,\n *     queryPattern: !RegExp,\n *   }>,\n * }}\n */\nlet ResourceSpecForHostDef;\n\n/**\n * The default maximum buffer size for resource timing entries. After the limit\n * has been reached, the browser will stop recording resource timing entries.\n * This number is chosen by the spec: https://w3c.github.io/resource-timing.\n * @const {number}\n */\nconst RESOURCE_TIMING_BUFFER_SIZE = 150;\n\n/**\n * Yields the thread before running the function to avoid causing jank. (i.e. a\n * task that takes over 16ms.)\n * @param {function(): OUT} fn\n * @return {!Promise<OUT>}\n * @template OUT\n */\nfunction yieldThread(fn) {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(fn()));\n  });\n}\n\n/**\n * Checks whether the given object is a valid resource timing spec.\n * @param {!JsonObject} spec\n * @return {boolean}\n */\nfunction validateResourceTimingSpec(spec) {\n  if (!isObject(spec['resources'])) {\n    user().warn('ANALYTICS', 'resourceTimingSpec missing \"resources\" field');\n    return false;\n  }\n  if (\n    !spec['encoding'] ||\n    !spec['encoding']['entry'] ||\n    !spec['encoding']['delim']\n  ) {\n    user().warn(\n      'ANALYTICS',\n      'resourceTimingSpec is missing or has incomplete encoding options'\n    );\n    return false;\n  }\n  if (spec['encoding']['base'] < 2 || spec['encoding']['base'] > 36) {\n    user().warn(\n      'ANALYTICS',\n      'resource timing variables only supports bases between 2 and 36'\n    );\n    return false;\n  }\n  if (\n    spec['responseAfter'] != null &&\n    typeof spec['responseAfter'] != 'number'\n  ) {\n    user().warn(\n      'ANALYTICS',\n      'resourceTimingSpec[\"responseAfter\"] must be a number'\n    );\n    return false;\n  }\n  return true;\n}\n\n/**\n * Gets all resource timing entries from the given window.\n * @param {!Window} win\n * @return {!Array<!PerformanceResourceTiming>}\n */\nfunction getResourceTimingEntries(win) {\n  return /** @type {!Array<!PerformanceResourceTiming>} */ (\n    win.performance.getEntriesByType('resource')\n  );\n}\n\n/**\n * Converts a resource timing entry to the variables for this resource.\n * @param {!PerformanceResourceTiming} entry\n * @param {string} name Name of the resource set by the resourceTimingSpec.\n * @param {function(number, number=): string} format A function to format\n *    timestamps and intervals. (Two numbers will be passed in for intervals.)\n * @return {!ExpansionOptions}\n */\nfunction entryToExpansionOptions(entry, name, format) {\n  const vars = {\n    // ${key} is the name of the resource from the resourceTimingSpec. i.e. it's\n    // the key of the object that specifies the host and path patterns that this\n    // resource matched against.\n    'key': name,\n    'startTime': format(entry.startTime),\n    'redirectTime': format(entry.redirectEnd, entry.redirectStart),\n    'domainLookupTime': format(entry.domainLookupEnd, entry.domainLookupStart),\n    'tcpConnectTime': format(entry.connectEnd, entry.connectStart),\n    'serverResponseTime': format(entry.responseStart, entry.requestStart),\n    'networkTransferTime': format(entry.responseEnd, entry.responseStart),\n    'transferSize': format(entry.transferSize || 0),\n    'encodedBodySize': format(entry.encodedBodySize || 0),\n    'decodedBodySize': format(entry.decodedBodySize || 0),\n    'duration': format(entry.duration),\n    'initiatorType': entry.initiatorType,\n  };\n  return new ExpansionOptions(vars, 1 /* opt_iterations */);\n}\n\n/**\n * Returns the variables for the given resource timing entry if it matches one\n * of the defined resources, or null otherwise.\n * @param {!PerformanceResourceTiming} entry\n * @param {!Array<!ResourceSpecForHostDef>} resourcesByHost An array of resource\n *     specs to match against.\n * @return {?string} The name of the entry, or null if no matching name exists.\n */\nfunction nameForEntry(entry, resourcesByHost) {\n  const url = entry.name;\n  for (let i = 0; i < resourcesByHost.length; ++i) {\n    const {hostPattern, resources} = resourcesByHost[i];\n    if (!hostPattern.test(url.host)) {\n      continue;\n    }\n    const index = findIndex(\n      resources,\n      (res) =>\n        res.pathPattern.test(url.pathname) && res.queryPattern.test(url.search)\n    );\n    if (index != -1) {\n      return resources[index].name;\n    }\n  }\n  return null; // No match.\n}\n\n/**\n * Groups all resource specs (which are defined in terms of {host, path, query}\n * patterns) by host pattern. This is used downstream to avoid running RegExps\n * for host patterns multiple times because we expect multiple resources to\n * use the same host pattern.\n * @param {!Object<string, !IndividualResourceSpecDef>} resourceDefs A map of\n *     names to the resource spec for that name.\n * @return {!Array<!ResourceSpecForHostDef>}\n */\nfunction groupSpecsByHost(resourceDefs) {\n  const byHost = {};\n  for (const name in resourceDefs) {\n    const host = resourceDefs[name]['host'] || '';\n    const path = resourceDefs[name]['path'] || '';\n    const query = resourceDefs[name]['query'] || '';\n    const pattern = {\n      name,\n      pathPattern: new RegExp(path),\n      queryPattern: new RegExp(query),\n    };\n    if (byHost[host]) {\n      byHost[host].resources.push(pattern);\n    } else {\n      byHost[host] = {\n        hostPattern: new RegExp(host),\n        resources: [pattern],\n      };\n    }\n  }\n  const byHostArray = [];\n  for (const host in byHost) {\n    byHostArray.push(byHost[host]);\n  }\n  return byHostArray;\n}\n\n/**\n * Filters out resource timing entries that don't have a name defined in\n * resourceDefs. It returns a new array where each element contains a\n * resource timing entry and the corresponding name.\n * @param {!Array<!PerformanceResourceTiming>} entries\n * @param {!Object<string, !IndividualResourceSpecDef>} resourceDefs\n * @return {!Array<{entry: !PerformanceResourceTiming, name: string}>}\n */\nfunction filterEntries(entries, resourceDefs) {\n  // Group resource timing definitions by host since we expect multiple\n  // definitions to have the same host.\n  const byHost = groupSpecsByHost(resourceDefs);\n  const results = [];\n  entries.forEach((entry) => {\n    const name = nameForEntry(entry, byHost);\n    if (name) {\n      results.push({entry, name});\n    }\n  });\n  return results;\n}\n\n/**\n * Serializes resource timing entries that match the resourceTimingSpec into a\n * single string.\n * @param {!Array<!PerformanceResourceTiming>} entries\n * @param {!JsonObject} resourceTimingSpec\n * @param {!Element} element amp-analytics element.\n * @return {!Promise<string>}\n */\nfunction serialize(entries, resourceTimingSpec, element) {\n  const resources = resourceTimingSpec['resources'];\n  const encoding = resourceTimingSpec['encoding'];\n\n  const variableService = variableServiceForDoc(element);\n  const format = (val, relativeTo = 0) =>\n    Math.round(val - relativeTo).toString(encoding['base'] || 10);\n\n  const promises = filterEntries(entries, resources)\n    .map((resourceTimingEntry) => {\n      const {entry, name} = resourceTimingEntry;\n      return entryToExpansionOptions(entry, name, format);\n    })\n    .map((expansion) =>\n      variableService.expandTemplate(encoding['entry'], expansion, element)\n    );\n  return Promise.all(promises).then((vars) => vars.join(encoding['delim']));\n}\n\n/**\n * Serializes resource timing entries according to the resource timing spec.\n * @param {!Element} element amp-analytics element.\n * @param {!JsonObject} resourceTimingSpec\n * @return {!Promise<string>}\n */\nfunction serializeResourceTiming(element, resourceTimingSpec) {\n  const {win} = element.getAmpDoc();\n  // Check that the performance timing API exists before and that the spec is\n  // valid before proceeding. If not, we simply return an empty string.\n  if (\n    resourceTimingSpec['done'] ||\n    !win.performance ||\n    !win.performance.now ||\n    !win.performance.getEntriesByType ||\n    !validateResourceTimingSpec(resourceTimingSpec)\n  ) {\n    resourceTimingSpec['done'] = true;\n    return Promise.resolve('');\n  }\n  let entries = getResourceTimingEntries(win);\n  if (entries.length >= RESOURCE_TIMING_BUFFER_SIZE) {\n    // We've exceeded the maximum buffer size so no additional metrics will be\n    // reported for this resourceTimingSpec.\n    resourceTimingSpec['done'] = true;\n  }\n\n  const responseAfter = resourceTimingSpec['responseAfter'] || 0;\n  // Update responseAfter for next time to avoid reporting the same resource\n  // multiple times.\n  resourceTimingSpec['responseAfter'] = Math.max(\n    responseAfter,\n    win.performance.now()\n  );\n\n  // Filter resources that are too early.\n  entries = entries.filter((e) => e.startTime + e.duration >= responseAfter);\n  if (!entries.length) {\n    return Promise.resolve('');\n  }\n  // Yield the thread in case iterating over all resources takes a long time.\n  return yieldThread(() => serialize(entries, resourceTimingSpec, element));\n}\n\n/**\n * @param {!Element} element amp-analytics element.\n * @param {!JsonObject|undefined} spec resource timing spec.\n * @param {number} startTime start timestamp.\n * @return {!Promise<string>}\n */\nexport function getResourceTiming(element, spec, startTime) {\n  // Only allow collecting timing within 1s\n  if (spec && Date.now() < startTime + 60 * 1000) {\n    return serializeResourceTiming(element, spec);\n  } else {\n    return Promise.resolve('');\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AnalyticsEventType} from './events';\nimport {BatchSegmentDef, defaultSerializer} from './transport-serializer';\nimport {ExpansionOptions, variableServiceForDoc} from './variables';\nimport {SANDBOX_AVAILABLE_VARS} from './sandbox-vars-allowlist';\nimport {Services} from '../../../src/services';\nimport {devAssert, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {getResourceTiming} from './resource-timing';\nimport {isArray, isFiniteNumber, isObject} from '../../../src/core/types';\n\nconst BATCH_INTERVAL_MIN = 200;\n\nexport class RequestHandler {\n  /**\n   * @param {!Element} element\n   * @param {!JsonObject} request\n   * @param {!../../../src/preconnect.PreconnectService} preconnect\n   * @param {./transport.Transport} transport\n   * @param {boolean} isSandbox\n   */\n  constructor(element, request, preconnect, transport, isSandbox) {\n    /** @const {!Element} */\n    this.element_ = element;\n\n    /** @const {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = element.getAmpDoc();\n\n    /** @const {!Window} */\n    this.win = this.ampdoc_.win;\n\n    /** @const {string} !if specified, all requests are prepended with this */\n    this.requestOrigin_ = request['origin'];\n\n    /** @const {string} */\n    this.baseUrl = devAssert(request['baseUrl']);\n\n    /** @private {Array<number>|number|undefined} */\n    this.batchInterval_ = request['batchInterval']; //unit is sec\n\n    /** @private {?number} */\n    this.reportWindow_ = Number(request['reportWindow']) || null; // unit is sec\n\n    /** @private {?number} */\n    this.batchIntervalPointer_ = null;\n\n    /** @private {!./variables.VariableService} */\n    this.variableService_ = variableServiceForDoc(element);\n\n    /** @private {!../../../src/service/url-replacements-impl.UrlReplacements} */\n    this.urlReplacementService_ = Services.urlReplacementsForDoc(element);\n\n    /** @private {!../../../src/service/url-impl.Url} */\n    this.urlService_ = Services.urlForDoc(element);\n\n    /** @private {?Promise<string>} */\n    this.baseUrlPromise_ = null;\n\n    /** @private {?Promise<string>} */\n    this.requestOriginPromise_ = null;\n\n    /** @private {!Array<!Promise<!BatchSegmentDef>>} */\n    this.batchSegmentPromises_ = [];\n\n    /** @private {!../../../src/preconnect.PreconnectService} */\n    this.preconnect_ = preconnect;\n\n    /** @private {./transport.Transport} */\n    this.transport_ = transport;\n\n    /** @const @private {!Object|undefined} */\n    this.allowlist_ = isSandbox ? SANDBOX_AVAILABLE_VARS : undefined;\n\n    /** @private {?number} */\n    this.batchIntervalTimeoutId_ = null;\n\n    /** @private {?number} */\n    this.reportWindowTimeoutId_ = null;\n\n    /** @private {boolean} */\n    this.reportRequest_ = true;\n\n    /** @private {?JsonObject} */\n    this.lastTrigger_ = null;\n\n    /** @private {number} */\n    this.queueSize_ = 0;\n\n    /** @private @const {number} */\n    this.startTime_ = Date.now();\n\n    this.initReportWindow_();\n    this.initBatchInterval_();\n  }\n\n  /**\n   * Exposed method to send a request on event.\n   * Real ping may be batched and send out later.\n   * @param {?JsonObject} configParams\n   * @param {!JsonObject} trigger\n   * @param {!./variables.ExpansionOptions} expansionOptions\n   */\n  send(configParams, trigger, expansionOptions) {\n    const isImportant = trigger['important'] === true;\n    if (!this.reportRequest_ && !isImportant) {\n      // Ignore non important trigger out reportWindow\n      return;\n    }\n\n    this.queueSize_++;\n    this.lastTrigger_ = trigger;\n    const bindings = this.variableService_.getMacros(this.element_);\n    bindings['RESOURCE_TIMING'] = getResourceTiming(\n      this.element_,\n      trigger['resourceTimingSpec'],\n      this.startTime_\n    );\n\n    if (!this.baseUrlPromise_) {\n      expansionOptions.freezeVar('extraUrlParams');\n\n      this.baseUrlPromise_ = this.expandTemplateUrl_(\n        this.baseUrl,\n        expansionOptions,\n        bindings\n      );\n    }\n\n    // expand requestOrigin if it is declared\n    if (!this.requestOriginPromise_ && this.requestOrigin_) {\n      // do not encode vars in request origin\n      const requestOriginExpansionOptions = new ExpansionOptions(\n        expansionOptions.vars,\n        expansionOptions.iterations,\n        /* opt_noEncode */ true\n      );\n\n      this.requestOriginPromise_ = this.expandTemplateUrl_(\n        this.requestOrigin_,\n        requestOriginExpansionOptions,\n        bindings\n      );\n    }\n\n    const params = {...configParams, ...trigger['extraUrlParams']};\n    const timestamp = this.win.Date.now();\n    const batchSegmentPromise = expandExtraUrlParams(\n      this.variableService_,\n      this.urlReplacementService_,\n      params,\n      expansionOptions,\n      bindings,\n      this.element_,\n      this.allowlist_\n    ).then((params) => {\n      return dict({\n        'trigger': trigger['on'],\n        'timestamp': timestamp,\n        'extraUrlParams': params,\n      });\n    });\n    this.batchSegmentPromises_.push(batchSegmentPromise);\n    this.trigger_(isImportant || !this.batchInterval_);\n  }\n\n  /**\n   * Dispose function that clear request handler state.\n   */\n  dispose() {\n    this.reset_();\n\n    // Clear batchInterval timeout\n    if (this.batchIntervalTimeoutId_) {\n      this.win.clearTimeout(this.batchIntervalTimeoutId_);\n      this.batchIntervalTimeoutId_ = null;\n    }\n\n    if (this.reportWindowTimeoutId_) {\n      this.win.clearTimeout(this.reportWindowTimeoutId_);\n      this.reportWindowTimeoutId_ = null;\n    }\n  }\n\n  /**\n   * @param {string} url\n   * @param {!ExpansionOptions} expansionOptions\n   * @param {!Object<string, (!../../../src/service/variable-source.ResolverReturnDef|!../../../src/service/variable-source.SyncResolverDef)>=} bindings\n   * @return {!Promise<string>}\n   */\n  expandTemplateUrl_(url, expansionOptions, bindings) {\n    return this.variableService_\n      .expandTemplate(\n        url,\n        expansionOptions,\n        this.element_,\n        bindings,\n        this.allowlist_\n      )\n      .then((url) =>\n        this.urlReplacementService_\n          .expandUrlAsync(url, bindings, this.allowlist_)\n          .catch((e) =>\n            userAssert(false, `Could not expand URL \"${url}\": ${e.message}`)\n          )\n      );\n  }\n\n  /**\n   * Function that schedule the actual request send.\n   * @param {boolean} isImmediate\n   * @private\n   */\n  trigger_(isImmediate) {\n    if (this.queueSize_ == 0) {\n      // Do nothing if no request in queue\n      return;\n    }\n\n    if (isImmediate) {\n      // If not batched, or batchInterval scheduler schedule trigger immediately\n      this.fire_();\n    }\n  }\n\n  /**\n   * Send out request. Should only be called by `trigger_` function\n   * @private\n   */\n  fire_() {\n    const {\n      baseUrlPromise_: baseUrlPromise,\n      batchSegmentPromises_: segmentPromises,\n      requestOriginPromise_: requestOriginPromise,\n    } = this;\n    const trigger = /** @type {!JsonObject} */ (this.lastTrigger_);\n    this.reset_();\n\n    // preconnect to requestOrigin if available, otherwise baseUrl\n    const preconnectPromise = requestOriginPromise\n      ? requestOriginPromise\n      : baseUrlPromise;\n\n    preconnectPromise.then((preUrl) => {\n      this.preconnect_.url(this.ampdoc_, preUrl, true);\n    });\n\n    Promise.all([\n      baseUrlPromise,\n      Promise.all(segmentPromises),\n      requestOriginPromise,\n    ]).then((results) => {\n      const requestUrl = this.composeRequestUrl_(results[0], results[2]);\n\n      const batchSegments = results[1];\n      if (batchSegments.length === 0) {\n        return;\n      }\n\n      // TODO: iframePing will not work with batch. Add a config validation.\n      if (trigger['iframePing']) {\n        userAssert(\n          trigger['on'] == AnalyticsEventType.VISIBLE,\n          'iframePing is only available on page view requests.'\n        );\n        this.transport_.sendRequestUsingIframe(requestUrl, batchSegments[0]);\n      } else {\n        this.transport_.sendRequest(\n          requestUrl,\n          batchSegments,\n          !!this.batchInterval_\n        );\n      }\n    });\n  }\n\n  /**\n   * Reset batching status\n   * @private\n   */\n  reset_() {\n    this.queueSize_ = 0;\n    this.baseUrlPromise_ = null;\n    this.batchSegmentPromises_ = [];\n    this.lastTrigger_ = null;\n  }\n\n  /**\n   * Handle batchInterval\n   */\n  initBatchInterval_() {\n    if (!this.batchInterval_) {\n      return;\n    }\n\n    this.batchInterval_ = isArray(this.batchInterval_)\n      ? this.batchInterval_\n      : [this.batchInterval_];\n\n    for (let i = 0; i < this.batchInterval_.length; i++) {\n      let interval = this.batchInterval_[i];\n      userAssert(\n        isFiniteNumber(interval),\n        'Invalid batchInterval value: %s',\n        this.batchInterval_\n      );\n      interval = Number(interval) * 1000;\n      userAssert(\n        interval >= BATCH_INTERVAL_MIN,\n        'Invalid batchInterval value: %s, ' +\n          'interval value must be greater than %s ms.',\n        this.batchInterval_,\n        BATCH_INTERVAL_MIN\n      );\n      this.batchInterval_[i] = interval;\n    }\n\n    this.batchIntervalPointer_ = 0;\n\n    this.refreshBatchInterval_();\n  }\n\n  /**\n   * Initializes report window.\n   */\n  initReportWindow_() {\n    if (this.reportWindow_) {\n      this.reportWindowTimeoutId_ = this.win.setTimeout(() => {\n        // Flush batch queue;\n        this.trigger_(true);\n        this.reportRequest_ = false;\n        // Clear batchInterval timeout\n        if (this.batchIntervalTimeoutId_) {\n          this.win.clearTimeout(this.batchIntervalTimeoutId_);\n          this.batchIntervalTimeoutId_ = null;\n        }\n      }, this.reportWindow_ * 1000);\n    }\n  }\n\n  /**\n   * Schedule sending request regarding to batchInterval\n   */\n  refreshBatchInterval_() {\n    devAssert(\n      this.batchIntervalPointer_ != null,\n      'Should not start batchInterval without pointer'\n    );\n    const interval =\n      this.batchIntervalPointer_ < this.batchInterval_.length\n        ? this.batchInterval_[this.batchIntervalPointer_++]\n        : this.batchInterval_[this.batchInterval_.length - 1];\n\n    this.batchIntervalTimeoutId_ = this.win.setTimeout(() => {\n      this.trigger_(true);\n      this.refreshBatchInterval_();\n    }, interval);\n  }\n\n  /**\n   * Composes a request URL given a base and requestOrigin\n   * @private\n   * @param {string} baseUrl\n   * @param {string=} opt_requestOrigin\n   * @return {string}\n   */\n  composeRequestUrl_(baseUrl, opt_requestOrigin) {\n    if (opt_requestOrigin) {\n      // We expect requestOrigin to always contain the URL origin. In the case\n      // where requestOrigin has a relative URL, the current page's origin will\n      // be used. We will simply respect the requestOrigin and baseUrl, we don't\n      // check if they form a valid URL and request will fail silently\n      const requestOriginInfo = this.urlService_.parse(opt_requestOrigin);\n      return requestOriginInfo.origin + baseUrl;\n    }\n\n    return baseUrl;\n  }\n}\n\n/**\n * Expand the postMessage string\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} msg\n * @param {?JsonObject} configParams\n * @param {!JsonObject} trigger\n * @param {!./variables.ExpansionOptions} expansionOption\n * @param {!Element} element\n * @return {Promise<string>}\n */\nexport function expandPostMessage(\n  ampdoc,\n  msg,\n  configParams,\n  trigger,\n  expansionOption,\n  element\n) {\n  const variableService = variableServiceForDoc(ampdoc);\n  const urlReplacementService = Services.urlReplacementsForDoc(element);\n\n  const bindings = variableService.getMacros(element);\n  expansionOption.freezeVar('extraUrlParams');\n\n  const basePromise = variableService\n    .expandTemplate(msg, expansionOption, element)\n    .then((base) => {\n      return urlReplacementService.expandStringAsync(base, bindings);\n    });\n  if (msg.indexOf('${extraUrlParams}') < 0) {\n    // No need to append extraUrlParams\n    return basePromise;\n  }\n\n  return basePromise.then((expandedMsg) => {\n    const params = {...configParams, ...trigger['extraUrlParams']};\n    //return base url with the appended extra url params;\n    return expandExtraUrlParams(\n      variableService,\n      urlReplacementService,\n      params,\n      expansionOption,\n      bindings,\n      element\n    ).then((extraUrlParams) => {\n      return defaultSerializer(expandedMsg, [\n        dict({'extraUrlParams': extraUrlParams}),\n      ]);\n    });\n  });\n}\n\n/**\n * Function that handler extraUrlParams from config and trigger.\n * @param {!./variables.VariableService} variableService\n * @param {!../../../src/service/url-replacements-impl.UrlReplacements} urlReplacements\n * @param {!Object} params\n * @param {!./variables.ExpansionOptions} expansionOption\n * @param {!Object} bindings\n * @param {!Element} element\n * @param {!Object=} opt_allowlist\n * @return {!Promise<!Object>}\n * @private\n */\nfunction expandExtraUrlParams(\n  variableService,\n  urlReplacements,\n  params,\n  expansionOption,\n  bindings,\n  element,\n  opt_allowlist\n) {\n  const newParams = {};\n  const requestPromises = [];\n  // Don't encode param values here,\n  // as we'll do it later in the getExtraUrlParamsString call.\n  const option = new ExpansionOptions(\n    expansionOption.vars,\n    expansionOption.iterations,\n    true /* noEncode */\n  );\n\n  const expandObject = (data, key, expandedData) => {\n    const value = data[key];\n\n    if (typeof value === 'string') {\n      expandedData[key] = undefined;\n      const request = variableService\n        .expandTemplate(value, option, element)\n        .then((value) =>\n          urlReplacements.expandStringAsync(value, bindings, opt_allowlist)\n        )\n        .then((value) => {\n          expandedData[key] = value;\n        });\n      requestPromises.push(request);\n    } else if (isArray(value)) {\n      expandedData[key] = [];\n      for (let index = 0; index < value.length; index++) {\n        expandObject(value, index, expandedData[key]);\n      }\n    } else if (isObject(value) && value !== null) {\n      expandedData[key] = {};\n      const valueKeys = Object.keys(value);\n      for (let index = 0; index < valueKeys.length; index++) {\n        expandObject(value, valueKeys[index], expandedData[key]);\n      }\n    } else {\n      // Number, bool, null\n      expandedData[key] = value;\n    }\n  };\n\n  const paramKeys = Object.keys(params);\n  for (let index = 0; index < paramKeys.length; index++) {\n    expandObject(params, paramKeys[index], newParams);\n  }\n\n  return Promise.all(requestPromises).then(() => newParams);\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MessageType} from '../../../src/3p-frame-messaging';\nimport {SubscriptionApi} from '../../../src/iframe-helper';\nimport {dev, devAssert} from '../../../src/log';\n\n/** @private @const {string} */\nconst TAG_ = 'amp-analytics/iframe-transport-message-queue';\n\n/** @private @const {number} */\nconst MAX_QUEUE_SIZE_ = 100;\n\n/**\n * @visibleForTesting\n */\nexport class IframeTransportMessageQueue {\n  /**\n   * Constructor\n   * @param {!Window} win The window element\n   * @param {!HTMLIFrameElement} frame The cross-domain iframe to send\n   * messages to\n   */\n  constructor(win, frame) {\n    /** @private {!HTMLIFrameElement} */\n    this.frame_ = frame;\n\n    /** @private {boolean} */\n    this.isReady_ = false;\n\n    /**\n     * @private\n     * {!Array<!../../../src/3p-frame-messaging.IframeTransportEvent>}\n     */\n    this.pendingEvents_ = [];\n\n    /** @private {!../../../src/iframe-helper.SubscriptionApi} */\n    this.postMessageApi_ = new SubscriptionApi(\n      this.frame_,\n      MessageType.SEND_IFRAME_TRANSPORT_EVENTS,\n      true,\n      () => {\n        this.setIsReady();\n      }\n    );\n  }\n\n  /**\n   * Returns whether the queue has been marked as ready yet\n   * @return {boolean}\n   * @visibleForTesting\n   */\n  isReady() {\n    return this.isReady_;\n  }\n\n  /**\n   * Indicate that a cross-domain frame is ready to receive messages, and\n   * send all messages that were previously queued for it.\n   * @visibleForTesting\n   */\n  setIsReady() {\n    this.isReady_ = true;\n    this.flushQueue_();\n  }\n\n  /**\n   * Returns how many creativeId -> message(s) mappings there are\n   * @return {number}\n   * @visibleForTesting\n   */\n  queueSize() {\n    return this.pendingEvents_.length;\n  }\n\n  /**\n   * Enqueues an event to be sent to a cross-domain iframe.\n   * @param {!../../../src/3p-frame-messaging.IframeTransportEvent} event\n   * Identifies the event and which Transport instance (essentially which\n   * creative) is sending it.\n   */\n  enqueue(event) {\n    devAssert(\n      event && event.creativeId && event.message,\n      'Attempted to enqueue malformed message for: ' + event.creativeId\n    );\n    this.pendingEvents_.push(event);\n    if (this.queueSize() >= MAX_QUEUE_SIZE_) {\n      dev().warn(\n        TAG_,\n        'Exceeded maximum size of queue for: ' + event.creativeId\n      );\n      this.pendingEvents_.shift();\n    }\n    this.flushQueue_();\n  }\n\n  /**\n   * Send queued data (if there is any) to a cross-domain iframe\n   * @private\n   */\n  flushQueue_() {\n    if (this.isReady() && this.queueSize()) {\n      this.postMessageApi_.send(\n        MessageType.IFRAME_TRANSPORT_EVENTS,\n        /** @type {!JsonObject} */\n        ({events: this.pendingEvents_})\n      );\n      this.pendingEvents_ = [];\n    }\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {IframeTransportMessageQueue} from './iframe-transport-message-queue';\nimport {createElementWithAttributes} from '../../../src/dom';\nimport {devAssert, user} from '../../../src/log';\nimport {getMode} from '../../../src/mode';\nimport {hasOwn} from '../../../src/core/types/object';\nimport {internalRuntimeVersion} from '../../../src/internal-version';\nimport {toggle} from '../../../src/style';\nimport {urls} from '../../../src/config';\n\n/** @private @const {string} */\nconst TAG_ = 'amp-analytics/iframe-transport';\n\n/** @private @const {number} */\nconst LONG_TASK_REPORTING_THRESHOLD = 5;\n\n/** @typedef {{\n *    frame: Element,\n *    sentinel: string,\n *    usageCount: number,\n *    queue: IframeTransportMessageQueue,\n *  }} */\nexport let FrameData;\n\n/**\n * @param {!Window} ampWin\n * @param {boolean=} opt_forceProdUrl\n * @return {string}\n * @visibleForTesting\n */\nexport function getIframeTransportScriptUrlForTesting(\n  ampWin,\n  opt_forceProdUrl\n) {\n  return getIframeTransportScriptUrl(ampWin, opt_forceProdUrl);\n}\n\n/**\n * Get the URL of the client lib\n * @param {!Window} ampWin The window object of the AMP document\n * @param {boolean=} opt_forceProdUrl If true, prod URL will be returned even\n *     in local/test modes.\n * @return {string}\n */\nfunction getIframeTransportScriptUrl(ampWin, opt_forceProdUrl) {\n  if (\n    (getMode().localDev || getMode().test) &&\n    !opt_forceProdUrl &&\n    ampWin.parent &&\n    ampWin.parent.location\n  ) {\n    const loc = ampWin.parent.location;\n    return `${loc.protocol}//${loc.host}/dist/iframe-transport-client-lib.js`;\n  }\n  return (\n    urls.thirdParty +\n    `/${internalRuntimeVersion()}/iframe-transport-client-v0.js`\n  );\n}\n\n/**\n * @visibleForTesting\n */\nexport class IframeTransport {\n  /**\n   * @param {!Window} ampWin The window object of the AMP document\n   * @param {string} type The value of the amp-analytics tag's type attribute\n   * @param {!JsonObject} config\n   * @param {string} id If (potentially) using sendResponseToCreative(), it\n   *     should be something that the recipient can use to identify the\n   *     context of the message, e.g. the resourceID of a DOM element.\n   */\n  constructor(ampWin, type, config, id) {\n    /** @private @const {!Window} */\n    this.ampWin_ = ampWin;\n\n    /** @private @const {string} */\n    this.type_ = type;\n\n    /** @private @const {string} */\n    this.creativeId_ = id;\n\n    devAssert(\n      config && config['iframe'],\n      'Must supply iframe URL to constructor!'\n    );\n    this.frameUrl_ = config['iframe'];\n\n    /** @private {number} */\n    this.numLongTasks_ = 0;\n\n    this.processCrossDomainIframe();\n  }\n\n  /**\n   * Called when a Transport instance is being removed from the DOM\n   */\n  detach() {\n    IframeTransport.markCrossDomainIframeAsDone(\n      this.ampWin_.document,\n      this.type_\n    );\n  }\n\n  /**\n   * If iframe is specified in config/transport, check whether third-party\n   * iframe already exists, and if not, create it.\n   */\n  processCrossDomainIframe() {\n    let frameData;\n    if (IframeTransport.hasCrossDomainIframe(this.type_)) {\n      frameData = IframeTransport.getFrameData(this.type_);\n      ++frameData.usageCount;\n    } else {\n      frameData = this.createCrossDomainIframe();\n      this.ampWin_.document.body.appendChild(frameData.frame);\n      this.createPerformanceObserver_();\n    }\n    devAssert(frameData, 'Trying to use non-existent frame');\n  }\n\n  /**\n   * Create a cross-domain iframe for third-party vendor analytics\n   * @return {!FrameData}\n   * @visibleForTesting\n   */\n  createCrossDomainIframe() {\n    // Explanation of IDs:\n    // Each instance of IframeTransport (owned by a specific amp-analytics\n    // tag, in turn owned by a specific creative) has an ID\n    // (this.getCreativeId()).\n    // Each cross-domain iframe also has an ID, stored here in sentinel.\n    // These two types of IDs have different formats.\n    // There is a many-to-one relationship, in that several creatives may\n    // utilize the same analytics vendor, so perhaps two creatives might\n    // both use the same vendor iframe.\n    // Of course, a given creative may use multiple analytics vendors, but\n    // in that case it would use multiple amp-analytics tags, so the\n    // iframeTransport.getCreativeId() -> sentinel relationship is *not*\n    // many-to-many.\n    const sentinel = IframeTransport.createUniqueId_();\n    const frameName = JSON.stringify(\n      /** @type {JsonObject} */ ({\n        scriptSrc: getIframeTransportScriptUrl(this.ampWin_),\n        sentinel,\n        type: this.type_,\n      })\n    );\n    const frame = createElementWithAttributes(\n      this.ampWin_.document,\n      'iframe',\n      /** @type {!JsonObject} */ ({\n        sandbox: 'allow-scripts allow-same-origin',\n        name: frameName,\n        'data-amp-3p-sentinel': sentinel,\n      })\n    );\n    frame.sentinel = sentinel;\n    toggle(frame, false);\n    frame.src = this.frameUrl_;\n    const frameData = /** @type {FrameData} */ ({\n      frame,\n      usageCount: 1,\n      queue: new IframeTransportMessageQueue(\n        this.ampWin_,\n        /** @type {!HTMLIFrameElement} */\n        (frame)\n      ),\n    });\n    IframeTransport.crossDomainIframes_[this.type_] = frameData;\n    return frameData;\n  }\n\n  /**\n   * Uses the Long Task API to create an observer for when 3p vendor frames\n   * take more than 50ms of continuous CPU time.\n   * Currently the only action in response to that is to log. It will log\n   * once per LONG_TASK_REPORTING_THRESHOLD that a long task occurs. (This\n   * implies that there is a grace period for the first\n   * LONG_TASK_REPORTING_THRESHOLD-1 occurrences.)\n   * @private\n   */\n  createPerformanceObserver_() {\n    if (!isLongTaskApiSupported(this.ampWin_)) {\n      return;\n    }\n    IframeTransport.performanceObservers_[this.type_] =\n      new this.ampWin_.PerformanceObserver((entryList) => {\n        if (!entryList) {\n          return;\n        }\n        entryList.getEntries().forEach((entry) => {\n          if (\n            entry &&\n            entry['entryType'] == 'longtask' &&\n            entry['name'] == 'cross-origin-descendant' &&\n            entry.attribution\n          ) {\n            /** @type {!Array} */ (entry.attribution).forEach((attrib) => {\n              if (\n                this.frameUrl_ == attrib['containerSrc'] &&\n                ++this.numLongTasks_ % LONG_TASK_REPORTING_THRESHOLD == 0\n              ) {\n                user().error(TAG_, `Long Task: Vendor: \"${this.type_}\"`);\n              }\n            });\n          }\n        });\n      });\n    IframeTransport.performanceObservers_[this.type_].observe({\n      entryTypes: ['longtask'],\n    });\n  }\n\n  /**\n   * Called when a creative no longer needs its cross-domain iframe (for\n   * instance, because the creative has been removed from the DOM).\n   * Once all creatives using a frame are done with it, the frame can be\n   * destroyed.\n   * @param {!HTMLDocument} ampDoc The AMP document\n   * @param {string} type The type attribute of the amp-analytics tag\n   */\n  static markCrossDomainIframeAsDone(ampDoc, type) {\n    const frameData = IframeTransport.getFrameData(type);\n    devAssert(\n      frameData && frameData.frame && frameData.usageCount,\n      'Marked the ' +\n        type +\n        ' frame as done, but there is no' +\n        ' record of it existing.'\n    );\n    if (--frameData.usageCount) {\n      // Some other instance is still using it\n      return;\n    }\n    ampDoc.body.removeChild(frameData.frame);\n    delete IframeTransport.crossDomainIframes_[type];\n    if (IframeTransport.performanceObservers_[type]) {\n      IframeTransport.performanceObservers_[type].disconnect();\n      IframeTransport.performanceObservers_[type] = null;\n    }\n  }\n\n  /**\n   * Returns whether this type of cross-domain frame is already known\n   * @param {string} type The type attribute of the amp-analytics tag\n   * @return {boolean}\n   * @visibleForTesting\n   */\n  static hasCrossDomainIframe(type) {\n    return hasOwn(IframeTransport.crossDomainIframes_, type);\n  }\n\n  /**\n   * Create a unique value to differentiate messages from a particular\n   * creative to the cross-domain iframe, or to identify the iframe itself.\n   * @return {string}\n   * @private\n   */\n  static createUniqueId_() {\n    return String(++IframeTransport.nextId_);\n  }\n\n  /**\n   * Sends an AMP Analytics trigger event to a vendor's cross-domain iframe,\n   * or queues the message if the frame is not yet ready to receive messages.\n   * @param {string} event A string describing the trigger event\n   * @visibleForTesting\n   */\n  sendRequest(event) {\n    const frameData = IframeTransport.getFrameData(this.type_);\n    devAssert(frameData, 'Trying to send message to non-existent frame');\n    devAssert(\n      frameData.queue,\n      'Event queue is missing for messages from ' +\n        this.type_ +\n        ' to creative ID ' +\n        this.creativeId_\n    );\n    frameData.queue.enqueue(\n      /**\n       * @type {!../../../src/3p-frame-messaging.IframeTransportEvent}\n       */\n      ({creativeId: this.creativeId_, message: event})\n    );\n  }\n\n  /**\n   * Gets the FrameData associated with a particular cross-domain frame type.\n   * @param {string} type The type attribute of the amp-analytics tag\n   * @return {FrameData}\n   * @visibleForTesting\n   */\n  static getFrameData(type) {\n    return IframeTransport.crossDomainIframes_[type];\n  }\n\n  /**\n   * Removes all knowledge of cross-domain iframes.\n   * Does not actually remove them from the DOM.\n   * @visibleForTesting\n   */\n  static resetCrossDomainIframes() {\n    IframeTransport.crossDomainIframes_ = {};\n  }\n\n  /**\n   * @return {string} Unique ID of this instance of IframeTransport\n   * @visibleForTesting\n   */\n  getCreativeId() {\n    return this.creativeId_;\n  }\n\n  /**\n   * @return {string} Type attribute of parent amp-analytics instance\n   * @visibleForTesting\n   */\n  getType() {\n    return this.type_;\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isLongTaskApiSupported(win) {\n  return (\n    !!win.PerformanceObserver &&\n    !!win['TaskAttributionTiming'] &&\n    'containerName' in win['TaskAttributionTiming'].prototype\n  );\n}\n\n/** @private {Object<string, FrameData>} */\nIframeTransport.crossDomainIframes_ = {};\n\n/** @private {number} */\nIframeTransport.nextId_ = 0;\n\n/** @private {Object<string, PerformanceObserver>} */\nIframeTransport.performanceObservers_ = {};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {WindowInterface} from '../src/core/window/interface';\nimport {createElementWithAttributes} from '../src/dom';\nimport {dict} from '../src/core/types/object';\nimport {user} from '../src/log';\n\n/** @const {string} */\nconst TAG = 'pixel';\n\n/**\n * @param {!Window} win\n * @param {string} src\n * @param {?string=} referrerPolicy\n * @return {!Element}\n */\nexport function createPixel(win, src, referrerPolicy) {\n  // Caller need to verify window is not destroyed when creating pixel\n  if (referrerPolicy && referrerPolicy !== 'no-referrer') {\n    user().error(TAG, 'Unsupported referrerPolicy: %s', referrerPolicy);\n  }\n\n  return referrerPolicy === 'no-referrer'\n    ? createNoReferrerPixel(win, src)\n    : createImagePixel(win, src);\n}\n\n/**\n * @param {!Window} win\n * @param {string} src\n * @return {!Element}\n */\nfunction createNoReferrerPixel(win, src) {\n  if (isReferrerPolicySupported()) {\n    return createImagePixel(win, src, true);\n  } else {\n    // if \"referrerPolicy\" is not supported, use iframe wrapper\n    // to scrub the referrer.\n    const iframe = createElementWithAttributes(\n      /** @type {!Document} */ (win.document),\n      'iframe',\n      dict({\n        'src': 'about:blank',\n        'style': 'display:none',\n      })\n    );\n    iframe.onload = () => {\n      createImagePixel(iframe.contentWindow, src);\n    };\n    win.document.body.appendChild(iframe);\n    return iframe;\n  }\n}\n\n/**\n * @param {!Window} win\n * @param {string} src\n * @param {boolean=} noReferrer\n * @return {!Image}\n */\nfunction createImagePixel(win, src, noReferrer = false) {\n  const Image = WindowInterface.getImage(win);\n  const image = new Image();\n  if (noReferrer) {\n    image.referrerPolicy = 'no-referrer';\n  }\n  image.src = src;\n  return image;\n}\n\n/**\n * Check if element attribute \"referrerPolicy\" is supported by the browser.\n * Safari 11.1 does not support it yet.\n *\n * @return {boolean}\n */\nfunction isReferrerPolicySupported() {\n  return 'referrerPolicy' in Image.prototype;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {computedStyle} from './style';\nimport {dev} from './log';\nimport {getParentWindowFrameElement} from './service';\n\nconst AD_CONTAINER_PROP = '__AMP__AD_CONTAINER';\n\n/**\n * Tags that are allowed to have fixed positioning\n * @const {!Object<string, boolean>}\n */\nconst CONTAINERS = {\n  'AMP-FX-FLYING-CARPET': true,\n  'AMP-LIGHTBOX': true,\n  'AMP-STICKY-AD': true,\n  'AMP-LIGHTBOX-GALLERY': true,\n};\n\n/**\n * Determines if an element is fixed-positioned.\n * OK to use, because it's only called from onLayoutMeasure\n * @param {!Element} el\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isPositionFixed(el, win) {\n  const {position} = computedStyle(win, el);\n  // We consider sticky positions as fixed, since they can be fixed.\n  return position == 'fixed' || position == 'sticky';\n}\n\n/**\n * @param {!Element} element\n * @param {!Window} win\n * @return {boolean} whether the element position is allowed. If the element\n * belongs to CONTAINERS, it is allowed to be position fixed.\n * If the element has a position fixed ancestor, it is not allowed.\n * This should only be called when a layout on the page was just forced\n * anyway.\n */\nexport function isAdPositionAllowed(element, win) {\n  let hasFixedAncestor = false;\n  let containers = 0;\n  let el = element;\n  do {\n    if (CONTAINERS[el.tagName]) {\n      // The containers must not themselves be contained in a fixed-position\n      // element. Continue the search.\n      containers++;\n      hasFixedAncestor = false;\n    } else if (isPositionFixed(dev().assertElement(el), win)) {\n      // Because certain blessed elements may contain a position fixed\n      // container (which contain an ad), we continue to search the\n      // ancestry tree.\n      hasFixedAncestor = true;\n    }\n    el = el.parentElement;\n  } while (el && el.tagName != 'BODY');\n  return !hasFixedAncestor && containers <= 1;\n}\n\n/**\n * Returns the blessed container element tagName if the ad is contained by one.\n * This is called during layout measure.\n * @param {!Element} element\n * @return {?string}\n */\nexport function getAdContainer(element) {\n  if (element[AD_CONTAINER_PROP] === undefined) {\n    let el = element.parentElement;\n    while (el && el.tagName != 'BODY') {\n      if (CONTAINERS[el.tagName]) {\n        return (element[AD_CONTAINER_PROP] = el.tagName);\n      }\n      el = el.parentElement;\n    }\n    element[AD_CONTAINER_PROP] = null;\n  }\n  return element[AD_CONTAINER_PROP];\n}\n\n/**\n * Gets the resource ID of the amp-ad element containing the passed node.\n * If there is no containing amp-ad tag, then null will be returned.\n * TODO(jonkeller): Investigate whether non-A4A use case is needed. Issue 11436\n * @param {!Element} node\n * @param {!Window} topWin\n * @return {?string}\n */\nexport function getAmpAdResourceId(node, topWin) {\n  try {\n    const frameParent = getParentWindowFrameElement(node, topWin).parentElement;\n    if (frameParent.nodeName == 'AMP-AD') {\n      return String(frameParent.getResourceId());\n    }\n  } catch (e) {}\n  // Whether we entered the catch above (e.g. due to attempt to access\n  // across xdomain boundary), or failed to enter the if further above, the\n  // node is not within a friendly amp-ad tag. So, there is no amp-ad\n  // resource ID. How to handle that is up to the caller, but see TODO above.\n  return null;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BatchSegmentDef,\n  RequestDef,\n  TransportSerializerDef,\n  TransportSerializers,\n  defaultSerializer,\n} from './transport-serializer';\nimport {IframeTransport} from './iframe-transport';\nimport {Services} from '../../../src/services';\nimport {WindowInterface} from '../../../src/core/window/interface';\nimport {\n  assertHttpsUrl,\n  checkCorsUrl,\n  isAmpScriptUri,\n  parseUrlDeprecated,\n} from '../../../src/url';\nimport {createPixel} from '../../../src/pixel';\nimport {dev, user, userAssert} from '../../../src/log';\nimport {getAmpAdResourceId} from '../../../src/ad-helper';\nimport {getMode} from '../../../src/mode';\nimport {getTopWindow} from '../../../src/service';\n\nimport {loadPromise} from '../../../src/event-helper';\nimport {removeElement} from '../../../src/dom';\nimport {toWin} from '../../../src/core/window';\nimport {toggle} from '../../../src/style';\n\n/** @const {string} */\nconst TAG_ = 'amp-analytics/transport';\n\n/**\n * Transport defines the ways how the analytics pings are going to be sent.\n */\nexport class Transport {\n  /**\n   * @param {!AmpDoc} ampdoc\n   * @param {!JsonObject} options\n   */\n  constructor(ampdoc, options = /** @type {!JsonObject} */ ({})) {\n    /** @private {!AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /** @private {!Window} */\n    this.win_ = ampdoc.win;\n\n    /** @private {!JsonObject} */\n    this.options_ = options;\n\n    /** @private {string|undefined} */\n    this.referrerPolicy_ = /** @type {string|undefined} */ (\n      this.options_['referrerPolicy']\n    );\n\n    // no-referrer is only supported in image transport\n    if (this.referrerPolicy_ === 'no-referrer') {\n      this.options_['beacon'] = false;\n      this.options_['xhrpost'] = false;\n    }\n\n    /** @private {boolean} */\n    this.useBody_ = !!this.options_['useBody'];\n\n    /** @private {?IframeTransport} */\n    this.iframeTransport_ = null;\n\n    /** @private {boolean} */\n    this.isInabox_ = getMode(this.win_).runtime == 'inabox';\n  }\n\n  /**\n   * @param {string} url\n   * @param {!Array<!BatchSegmentDef>} segments\n   * @param {boolean} inBatch\n   */\n  sendRequest(url, segments, inBatch) {\n    if (!url || segments.length === 0) {\n      dev().info(TAG_, 'Empty request not sent: ', url);\n      return;\n    }\n    const serializer = this.getSerializer_();\n    /**\n     * @param {boolean} withPayload\n     * @return {!RequestDef}\n     */\n    function generateRequest(withPayload) {\n      const request = inBatch\n        ? serializer.generateBatchRequest(url, segments, withPayload)\n        : serializer.generateRequest(url, segments[0], withPayload);\n      if (!isAmpScriptUri(request.url)) {\n        assertHttpsUrl(request.url, 'amp-analytics request');\n        checkCorsUrl(request.url);\n      }\n      return request;\n    }\n\n    const getRequest = cacheFuncResult(generateRequest);\n\n    if (this.options_['iframe']) {\n      if (!this.iframeTransport_) {\n        dev().error(TAG_, 'iframe transport was inadvertently deleted');\n        return;\n      }\n      this.iframeTransport_.sendRequest(getRequest(false).url);\n      return;\n    }\n\n    if (this.options_['amp-script']) {\n      Transport.forwardRequestToAmpScript(this.ampdoc_, {\n        url,\n        payload: getRequest(true).payload,\n      });\n      return;\n    }\n\n    if (\n      this.options_['beacon'] &&\n      Transport.sendRequestUsingBeacon(this.win_, getRequest(this.useBody_))\n    ) {\n      return;\n    }\n    if (\n      this.options_['xhrpost'] &&\n      Transport.sendRequestUsingXhr(this.win_, getRequest(this.useBody_))\n    ) {\n      return;\n    }\n    const image = this.options_['image'];\n    if (image) {\n      const suppressWarnings =\n        typeof image == 'object' && image['suppressWarnings'];\n      Transport.sendRequestUsingImage(\n        this.win_,\n        getRequest(false),\n        suppressWarnings,\n        /** @type {string|undefined} */ (this.referrerPolicy_)\n      );\n      return;\n    }\n    user().warn(TAG_, 'Failed to send request', url, this.options_);\n  }\n\n  /**\n   * amp-analytics will create an iframe for vendors in\n   * extensions/amp-analytics/0.1/vendors/* who have transport/iframe defined.\n   * This is limited to MRC-accreddited vendors. The frame is removed if the\n   * user navigates/swipes away from the page, and is recreated if the user\n   * navigates back to the page.\n   *\n   * @param {!Element} element\n   */\n  maybeInitIframeTransport(element) {\n    if (!this.options_['iframe'] || this.iframeTransport_) {\n      return;\n    }\n\n    // In the case of FIE rendering, we should be using the parent doc win.\n    const topWin = getTopWindow(toWin(element.ownerDocument.defaultView));\n    const type = element.getAttribute('type');\n    // In inabox there is no amp-ad element.\n    const ampAdResourceId = this.isInabox_\n      ? '1'\n      : user().assertString(\n          getAmpAdResourceId(element, topWin),\n          'No friendly amp-ad ancestor element was found ' +\n            'for amp-analytics tag with iframe transport.'\n        );\n\n    this.iframeTransport_ = new IframeTransport(\n      topWin,\n      type,\n      this.options_,\n      ampAdResourceId\n    );\n  }\n\n  /**\n   * Deletes iframe transport.\n   */\n  deleteIframeTransport() {\n    if (this.iframeTransport_) {\n      this.iframeTransport_.detach();\n      this.iframeTransport_ = null;\n    }\n  }\n\n  /**\n   * Sends a ping request using an iframe, that is removed 5 seconds after\n   * it is loaded.\n   * This is not available as a standard transport, but rather used for\n   * specific, allowlisted requests.\n   * Note that this is unrelated to the iframeTransport\n   *\n   * @param {string} url\n   * @param {!BatchSegmentDef} segment\n   */\n  sendRequestUsingIframe(url, segment) {\n    const request = defaultSerializer(url, [segment]);\n    if (!request) {\n      user().error(TAG_, 'Request not sent. Contents empty.');\n      return;\n    }\n\n    assertHttpsUrl(request, 'amp-analytics request');\n    userAssert(\n      parseUrlDeprecated(request).origin !=\n        parseUrlDeprecated(this.win_.location.href).origin,\n      'Origin of iframe request must not be equal to the document origin.' +\n        ' See https://github.com/ampproject/' +\n        'amphtml/blob/main/docs/spec/amp-iframe-origin-policy.md for details.'\n    );\n\n    /** @const {!Element} */\n    const iframe = this.win_.document.createElement('iframe');\n    toggle(iframe, false);\n    iframe.onload = iframe.onerror = () => {\n      Services.timerFor(this.win_).delay(() => {\n        removeElement(iframe);\n      }, 5000);\n    };\n\n    iframe.setAttribute('amp-analytics', '');\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin');\n    iframe.src = request;\n    this.win_.document.body.appendChild(iframe);\n  }\n\n  /**\n   * @return {!TransportSerializerDef}\n   */\n  getSerializer_() {\n    return /** @type {!TransportSerializerDef} */ (\n      TransportSerializers['default']\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @param {!RequestDef} request\n   * @param {boolean} suppressWarnings\n   * @param {string|undefined} referrerPolicy\n   */\n  static sendRequestUsingImage(win, request, suppressWarnings, referrerPolicy) {\n    if (!win) {\n      return;\n    }\n    const image = createPixel(win, request.url, referrerPolicy);\n    loadPromise(image)\n      .then(() => {\n        dev().fine(TAG_, 'Sent image request', request.url);\n      })\n      .catch(() => {\n        if (!suppressWarnings) {\n          user().warn(\n            TAG_,\n            'Response unparseable or failed to send image request',\n            request.url\n          );\n        }\n      });\n  }\n\n  /**\n   * @param {!Window} win\n   * @param {!RequestDef} request\n   * @return {boolean} True if this browser supports navigator.sendBeacon.\n   */\n  static sendRequestUsingBeacon(win, request) {\n    const sendBeacon = WindowInterface.getSendBeacon(win);\n    if (!sendBeacon) {\n      return false;\n    }\n    const result = sendBeacon(request.url, request.payload || '');\n    if (result) {\n      dev().fine(TAG_, 'Sent beacon request', request);\n    }\n    return result;\n  }\n\n  /**\n   * @param {!Window} win\n   * @param {!RequestDef} request\n   * @return {boolean} True if this browser supports cross-domain XHR.\n   */\n  static sendRequestUsingXhr(win, request) {\n    const XMLHttpRequest = WindowInterface.getXMLHttpRequest(win);\n    if (!XMLHttpRequest) {\n      return false;\n    }\n    const xhr = new XMLHttpRequest();\n    if (!('withCredentials' in xhr)) {\n      return false; // Looks like XHR level 1 - CORS is not supported.\n    }\n    xhr.open('POST', request.url, true);\n    xhr.withCredentials = true;\n\n    // Prevent pre-flight HEAD request.\n    xhr.setRequestHeader('Content-Type', 'text/plain');\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState == 4) {\n        dev().fine(TAG_, 'Sent XHR request', request.url);\n      }\n    };\n\n    xhr.send(request.payload || '');\n    return true;\n  }\n\n  /**\n   * @param {!AmpDoc} ampdoc\n   * @param {!RequestDef} request\n   * @return {!Promise}\n   */\n  static forwardRequestToAmpScript(ampdoc, request) {\n    return Services.scriptForDocOrNull(ampdoc).then((ampScriptService) => {\n      userAssert(ampScriptService, 'AMP-SCRIPT is not installed');\n      ampScriptService.fetch(request.url, JSON.parse(request.payload));\n    });\n  }\n}\n\n/**\n * A helper method that wraps a function and cache its return value.\n *\n * @param {!Function} func the function to cache\n * @return {!Function}\n */\nfunction cacheFuncResult(func) {\n  const cachedValue = {};\n  return (arg) => {\n    const key = String(arg);\n    if (cachedValue[key] === undefined) {\n      cachedValue[key] = func(arg);\n    }\n    return cachedValue[key];\n  };\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Activity} from './activity-impl';\nimport {AnalyticsConfig, mergeObjects} from './config';\nimport {AnalyticsEventType} from './events';\nimport {ChunkPriority, chunk} from '../../../src/chunk';\nimport {CookieWriter} from './cookie-writer';\nimport {Deferred} from '../../../src/core/data-structures/promise';\nimport {\n  ExpansionOptions,\n  VariableService,\n  stringToBool,\n  variableServicePromiseForDoc,\n} from './variables';\nimport {\n  InstrumentationService,\n  instrumentationServicePromiseForDoc,\n} from './instrumentation';\nimport {LayoutPriority} from '../../../src/layout';\nimport {LinkerManager} from './linker-manager';\nimport {RequestHandler, expandPostMessage} from './requests';\nimport {Services} from '../../../src/services';\nimport {Transport} from './transport';\nimport {dev, devAssert, user} from '../../../src/log';\nimport {dict, hasOwn} from '../../../src/core/types/object';\nimport {expandTemplate} from '../../../src/core/types/string';\nimport {getMode} from '../../../src/mode';\nimport {installLinkerReaderService} from './linker-reader';\nimport {isArray, isEnumValue} from '../../../src/core/types';\nimport {rethrowAsync} from '../../../src/core/error';\n\nimport {isIframed} from '../../../src/dom';\nimport {isInFie} from '../../../src/iframe-helper';\n\nconst TAG = 'amp-analytics';\n\nconst MAX_REPLACES = 16; // The maximum number of entries in a extraUrlParamsReplaceMap\n\nconst ALLOWLIST_EVENT_IN_SANDBOX = [\n  AnalyticsEventType.VISIBLE,\n  AnalyticsEventType.HIDDEN,\n  AnalyticsEventType.INI_LOAD,\n  AnalyticsEventType.RENDER_START,\n];\n\nexport class AmpAnalytics extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {!Promise} */\n    this.consentPromise_ = Promise.resolve();\n\n    /**\n     * The html id of the `amp-user-notification` element.\n     * @private {?string}\n     */\n    this.consentNotificationId_ = null;\n\n    /** @private {boolean} */\n    this.isSandbox_ = false;\n\n    /**\n     * @private {Object<string, RequestHandler>} A map of request handler with requests\n     */\n    this.requests_ = {};\n\n    /**\n     * @private {!JsonObject}\n     */\n    this.config_ = dict();\n\n    /** @private {?./instrumentation.InstrumentationService} */\n    this.instrumentation_ = null;\n\n    /** @private {?./analytics-group.AnalyticsGroup} */\n    this.analyticsGroup_ = null;\n\n    /** @private {?./variables.VariableService} */\n    this.variableService_ = null;\n\n    /** @private {!../../../src/service/crypto-impl.Crypto} */\n    this.cryptoService_ = Services.cryptoFor(this.win);\n\n    /** @private {?Promise} */\n    this.iniPromise_ = null;\n\n    /** @private {./transport.Transport} */\n    this.transport_ = null;\n\n    /** @private {boolean} */\n    this.isInabox_ = getMode(this.win).runtime == 'inabox';\n\n    /** @private {?./linker-manager.LinkerManager} */\n    this.linkerManager_ = null;\n\n    /** @private {?boolean} */\n    this.isInFie_ = null;\n  }\n\n  /** @override */\n  getLayoutPriority() {\n    // Load immediately if inabox, otherwise after other content.\n    return this.isInabox_ ? LayoutPriority.CONTENT : LayoutPriority.METADATA;\n  }\n\n  /** @override */\n  isAlwaysFixed() {\n    return !isInFie(this.element);\n  }\n\n  /** @override */\n  isLayoutSupported(unusedLayout) {\n    return true;\n  }\n\n  /** @override */\n  buildCallback() {\n    this.isSandbox_ = this.element.hasAttribute('sandbox');\n\n    this.element.setAttribute('aria-hidden', 'true');\n\n    this.consentNotificationId_ = this.element.getAttribute(\n      'data-consent-notification-id'\n    );\n\n    if (this.consentNotificationId_ != null) {\n      this.consentPromise_ = Services.userNotificationManagerForDoc(\n        this.element\n      ).then((service) =>\n        service.get(dev().assertString(this.consentNotificationId_))\n      );\n    }\n\n    if (this.element.getAttribute('trigger') == 'immediate') {\n      this.ensureInitialized_();\n    }\n  }\n\n  /** @override */\n  layoutCallback() {\n    // Now that we are rendered, stop rendering the element to reduce\n    // resource consumption.\n    return this.ensureInitialized_();\n  }\n\n  /** @override */\n  detachedCallback() {\n    if (this.analyticsGroup_) {\n      this.analyticsGroup_.dispose();\n      this.analyticsGroup_ = null;\n    }\n\n    if (this.linkerManager_) {\n      this.linkerManager_.dispose();\n      this.linkerManager_ = null;\n    }\n\n    for (const request in this.requests_) {\n      this.requests_[request].dispose();\n      delete this.requests_[request];\n    }\n  }\n\n  /** @override */\n  resumeCallback() {\n    if (this.iniPromise_) {\n      this.iniPromise_.then(() => {\n        this.transport_.maybeInitIframeTransport(this.element);\n      });\n    }\n  }\n\n  /** @override */\n  unlayoutCallback() {\n    if (this.getAmpDoc().isVisible()) {\n      // amp-analytics tag was just set to display:none. Page is still loaded.\n      return false;\n    }\n\n    if (this.iniPromise_) {\n      this.iniPromise_.then(() => {\n        // Page was unloaded - free up owned resources.\n        this.transport_.deleteIframeTransport();\n      });\n    }\n\n    return super.unlayoutCallback();\n  }\n\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  ensureInitialized_() {\n    if (this.iniPromise_) {\n      return this.iniPromise_;\n    }\n\n    const ampdoc = this.getAmpDoc();\n    this.iniPromise_ = ampdoc\n      .whenFirstVisible()\n      // Rudimentary \"idle\" signal.\n      .then(() => Services.timerFor(this.win).promise(1))\n      .then(() => this.consentPromise_)\n      .then(() =>\n        Promise.all([\n          instrumentationServicePromiseForDoc(ampdoc),\n          variableServicePromiseForDoc(ampdoc),\n        ])\n      )\n      .then((services) => {\n        this.instrumentation_ = services[0];\n        this.variableService_ = services[1];\n        const loadConfigDeferred = new Deferred();\n        const loadConfigTask = () => {\n          const configPromise = new AnalyticsConfig(this.element).loadConfig();\n          loadConfigDeferred.resolve(configPromise);\n        };\n        if (this.isInabox_) {\n          // Chunk in inabox ad leads to activeview regression, handle seperately\n          loadConfigTask();\n        } else {\n          chunk(this.element, loadConfigTask, ChunkPriority.HIGH);\n        }\n        return loadConfigDeferred.promise;\n      })\n      .then((config) => {\n        this.config_ = /** @type {!JsonObject} */ (config);\n        // CookieWriter not enabled on proxy origin, do not chunk\n        return new CookieWriter(this.win, this.element, this.config_).write();\n      })\n      .then(() => {\n        this.transport_ = new Transport(\n          this.getAmpDoc(),\n          this.config_['transport'] || {}\n        );\n      })\n      .then(this.registerTriggers_.bind(this))\n      .then(this.initializeLinker_.bind(this));\n    this.iniPromise_.then(() => {\n      this./*OK*/ collapse();\n    });\n    return this.iniPromise_;\n  }\n\n  /**\n   * @return {boolean} whether parent post messages are allowed.\n   *\n   * <p>Parent post messages are only allowed for ads.\n   *\n   * @private\n   */\n  allowParentPostMessage_() {\n    if (this.isInabox_) {\n      return true;\n    }\n    if (this.isInFie_ == null) {\n      this.isInFie_ = isInFie(this.element);\n    }\n    return this.isInFie_;\n  }\n\n  /**\n   * Registers triggers.\n   * @return {!Promise|undefined}\n   * @private\n   */\n  registerTriggers_() {\n    if (this.hasOptedOut_()) {\n      // Nothing to do when the user has opted out.\n      const TAG = this.getName_();\n      user().fine(TAG, 'User has opted out. No hits will be sent.');\n      return Promise.resolve();\n    }\n\n    this.generateRequests_();\n\n    if (!this.config_['triggers']) {\n      const TAG = this.getName_();\n      this.user().warn(\n        TAG,\n        'No triggers were found in the ' +\n          'config. No analytics data will be sent.'\n      );\n      return Promise.resolve();\n    }\n\n    this.processExtraUrlParams_(\n      this.config_['extraUrlParams'],\n      this.config_['extraUrlParamsReplaceMap']\n    );\n\n    this.analyticsGroup_ = this.instrumentation_.createAnalyticsGroup(\n      this.element\n    );\n\n    this.transport_.maybeInitIframeTransport(this.element);\n\n    const promises = [];\n    // Trigger callback can be synchronous. Do the registration at the end.\n    for (const k in this.config_['triggers']) {\n      if (hasOwn(this.config_['triggers'], k)) {\n        const trigger = this.config_['triggers'][k];\n        const expansionOptions = this.expansionOptions_(\n          dict({}),\n          trigger,\n          undefined /* opt_iterations */,\n          true /* opt_noEncode */\n        );\n        const TAG = this.getName_();\n        if (!trigger) {\n          this.user().error(TAG, 'Trigger should be an object: ', k);\n          continue;\n        }\n        const hasRequestOrPostMessage =\n          trigger['request'] ||\n          (trigger['parentPostMessage'] && this.allowParentPostMessage_());\n        if (!trigger['on'] || !hasRequestOrPostMessage) {\n          const errorMsgSeg = this.allowParentPostMessage_()\n            ? '/\"parentPostMessage\"'\n            : '';\n          this.user().error(\n            TAG,\n            '\"on\" and \"request\"' +\n              errorMsgSeg +\n              ' attributes are required for data to be collected.'\n          );\n          continue;\n        }\n        // Check for not supported trigger for sandboxed analytics\n        if (this.isSandbox_) {\n          const eventType = trigger['on'];\n          if (\n            isEnumValue(AnalyticsEventType, eventType) &&\n            !ALLOWLIST_EVENT_IN_SANDBOX.includes(eventType)\n          ) {\n            this.user().error(\n              TAG,\n              eventType + ' is not supported for amp-analytics in scope'\n            );\n            continue;\n          }\n        }\n\n        this.processExtraUrlParams_(\n          trigger['extraUrlParams'],\n          this.config_['extraUrlParamsReplaceMap']\n        );\n        promises.push(\n          this.isSampledIn_(trigger).then((result) => {\n            if (!result) {\n              return;\n            }\n            // replace selector and selectionMethod\n            if (this.isSandbox_) {\n              // Only support selection of parent element for analytics in scope\n              if (!this.element.parentElement) {\n                // In case parent element has been removed from DOM, do nothing\n                return;\n              }\n              trigger['selector'] = this.element.parentElement.tagName;\n              trigger['selectionMethod'] = 'closest';\n              return this.addTrigger_(trigger);\n            } else if (trigger['selector'] && !isArray(trigger['selector'])) {\n              // Expand the selector using variable expansion.\n              return this.variableService_\n                .expandTemplate(\n                  trigger['selector'],\n                  expansionOptions,\n                  this.element\n                )\n                .then((selector) => {\n                  trigger['selector'] = selector;\n                  return this.addTrigger_(trigger);\n                });\n            } else {\n              return this.addTrigger_(trigger);\n            }\n          })\n        );\n      }\n    }\n    return Promise.all(promises);\n  }\n\n  /**\n   * Asks the browser to preload a URL. Always also does a preconnect\n   * because browser support for that is better.\n   *\n   * @param {string} url\n   * @param {string=} opt_preloadAs\n   * @visibleForTesting\n   */\n  preload(url, opt_preloadAs) {\n    Services.preconnectFor(this.win).preload(\n      this.getAmpDoc(),\n      url,\n      opt_preloadAs\n    );\n  }\n\n  /**\n   * Calls `AnalyticsGroup.addTrigger` and reports any errors.\n   * @param {!JsonObject} config\n   * @private\n   * @return {!Promise}\n   */\n  addTrigger_(config) {\n    if (!this.analyticsGroup_) {\n      // No need to handle trigger for component that has already been detached\n      // from DOM\n      return Promise.resolve();\n    }\n    try {\n      return this.analyticsGroup_.addTrigger(\n        config,\n        this.handleEvent_.bind(this, config)\n      );\n    } catch (e) {\n      const TAG = this.getName_();\n      const eventType = config['on'];\n      rethrowAsync(TAG, 'Failed to process trigger \"' + eventType + '\"', e);\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Replace the names of keys in params object with the values in replace map.\n   *\n   * @param {!Object<string, string>} params The params that need to be renamed.\n   * @param {!Object<string, string>} replaceMap A map of pattern and replacement\n   *    value.\n   * @private\n   */\n  processExtraUrlParams_(params, replaceMap) {\n    if (params && replaceMap) {\n      // If the config includes a extraUrlParamsReplaceMap, apply it as a set\n      // of params to String.replace to allow aliasing of the keys in\n      // extraUrlParams.\n      let count = 0;\n      for (const replaceMapKey in replaceMap) {\n        if (++count > MAX_REPLACES) {\n          const TAG = this.getName_();\n          this.user().error(\n            TAG,\n            'More than ' +\n              MAX_REPLACES +\n              ' extraUrlParamsReplaceMap rules ' +\n              \"aren't allowed; Skipping the rest\"\n          );\n          break;\n        }\n\n        for (const extraUrlParamsKey in params) {\n          const newkey = extraUrlParamsKey.replace(\n            replaceMapKey,\n            replaceMap[replaceMapKey]\n          );\n          if (extraUrlParamsKey != newkey) {\n            const value = params[extraUrlParamsKey];\n            delete params[extraUrlParamsKey];\n            params[newkey] = value;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @return {boolean} true if the user has opted out.\n   */\n  hasOptedOut_() {\n    const elementId = this.config_['optoutElementId'];\n    if (elementId && this.win.document.getElementById(elementId)) {\n      return true;\n    }\n\n    if (!this.config_['optout']) {\n      return false;\n    }\n\n    const props = this.config_['optout'].split('.');\n    let k = this.win;\n    for (let i = 0; i < props.length; i++) {\n      if (!k) {\n        return false;\n      }\n      k = k[props[i]];\n    }\n    // The actual property being called is controlled by vendor configs only\n    // that are approved in code reviews. User customization of the `optout`\n    // property is not allowed.\n    return k();\n  }\n\n  /**\n   * Goes through all the requests in predefined vendor config and tag's config\n   * and creates a map of request name to request template. These requests can\n   * then be used while sending a request to a server.\n   *\n   * @private\n   */\n  generateRequests_() {\n    if (!this.config_['requests']) {\n      if (!this.allowParentPostMessage_()) {\n        const TAG = this.getName_();\n        this.user().warn(\n          TAG,\n          'No request strings defined. Analytics ' +\n            'data will not be sent from this page.'\n        );\n      }\n      return;\n    }\n\n    if (this.config_['requests']) {\n      for (const k in this.config_['requests']) {\n        if (hasOwn(this.config_['requests'], k)) {\n          const request = this.config_['requests'][k];\n          if (!request['baseUrl']) {\n            this.user().error(TAG, 'request must have a baseUrl');\n            delete this.config_['requests'][k];\n          }\n        }\n      }\n\n      // Expand any placeholders. For requests, we expand each string up to 5\n      // times to support nested requests. Leave any unresolved placeholders.\n      // Expand any requests placeholder.\n      for (const k in this.config_['requests']) {\n        this.config_['requests'][k]['baseUrl'] = expandTemplate(\n          this.config_['requests'][k]['baseUrl'],\n          (key) => {\n            const request = this.config_['requests'][key];\n            return (request && request['baseUrl']) || '${' + key + '}';\n          },\n          5\n        );\n      }\n\n      const requests = {};\n      for (const k in this.config_['requests']) {\n        if (hasOwn(this.config_['requests'], k)) {\n          const request = this.config_['requests'][k];\n          requests[k] = new RequestHandler(\n            this.element,\n            request,\n            Services.preconnectFor(this.win),\n            this.transport_,\n            this.isSandbox_\n          );\n        }\n      }\n      this.requests_ = requests;\n    }\n  }\n\n  /**\n   * Create the linker-manager that will append linker params as necessary.\n   * The initialization is asynchronous and non blocking\n   * @private\n   */\n  initializeLinker_() {\n    const type = this.element.getAttribute('type');\n    this.linkerManager_ = new LinkerManager(\n      this.getAmpDoc(),\n      this.config_,\n      type,\n      this.element\n    );\n    const linkerTask = () => {\n      this.linkerManager_.init();\n    };\n    if (this.isInabox_) {\n      // Chunk in inabox ad leads to activeview regression, handle seperately\n      linkerTask();\n    } else {\n      chunk(this.element, linkerTask, ChunkPriority.LOW);\n    }\n  }\n\n  /**\n   * Callback for events that are registered by the config's triggers. This\n   * method generates requests and sends them out.\n   *\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  handleEvent_(trigger, event) {\n    const requests = isArray(trigger['request'])\n      ? trigger['request']\n      : [trigger['request']];\n    for (let r = 0; r < requests.length; r++) {\n      const requestName = requests[r];\n      this.handleRequestForEvent_(requestName, trigger, event);\n    }\n  }\n\n  /**\n   * Processes a request for an event callback and sends it out.\n   *\n   * @param {string} requestName The requestName to process.\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  handleRequestForEvent_(requestName, trigger, event) {\n    if (!this.element.ownerDocument.defaultView) {\n      const TAG = this.getName_();\n      dev().warn(TAG, 'request against destroyed embed: ', trigger['on']);\n    }\n\n    const request = this.requests_[requestName];\n    const hasPostMessage =\n      this.allowParentPostMessage_() && trigger['parentPostMessage'];\n\n    if (requestName != undefined && !request) {\n      const TAG = this.getName_();\n      this.user().error(\n        TAG,\n        'Ignoring request for event. Request string not found: ',\n        trigger['request']\n      );\n      if (!hasPostMessage) {\n        return;\n      }\n    }\n    this.checkTriggerEnabled_(trigger, event).then((enabled) => {\n      const isConnected =\n        this.element.ownerDocument && this.element.ownerDocument.defaultView;\n      if (!enabled || !isConnected) {\n        return;\n      }\n      this.expandAndSendRequest_(request, trigger, event);\n\n      const shouldSendToAmpAd =\n        trigger['parentPostMessage'] &&\n        this.allowParentPostMessage_() &&\n        isIframed(this.win);\n      if (shouldSendToAmpAd) {\n        this.expandAndPostMessage_(trigger, event);\n      }\n    });\n  }\n\n  /**\n   * @param {RequestHandler} request The request to process.\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  expandAndSendRequest_(request, trigger, event) {\n    if (!request) {\n      return;\n    }\n    this.config_['vars']['requestCount']++;\n    const expansionOptions = this.expansionOptions_(event, trigger);\n    request.send(this.config_['extraUrlParams'], trigger, expansionOptions);\n  }\n\n  /**\n   * Expand and post message to parent window if applicable.\n   * @param {!JsonObject} trigger JSON config block that resulted in this event.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @private\n   */\n  expandAndPostMessage_(trigger, event) {\n    const msg = trigger['parentPostMessage'];\n    const expansionOptions = this.expansionOptions_(event, trigger);\n    expandPostMessage(\n      this.getAmpDoc(),\n      msg,\n      this.config_['extraUrlParams'],\n      trigger,\n      expansionOptions,\n      this.element\n    ).then((message) => {\n      this.win.parent./*OK*/ postMessage(message, '*');\n    });\n  }\n\n  /**\n   * @param {!JsonObject} trigger The config to use to determine sampling.\n   * @return {!Promise<boolean>} Whether the request should be sampled in or\n   * not based on sampleSpec.\n   * @private\n   */\n  isSampledIn_(trigger) {\n    /** @const {!JsonObject} */\n    const spec = trigger['sampleSpec'];\n    const TAG = this.getName_();\n    if (!spec) {\n      return Promise.resolve(true);\n    }\n    const sampleOn = spec['sampleOn'];\n    if (!sampleOn) {\n      this.user().error(TAG, 'Invalid sampleOn value.');\n      return Promise.resolve(true);\n    }\n    const threshold = parseFloat(spec['threshold']);\n    if (threshold >= 0 && threshold <= 100) {\n      const sampleDeferred = new Deferred();\n      const sampleInTask = () => {\n        const expansionOptions = this.expansionOptions_(dict({}), trigger);\n        const samplePromise = this.expandTemplateWithUrlParams_(\n          sampleOn,\n          expansionOptions\n        )\n          .then((key) => this.cryptoService_.uniform(key))\n          .then((digest) => digest * 100 < threshold);\n        sampleDeferred.resolve(samplePromise);\n      };\n      if (this.isInabox_) {\n        // Chunk in inabox ad leads to activeview regression, handle seperately\n        sampleInTask();\n      } else {\n        chunk(this.element, sampleInTask, ChunkPriority.LOW);\n      }\n      return sampleDeferred.promise;\n    }\n    user()./*OK*/ error(TAG, 'Invalid threshold for sampling.');\n    return Promise.resolve(true);\n  }\n\n  /**\n   * Checks if request for a trigger is enabled.\n   * @param {!JsonObject} trigger The config to use to determine if trigger is\n   * enabled.\n   * @param {!JsonObject|!./events.AnalyticsEvent} event Object with details about the event.\n   * @return {!Promise<boolean>} Whether trigger must be called.\n   * @private\n   */\n  checkTriggerEnabled_(trigger, event) {\n    const expansionOptions = this.expansionOptions_(event, trigger);\n    const enabledOnTagLevel = this.checkSpecEnabled_(\n      this.config_['enabled'],\n      expansionOptions\n    );\n    const enabledOnTriggerLevel = this.checkSpecEnabled_(\n      trigger['enabled'],\n      expansionOptions\n    );\n\n    return Promise.all([enabledOnTagLevel, enabledOnTriggerLevel]).then(\n      (enabled) => {\n        devAssert(enabled.length === 2);\n        return enabled[0] && enabled[1];\n      }\n    );\n  }\n\n  /**\n   * Checks result of 'enabled' spec evaluation. Returns false if spec is\n   * provided and value resolves to a falsey value (empty string, 0, false,\n   * null, NaN or undefined).\n   * @param {string|boolean} spec Expression that will be evaluated.\n   * @param {!ExpansionOptions} expansionOptions Expansion options.\n   * @return {!Promise<boolean>} False only if spec is provided and value is\n   * falsey.\n   * @private\n   */\n  checkSpecEnabled_(spec, expansionOptions) {\n    // Spec absence always resolves to true.\n    if (spec === undefined) {\n      return Promise.resolve(true);\n    }\n\n    if (typeof spec === 'boolean') {\n      return Promise.resolve(spec);\n    }\n\n    return this.expandTemplateWithUrlParams_(spec, expansionOptions).then(\n      (val) => stringToBool(val)\n    );\n  }\n\n  /**\n   * Expands spec using provided expansion options and applies url replacement\n   * if necessary.\n   * @param {string} spec Expression that needs to be expanded.\n   * @param {!ExpansionOptions} expansionOptions Expansion options.\n   * @return {!Promise<string>} expanded spec.\n   * @private\n   */\n  expandTemplateWithUrlParams_(spec, expansionOptions) {\n    return this.variableService_\n      .expandTemplate(spec, expansionOptions, this.element)\n      .then((key) =>\n        Services.urlReplacementsForDoc(this.element).expandUrlAsync(\n          key,\n          this.variableService_.getMacros(this.element)\n        )\n      );\n  }\n\n  /**\n   * @return {string} Returns a string to identify this tag. May not be unique\n   * if the element id is not unique.\n   * @private\n   */\n  getName_() {\n    return (\n      'AmpAnalytics ' + (this.element.getAttribute('id') || '<unknown id>')\n    );\n  }\n\n  /**\n   * @param {!JsonObject|!./events.AnalyticsEvent} source1\n   * @param {!JsonObject} source2\n   * @param {number=} opt_iterations\n   * @param {boolean=} opt_noEncode\n   * @return {!ExpansionOptions}\n   */\n  expansionOptions_(source1, source2, opt_iterations, opt_noEncode) {\n    const vars = dict();\n    mergeObjects(this.config_['vars'], vars);\n    mergeObjects(source2['vars'], vars);\n    mergeObjects(source1['vars'], vars);\n    return new ExpansionOptions(vars, opt_iterations, opt_noEncode);\n  }\n}\n\nAMP.extension(TAG, '0.1', (AMP) => {\n  // Register doc-service factory.\n  AMP.registerServiceForDoc(\n    'amp-analytics-instrumentation',\n    InstrumentationService\n  );\n  AMP.registerServiceForDoc('activity', Activity);\n  installLinkerReaderService(AMP.win);\n  AMP.registerServiceForDoc('amp-analytics-variables', VariableService);\n  // Register the element.\n  AMP.registerElement(TAG, AmpAnalytics);\n});\n"],
  "mappings": "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",
  "names": []
}
