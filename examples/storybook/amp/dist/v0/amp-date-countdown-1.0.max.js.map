{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../node_modules/preact/src/constants.js", "../../node_modules/preact/src/options.js", "../../node_modules/preact/src/create-element.js", "../../node_modules/preact/src/component.js", "../../node_modules/preact/src/create-context.js", "../../node_modules/preact/src/util.js", "../../node_modules/preact/src/diff/children.js", "../../node_modules/preact/src/diff/props.js", "../../node_modules/preact/src/diff/index.js", "../../node_modules/preact/src/render.js", "../../node_modules/preact/src/clone-element.js", "../../node_modules/preact/src/diff/catch-error.js", "../../node_modules/preact/hooks/src/index.js", "../../src/preact/index.js", "../../node_modules/preact/compat/src/util.js", "../../node_modules/preact/compat/src/PureComponent.js", "../../node_modules/preact/compat/src/memo.js", "../../node_modules/preact/compat/src/forwardRef.js", "../../node_modules/preact/compat/src/Children.js", "../../node_modules/preact/compat/src/suspense.js", "../../node_modules/preact/compat/src/suspense-list.js", "../../node_modules/preact/compat/src/portals.js", "../../node_modules/preact/compat/src/render.js", "../../node_modules/preact/compat/src/scheduler.js", "../../node_modules/preact/compat/src/index.js", "../../src/preact/compat.js", "../../src/preact/component/contain.js", "../../src/preact/component/wrapper.js", "../../src/preact/component/renderer.js", "../../src/core/types/object/index.js", "../../src/core/types/string/index.js", "../../src/core/types/date.js", "../../extensions/amp-date-countdown/1.0/messages.js", "../../src/core/loading-instructions.js", "../../src/preact/context.js", "../../src/preact/utils.js", "../../extensions/amp-date-countdown/1.0/component.js", "../../src/core/types/array.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/core/minified-mode.js", "../../src/core/assert/dev.js", "../../src/core/assert/user.js", "../../src/core/constants/action-constants.js", "../../src/core/constants/amp-events.js", "../../src/context/prop.type.js", "../../src/context/prop.js", "../../src/context/contextprops.js", "../../src/core/error/index.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/config.js", "../../src/log.js", "../../src/core/window/index.js", "../../src/service.js", "../../src/experiments/index.js", "../../src/style.js", "../../src/layout.js", "../../src/core/dom/media-query-props.js", "../../src/utils/size-observer.js", "../../src/utils/pause-helper.js", "../../src/core/constants/ready-state.js", "../../src/utils/resource-container-helper.js", "../../src/context/scan.js", "../../src/context/scheduler.js", "../../src/context/values.js", "../../src/context/node.js", "../../src/context/subscriber.js", "../../src/context/index.js", "../../src/preact/slot.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/css-selectors.js", "../../src/core/dom/query.js", "../../src/dom.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../third_party/webcomponentsjs/ShadowCSS.js", "../../src/shadow-embed.js", "../../src/core/math/id-generator.js", "../../src/preact/base-element.js", "../../src/core/dom/parse-date-attributes.js", "../../extensions/amp-date-countdown/1.0/base-element.js", "../../extensions/amp-date-countdown/1.0/amp-date-countdown.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError,\n\t_vnodeId: 0\n};\n\nexport default options;\n", "import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++options._vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children != null && // Can be null if childVNode suspended\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren =\n\t\t\texcessDomChildren && EMPTY_ARR.slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tdom.firstChild,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? EMPTY_ARR.slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n/**\n * Keep track of the previous component so that we can set\n * `currentComponent` to `null` and throw when a hook is invoked\n * outside of render\n * @type {import('./internal').Component}\n */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = previousComponent;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as hooks from /*OK*/ 'preact/hooks';\nimport * as preact from /*OK*/ 'preact';\n// The preactDOM name is explicit, so we can remap to react-dom.\nimport * as preactDOM from /*OK*/ 'preact/dom';\n\n// Defines the type interfaces for the approved Preact APIs.\n// TODO: isValidElement, Component\n\n/**\n * @param {!PreactDef.FunctionalComponent|string} unusedType\n * @param {?Object=} unusedProps\n * @param {...*} var_args\n * @return {!PreactDef.VNode}\n */\nexport function createElement(unusedType, unusedProps, var_args) {\n  return preact.createElement.apply(undefined, arguments);\n}\n\n/**\n * @param {!PreactDef.VNode} unusedElement\n * @param {?Object=} unusedProps\n * @param {...PreactDef.Renderable} unusedChildren\n * @return {!PreactDef.VNode}\n */\nexport function cloneElement(unusedElement, unusedProps, unusedChildren) {\n  return preact.cloneElement.apply(undefined, arguments);\n}\n\n/**\n * @param {?PreactDef.VNode} vnode\n * @param {Node} container\n * @param {?Node=} opt_replaceNode\n */\nexport function render(vnode, container, opt_replaceNode) {\n  preactDOM.render(vnode, container, opt_replaceNode);\n}\n\n/**\n * @param {!PreactDef.VNode} vnode\n * @param {Node} container\n */\nexport function hydrate(vnode, container) {\n  preactDOM.hydrate(vnode, container);\n}\n\n/**\n * @param {?Object=} props\n * @return {PreactDef.Renderable}\n */\nexport function Fragment(props) {\n  return preact.Fragment(props);\n}\n\n/**\n * @return {{current: ?T}}\n * @template T\n */\nexport function createRef() {\n  return preact.createRef();\n}\n\n/**\n * @param {T} value\n * @return {!PreactDef.Context<T>}\n * @template T\n */\nexport function createContext(value) {\n  // TODO(preactjs/preact#2736): Remove once Preact's API is fixed.\n  return preact.createContext(value, undefined);\n}\n\n// Defines the type interfaces for the approved Preact Hooks APIs.\n// TODO: useReducer, useDebugValue, useErrorBoundary\n\n/**\n * @param {S|function():S} initial\n * @return {{0: S, 1: function((S|function(S):S)):undefined}}\n * @template S\n */\nexport function useState(initial) {\n  return hooks.useState(initial);\n}\n\n/**\n * @param {?T} initial\n * @return {{current: ?T}}\n * @template T\n */\nexport function useRef(initial) {\n  return hooks.useRef(initial);\n}\n\n/**\n * @param {function():(function():undefined|undefined)} effect\n * @param {!Array<*>=} opt_deps\n */\nexport function useEffect(effect, opt_deps) {\n  hooks.useEffect(effect, opt_deps);\n}\n\n/**\n * @param {function():(function():undefined|undefined)} effect\n * @param {!Array<*>=} opt_deps\n */\nexport function useLayoutEffect(effect, opt_deps) {\n  hooks.useLayoutEffect(effect, opt_deps);\n}\n\n/**\n * @param {PreactDef.Context<T>} context\n * @return {T}\n * @template T\n */\nexport function useContext(context) {\n  return hooks.useContext(context);\n}\n\n/**\n * @param {function():T} cb\n * @param {!Array<*>=} opt_deps\n * @return {T}\n * @template T\n */\nexport function useMemo(cb, opt_deps) {\n  return hooks.useMemo(cb, opt_deps);\n}\n\n/**\n * @param {T} cb\n * @param {!Array<*>=} opt_deps\n * @return {T}\n * @template T\n */\nexport function useCallback(cb, opt_deps) {\n  return hooks.useCallback(cb, opt_deps);\n}\n\n/**\n * @param {{current: ?T}} ref\n * @param {function():T} create\n * @param {!Array<*>=} opt_deps\n * @return {undefined}\n * @template T\n */\nexport function useImperativeHandle(ref, create, opt_deps) {\n  return hooks.useImperativeHandle(ref, create, opt_deps);\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n", "import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\t// We always have ref in props.ref, except for\n\t// mobx-react. It will call this function directly\n\t// and always pass ref as the second argument.\n\tfunction Forwarded(props, ref) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\tref = props.ref || ref;\n\t\treturn fn(\n\t\t\tclone,\n\t\t\t!ref || (typeof ref === 'object' && !('current' in ref)) ? null : ref\n\t\t);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function(vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n", "import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function() {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props._vnode) {\n\t\tif (!_this._temp) {\n\t\t\t_this._container = container;\n\n\t\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t\t_this._temp = {\n\t\t\t\tnodeType: 1,\n\t\t\t\tparentNode: container,\n\t\t\t\tchildNodes: [],\n\t\t\t\tappendChild(child) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tinsertBefore(child, before) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tremoveChild(child) {\n\t\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t\t_this._container.removeChild(child);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Render our wrapping element into temp.\n\t\trender(\n\t\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t\t_this._temp\n\t\t);\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._temp) {\n\t\t_this.componentWillUnmount();\n\t}\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\treturn createElement(Portal, { _vnode: vnode, _container: container });\n}\n", "import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/i\n\t\t: /fil|che|ra/i\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\tlet normalizedProps = props;\n\n\t// only normalize props on Element nodes\n\tif (typeof type === 'string') {\n\t\tnormalizedProps = {};\n\n\t\tfor (let i in props) {\n\t\t\tlet value = props[i];\n\n\t\t\tif (i === 'value' && 'defaultValue' in props && value == null) {\n\t\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t\t// a default value\n\t\t\t\tcontinue;\n\t\t\t} else if (\n\t\t\t\ti === 'defaultValue' &&\n\t\t\t\t'value' in props &&\n\t\t\t\tprops.value == null\n\t\t\t) {\n\t\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\t\ti = 'value';\n\t\t\t} else if (i === 'download' && value === true) {\n\t\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t\t// value will be used as the file name and the file will be called\n\t\t\t\t// \"true\" upon downloading it.\n\t\t\t\tvalue = '';\n\t\t\t} else if (/ondoubleclick/i.test(i)) {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\t/^onchange(textarea|input)/i.test(i + type) &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\ti = 'oninput';\n\t\t\t} else if (/^on(Ani|Tra|Tou|BeforeInp)/.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t} else if (CAMEL_PROPS.test(i)) {\n\t\t\t\ti = i.replace(/[A-Z0-9]/, '-$&').toLowerCase();\n\t\t\t} else if (value === null) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\n\t\t\tnormalizedProps[i] = value;\n\t\t}\n\n\t\t// Add support for array select values: <select multiple value={[]} />\n\t\tif (\n\t\t\ttype == 'select' &&\n\t\t\tnormalizedProps.multiple &&\n\t\t\tArray.isArray(normalizedProps.value)\n\t\t) {\n\t\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t\t});\n\t\t}\n\n\t\t// Adding support for defaultValue in select tag\n\t\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tif (normalizedProps.multiple) {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t\t} else {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvnode.props = normalizedProps;\n\t}\n\n\tif (type && props.class != props.className) {\n\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\tif (props.className != null) normalizedProps.class = props.className;\n\t\tObject.defineProperty(normalizedProps, 'className', classNameDescriptor);\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function(vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n", "// This file includes experimental React APIs exported from the \"scheduler\"\n// npm package. Despite being explicitely marked as unstable some libraries\n// already make use of them. This file is not a full replacement for the\n// scheduler package, but includes the necessary shims to make those libraries\n// work with Preact.\n\nexport const unstable_ImmediatePriority = 1;\nexport const unstable_UserBlockingPriority = 2;\nexport const unstable_NormalPriority = 3;\nexport const unstable_LowPriority = 4;\nexport const unstable_IdlePriority = 5;\n\n/**\n * @param {number} priority\n * @param {() => void} callback\n */\nexport function unstable_runWithPriority(priority, callback) {\n\treturn callback();\n}\n\nexport const unstable_now =\n\ttypeof performance === 'object' && typeof performance.now === 'function'\n\t\t? performance.now.bind(performance)\n\t\t: () => Date.now();\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\nexport * from './scheduler';\n\nconst version = '16.8.0'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as compat from /*OK*/ 'preact/compat';\n\n/**\n * @param {function(T, {current: (R|null)}):PreactDef.Renderable} fn\n * @return {function(T):PreactDef.Renderable}\n * @template T, R\n */\nexport function forwardRef(fn) {\n  return compat.forwardRef(fn);\n}\n\n/**\n * @param {PreactDef.VNode} vnode\n * @param {HTMLElement} container\n * @return {PreactDef.VNode}\n */\nexport function createPortal(vnode, container) {\n  return compat.createPortal(vnode, container);\n}\n\n/**\n * @param {...PreactDef.Renderable} unusedChildren\n * @return {!Array<PreactDef.Renderable>}\n */\nexport function toChildArray(unusedChildren) {\n  return compat.Children.toArray.apply(undefined, arguments);\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from '../';\nimport {forwardRef} from '../compat';\n\nconst CONTAIN = [\n  null, // 0: none\n  'paint', // 1: paint\n  'layout', // 2: layout\n  'content', // 3: content = layout + paint\n  'size', // 4: size\n  'size paint', // 5: size + paint\n  'size layout', // 6: size + layout\n  'strict', // 7: strict = size + layout + paint\n];\n\nconst SIZE_CONTENT_STYLE = {\n  'position': 'relative',\n  'width': '100%',\n  'height': '100%',\n};\n\n/**\n * The wrapper component that implements different \"contain\" parameters. This\n * most often indicates that the element's size doesn't depend on its children\n * (e.g. `contain:size`), but there might be other variances as well.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/contain\n *\n * Contain parameters:\n * - size: the element's size does not depend on its content.\n * - layout: nothing outside the element may affect its internal layout and\n * vice versa.\n * - paint: the element's content doesn't display outside the element's bounds.\n * @param {!ContainWrapperComponentProps} props\n * @param {{current: ?Element}} ref\n * @return {PreactDef.Renderable}\n */\nfunction ContainWrapperWithRef(\n  {\n    as: Comp = 'div',\n    children,\n    'className': className,\n    contentAs: ContentComp = 'div',\n    contentClassName,\n    contentProps,\n    contentRef,\n    contentStyle,\n    layout = false,\n    paint = false,\n    size = false,\n    'style': style,\n    wrapperClassName,\n    wrapperStyle,\n    ...rest\n  },\n  ref\n) {\n  // The formula: `size << 2 | layout << 1 | paint`.\n  const containIndex = (size ? 4 : 0) + (layout ? 2 : 0) + (paint ? 1 : 0);\n  return (\n    <Comp\n      {...rest}\n      ref={ref}\n      className={`${className || ''} ${wrapperClassName || ''}`.trim() || null}\n      style={{\n        ...style,\n        ...wrapperStyle,\n        contain: CONTAIN[containIndex],\n      }}\n    >\n      <ContentComp\n        {...contentProps}\n        ref={contentRef}\n        className={contentClassName}\n        style={{\n          ...(size && SIZE_CONTENT_STYLE),\n          'overflow': paint ? 'hidden' : 'visible',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </ContentComp>\n    </Comp>\n  );\n}\n\nconst ContainWrapper = forwardRef(ContainWrapperWithRef);\n\nexport {ContainWrapper};\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from '../';\nimport {forwardRef} from '../compat';\n\n/**\n * The wrapper component provides the canonical wrapper for components whose\n * size depends on the children. This is often the opposite of the\n * `ContainWrapper`.\n * @param {!WrapperComponentProps} props\n * @param {{current: ?Element}} ref\n * @return {PreactDef.Renderable}\n */\nfunction WrapperWithRef(\n  {\n    as: Comp = 'div',\n    children,\n    'className': className,\n    'style': style,\n    wrapperClassName,\n    wrapperStyle,\n    ...rest\n  },\n  ref\n) {\n  return (\n    <Comp\n      {...rest}\n      ref={ref}\n      className={`${className || ''} ${wrapperClassName || ''}`.trim() || null}\n      style={{...style, ...wrapperStyle}}\n    >\n      {children}\n    </Comp>\n  );\n}\n\nconst Wrapper = forwardRef(WrapperWithRef);\n\nexport {Wrapper};\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {useLayoutEffect, useState} from '../';\n\n/**\n * Runs the renderer. It's critical that the `data` argument is stable - it\n * only changes when the actual data changes.\u00A0The renderer itself is resolved\n * in a layout effect and allows the result to be a promise.\n *\n * @param {?RendererFunctionType|undefined} renderer\n * @param {!JsonObject} data\n * @return {?RendererFunctionResponseType}\n */\nexport function useRenderer(renderer, data) {\n  const [value, setValue] = useState(\n    /** @type {?RendererFunctionResponseType} */ (null)\n  );\n\n  useLayoutEffect(() => {\n    const rendered = (renderer && renderer(data)) || null;\n    if (rendered && typeof rendered['then'] == 'function') {\n      let canceled = false;\n      rendered.then((result) => {\n        if (!canceled) {\n          setValue(result);\n        }\n      });\n      return () => {\n        canceled = true;\n      };\n    } else {\n      setValue(/** @type {?RendererFunctionResponseType} */ (rendered));\n    }\n  }, [renderer, data]);\n\n  return value;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isString} from './string';\n\n/** @fileoverview helpers for dealing with dates and times. */\n\n/**\n * Absolute time in milliseconds.\n * @typedef {number}\n */\nexport let TimestampDef;\n\n/**\n * Parses the date using the `Date.parse()` rules. Additionally supports the\n * keyword \"now\" that indicates the \"current date/time\". Returns either a\n * valid epoch value or null.\n *\n * @param {?string|undefined} s\n * @return {?TimestampDef}\n */\nexport function parseDate(s) {\n  if (!s) {\n    return null;\n  }\n  if (s.toLowerCase() === 'now') {\n    return Date.now();\n  }\n  const parsed = Date.parse(s);\n  return isNaN(parsed) ? null : parsed;\n}\n\n/**\n * Converts various date formats into a timestamp in ms.\n * @param {!Date|number|string} value\n * @return {?TimestampDef}\n */\nexport function getDate(value) {\n  if (!value) {\n    return null;\n  }\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isString(value)) {\n    return parseDate(/** @type {string} */ (value));\n  }\n  value = /** @type {!Date} */ (value);\n  return value.getTime();\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Get locale strings or undefined.\n * @param {string} locale\n * @return {!Array<string>|undefined}\n */\nexport function getLocaleStrings(locale) {\n  return LOCALE_WORD[locale];\n}\n\n/**\n * Strings representing years, minutes, etc. in various locales\n * @type {Object<string, !Array<string>>}\n */\nconst LOCALE_WORD = {\n  'de': ['Jahren', 'Monaten', 'Tagen', 'Stunden', 'Minuten', 'Sekunden'],\n  'en': ['Years', 'Months', 'Days', 'Hours', 'Minutes', 'Seconds'],\n  'es': ['a\u00F1os', 'meses', 'd\u00EDas', 'horas', 'minutos', 'segundos'],\n  'fr': ['ans', 'mois', 'jours', 'heures', 'minutes', 'secondes'],\n  'id': ['tahun', 'bulan', 'hari', 'jam', 'menit', 'detik'],\n  'it': ['anni', 'mesi', 'giorni', 'ore', 'minuti', 'secondi'],\n  'ja': ['\u5E74', '\u30F6\u6708', '\u65E5', '\u6642\u9593', '\u5206', '\u79D2'],\n  'ko': ['\uB144', '\uB2EC', '\uC77C', '\uC2DC\uAC04', '\uBD84', '\uCD08'],\n  'nl': ['jaar', 'maanden', 'dagen', 'uur', 'minuten', 'seconden'],\n  'pt': ['anos', 'meses', 'dias', 'horas', 'minutos', 'segundos'],\n  'ru': ['\u0433\u043E\u0434', '\u043C\u0435\u0441\u044F\u0446', '\u0434\u0435\u043D\u044C', '\u0447\u0430\u0441', '\u043C\u0438\u043D\u0443\u0442\u0430', '\u0441\u0435\u043A\u0443\u043D\u0434\u0430'],\n  'th': ['\u0E1B\u0E35', '\u0E40\u0E14\u0E37\u0E2D\u0E19', '\u0E27\u0E31\u0E19', '\u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07', '\u0E19\u0E32\u0E17\u0E35', '\u0E27\u0E34\u0E19\u0E32\u0E17\u0E35'],\n  'tr': ['y\u0131l', 'ay', 'g\u00FCn', 'saat', 'dakika', 'saniye'],\n  'vi': ['n\u0103m', 'th\u00E1ng', 'ng\u00E0y', 'gi\u1EDD', 'ph\u00FAt', 'gi\u00E2y'],\n  'zh-cn': ['\u5E74', '\u6708', '\u5929', '\u5C0F\u65F6', '\u5206\u949F', '\u79D2'],\n  'zh-tw': ['\u5E74', '\u6708', '\u5929', '\u5C0F\u6642', '\u5206\u9418', '\u79D2'],\n};\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An expanded set of loading instructions based on\n * https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading.\n *\n * Only `UNLOAD` is not defined by the \"Lazy loading\" spec at this time. It's\n * added here because it supersedes all other loading instructions in AMP.\n *\n * @enum {string}\n */\nexport const Loading = {\n  /**\n   * If parent is available, fallback to its loading strategy (e.g. based on\n   * whether the document is visible or not).\n   * If parent is not available, proceed with loading at your own discretion.\n   */\n  AUTO: 'auto',\n\n  /**\n   * Do not load independently. Wait for the caller to start loading manually.\n   */\n  LAZY: 'lazy',\n\n  /**\n   * Proceed with loading at the earliest convenience.\n   */\n  EAGER: 'eager',\n\n  /**\n   * Force unload if possible.\n   */\n  UNLOAD: 'unload',\n};\n\n/** @const {!Array<!Loading>} */\nconst ORDER = [Loading.AUTO, Loading.LAZY, Loading.EAGER, Loading.UNLOAD];\n\n/** @const {!Object<string, number>} */\nconst MAP = {\n  [Loading.AUTO]: 0,\n  [Loading.LAZY]: 1,\n  [Loading.EAGER]: 2,\n  [Loading.UNLOAD]: 3,\n};\n\n/**\n * Returns the loading instruction with a higher priority. The priority\n * order is auto -> lazy -> eager -> unload.\n *\n * @param {!Loading|string} v1\n * @param {!Loading|string} v2\n * @return {!Loading}\n */\nexport function reducer(v1, v2) {\n  const ordinal1 = MAP[v1] || 0;\n  const ordinal2 = MAP[v2] || 0;\n  const ordinal = Math.max(ordinal1, ordinal2);\n  return ORDER[ordinal];\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from './index';\nimport {Loading, reducer as loadingReducer} from '../core/loading-instructions';\nimport {createContext, useContext, useMemo} from './index';\n\n/** @type {PreactDef.Context} */\nlet context;\n\n/**\n * The external context given to React components to control whether they can\n * render/play/etc.\n *\n * - renderable: whether this vDOM area is renderable. Analogous to\n *   `display-locking` CSS.\n * - playable: whether the playback is allowed in this vDOM area. If playback\n *   is not allow, the component must immediately stop the playback.\n *\n * @return {!PreactDef.Context<AmpContextDef.ContextType>}\n */\nfunction getAmpContext() {\n  return (\n    context ||\n    (context = createContext({\n      renderable: true,\n      playable: true,\n      loading: Loading.AUTO,\n    }))\n  );\n}\n\n/**\n * A wrapper-component that recalculates and propagates AmpContext properties.\n *\n * @param {!AmpContextDef.ProviderProps} props\n * @return {!PreactDef.VNode}\n */\nexport function WithAmpContext({\n  children,\n  loading: loadingProp = 'auto',\n  notify: notifyProp,\n  playable: playableProp = true,\n  renderable: renderableProp = true,\n}) {\n  const parent = useAmpContext();\n  const renderable = renderableProp && parent.renderable;\n  const playable = renderable && playableProp && parent.playable;\n  const loading = loadingReducer(\n    renderable ? Loading.AUTO : Loading.LAZY,\n    loadingReducer(loadingProp, parent.loading)\n  );\n  const notify = notifyProp || parent.notify;\n  const current = useMemo(\n    () =>\n      /** @type {!AmpContextDef.ContextType} */ ({\n        renderable,\n        playable,\n        loading,\n        notify,\n      }),\n    [renderable, playable, loading, notify]\n  );\n  const AmpContext = getAmpContext();\n  return <AmpContext.Provider children={children} value={current} />;\n}\n\n/**\n * @return {!AmpContextDef.ContextType}\n */\nexport function useAmpContext() {\n  const AmpContext = getAmpContext();\n  return useContext(AmpContext);\n}\n\n/**\n * Whether the calling component should currently be in the loaded state.\n *\n * @param {!Loading|string} loadingProp\n * @return {boolean}\n */\nexport function useLoading(loadingProp) {\n  const {loading: loadingContext} = useAmpContext();\n  return loadingReducer(loadingProp, loadingContext);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {useAmpContext} from './context';\nimport {useLayoutEffect} from './index';\n\n/**\n * Notifies Resources (if present) of a rerender in the component.\n * Every functional component **must** use this helper.\n */\nexport function useResourcesNotify() {\n  const {notify} = useAmpContext();\n  useLayoutEffect(() => {\n    if (notify) {\n      notify();\n    }\n  });\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from '../../../src/preact';\nimport {Wrapper, useRenderer} from '../../../src/preact/component';\nimport {dict} from '../../../src/core/types/object';\nimport {getDate} from '../../../src/core/types/date';\nimport {getLocaleStrings} from './messages';\nimport {useAmpContext} from '../../../src/preact/context';\nimport {useEffect, useMemo, useRef, useState} from '../../../src/preact';\nimport {useResourcesNotify} from '../../../src/preact/utils';\n\nconst NAME = 'DateCountdown';\n\n// Constants\n/** @const {number} */\nconst MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n\n/** @const {number} */\nconst MILLISECONDS_IN_HOUR = 60 * 60 * 1000;\n\n/** @const {number} */\nconst MILLISECONDS_IN_MINUTE = 60 * 1000;\n\n/** @const {number} */\nconst MILLISECONDS_IN_SECOND = 1000;\n\n/** @const {number} */\nconst DELAY = 1000;\n\n/** @const {Object<string, number>} */\nconst TimeUnit = {\n  DAYS: 1,\n  HOURS: 2,\n  MINUTES: 3,\n  SECONDS: 4,\n};\n\n// Default prop values\nconst DEFAULT_LOCALE = 'en';\nconst DEFAULT_WHEN_ENDED = 'stop';\nconst DEFAULT_BIGGEST_UNIT = 'DAYS';\nconst DEFAULT_COUNT_UP = false;\n\n/**\n * @param {!JsonObject} data\n * @return {string}\n */\nconst DEFAULT_RENDER = (data) =>\n  /** @type {string} */ (\n    `${data['days']} ${data['dd']}, ` +\n      `${data['hours']} ${data['hh']}, ` +\n      `${data['minutes']} ${data['mm']}, ` +\n      `${data['seconds']} ${data['ss']}`\n  );\n\n/**\n * @param {!DateCountdownPropsDef} props\n * @return {PreactDef.Renderable}\n */\nexport function DateCountdown({\n  datetime,\n  whenEnded = DEFAULT_WHEN_ENDED,\n  locale = DEFAULT_LOCALE,\n  biggestUnit = DEFAULT_BIGGEST_UNIT,\n  countUp = DEFAULT_COUNT_UP,\n  render = DEFAULT_RENDER,\n  ...rest\n}) {\n  useResourcesNotify();\n  const {playable} = useAmpContext();\n\n  // Compute these values once\n  const epoch = useMemo(() => getDate(datetime), [datetime]);\n  const localeStrings = useMemo(\n    () => getLocaleWord(/** @type {string} */ (locale)),\n    [locale]\n  );\n\n  // timeleft is updated on each interval callback\n  const [timeleft, setTimeleft] = useState(epoch - Date.now() + DELAY);\n\n  // Only update data when timeleft (or other dependencies) are updated\n  // Does not update on 2nd render triggered by useRenderer\n  const data = useMemo(\n    () => getDataForTemplate(timeleft, biggestUnit, localeStrings, countUp),\n    [timeleft, biggestUnit, localeStrings, countUp]\n  );\n\n  // Reference to DOM element to get access to correct window\n  const rootRef = useRef(null);\n\n  useEffect(() => {\n    if (!playable || !rootRef.current) {\n      return;\n    }\n    const win = rootRef.current.ownerDocument.defaultView;\n    const interval = win.setInterval(() => {\n      const newTimeleft = epoch - Date.now() + DELAY;\n      setTimeleft(newTimeleft);\n      if (whenEnded === DEFAULT_WHEN_ENDED && newTimeleft < 1000) {\n        win.clearInterval(interval);\n      }\n    }, DELAY);\n    return () => win.clearInterval(interval);\n  }, [playable, epoch, whenEnded]);\n\n  const rendered = useRenderer(render, data);\n  const isHtml =\n    rendered && typeof rendered == 'object' && '__html' in rendered;\n\n  return (\n    <Wrapper\n      {...rest}\n      ref={rootRef}\n      dangerouslySetInnerHTML={isHtml ? rendered : null}\n    >\n      {isHtml ? null : rendered}\n    </Wrapper>\n  );\n}\n\n/**\n * @param {number} timeleft\n * @param {string|undefined} biggestUnit\n * @param {!JsonObject} localeStrings\n * @param {boolean} countUp\n * @return {!JsonObject}\n */\nfunction getDataForTemplate(timeleft, biggestUnit, localeStrings, countUp) {\n  return /** @type {!JsonObject} */ ({\n    ...getYDHMSFromMs(timeleft, /** @type {string} */ (biggestUnit), countUp),\n    ...localeStrings,\n  });\n}\n\n/**\n * Return an object with a label for 'years', 'months', etc. based on the\n * user provided locale string.\n * @param {string} locale\n * @return {!JsonObject}\n */\nfunction getLocaleWord(locale) {\n  if (getLocaleStrings(locale) === undefined) {\n    displayWarning(\n      `Invalid locale ${locale}, defaulting to ${DEFAULT_LOCALE}. ${NAME}`\n    );\n    locale = DEFAULT_LOCALE;\n  }\n  const localeWordList = getLocaleStrings(locale);\n  return dict({\n    'years': localeWordList[0],\n    'months': localeWordList[1],\n    'days': localeWordList[2],\n    'hours': localeWordList[3],\n    'minutes': localeWordList[4],\n    'seconds': localeWordList[5],\n  });\n}\n\n/**\n * Converts a time represented in milliseconds (ms) into a representation with\n * days, hours, minutes, etc. and returns formatted strings in an object.\n * @param {number} ms\n * @param {string} biggestUnit\n * @param {boolean} countUp\n * @return {JsonObject}\n */\nfunction getYDHMSFromMs(ms, biggestUnit, countUp) {\n  // If 'count-up' prop is true, we return the negative of what\n  // we would originally return since we are counting time-elapsed from a\n  // set time instead of time until that time\n  if (countUp) {\n    ms *= -1;\n  }\n\n  //Math.trunc is used instead of Math.floor to support negative past date\n  const d =\n    TimeUnit[biggestUnit] == TimeUnit.DAYS\n      ? supportBackDate(Math.floor(ms / MILLISECONDS_IN_DAY))\n      : 0;\n  const h =\n    TimeUnit[biggestUnit] == TimeUnit.HOURS\n      ? supportBackDate(Math.floor(ms / MILLISECONDS_IN_HOUR))\n      : TimeUnit[biggestUnit] < TimeUnit.HOURS\n      ? supportBackDate(\n          Math.floor((ms % MILLISECONDS_IN_DAY) / MILLISECONDS_IN_HOUR)\n        )\n      : 0;\n  const m =\n    TimeUnit[biggestUnit] == TimeUnit.MINUTES\n      ? supportBackDate(Math.floor(ms / MILLISECONDS_IN_MINUTE))\n      : TimeUnit[biggestUnit] < TimeUnit.MINUTES\n      ? supportBackDate(\n          Math.floor((ms % MILLISECONDS_IN_HOUR) / MILLISECONDS_IN_MINUTE)\n        )\n      : 0;\n  const s =\n    TimeUnit[biggestUnit] == TimeUnit.SECONDS\n      ? supportBackDate(Math.floor(ms / MILLISECONDS_IN_SECOND))\n      : supportBackDate(\n          Math.floor((ms % MILLISECONDS_IN_MINUTE) / MILLISECONDS_IN_SECOND)\n        );\n\n  return dict({\n    'd': d,\n    'dd': padStart(d),\n    'h': h,\n    'hh': padStart(h),\n    'm': m,\n    'mm': padStart(m),\n    's': s,\n    'ss': padStart(s),\n  });\n}\n\n/**\n * Format a number for output to the template.  Adds a leading zero if the\n * input is only one digit and a negative sign for inputs less than 0.\n * @param {number} input\n * @return {string}\n */\nfunction padStart(input) {\n  if (input < -9 || input > 9) {\n    return String(input);\n  } else if (input >= -9 && input < 0) {\n    return '-0' + -input;\n  }\n  return '0' + input;\n}\n\n/**\n * @param {number} input\n * @return {number}\n */\nfunction supportBackDate(input) {\n  if (input < 0) {\n    return input + 1;\n  }\n  return input;\n}\n\n/**\n * @param {?string} message\n */\nfunction displayWarning(message) {\n  console /*OK*/\n    .warn(message);\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Magic constant that is replaced by babel.\n// IS_MINIFIED is always replaced with true when closure compiler is used\nconst IS_MINIFIED = false;\n\n/**\n * Returns true whenever closure compiler is used.\n * @return {boolean}\n */\nexport function isMinifiedMode() {\n  return IS_MINIFIED;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {isMinifiedMode} from '../minified-mode';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (isMinifiedMode()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {USER_ERROR_SENTINEL} from '../error/message-helpers';\n\n/**\n * @fileoverview This file provides the entrypoint for user assertions. It's\n * designed so all functions are pure function calls to improve inlining.\n */\n\n/**\n * Throws a user error if the first argument isn't trueish. Mirrors userAssert\n * in src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {UserError} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return assertions.assert(\n    USER_ERROR_SENTINEL,\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertElement(shouldBeElement, opt_message) {\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertString(shouldBeString, opt_message) {\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertNumber(shouldBeNumber, opt_message) {\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertArray(shouldBeArray, opt_message) {\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertBoolean(shouldBeBoolean, opt_message) {\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nexport const RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n\n/**\n * Identifier for an element's default action.\n *\n * @const {string}\n */\nexport const DEFAULT_ACTION = 'activate';\n\n/**\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\nexport const ActionTrust = {\n  /**\n   * Events that are triggered without a user gesture, or triggered by a user\n   * gesture with weak intent (e.g. scroll) are \"low trust\".\n   *\n   * Actions that have low impact on the page's visual state should require\n   * \"low trust\" (e.g. pausing a video).\n   */\n  LOW: 1,\n  /**\n   * Events that are triggered nearly immediately (up to a few seconds) after\n   * a user gesture with strong intent (e.g. tap or swipe) are \"default trust\".\n   *\n   * Actions that can modify the page's visual state (e.g. content jumping)\n   * should require \"default trust\". This is the default required trust level\n   * for actions.\n   */\n  DEFAULT: 2,\n  /**\n   * Events that are triggered immediately after a user gesture with\n   * strong intent (e.g. tap or swipe) are \"high trust\".\n   *\n   * There are no actions yet that require high trust.\n   */\n  HIGH: 3,\n};\n\n/**\n * @param {!ActionTrust} actionTrust\n * @return {string}\n */\nexport function actionTrustToString(actionTrust) {\n  switch (actionTrust) {\n    case ActionTrust.LOW:\n      return 'low';\n    case ActionTrust.HIGH:\n      return 'high';\n    default:\n      devAssert(actionTrust === ActionTrust.DEFAULT);\n      return 'default';\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/main/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load-start',\n  LOAD_END: 'amp:load-end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n  UNLOAD: 'amp:unload',\n};\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A context property.\n *\n * @interface\n * @template T\n * @template DEP\n */\nexport function ContextPropDef() {}\n\n/**\n * A globally unique key. Extensions must use a fully qualified name such\n * as \"amp-extension:key\" or \"amp-extension:version:key\".\n *\n * @type {string}\n */\nContextPropDef.prototype.key;\n\n/**\n * An optional type object that can be used for a using system. E.g.\n * this could be a Preact's Context object.\n *\n * @type {?Object}\n */\nContextPropDef.prototype.type;\n\n/**\n * An array of dependencies that are required for the `compute` callback.\n *\n * @type {!Array<!ContextPropDef<DEP>>}\n */\nContextPropDef.prototype.deps;\n\n/**\n * Whether the value needs a recursive resolution of the parent value. The\n * following values are allowed:\n * - `false`: the parent value is never needed. It's a non-recursive\n * property, such as `Loaded`.\n * - `true`: the parent value is always needed. It's a recursive property.\n * It could be a simple \"find first\" recursive property. Or it could be a\n * computable property, such as `score` where all values of the score are\n * compounded.\n * - a function: the parent value may or may not be needed. This function\n * will be called with all of the property inputs. It should return `true`\n * if the parent value is needed for the provided inputs. For instance,\n * a recursive property based on AND (e.g. `renderable`), can immediately\n * determine that the resulting value will be `false` because some inputs\n * are `false` and thus a more resource-sensitive parent resolution is not\n * necessary.\n *\n * @type {boolean|function(!Array<T>):boolean}\n */\nContextPropDef.prototype.recursive;\n\n/**\n * Computes the property value. This callback is passed the following\n * arguments:\n * 1. The DOM Node.\n * 2. An array of all inputs set on this DOM node for this property.\n * 3. If it's a recursive property, the parent value.\n * 4. If `deps` are specified - the dep values.\n *\n * @type {function(!Node, !Array<T>, ...DEP):(T|undefined)}\n */\nContextPropDef.prototype.compute;\n\n/**\n * The default value of a recursive property.\n *\n * @type {T|undefined}\n */\nContextPropDef.prototype.defaultValue;\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../core/assert';\n\n// typedef imports\nimport {ContextPropDef} from './prop.type';\n\nconst EMPTY_DEPS = [];\n\n/**\n * Creates the `ContextPropDef` type.\n *\n * @param {string} key\n * @param {{\n *   type: (!Object|undefined),\n *   deps: (!Array<!ContextPropDef<DEP>>|undefined),\n *   recursive: (boolean|(function(!Array<T>):boolean)|undefined),\n *   compute: (function(!Node, !Array<T>, ...DEP):(T|undefined)),\n *   defaultValue: (T|undefined),\n * }=} opt_spec\n * @return {!ContextPropDef<T, DEP>}\n * @template T\n * @template DEP\n */\nexport function contextProp(key, opt_spec) {\n  const prop = /** @type {!ContextPropDef<T, DEP>} */ ({\n    key,\n    // Default values.\n    type: null,\n    deps: EMPTY_DEPS,\n    recursive: false,\n    compute: null,\n    defaultValue: undefined,\n    // Overrides.\n    ...opt_spec,\n  });\n  devAssert(prop.deps.length == 0 || prop.compute);\n  return prop;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Loading, reducer as loadingReducer} from '../core/loading-instructions';\nimport {contextProp} from './prop';\n\n// typedef imports\nimport {ContextPropDef} from './prop.type';\n\n/**\n * Defines whether a DOM subtree can be currently seen by the user. A subtree\n * can be not renderable due `display: none`, or `hidden` attribute, unslotted\n * in shadow DOM, or because a parent component knows for certain that this\n * subtree cannot be seen by the user without some active interaction.\n *\n * Default is `true`.\n *\n * @const {!ContextPropDef<boolean>}\n */\nconst CanRender = contextProp('CanRender', {\n  defaultValue: true,\n  recursive: (inputs) => inputs.reduce(andReducer),\n  compute: (contextNode, inputs, parentValue) =>\n    (parentValue && inputs.reduce(andReducer, true)) || false,\n});\n\n/**\n * Defines whether a DOM subtree can be currently played or animated. If a\n * a subtree not renderable (`canRender == false`), it also cannot be played.\n * But even if a subtree is renderable, a parent component may decide that\n * playback should not be possible.\n *\n * Default is `true`.\n *\n * @const {!ContextPropDef<boolean, boolean>}\n */\nconst CanPlay = contextProp('CanPlay', {\n  defaultValue: true,\n  recursive: (inputs) => inputs.reduce(andReducer),\n  deps: [CanRender],\n  compute: (contextNode, inputs, parentValue, canRender) =>\n    (canRender && parentValue && inputs.reduce(andReducer, true)) || false,\n});\n\n/**\n * The default `Loading` instruction for a subtree. See `Loading` for the set\n * of possible values. Non-renderable subtrees automatically get a value of\n * \"lazy\".\n *\n * Default is \"auto\".\n *\n * @const {!ContextPropDef<!Loading, boolean>}\n */\nconst LoadingProp = contextProp('Loading', {\n  defaultValue: Loading.AUTO,\n  recursive: true,\n  deps: [CanRender],\n  compute: (contextNode, inputs, parentValue, canRender) =>\n    loadingReducer(\n      canRender ? Loading.AUTO : Loading.LAZY,\n      loadingReducer(\n        parentValue || Loading.AUTO,\n        inputs.reduce(loadingReducer, Loading.AUTO)\n      )\n    ),\n});\n\n/**\n * @param {T} acc\n * @param {T} value\n * @return {T}\n * @template T\n */\nconst andReducer = (acc, value) => acc && value;\n\nexport {CanRender, CanPlay, LoadingProp};\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty?.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (const arg of arguments) {\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n    // It may not exist for Bento components without the runtime.\n    self.__AMP_REPORT_ERROR?.(error);\n    throw error;\n  });\n}\n\n/**\n * Executes the provided callback in a try/catch and rethrows any errors\n * asynchronously.\n *\n * @param {function(...*):T} callback\n * @param {...*} args\n * @return {T}\n * @template T\n */\nexport function tryCallback(callback, ...args) {\n  try {\n    return callback.apply(null, args);\n  } catch (e) {\n    rethrowAsync(e);\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from '../log';\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service';\nimport {hasOwn, map} from '../core/types/object';\nimport {isArray} from '../core/types';\nimport {parseQueryString} from '../core/types/string/url';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isExperimentOn} from './experiments';\nimport {isFiniteNumber} from './core/types';\nimport {setStyle, setStyles, toggle} from './style';\nimport {toWin} from './core/window';\nimport {transparentPng} from './core/dom/img';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-RENDER': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe =\n  /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n * @type {?boolean}\n */\nlet aspectRatioCssCache = null;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && tagName.toLowerCase().startsWith('i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  const m = userAssert(\n    /[a-z]+/i.exec(length),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element allowlisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified element. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ allowlist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @param {boolean} fixIeIntrinsic\n * @return {!Layout}\n */\nexport function applyStaticLayout(element, fixIeIntrinsic = false) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (\n      devAssert(parseLayout(completedLayoutAttr))\n    );\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n      if (element.sizerElement) {\n        element.sizerElement.setAttribute('slot', 'i-amphtml-svc');\n      }\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(\n    inputLayout !== undefined,\n    'Invalid \"layout\" value: %s, %s',\n    layoutAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(\n    inputWidth !== undefined,\n    'Invalid \"width\" value: %s, %s',\n    widthAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(\n    inputHeight !== undefined,\n    'Invalid \"height\" value: %s, %s',\n    heightAttr,\n    element\n  );\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'The \"height\" attribute is missing: %s', element);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'The \"width\" attribute must be missing or \"auto\": %s',\n      element\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'The \"width\" attribute must be present and not \"auto\": %s',\n      element\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for \"width\" and \"height\": %s, %s, %s',\n      widthAttr,\n      heightAttr,\n      element\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      '\"heights\" attribute must be missing: %s',\n      element\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    if (shouldUseAspectRatioCss(toWin(element.ownerDocument.defaultView))) {\n      setStyle(\n        element,\n        'aspect-ratio',\n        `${getLengthNumeral(width)}/${getLengthNumeral(height)}`\n      );\n    } else {\n      const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n      sizer.setAttribute('slot', 'i-amphtml-svc');\n      setStyles(sizer, {\n        paddingTop:\n          (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n      });\n      element.insertBefore(sizer, element.firstChild);\n      element.sizerElement = sizer;\n    }\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\" slot=\"i-amphtml-svc\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      !IS_ESM && fixIeIntrinsic && element.ownerDocument\n        ? transparentPng(\n            element.ownerDocument,\n            dev().assertNumber(getLengthNumeral(width)),\n            dev().assertNumber(getLengthNumeral(height))\n          )\n        : `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n *\n * @param {!Window} win\n * @return {boolean}\n */\nfunction shouldUseAspectRatioCss(win) {\n  if (aspectRatioCssCache == null) {\n    aspectRatioCssCache =\n      (isExperimentOn(win, 'layout-aspect-ratio-css') &&\n        win.CSS &&\n        win.CSS.supports &&\n        win.CSS.supports('aspect-ratio: 1/1')) ||\n      false;\n  }\n  return aspectRatioCssCache;\n}\n\n/** @visibleForTesting */\nexport function resetShouldUseAspectRatioCssForTesting() {\n  aspectRatioCssCache = null;\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {!Array<{query: ?MediaQueryList, value: string}>} */\nlet ExprDef;\n\nconst TRUE_VALUE = '1';\n\nexport class MediaQueryProps {\n  /**\n   * @param {!Window} win\n   * @param {function()} callback\n   */\n  constructor(win, callback) {\n    /** @private @const */\n    this.win_ = win;\n\n    /** @private @const */\n    this.callback_ = callback;\n\n    /** @private {!Object<string, !ExprDef>} */\n    this.exprMap_ = {};\n\n    /** @private {?Object<string, !ExprDef>} */\n    this.prevExprMap_ = null;\n  }\n\n  /**\n   * Starts the resolution pass. After the pass is complete the new queries\n   * will be tracked and the old queries will be untracked.\n   */\n  start() {\n    this.prevExprMap_ = this.exprMap_;\n    this.exprMap_ = {};\n  }\n\n  /**\n   * @param {string} queryString\n   * @return {boolean} value\n   */\n  resolveMatchQuery(queryString) {\n    // This will create a list query like this:\n    // `[{query: matchMedia(queryString), value: true}, {query: null, value: false}]`\n    return (\n      this.resolve_(queryString, parseMediaQueryMatchExpr, TRUE_VALUE) ===\n      TRUE_VALUE\n    );\n  }\n\n  /**\n   * @param {string} exprString\n   * @return {string} value\n   */\n  resolveListQuery(exprString) {\n    return this.resolve_(exprString, parseMediaQueryListExpr, '');\n  }\n\n  /**\n   * Completes the resolution pass. The new queries are tracked for changes\n   * and the old queries are untracked.\n   */\n  complete() {\n    for (const k in this.prevExprMap_) {\n      if (!(k in this.exprMap_)) {\n        toggleOnChange(this.prevExprMap_[k], this.callback_, false);\n      }\n    }\n    this.prevExprMap_ = null;\n  }\n\n  /**\n   * Stops tracking of all queries.\n   */\n  dispose() {\n    for (const k in this.exprMap_) {\n      toggleOnChange(this.exprMap_[k], this.callback_, false);\n    }\n    this.exprMap_ = {};\n  }\n\n  /**\n   * @param {string} exprString\n   * @param {function(!Window, string):!ExprDef} parser\n   * @param {string} emptyExprValue\n   * @return {string} value\n   */\n  resolve_(exprString, parser, emptyExprValue) {\n    if (!exprString.trim()) {\n      return emptyExprValue;\n    }\n    let expr = this.exprMap_[exprString] || this.prevExprMap_[exprString];\n    if (!expr) {\n      expr = parser(this.win_, exprString);\n      toggleOnChange(expr, this.callback_, true);\n    }\n    this.exprMap_[exprString] = expr;\n    return resolveMediaQueryListExpr(expr);\n  }\n}\n\n/**\n * @param {!Window} win\n * @param {string} queryString\n * @return {!ExprDef}\n */\nfunction parseMediaQueryMatchExpr(win, queryString) {\n  const query = win.matchMedia(queryString);\n  return [\n    {query, value: TRUE_VALUE},\n    {query: null, value: ''},\n  ];\n}\n\n/**\n * @param {!Window} win\n * @param {string} exprString\n * @return {!ExprDef}\n */\nfunction parseMediaQueryListExpr(win, exprString) {\n  return (\n    exprString\n      .split(',')\n      .map((part) => {\n        part = part.replace(/\\s+/g, ' ').trim();\n        if (part.length == 0) {\n          return;\n        }\n\n        let queryString;\n        let value;\n\n        // Process the expression from the end.\n        const lastChar = part.charAt(part.length - 1);\n        let div;\n        if (lastChar == ')') {\n          // Value is the CSS function, e.g. `calc(50vw + 10px)`.\n\n          // First, skip to the opening paren.\n          let parens = 1;\n          div = part.length - 2;\n          for (; div >= 0; div--) {\n            const c = part.charAt(div);\n            if (c == '(') {\n              parens--;\n            } else if (c == ')') {\n              parens++;\n            }\n            if (parens == 0) {\n              break;\n            }\n          }\n\n          // Then, skip to the begining to the function's name.\n          const funcEnd = div - 1;\n          if (div > 0) {\n            div--;\n            for (; div >= 0; div--) {\n              const c = part.charAt(div);\n              if (\n                !(\n                  c == '%' ||\n                  c == '-' ||\n                  c == '_' ||\n                  (c >= 'a' && c <= 'z') ||\n                  (c >= 'A' && c <= 'Z') ||\n                  (c >= '0' && c <= '9')\n                )\n              ) {\n                break;\n              }\n            }\n          }\n          if (div >= funcEnd) {\n            // Invalid condition.\n            return null;\n          }\n        } else {\n          // Value is the length or a percent: accept a wide range of values,\n          // including invalid values - they will be later asserted to conform\n          // to exact CSS length or percent value.\n          div = part.length - 2;\n          for (; div >= 0; div--) {\n            const c = part.charAt(div);\n            if (\n              !(\n                c == '%' ||\n                c == '.' ||\n                (c >= 'a' && c <= 'z') ||\n                (c >= 'A' && c <= 'Z') ||\n                (c >= '0' && c <= '9')\n              )\n            ) {\n              break;\n            }\n          }\n        }\n        if (div >= 0) {\n          queryString = part.substring(0, div + 1).trim();\n          value = part.substring(div + 1).trim();\n        } else {\n          value = part;\n          queryString = undefined;\n        }\n\n        if (!value) {\n          return null;\n        }\n\n        const query = queryString ? win.matchMedia(queryString) : null;\n        return {query, value};\n      })\n      // Remove any items that did not match the regex above and are\n      // undefined as a result.\n      .filter(Boolean)\n  );\n}\n\n/**\n * @param {!ExprDef} expr\n * @return {string} value\n */\nfunction resolveMediaQueryListExpr(expr) {\n  for (let i = 0; i < expr.length; i++) {\n    const {query, value} = expr[i];\n    if (!query || query.matches) {\n      return value;\n    }\n  }\n  return '';\n}\n\n/**\n * @param {!ExprDef} expr\n * @param {function()} callback\n * @param {boolean} on\n */\nfunction toggleOnChange(expr, callback, on) {\n  for (let i = 0; i < expr.length; i++) {\n    const {query} = expr[i];\n    if (query) {\n      // The `onchange` API is preferred, but the IE only supports\n      // the `addListener/removeListener` APIs.\n      if (query.onchange !== undefined) {\n        query.onchange = on ? callback : null;\n      } else {\n        if (on) {\n          query.addListener(callback);\n        } else {\n          query.removeListener(callback);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Detect prefers-reduced-motion.\n * Native animations will not run when a device is set up to reduced motion.\n * In that case, we need to disable all animation treatment, and whatever\n * setup changes that depend on an animation running later on.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function prefersReducedMotion(win) {\n  return !!win.matchMedia('(prefers-reduced-motion: reduce)')?.matches;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {computedStyle} from '../style';\nimport {remove} from '../core/types/array';\nimport {toWin} from '../core/window';\nimport {tryCallback} from '../core/error';\n\n/** @enum {number} */\nconst Type = {\n  /**\n   * Mapped to the `ResizeObserverEntry.contentRect` and returns a\n   * `LayoutSizeDef` value.\n   */\n  CONTENT: 0,\n  /**\n   * Mapped to the `ResizeObserverEntry.borderBoxSize` and returns a\n   * `ResizeObserverSize` value.\n   */\n  BORDER_BOX: 1,\n};\n\nconst VERTICAL_RE = /vertical/;\n\n/** @const {!WeakMap<!Window, !ResizeObserver>} */\nconst observers = new WeakMap();\n\n/** @const {!WeakMap<!Element, !Array<{type: Type, callback: function(?)}>>} */\nconst targetObserverMultimap = new WeakMap();\n\n/** @const {!WeakMap<!Element, !ResizeObserverEntry>} */\nconst targetEntryMap = new WeakMap();\n\n/**\n * @param {!Element} element\n * @param {function(!../layout-rect.LayoutSizeDef)} callback\n */\nexport function observeContentSize(element, callback) {\n  observeSize(element, Type.CONTENT, callback);\n}\n\n/**\n * @param {!Element} element\n * @param {!Function} callback\n */\nexport function unobserveContentSize(element, callback) {\n  unobserveSize(element, Type.CONTENT, callback);\n}\n\n/**\n * @param {!Element} element\n * @return {!Promise<!../layout-rect.LayoutSizeDef>}\n */\nexport function measureContentSize(element) {\n  return new Promise((resolve) => {\n    const onSize = (size) => {\n      resolve(size);\n      unobserveContentSize(element, onSize);\n    };\n    observeContentSize(element, onSize);\n  });\n}\n\n/**\n * Note: this method doesn't support multi-fragment border boxes.\n * @param {!Element} element\n * @param {function(!ResizeObserverSize)} callback\n */\nexport function observeBorderBoxSize(element, callback) {\n  observeSize(element, Type.BORDER_BOX, callback);\n}\n\n/**\n * Note: this method doesn't support multi-fragment border boxes.\n * @param {!Element} element\n * @param {!Function} callback\n */\nexport function unobserveBorderBoxSize(element, callback) {\n  unobserveSize(element, Type.BORDER_BOX, callback);\n}\n\n/**\n * Note: this method doesn't support multi-fragment border boxes.\n * @param {!Element} element\n * @return {!Promise<!ResizeObserverSize>}\n */\nexport function measureBorderBoxSize(element) {\n  return new Promise((resolve) => {\n    const onSize = (size) => {\n      resolve(size);\n      unobserveBorderBoxSize(element, onSize);\n    };\n    observeBorderBoxSize(element, onSize);\n  });\n}\n\n/**\n * @param {!Element} element\n * @param {Type} type\n * @param {function(?)} callback\n */\nfunction observeSize(element, type, callback) {\n  const win = element.ownerDocument.defaultView;\n  if (!win) {\n    return;\n  }\n  let callbacks = targetObserverMultimap.get(element);\n  if (!callbacks) {\n    callbacks = [];\n    targetObserverMultimap.set(element, callbacks);\n    getObserver(win).observe(element);\n  }\n  const exists = callbacks.some(\n    (cb) => cb.callback === callback && cb.type === type\n  );\n  if (!exists) {\n    callbacks.push({type, callback});\n    const entry = targetEntryMap.get(element);\n    if (entry) {\n      setTimeout(() => computeAndCall(type, callback, entry));\n    }\n  }\n}\n\n/**\n * @param {!Element} element\n * @param {Type} type\n * @param {function(?)} callback\n */\nfunction unobserveSize(element, type, callback) {\n  const callbacks = targetObserverMultimap.get(element);\n  if (!callbacks) {\n    return;\n  }\n  remove(callbacks, (cb) => cb.callback === callback && cb.type === type);\n  if (callbacks.length == 0) {\n    targetObserverMultimap.delete(element);\n    targetEntryMap.delete(element);\n    const win = element.ownerDocument.defaultView;\n    if (win) {\n      getObserver(win).unobserve(element);\n    }\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!ResizeObserver}\n */\nfunction getObserver(win) {\n  let observer = observers.get(win);\n  if (!observer) {\n    observer = new win.ResizeObserver(processEntries);\n    observers.set(win, observer);\n  }\n  return observer;\n}\n\n/**\n * @param {!Array<!ResizeObserverEntry>} entries\n */\nfunction processEntries(entries) {\n  const seen = new Set();\n  for (let i = entries.length - 1; i >= 0; i--) {\n    const entry = entries[i];\n    const {target} = entry;\n    if (seen.has(target)) {\n      continue;\n    }\n    seen.add(target);\n    const callbacks = targetObserverMultimap.get(target);\n    if (!callbacks) {\n      continue;\n    }\n    targetEntryMap.set(target, entry);\n    for (let k = 0; k < callbacks.length; k++) {\n      const {callback, type} = callbacks[k];\n      computeAndCall(type, callback, entry);\n    }\n  }\n}\n\n/**\n * @param {Type} type\n * @param {function(?)} callback\n * @param {!ResizeObserverEntry} entry\n */\nfunction computeAndCall(type, callback, entry) {\n  if (type == Type.CONTENT) {\n    const {contentRect} = entry;\n    const {height, width} = contentRect;\n    /** @type {!../layout-rect.LayoutSizeDef} */\n    const size = {width, height};\n    tryCallback(callback, size);\n  } else if (type == Type.BORDER_BOX) {\n    const {borderBoxSize: borderBoxSizeArray} = entry;\n    /** @type {!ResizeObserverSize} */\n    let borderBoxSize;\n    if (borderBoxSizeArray) {\n      // `borderBoxSize` is supported. Only single-fragment border boxes are\n      // supported here (`borderBoxSize[0]`).\n      if (borderBoxSizeArray.length > 0) {\n        borderBoxSize = borderBoxSizeArray[0];\n      } else {\n        borderBoxSize = /** @type {!ResizeObserverSize} */ ({\n          inlineSize: 0,\n          blockSize: 0,\n        });\n      }\n    } else {\n      // `borderBoxSize` is not supported: polyfill it via blocking measures.\n      const {target} = entry;\n      const win = toWin(target.ownerDocument.defaultView);\n      const isVertical = VERTICAL_RE.test(\n        computedStyle(win, target)['writing-mode']\n      );\n      const {offsetHeight, offsetWidth} = /** @type {!HTMLElement} */ (target);\n      let inlineSize, blockSize;\n      if (isVertical) {\n        blockSize = offsetWidth;\n        inlineSize = offsetHeight;\n      } else {\n        inlineSize = offsetWidth;\n        blockSize = offsetHeight;\n      }\n      borderBoxSize = /** @type {!ResizeObserverSize} */ ({\n        inlineSize,\n        blockSize,\n      });\n    }\n    tryCallback(callback, borderBoxSize);\n  }\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {observeBorderBoxSize, unobserveBorderBoxSize} from './size-observer';\n\nexport class PauseHelper {\n  /**\n   * @param {!AmpElement} element\n   */\n  constructor(element) {\n    /** @private @const */\n    this.element_ = element;\n\n    /** @private {boolean} */\n    this.isPlaying_ = false;\n\n    /** @private {boolean} */\n    this.hasSize_ = false;\n\n    this.pauseWhenNoSize_ = this.pauseWhenNoSize_.bind(this);\n  }\n\n  /**\n   * @param {boolean} isPlaying\n   */\n  updatePlaying(isPlaying) {\n    if (isPlaying === this.isPlaying_) {\n      return;\n    }\n    this.isPlaying_ = isPlaying;\n    if (isPlaying) {\n      // Pause will not be called until transitioning from \"has size\" to\n      // \"no size\". Which means a measurement must first be received that\n      // has size, then a measurement that does not have size.\n      this.hasSize_ = false;\n      observeBorderBoxSize(this.element_, this.pauseWhenNoSize_);\n    } else {\n      unobserveBorderBoxSize(this.element_, this.pauseWhenNoSize_);\n    }\n  }\n\n  /**\n   * @param {!ResizeObserverSize} size\n   * @private\n   */\n  pauseWhenNoSize_({blockSize, inlineSize}) {\n    const hasSize = inlineSize > 0 && blockSize > 0;\n    if (hasSize === this.hasSize_) {\n      return;\n    }\n    this.hasSize_ = hasSize;\n    if (!hasSize) {\n      this.element_.pause();\n    }\n  }\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An AMP element's ready state.\n *\n * @enum {string}\n */\nexport const ReadyState = {\n  /**\n   * The element has not been upgraded yet.\n   */\n  UPGRADING: 'upgrading',\n\n  /**\n   * The element has been upgraded and waiting to be built.\n   */\n  BUILDING: 'building',\n\n  /**\n   * The element has been built and waiting to be mounted.\n   */\n  MOUNTING: 'mounting',\n\n  /**\n   * The element has been built and waiting to be loaded.\n   */\n  LOADING: 'loading',\n\n  /**\n   * The element has been built and loaded.\n   */\n  COMPLETE: 'complete',\n\n  /**\n   * The element is in an error state.\n   */\n  ERROR: 'error',\n};\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryCallback} from '../core/error';\n\nconst AMP_CLASS = 'i-amphtml-element';\nconst DEEP = true;\n\nconst ensureLoaded = (element) => element.ensureLoaded();\nconst pause = (element) => element.pause();\nconst unmount = (element) => element.unmount();\n\n/**\n * Ensure all elements within this container are scheduled to load.\n *\n * @param {!Element|!Array<!Element>} containerOrContainers\n * @param {boolean=} includeSelf\n */\nexport function loadAll(containerOrContainers, includeSelf = true) {\n  forAllWithin(containerOrContainers, includeSelf, !DEEP, ensureLoaded);\n}\n\n/**\n * Pause all elements within this container.\n *\n * @param {!Element|!Array<!Element>} containerOrContainers\n * @param {boolean=} includeSelf\n */\nexport function pauseAll(containerOrContainers, includeSelf = true) {\n  forAllWithin(containerOrContainers, includeSelf, DEEP, pause);\n}\n\n/**\n * Unmount all elements within this container.\n *\n * @param {!Element|!Array<!Element>} containerOrContainers\n * @param {boolean=} includeSelf\n */\nexport function unmountAll(containerOrContainers, includeSelf = true) {\n  forAllWithin(containerOrContainers, includeSelf, DEEP, unmount);\n}\n\n/**\n * Execute a callback for all elements within the container.\n *\n * @param {!Element|!Array<!Element>} containerOrContainers\n * @param {boolean} includeSelf\n * @param {boolean} deep\n * @param {function(!AmpElement)} callback\n */\nexport function forAllWithin(\n  containerOrContainers,\n  includeSelf,\n  deep,\n  callback\n) {\n  if (Array.isArray(containerOrContainers)) {\n    for (let i = 0; i < containerOrContainers.length; i++) {\n      forAllWithinInternal(\n        containerOrContainers[i],\n        includeSelf,\n        deep,\n        callback\n      );\n    }\n  } else {\n    forAllWithinInternal(containerOrContainers, includeSelf, deep, callback);\n  }\n}\n\n/**\n * Execute a callback for all elements within the container.\n *\n * @param {!Element} container\n * @param {boolean} includeSelf\n * @param {boolean} deep\n * @param {function(!AmpElement)} callback\n */\nfunction forAllWithinInternal(container, includeSelf, deep, callback) {\n  if (includeSelf && container.classList.contains(AMP_CLASS)) {\n    const ampContainer = /** @type {!AmpElement} */ (container);\n    tryCallback(callback, ampContainer);\n    if (!deep) {\n      // Also schedule amp-element that is a placeholder for the element.\n      const placeholder = ampContainer.getPlaceholder();\n      if (placeholder) {\n        forAllWithinInternal(\n          placeholder,\n          /* includeSelf */ true,\n          !DEEP,\n          callback\n        );\n      }\n      return;\n    }\n  }\n\n  const descendants = container.getElementsByClassName(AMP_CLASS);\n  let seen = null;\n  for (let i = 0; i < descendants.length; i++) {\n    const descendant = /** @type {!AmpElement} */ (descendants[i]);\n    if (deep) {\n      // In deep search all elements will be covered.\n      tryCallback(callback, descendant);\n    } else {\n      // Breadth-first search. Rely on the `getElementsByClassName` DOM order\n      // to ignore DOM subtrees already covered.\n      seen = seen || [];\n      let covered = false;\n      for (let j = 0; j < seen.length; j++) {\n        if (seen[j].contains(descendant)) {\n          covered = true;\n          break;\n        }\n      }\n      if (!covered) {\n        seen.push(descendant);\n        tryCallback(callback, descendant);\n      }\n    }\n  }\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performs the `closest()` scan through context nodes to find the one that\n * matches the predicate with an optional argument.\n *\n * @param {!./node.ContextNode} startNode\n * @param {function(!./node.ContextNode, T):boolean} predicate\n * @param {T=} arg\n * @param {boolean=} includeSelf\n * @return {?./node.ContextNode}\n * @template T\n */\nexport function findParent(\n  startNode,\n  predicate,\n  arg = undefined,\n  includeSelf = true\n) {\n  for (let n = includeSelf ? startNode : startNode.parent; n; n = n.parent) {\n    if (predicate(n, arg)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Performs the deep scan through context nodes and calls the specified\n * callback with the optional argument. A node can stop the deep scan into its\n * subtree by returning a falsy result. Otherwise, the subtree will be scanned\n * and the result value will be passed to the children callbacks.\n *\n * @param {!./node.ContextNode} startNode\n * @param {function(!./node.ContextNode, T, S):S} callback\n * @param {T=} arg\n * @param {S=} state\n * @param {boolean=} includeSelf\n * @template T\n * @template S\n */\nexport function deepScan(\n  startNode,\n  callback,\n  arg = undefined,\n  state = true,\n  includeSelf = true\n) {\n  if (includeSelf) {\n    const newState = callback(startNode, arg, state);\n    if (newState) {\n      deepScan(startNode, callback, arg, newState, false);\n    }\n  } else if (startNode.children) {\n    for (const node of startNode.children) {\n      deepScan(node, callback, arg, state, true);\n    }\n  }\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {function(function())} */\nlet SchedulerDef;\n/**\n * Creates a scheduling function that executes the callback based on the\n * scheduler, but only one task at a time.\n *\n * @param {function()} handler\n * @param {?SchedulerDef} defaultScheduler\n * @return {function(!SchedulerDef=)}\n */\nexport function throttleTail(handler, defaultScheduler = null) {\n  let scheduled = false;\n  const handleAndUnschedule = () => {\n    scheduled = false;\n    handler();\n  };\n  /** @param {!SchedulerDef=} opt_scheduler */\n  const scheduleIfNotScheduled = (opt_scheduler) => {\n    if (!scheduled) {\n      scheduled = true;\n      const scheduler = opt_scheduler || defaultScheduler;\n      scheduler(handleAndUnschedule);\n    }\n  };\n  return scheduleIfNotScheduled;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {deepScan, findParent} from './scan';\nimport {devAssert} from '../core/assert';\nimport {pushIfNotExist, removeItem} from '../core/types/array';\nimport {rethrowAsync} from '../core/error';\nimport {throttleTail} from './scheduler';\n\n// typedef imports\nimport {ContextPropDef} from './prop.type';\n\nconst EMPTY_ARRAY = [];\nconst EMPTY_FUNC = () => {};\n\n/** @enum {number} */\nconst Pending = {\n  NOT_PENDING: 0,\n  PENDING: 1,\n  PENDING_REFRESH_PARENT: 2,\n};\n\n/**\n * The structure for a property's inputs. It's important that `values` are\n * easily available as an array to pass them to the `recursive` and\n * `compute` callbacks without reallocation.\n *\n * @interface\n * @template T\n */\nfunction InputDef() {}\n/** @type {!Array<T>} */\nInputDef.prototype.values;\n/** @type {!Array<function(T)>} */\nInputDef.prototype.setters;\n\n/**\n * The structure for a property's computed values and subscribers.\n * @interface\n * @template T\n * @template DEP\n */\nfunction UsedDef() {}\n/** @type {!ContextPropDef<T, DEP>} */\nUsedDef.prototype.prop;\n/** @type {!Array<function(!T)>} */\nUsedDef.prototype.subscribers;\n/** @type {T} */\nUsedDef.prototype.value;\n/** @type {!Pending} */\nUsedDef.prototype.pending;\n/** @type {number} */\nUsedDef.prototype.counter;\n/** @type {!Array<DEP>} */\nUsedDef.prototype.depValues;\n/** @type {!T} */\nUsedDef.prototype.parentValue;\n/** @type {?./node.ContextNode} */\nUsedDef.prototype.parentContextNode;\n/** @type {function(boolean)} */\nUsedDef.prototype.ping;\n/** @type {!Array<function(DEP)>} */\nUsedDef.prototype.pingDep;\n/** @type {?function(T)} */\nUsedDef.prototype.pingParent;\n\n/**\n * Propagates context property values in the context tree. The key APIs are\n * `set()` and `subscribe()`. See `ContextPropDef` type for details on how\n * values are declared and propagated.\n */\nexport class Values {\n  /**\n   * @param {!./node.ContextNode} contextNode\n   */\n  constructor(contextNode) {\n    /** @private @const {!./node.ContextNode} */\n    this.contextNode_ = contextNode;\n\n    /** @private {?Map<string, !InputDef>} */\n    this.inputsByKey_ = null;\n\n    /** @private {?Map<string, !UsedDef>} */\n    this.usedByKey_ = null;\n\n    // Schedulers.\n    /** @private @const {function()} */\n    this.checkUpdates_ = throttleTail(\n      this.checkUpdates_.bind(this),\n      setTimeout\n    );\n  }\n\n  /**\n   * Sets the property's input value. This is analagous to a CSS specified\n   * value. Several values for the same property can be set on a node - one\n   * per each setter. A repeated call for the same setter overwrites a\n   * previously set input. This is similar to how the same CSS property can be\n   * set in a stylesheet using different classes. The property computation\n   * decides how to treat several values. For instance:\n   * - A property can pick the first set input value (e.g. `font-size`).\n   * - A property can pick the min/max set input value (e.g. `priority`).\n   * - A property can reduce all values using `AND` (e.g. `renderable`).\n   *\n   * Once the input is set, the recalculation is rescheduled asynchronously.\n   * All dependent properties are also recalculated.\n   *\n   * @param {!ContextPropDef<T>} prop\n   * @param {function(T)} setter\n   * @param {T} value\n   * @template T\n   */\n  set(prop, setter, value) {\n    devAssert(setter);\n    devAssert(value !== undefined);\n\n    const {key} = prop;\n\n    const inputsByKey = this.inputsByKey_ || (this.inputsByKey_ = new Map());\n    let inputs = inputsByKey.get(key);\n    if (!inputs) {\n      inputs = {\n        values: [],\n        setters: [],\n      };\n      inputsByKey.set(key, inputs);\n    }\n    const index = inputs.setters.indexOf(setter);\n    const changed = index == -1 || inputs.values[index] !== value;\n    if (index == -1) {\n      inputs.setters.push(setter);\n      inputs.values.push(value);\n    } else if (changed) {\n      inputs.values[index] = value;\n    }\n\n    if (changed) {\n      // An input has been added to a node for a first time. This might\n      // affect all values in this and child nodes. The simplest algorithm\n      // here is to deep scan all descendants and refresh them.\n      // Optimization opportunity: in simple but common manipulations the\n      // deepscan can be avoided.\n      this.ping(prop, false);\n      if (isRecursive(prop)) {\n        deepScan(\n          this.contextNode_,\n          scan,\n          prop,\n          /*state=*/ true,\n          /*includeSelf=*/ false\n        );\n      }\n    }\n  }\n\n  /**\n   * Unsets the input value for the specified property and setter.\n   * See `set()` for more info.\n   * @param {!ContextPropDef<T>} prop\n   * @param {function(T)} setter\n   * @template T\n   */\n  remove(prop, setter) {\n    devAssert(setter);\n\n    const {key} = prop;\n    const inputsByKey = this.inputsByKey_;\n    const inputs = inputsByKey?.get(key);\n    if (inputs) {\n      const index = inputs.setters.indexOf(setter);\n      if (index != -1) {\n        inputs.setters.splice(index, 1);\n        inputs.values.splice(index, 1);\n        if (inputs.setters.length == 0) {\n          inputsByKey.delete(key);\n        }\n        deepScan(this.contextNode_, scan, prop);\n      }\n    }\n  }\n\n  /**\n   * Whether this node has inputs for the specified property.\n   *\n   * @param {!ContextPropDef} prop\n   * @return {boolean}\n   */\n  has(prop) {\n    return !!this.inputsByKey_?.has(prop.key);\n  }\n\n  /**\n   * Adds a subscriber for the specified property. If the property has not\n   * yet been tracked, the tracking is started. If the used value is\n   * already available, the handler is called immediately. The handler is\n   * only called if a valid used value is available and only if this value\n   * has changed since the last handler call.\n   *\n   * @param {!ContextPropDef<T>} prop\n   * @param {function(T)} handler\n   * @template T\n   */\n  subscribe(prop, handler) {\n    const used = this.startUsed_(prop);\n\n    if (!pushIfNotExist(used.subscribers, handler)) {\n      // Already a subscriber.\n      return;\n    }\n\n    // The handler is notified right away if the value is available.\n    const existingValue = used.value;\n    if (isDefined(existingValue) && this.isConnected_()) {\n      handler(existingValue);\n    }\n  }\n\n  /**\n   * Unsubscribes a previously added handler. If there are no other subscribers\n   * the property tracking is stopped and the used value is removed.\n   *\n   * @param {!ContextPropDef<T>} prop\n   * @param {function(T)} handler\n   * @template T\n   */\n  unsubscribe(prop, handler) {\n    const used = this.usedByKey_?.get(prop.key);\n    if (!used || !removeItem(used.subscribers, handler)) {\n      // Not a subscriber.\n      return;\n    }\n\n    // If no other subscribers, stop tracking the used value.\n    this.stopUsed_(used);\n  }\n\n  /**\n   * Schedules a recalculation of the specified property, but only if this\n   * property is tracked by this node.\n   *\n   * @param {!ContextPropDef} prop\n   * @param {boolean} refreshParent Whether the parent node needs to be looked\n   * up again.\n   * @protected\n   */\n  ping(prop, refreshParent) {\n    this.usedByKey_?.get(prop.key)?.ping(refreshParent);\n  }\n\n  /**\n   * The callback called by the `ContextNode` to notify values of the context\n   * tree changes. This callback schedules recalculations if necessary.\n   *\n   * @package\n   */\n  parentUpdated() {\n    if (this.isConnected_()) {\n      // Optimization opportunity: in simpler cases, we may only need to refresh\n      // a few specific props or even only specific nodes. E.g. when a single\n      // intermediary parent is inserted between a parent and a child, the amount\n      // of refreshes only depends on the inputs already set on this parent.\n      deepScan(\n        this.contextNode_,\n        scanAll,\n        /*arg=*/ undefined,\n        /*state=*/ EMPTY_ARRAY\n      );\n    }\n  }\n\n  /**\n   * The callback called by the `ContextNode` to notify values of the context\n   * root changes. It's possible that a context node is connected, disconnected,\n   * or moved to another root. This callback schedules recalculations if\n   * necessary.\n   *\n   * @package\n   */\n  rootUpdated() {\n    const usedByKey = this.usedByKey_;\n    if (!usedByKey) {\n      return;\n    }\n    if (this.isConnected_()) {\n      // Ping all properties for recalculation when the tree is connected.\n      usedByKey.forEach((used) => {\n        const {prop} = used;\n        this.ping(prop, true);\n      });\n    } else {\n      // On disconnect, only do minimal possible work: disconnect recursive\n      // subscribers to ensure that they are not leaked.\n      usedByKey.forEach((used) => {\n        const {prop} = used;\n        if (isRecursive(prop)) {\n          this.updateParentContextNode_(used, null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Used for `deepScan` scanner to notify the subtree that the specified\n   * property has changed and needs to be recalculated.\n   *\n   * Scans are relatively common and this method exists (as opposed to be\n   * inlined) only to avoid frequent function allocation.\n   *\n   * @param {!ContextPropDef} prop\n   * @return {boolean}\n   * @protected Necessary for cross-binary access.\n   */\n  scan(prop) {\n    this.ping(prop, true);\n    if (!isRecursive(prop)) {\n      // Stop the deepscan. The prop doesn't propagate.\n      return false;\n    }\n    if (this.has(prop)) {\n      // Stop the deepscan. The node will propagate changes downstream.\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Used for `deepScan` scanner to notify the subtree to recalculate all\n   * properties.\n   *\n   * Scans are relatively common and this method exists (as opposed to be\n   * inlined) only to avoid frequent function allocation.\n   *\n   * @param {!Array<string>} scheduled The already scheduled props.\n   * @return {!Array<string>} The new scheduled props.\n   * @protected\n   */\n  scanAll(scheduled) {\n    let newScheduled = null;\n    const usedByKey = this.usedByKey_;\n    if (usedByKey) {\n      usedByKey.forEach((used) => {\n        const {prop} = used;\n        const {key} = prop;\n        // Only ping unhandled props.\n        if ((newScheduled || scheduled).indexOf(key) == -1) {\n          this.ping(prop, true);\n\n          if (this.contextNode_.children && this.has(prop)) {\n            if (!newScheduled) {\n              newScheduled = scheduled.slice(0);\n            }\n            // Stop the deepscan for this value. It will be propagated\n            // by the responsible node.\n            newScheduled.push(key);\n          }\n        }\n      });\n    }\n    return newScheduled || scheduled;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isConnected_() {\n    return !!this.contextNode_.root;\n  }\n\n  /**\n   * Start the used value tracker if it hasn't started yet.\n   *\n   * @param {!ContextPropDef<T, DEF>} prop\n   * @return {!UsedDef<T, DEF>}\n   * @private\n   * @template T\n   * @template DEF\n   */\n  startUsed_(prop) {\n    const {deps, key} = prop;\n    const usedByKey = this.usedByKey_ || (this.usedByKey_ = new Map());\n    let used = usedByKey.get(key);\n    if (!used) {\n      used = {\n        prop,\n        subscribers: [],\n        value: undefined,\n        pending: Pending.NOT_PENDING,\n        counter: 0,\n        depValues: deps.length > 0 ? deps.map(EMPTY_FUNC) : EMPTY_ARRAY,\n        parentValue: undefined,\n        parentContextNode: null,\n        // Schedule the value recalculation, optionally with the parent\n        // refresh.\n        ping: (refreshParent) => {\n          if (this.isConnected_()) {\n            const pending = refreshParent\n              ? Pending.PENDING_REFRESH_PARENT\n              : Pending.PENDING;\n            used.pending = Math.max(used.pending, pending);\n            this.checkUpdates_();\n          }\n        },\n        // Schedule the value recalculation due to the dependency change.\n        pingDep:\n          deps.length > 0\n            ? deps.map((dep, index) => (value) => {\n                used.depValues[index] = value;\n                used.ping();\n              })\n            : EMPTY_ARRAY,\n        // Schedule the value recalculation due to the parent value change.\n        pingParent: isRecursive(prop)\n          ? (parentValue) => {\n              used.parentValue = parentValue;\n              used.ping();\n            }\n          : null,\n      };\n      usedByKey.set(key, used);\n\n      // Subscribe to all deps.\n      deps.forEach((dep, index) => this.subscribe(dep, used.pingDep[index]));\n\n      // Schedule the first refresh.\n      used.ping(false);\n    }\n    return used;\n  }\n\n  /**\n   * Stop calculating the used value if there are no more subscribers left.\n   *\n   * @param {!UsedDef} used\n   * @private\n   */\n  stopUsed_(used) {\n    if (used.subscribers.length > 0) {\n      return;\n    }\n\n    const {pingDep, prop} = used;\n    const {deps, key} = prop;\n\n    this.usedByKey_.delete(key);\n\n    // Unsubscribe itself.\n    this.updateParentContextNode_(used, null);\n    if (deps.length > 0) {\n      deps.forEach((dep, index) => {\n        this.unsubscribe(dep, pingDep[index]);\n      });\n    }\n  }\n\n  /**\n   * Check if any properties awaiting recalculation. This method is always\n   * scheduled asynchronously and throttled.\n   *\n   * @private\n   */\n  checkUpdates_() {\n    if (!this.isConnected_()) {\n      // The node got disconnected between scheduling and handling.\n      return;\n    }\n\n    const usedByKey = this.usedByKey_;\n    if (!usedByKey) {\n      return;\n    }\n\n    usedByKey.forEach((used) => {\n      used.counter = 0;\n    });\n\n    // Recompute all \"pinged\" values for this node. It checks if dependencies\n    // are satisfied and recomputes values accordingly.\n    let updated;\n    do {\n      updated = 0;\n      usedByKey.forEach((used) => {\n        if (used.pending != Pending.NOT_PENDING) {\n          const {key} = used.prop;\n          used.counter++;\n          if (used.counter > 5) {\n            // A simple protection from infinte loops.\n            rethrowAsync(`cyclical prop: ${key}`);\n            used.pending = Pending.NOT_PENDING;\n            return;\n          }\n          updated++;\n          this.tryUpdate_(used);\n        }\n      });\n    } while (updated > 0);\n  }\n\n  /**\n   * @param {!UsedDef} used\n   * @private\n   */\n  tryUpdate_(used) {\n    // The value is not pending anymore. If any of the dependencies will remain\n    // unresolved, we will simply need to recomputed it.\n    const refreshParent = used.pending == Pending.PENDING_REFRESH_PARENT;\n\n    let newValue;\n    try {\n      newValue = this.calc_(used, refreshParent);\n    } catch (e) {\n      // This is the narrowest catch to avoid unrelated values breaking each\n      // other. The only exposure to the user-code are `recursive` and\n      // `compute` methods in the `ContextPropDef`.\n      rethrowAsync(e);\n    }\n\n    // Reset pending flag. It's good to reset it after the calculation to\n    // ensure that deps are automatically covered.\n    used.pending = Pending.NOT_PENDING;\n\n    // Check if the value has been updated.\n    this.maybeUpdated_(used, newValue);\n  }\n\n  /**\n   * @param {!UsedDef<T>} used\n   * @param {T} value\n   * @private\n   * @template T\n   */\n  maybeUpdated_(used, value) {\n    const {prop, value: oldValue} = used;\n    const {key} = prop;\n    const usedByKey = this.usedByKey_;\n    if (\n      oldValue === value ||\n      used !== usedByKey?.get(key) ||\n      !this.isConnected_()\n    ) {\n      // Either the value didn't change, or no one needs this value anymore.\n      return;\n    }\n\n    used.value = value;\n\n    // Notify subscribers.\n    const {subscribers} = used;\n    for (const handler of subscribers) {\n      handler(value);\n    }\n  }\n\n  /**\n   * The used value calculation algorithm.\n   *\n   * @param {!UsedDef<T>} used\n   * @param {boolean} refreshParent\n   * @return {T|undefined} The used value.\n   * @private\n   * @template T\n   */\n  calc_(used, refreshParent) {\n    devAssert(this.isConnected_());\n\n    const {depValues, prop} = used;\n    const {compute, defaultValue, key} = prop;\n\n    const inputValues = this.inputsByKey_?.get(key)?.values;\n\n    // Calculate parent value.\n    const recursive = calcRecursive(prop, inputValues);\n\n    // Refresh parent if requested.\n    if (refreshParent || recursive != Boolean(used.parentContextNode)) {\n      const newParentContextNode = recursive\n        ? findParent(this.contextNode_, hasInput, prop, /* includeSelf */ false)\n        : null;\n      this.updateParentContextNode_(used, newParentContextNode);\n    }\n\n    // If no parent node is found, use the default value.\n    const parentValue = isDefined(used.parentValue)\n      ? used.parentValue\n      : recursive && !used.parentContextNode\n      ? defaultValue\n      : undefined;\n\n    // Calculate the \"used\" value.\n    let newValue = undefined;\n    const ready =\n      depValues.every(isDefined) && (!recursive || isDefined(parentValue));\n    if (ready) {\n      const {node} = this.contextNode_;\n      if (inputValues && !compute) {\n        newValue = inputValues[0];\n      } else if (isRecursive(prop)) {\n        if (inputValues || depValues.length > 0) {\n          // The node specifies its own input values and they need to be\n          // recomputed with parent and dep values.\n          newValue = callRecursiveCompute(\n            compute,\n            node,\n            inputValues || EMPTY_ARRAY,\n            parentValue,\n            depValues\n          );\n        } else if (isDefined(parentValue)) {\n          // The node doesn't specify its own value, but parent is available.\n          // Since parent is available, it means that the node is recursive.\n          newValue = parentValue;\n        }\n      } else if (compute) {\n        newValue = callCompute(\n          compute,\n          node,\n          inputValues || EMPTY_ARRAY,\n          depValues\n        );\n      }\n    }\n\n    return newValue;\n  }\n\n  /**\n   * Update the node from which the parent value is used.\n   *\n   * @param {!UsedDef} used\n   * @param {?./node.ContextNode} newParentContextNode\n   * @private\n   */\n  updateParentContextNode_(used, newParentContextNode) {\n    const {parentContextNode: oldParentContextNode, pingParent, prop} = used;\n    if (newParentContextNode != oldParentContextNode) {\n      used.parentContextNode = newParentContextNode;\n      used.parentValue = undefined;\n\n      if (oldParentContextNode) {\n        oldParentContextNode.values.unsubscribe(prop, devAssert(pingParent));\n      }\n\n      if (newParentContextNode) {\n        newParentContextNode.values.subscribe(prop, devAssert(pingParent));\n      }\n    }\n  }\n}\n\n/**\n * See `Values.scan()` method.\n *\n * @param {!./node.ContextNode} contextNode\n * @param {!ContextPropDef} prop\n * @return {boolean}\n */\nfunction scan(contextNode, prop) {\n  return contextNode.values.scan(prop);\n}\n\n/**\n * See `Values.scanAll()` method.\n *\n * @param {!./node.ContextNode} contextNode\n * @param {?} unusedArg\n * @param {!Array<string>} state\n * @return {!Array<string>}\n */\nfunction scanAll(contextNode, unusedArg, state) {\n  return contextNode.values.scanAll(state);\n}\n\n/**\n * See `Values.has()` method.\n *\n * @param {!./node.ContextNode} contextNode\n * @param {!ContextPropDef} prop\n * @return {boolean}\n */\nfunction hasInput(contextNode, prop) {\n  return contextNode.values.has(prop);\n}\n\n/**\n * Whether the property is recursive.\n *\n * @param {!ContextPropDef} prop\n * @return {boolean}\n */\nfunction isRecursive(prop) {\n  // Only `false` values make a value non-recursive. `true` and\n  // `function` values are considered recursive.\n  return !!prop.recursive;\n}\n\n/**\n * Whether the parent value is required to calculate the used value.\n *\n * @param {!ContextPropDef<T>} prop\n * @param {?Array<T>} inputs\n * @return {boolean}\n * @template T\n */\nfunction calcRecursive(prop, inputs) {\n  const {compute, recursive} = prop;\n  if (typeof recursive == 'function') {\n    return inputs ? recursive(inputs) : true;\n  }\n  if (recursive && inputs && !compute) {\n    // The default `compute` function is to pick the input value when available\n    // and to fallback to the parent. Thus, when inputs are specified,\n    // there's no longer a need for the parent.\n    return false;\n  }\n  return recursive;\n}\n\n/**\n * A substitute for `compute(...deps)`, but faster.\n *\n * @param {function(!Node, !Array<T>, ...DEP):T} compute See `ContextPropDef.compute()`.\n * @param {!Node} node\n * @param {!Array<T>} inputValues\n * @param {!Array<DEP>} deps\n * @return {T}\n * @template T\n * @template DEP\n */\nfunction callCompute(compute, node, inputValues, deps) {\n  switch (deps.length) {\n    case 0:\n      return compute(node, inputValues);\n    case 1:\n      return compute(node, inputValues, deps[0]);\n    case 2:\n      return compute(node, inputValues, deps[0], deps[1]);\n    case 3:\n      return compute(node, inputValues, deps[0], deps[1], deps[2]);\n    default:\n      return compute.apply(null, [node, inputValues].concat(deps));\n  }\n}\n\n/**\n * A substitute for `compute(parentValue, ...deps)`, but faster.\n *\n * @param {function(!Node, !Array<T>, ...DEP):T} compute See `ContextPropDef.compute()`.\n * @param {!Node} node\n * @param {!Array<T>} inputValues\n * @param {T} parentValue\n * @param {!Array<DEP>} deps\n * @return {T}\n * @template T\n * @template DEP\n */\nfunction callRecursiveCompute(compute, node, inputValues, parentValue, deps) {\n  switch (deps.length) {\n    case 0:\n      return compute(node, inputValues, parentValue);\n    case 1:\n      return compute(node, inputValues, parentValue, deps[0]);\n    case 2:\n      return compute(node, inputValues, parentValue, deps[0], deps[1]);\n    case 3:\n      return compute(node, inputValues, parentValue, deps[0], deps[1], deps[2]);\n    default:\n      return compute.apply(null, [node, inputValues, parentValue].concat(deps));\n  }\n}\n\n/**\n * Whether the value is defined.\n *\n * This function only exists to avoid function allocation when calling\n * `Array.every()` and `Array.some()`.\n *\n * @param {*} v\n * @return {boolean}\n */\nfunction isDefined(v) {\n  return v !== undefined;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Values} from './values';\nimport {devAssert, devAssertElement} from '../core/assert';\nimport {getMode} from '../mode';\nimport {pushIfNotExist, removeItem} from '../core/types/array';\nimport {throttleTail} from './scheduler';\n\n// typedef imports\nimport {ContextPropDef} from './prop.type';\n\n// Properties set on the DOM nodes to track the context state.\nconst NODE_PROP = '__AMP_NODE';\nconst ASSIGNED_SLOT_PROP = '__AMP_ASSIGNED_SLOT';\nconst AMP_PREFIX = 'AMP-';\n\n// Relevant node types.\n// See https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType.\nconst ELEMENT_NODE = 1;\nconst DOCUMENT_NODE = 9;\n// Includes shadow root, template, etc.\nconst FRAGMENT_NODE = 11;\n\n/**\n * The structure for a group of nodes.\n *\n * @typedef {{\n *   cn: !ContextNode,\n *   match: function(!Node, !Node):boolean,\n *   weight: number,\n * }}\n */\nlet GroupDef;\n\n/**\n * The context node is a sparse tree over the DOM tree. Any node that needs\n * to manage and compute state can be attached to the context node tree. The\n * tree (mostly) automatically self-manages: the new nodes and DOM mutations\n * are auto-discovered or prompted.\n *\n * @package\n * @template SID subscriber ID type(s)\n */\nexport class ContextNode {\n  /**\n   * Returns the existing context node or creates a new one.\n   *\n   * @param {!Node} node\n   * @return {!ContextNode}\n   */\n  static get(node) {\n    let contextNode = /** @type {!ContextNode|undefined} */ (node[NODE_PROP]);\n    if (!contextNode) {\n      contextNode = new ContextNode(node, null);\n      if (getMode().localDev || getMode().test) {\n        // The `Object.defineProperty({enumerable: false})` helps tests, but\n        // hurts performance. So this is only done in a dev/test modes.\n        Object.defineProperty(node, NODE_PROP, {\n          value: contextNode,\n          writable: false,\n          enumerable: false,\n          configurable: false,\n        });\n      } else {\n        node[NODE_PROP] = contextNode;\n      }\n    }\n    return contextNode;\n  }\n\n  /**\n   * Returns the closest available context node to the one specified. If the\n   * `node` has the context node, it's returned unless `includeSelf` is set as\n   * `false`.\n   *\n   * The DOM traversal goes at most as far as the root node (document,\n   * shadow root, document fragment) or as far as the DOM tree allows. The\n   * traversal follows the assigned shadow slots.\n   *\n   * Root nodes (document or shadow root) and AMP elements are auto-created\n   * during the traversal.\n   *\n   * @param {!Node} node The node from which to perform the search.\n   * @param {boolean=} includeSelf Whether the specified node itself should\n   * be included in the search. Defaults to `true`.\n   * @return {?ContextNode}\n   */\n  static closest(node, includeSelf = true) {\n    let n = node;\n    while (n) {\n      // Check if a node is a candidate to be returned.\n      if (n != node || includeSelf) {\n        if (n[NODE_PROP]) {\n          // Already a discovered node.\n          return /** @type {!ContextNode} */ (n[NODE_PROP]);\n        }\n        const {nodeType} = n;\n        if (\n          // A context node is always created for a root. Due to this, a\n          // non-root element is always at least attached to a root. This\n          // allows for quick discovery and reattachment when new information\n          // becomes available.\n          nodeType == DOCUMENT_NODE ||\n          nodeType == FRAGMENT_NODE ||\n          // An AMP node will always have a context node backing it at some\n          // point.\n          (nodeType == ELEMENT_NODE &&\n            devAssertElement(n).tagName.startsWith(AMP_PREFIX))\n        ) {\n          return ContextNode.get(n);\n        }\n      }\n      // Navigate up the DOM tree. Notice that we do not automatically go over\n      // a root node boundary.\n      const assignedSlot =\n        /** @type {?Node|undefined} */ (n[ASSIGNED_SLOT_PROP]) ||\n        n.assignedSlot;\n      if (assignedSlot) {\n        n = assignedSlot;\n      } else {\n        n = n.parentNode;\n      }\n    }\n    // Only disconnected nodes will return `null` here.\n    return null;\n  }\n\n  /**\n   * Direct slot assignment. Works the same way as shadow slots, but does not\n   * require a shadow root. Automatically starts the discovery phase for the\n   * affected nodes.\n   *\n   * See `Element.assignedSlot` API.\n   *\n   * @param {!Node} node The target node.\n   * @param {!Node} slot The slot to which the target node is assigned.\n   */\n  static assignSlot(node, slot) {\n    if (node[ASSIGNED_SLOT_PROP] == slot) {\n      return;\n    }\n    node[ASSIGNED_SLOT_PROP] = slot;\n    discoverContained(node);\n  }\n\n  /**\n   * Unassigns the direct slot previously done by the `assignSlot` call.\n   * Automatically starts the discovery phase for the affected nodes.\n   *\n   * @param {!Node} node The target node.\n   * @param {!Node} slot The slot from which the target node is assigned.\n   */\n  static unassignSlot(node, slot) {\n    if (node[ASSIGNED_SLOT_PROP] != slot) {\n      return;\n    }\n    node[ASSIGNED_SLOT_PROP] = undefined;\n    discoverContained(node);\n  }\n\n  /**\n   * Reruns discovery on the children of the specified node, if any.\n   *\n   * @param {!Node} node\n   */\n  static rediscoverChildren(node) {\n    const contextNode = /** @type {!ContextNode|undefined} */ (node[NODE_PROP]);\n    contextNode?.children?.forEach(discoverContextNode);\n  }\n\n  /**\n   * Creates the context node and automatically starts the discovery process.\n   *\n   * @param {!Node} node\n   * @param {?string} name\n   */\n  constructor(node, name) {\n    /** @const {!Node} */\n    this.node = node;\n\n    /** @const @package {?string} */\n    this.name = name;\n\n    /**\n     * Whether this node is a root. The Document DOM nodes are automatically\n     * considered as roots. But other nodes can become roots as well\n     * (e.g. shadow roots) via `setIsRoot()` API.\n     *\n     * @package {boolean}\n     */\n    this.isRoot = node.nodeType == DOCUMENT_NODE;\n\n    /**\n     * The root context node. Always available for a DOM node connected to a\n     * root node after the discovery phase.\n     *\n     * @package {?ContextNode}\n     */\n    this.root = this.isRoot ? this : null;\n\n    /**\n     * Parent should be mostly meaningless to most API clients, because\n     * it's an async concept: a parent context node can can be instantiated at\n     * any time and it doesn't mean that this node has to change. This is\n     * why the API is declared as package-private. However, it needs to be\n     * unobfuscated to avoid cross-binary issues.\n     *\n     * @package {?ContextNode}\n     */\n    this.parent = null;\n\n    /**\n     * See `parent` description.\n     *\n     * @package {?Array<!ContextNode>}\n     */\n    this.children = null;\n\n    /** @package {?Map<string, !GroupDef>} */\n    this.groups = null;\n\n    /** @package {!Values} */\n    this.values = new Values(this);\n\n    /** @private {?Map<!SID, !./subscriber.Subscriber>} */\n    this.subscribers_ = null;\n\n    /** @private {boolean} */\n    this.parentOverridden_ = false;\n\n    /** @const @private {function()} */\n    this.scheduleDiscover_ = throttleTail(\n      this.discover_.bind(this),\n      setTimeout\n    );\n\n    // Shadow root: track slot changes.\n    if (node.nodeType == FRAGMENT_NODE) {\n      node.addEventListener('slotchange', (e) => {\n        const slot = /** @type {!HTMLSlotElement} */ (e.target);\n        // Rediscover newly assigned nodes.\n        slot.assignedNodes().forEach(discoverContained);\n        // Rediscover unassigned nodes.\n        ContextNode.closest(slot)?.children?.forEach(discoverContextNode);\n      });\n    }\n\n    this.discover();\n  }\n\n  /**\n   * Requests the discovery phase. Asynchronously finds the nearest parent for\n   * this node and its root. Roots and parents set directly via `setParent()`\n   * API are not discoverable.\n   */\n  discover() {\n    if (this.isDiscoverable()) {\n      this.scheduleDiscover_();\n    } else if (this.name && this.children) {\n      // Recursively discover the group's children.\n      this.children.forEach(discoverContextNode);\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @protected Used cross-binary.\n   */\n  isDiscoverable() {\n    return !this.isRoot && !this.parentOverridden_;\n  }\n\n  /**\n   * Sets (or unsets) the direct parent. If the parent is set, the node will no\n   * longer try to discover itself.\n   *\n   * @param {!ContextNode|!Node|null} parent\n   */\n  setParent(parent) {\n    const parentContext = parent?.nodeType\n      ? ContextNode.get(/** @type {!Node} */ (parent))\n      : /** @type {?ContextNode} */ (parent);\n    this.updateTree_(parentContext, /* parentOverridden */ parent != null);\n  }\n\n  /**\n   * Designates (or undesignates) the node as a root node. If the node is\n   * designated as a root, it will no longer discover itself.\n   *\n   * @param {boolean} isRoot\n   */\n  setIsRoot(isRoot) {\n    this.isRoot = isRoot;\n    const newRoot = isRoot ? this : this.parent?.root ?? null;\n    this.updateRoot(newRoot);\n  }\n\n  /**\n   * @param {?ContextNode} root\n   * @protected Used cross-binary.\n   */\n  updateRoot(root) {\n    devAssert(!root || root.isRoot);\n    const oldRoot = this.root;\n    if (root != oldRoot) {\n      // The root has changed.\n      this.root = root;\n\n      // Make sure the tree changes have been reflected for values.\n      this.values.rootUpdated();\n\n      // Make sure the tree changes have been reflected for subscribers.\n      this.subscribers_?.forEach((comp) => comp.rootUpdated());\n\n      // Propagate the root to the subtree.\n      this.children?.forEach((child) => child.updateRoot(root));\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {function(!Node):boolean} match\n   * @param {number} weight\n   * @return {!ContextNode}\n   */\n  addGroup(name, match, weight) {\n    const groups = this.groups || (this.groups = new Map());\n    const {children, node} = this;\n    const cn = new ContextNode(node, name);\n    groups.set(name, {cn, match, weight});\n    cn.setParent(this);\n    children?.forEach(discoverContextNode);\n    return cn;\n  }\n\n  /**\n   * @param {string} name\n   * @return {?ContextNode}\n   */\n  group(name) {\n    return this.groups?.get(name)?.cn || null;\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {?ContextNode}\n   * @protected\n   */\n  findGroup(node) {\n    const {groups} = this;\n    if (!groups) {\n      return null;\n    }\n    let found = null;\n    let maxWeight = Number.NEGATIVE_INFINITY;\n    groups.forEach(({cn, match, weight}) => {\n      if (match(node, this.node) && weight > maxWeight) {\n        found = cn;\n        maxWeight = weight;\n      }\n    });\n    return found;\n  }\n\n  /**\n   * Add or update a subscriber with a specified ID. If subscriber doesn't\n   * yet exist, it will be created using the specified factory. The use\n   * of factory is important to reduce bundling costs for context node.\n   *\n   * @param {!SID} id\n   * @param {typeof ./subscriber.Subscriber} Ctor\n   * @param {!Function} func\n   * @param {!Array<!ContextPropDef>} deps\n   */\n  subscribe(id, Ctor, func, deps) {\n    const subscribers = this.subscribers_ || (this.subscribers_ = new Map());\n    let subscriber = subscribers.get(id);\n    if (!subscriber) {\n      subscriber = new Ctor(this, func, deps);\n      subscribers.set(id, subscriber);\n    }\n  }\n\n  /**\n   * Removes the subscriber previously set with `subscribe`.\n   *\n   * @param {!SID} id\n   */\n  unsubscribe(id) {\n    const subscribers = this.subscribers_;\n    const subscriber = subscribers?.get(id);\n    if (subscriber) {\n      subscriber.dispose();\n      subscribers.delete(id);\n    }\n  }\n\n  /**\n   * Discovers the parent and the root. Runs asynchronously via scheduler.\n   * @private\n   */\n  discover_() {\n    if (!this.isDiscoverable()) {\n      // The discoverability might have changed while this task was in the\n      // queue.\n      return;\n    }\n    const closestNode = ContextNode.closest(this.node, /* includeSelf */ false);\n    const parent = closestNode?.findGroup(this.node) || closestNode;\n    this.updateTree_(parent, /* parentOverridden */ false);\n  }\n\n  /**\n   * @param {?ContextNode} parent\n   * @param {boolean} parentOverridden\n   * @private\n   */\n  updateTree_(parent, parentOverridden) {\n    this.parentOverridden_ = parentOverridden;\n\n    const oldParent = this.parent;\n    if (parent != oldParent) {\n      // The parent has changed.\n      this.parent = parent;\n\n      // Remove from the old parent.\n      if (oldParent?.children) {\n        removeItem(devAssert(oldParent.children), this);\n      }\n\n      // Add to the new parent.\n      if (parent) {\n        const parentChildren = parent.children || (parent.children = []);\n        pushIfNotExist(parentChildren, this);\n\n        // Check if this node has been inserted in between the parent and\n        // it's other children.\n        // Since the new parent (`this`) is already known, this is a very\n        // fast operation.\n        for (const child of parentChildren) {\n          if (child != this && child.isDiscoverable()) {\n            child.discover();\n          }\n        }\n      }\n\n      this.values.parentUpdated();\n    }\n\n    // Check the root.\n    this.updateRoot(parent?.root ?? null);\n  }\n}\n\n/**\n * Iterates over all context nodes that are contained within the specified\n * `node`. Only iterates over known context nodes.\n *\n * @param {!Node} node\n * @param {function(!ContextNode)} callback\n * @param {boolean=} includeSelf\n */\nfunction forEachContained(node, callback, includeSelf = true) {\n  const closest = ContextNode.closest(node, includeSelf);\n  if (!closest) {\n    return;\n  }\n  if (closest.node == node) {\n    callback(closest);\n  } else if (closest.children) {\n    for (const child of closest.children) {\n      if (node.contains(child.node)) {\n        callback(child);\n      }\n    }\n  }\n}\n\n/**\n * @param {!Node} node\n */\nfunction discoverContained(node) {\n  forEachContained(node, discoverContextNode);\n}\n\n/**\n * @param {!ContextNode} cn\n */\nfunction discoverContextNode(cn) {\n  cn.discover();\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ContextNode} from './node';\nimport {arrayOrSingleItemToArray} from '../core/types/array';\nimport {throttleTail} from './scheduler';\nimport {tryCallback} from '../core/error';\n\n// typedef imports\nimport {ContextPropDef} from './prop.type';\n\nconst EMPTY_ARRAY = [];\nconst EMPTY_FUNC = () => {};\n\n/**\n * Subscribes to the specified dependencies. The key API points:\n * - The subscriber is only called when all its dependencies are satisfied.\n * - If all its dependencies are satisfied at the time the subscriber is added,\n *   it's called right away.\n * - The subscriber is called whenever any of its dependencies change.\n * - A subscriber can optionally return a cleanup function.\n *\n * @param {!Node} node\n * @param {!ContextPropDef<DEP>|!Array<!ContextPropDef<DEP>>} deps\n * @param {function(...DEP)} callback\n * @template DEP\n */\nexport function subscribe(node, deps, callback) {\n  deps = arrayOrSingleItemToArray(deps);\n  const id = callback;\n  const contextNode = ContextNode.get(node);\n  contextNode.subscribe(id, Subscriber, callback, deps);\n}\n\n/**\n * Removes the subscriber prevoiously registered with `subscribe` API.\n *\n * @param {!Node} node\n * @param {function(...DEP)} callback\n * @template DEP\n */\nexport function unsubscribe(node, callback) {\n  const id = callback;\n  const contextNode = ContextNode.get(node);\n  contextNode.unsubscribe(id);\n}\n\n/**\n * The subscriber holder. It encapsulates the subscriber's dependencies,\n * internal state, and cleanup functions.\n *\n * @package\n * @template DEP\n */\nexport class Subscriber {\n  /**\n   * @param {!ContextNode} contextNode\n   * @param {function(...DEP)} func\n   * @param {!Array<!ContextPropDef<DEP>>} deps\n   */\n  constructor(contextNode, func, deps) {\n    /** @package @const {!ContextNode} */\n    this.contextNode = contextNode;\n\n    /** @private @const {function(DEP)} */\n    this.func_ = func;\n\n    /** @private @const {!Array<!ContextPropDef<DEP>>} */\n    this.deps_ = deps;\n\n    /**\n     * @private @const {!Array<DEP|undefined>}\n     *\n     * Start with a pre-allocated array filled with `undefined`. The filling\n     * is important to ensure the correct `Array.every` execution.\n     */\n    this.depValues_ = deps.length > 0 ? deps.map(EMPTY_FUNC) : EMPTY_ARRAY;\n\n    /** @private @const {!Array<function(DEP)>} */\n    this.depSubscribers_ =\n      deps.length > 0\n        ? deps.map((unusedDep, index) => (value) => {\n            this.depValues_[index] = value;\n            this.update_();\n          })\n        : EMPTY_ARRAY;\n\n    /** @private {boolean} */\n    this.running_ = false;\n\n    /** @private {?function()} */\n    this.runCleanup_ = null;\n\n    // Schedulers.\n    /** @private @const {function()} */\n    this.update_ = throttleTail(this.update_.bind(this), setTimeout);\n\n    // Subscribe to all dependencies.\n    if (deps.length > 0) {\n      const {values} = this.contextNode;\n      deps.forEach((dep, index) =>\n        values.subscribe(dep, this.depSubscribers_[index])\n      );\n    }\n\n    // Run the first time.\n    if (this.isConnected_()) {\n      this.update_();\n    }\n  }\n\n  /**\n   * Called when the subscriber is completely discarded, for instance via\n   * `ubsubscribe` API.\n   */\n  dispose() {\n    // Unsubscribe from all dependencies.\n    if (this.deps_.length > 0) {\n      const {values} = this.contextNode;\n      this.deps_.forEach((dep, index) =>\n        values.unsubscribe(dep, this.depSubscribers_[index])\n      );\n    }\n\n    this.cleanup_();\n  }\n\n  /**\n   * Called when the node's root has changed. It can be a different root or\n   * the node can be disconnected entirely.\n   */\n  rootUpdated() {\n    const isConnected = this.isConnected_();\n    this.cleanup_();\n    if (isConnected) {\n      this.update_();\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isConnected_() {\n    return !!this.contextNode.root;\n  }\n\n  /** @private */\n  update_() {\n    if (!this.isConnected_()) {\n      // The node was disconnected at some point.\n      return;\n    }\n    const running = this.depValues_.every(isDefined);\n    if (running) {\n      this.running_ = true;\n      this.run_();\n    } else if (this.running_) {\n      this.running_ = false;\n      this.cleanup_();\n    }\n  }\n\n  /** @private */\n  run_() {\n    // Cleanup the previous run.\n    if (this.runCleanup_) {\n      tryCallback(this.runCleanup_);\n      this.runCleanup_ = null;\n    }\n\n    // Run the subscriber.\n    const func = this.func_;\n    this.runCleanup_ = callHandler(func, this.depValues_);\n  }\n\n  /** @private */\n  cleanup_() {\n    // The last run's cleanup.\n    if (this.runCleanup_) {\n      tryCallback(this.runCleanup_);\n      this.runCleanup_ = null;\n    }\n  }\n}\n\n/**\n * Whether the value is defined.\n *\n * This function only exists to avoid function allocation when calling\n * `Array.every()` and `Array.some()`.\n *\n * @param {*} v\n * @return {boolean}\n */\nfunction isDefined(v) {\n  return v !== undefined;\n}\n\n/**\n * Creates a subscriber.\n *\n * @param {function(...DEP)} callback\n * @param {!Array<DEP>} deps\n * @return {?function()}\n * @template DEP\n */\nfunction callHandler(callback, deps) {\n  switch (deps.length) {\n    case 0:\n      return callback();\n    case 1:\n      return callback(deps[0]);\n    case 2:\n      return callback(deps[0], deps[1]);\n    case 3:\n      return callback(deps[0], deps[1], deps[2]);\n    default:\n      return callback.apply(null, deps);\n  }\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ContextNode} from './node';\nexport {contextProp} from './prop';\nexport {subscribe, unsubscribe} from './subscriber';\n\n// typedef imports\nimport {ContextPropDef} from './prop.type';\n\n/**\n * Direct slot assignment. Works the same way as shadow slots, but does not\n * require a shadow root. Automatically starts the discovery phase for the\n * affected nodes.\n *\n * See `Element.assignedSlot` API.\n *\n * @param {!Node} node The target node.\n * @param {!Node} slot The slot to which the target node is assigned.\n */\nexport function assignSlot(node, slot) {\n  ContextNode.assignSlot(node, slot);\n}\n\n/**\n * Unassigns the direct slot previously done by the `assignSlot` call.\n * Automatically starts the discovery phase for the affected nodes.\n *\n * @param {!Node} node The target node.\n * @param {!Node} slot The slot from which the target node is assigned.\n */\nexport function unassignSlot(node, slot) {\n  ContextNode.unassignSlot(node, slot);\n}\n\n/**\n * Sets (or unsets) the direct parent. If the parent is set, the node will no\n * longer try to discover itself.\n *\n * @param {!Node} node\n * @param {?Node} parent\n */\nexport function setParent(node, parent) {\n  ContextNode.get(node).setParent(parent);\n}\n\n/**\n * @param {!Node} node\n */\nexport function discover(node) {\n  ContextNode.get(node).discover();\n}\n\n/**\n * Designates (or undesignates) the node as a root node. If the node is\n * designated as a root, it will no longer discover itself.\n *\n * @param {!Node} node\n * @param {boolean} isRoot\n */\nexport function setIsRoot(node, isRoot) {\n  ContextNode.get(node).setIsRoot(isRoot);\n}\n\n/**\n * Reruns discovery on the children of the specified node, if any.\n *\n * @param {!Node} node\n */\nexport function rediscoverChildren(node) {\n  ContextNode.rediscoverChildren(node);\n}\n\n/**\n * Sets the property's input value. This is analagous to a CSS specified\n * value. Several values for the same property can be set on a node - one\n * per each setter. A repeated call for the same setter overwrites a\n * previously set input. This is similar to how the same CSS property can be\n * set in a stylesheet using different classes. The property computation\n * decides how to treat several values. For instance:\n * - A property can pick the first set input value (e.g. `font-size`).\n * - A property can pick the min/max set input value (e.g. `priority`).\n * - A property can reduce all values using `AND` (e.g. `renderable`).\n *\n * Once the input is set, the recalculation is rescheduled asynchronously.\n * All dependent properties are also recalculated.\n *\n * @param {!Node} node The target node.\n * @param {!ContextPropDef<T>} prop\n * @param {function(T)} setter\n * @param {T} value\n * @template T\n */\nexport function setProp(node, prop, setter, value) {\n  ContextNode.get(node).values.set(prop, setter, value);\n}\n\n/**\n * Unsets the input value for the specified property and setter.\n * See `setProp()` for more info.\n *\n * @param {!Node} node The target node.\n * @param {!ContextPropDef<T>} prop\n * @param {function(T)} setter\n * @template T\n */\nexport function removeProp(node, prop, setter) {\n  ContextNode.get(node).values.remove(prop, setter);\n}\n\n/**\n * @param {!Node} node\n * @param {string} name\n * @param {function(!Node):boolean} match\n * @param {number=} weight\n */\nexport function addGroup(node, name, match, weight = 0) {\n  ContextNode.get(node).addGroup(name, match, weight);\n}\n\n/**\n * @param {!Node} node\n * @param {string} groupName\n * @param {!ContextPropDef<T>} prop\n * @param {function(T)} setter\n * @param {T} value\n * @template T\n */\nexport function setGroupProp(node, groupName, prop, setter, value) {\n  ContextNode.get(node).group(groupName).values.set(prop, setter, value);\n}\n\n/**\n * @param {!Node} node\n * @param {string} groupName\n * @param {!ContextPropDef<T>} prop\n * @param {function(T)} setter\n * @template T\n */\nexport function removeGroupProp(node, groupName, prop, setter) {\n  ContextNode.get(node).group(groupName).values.remove(prop, setter);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from './index';\nimport {CanPlay, CanRender, LoadingProp} from '../context/contextprops';\nimport {Loading} from '../core/loading-instructions';\nimport {devAssert} from '../core/assert';\nimport {isElement} from '../core/types';\nimport {\n  loadAll,\n  pauseAll,\n  unmountAll,\n} from '../utils/resource-container-helper';\nimport {objectsEqualShallow} from '../core/types/object';\nimport {rediscoverChildren, removeProp, setProp} from '../context';\nimport {useAmpContext} from './context';\nimport {useEffect, useLayoutEffect, useRef} from './index';\n\nconst EMPTY = {};\n\n/** @const {WeakMap<Element, {oldDefauls: (!Object|undefined), component: Component}>} */\nconst cache = new WeakMap();\n\n/**\n * @param {!Element} element\n * @param {string} name\n * @param {!Object|undefined} defaultProps\n * @param {boolean|undefined} as\n * @return {!PreactDef.VNode|!PreactDef.FunctionalComponent}\n */\nexport function createSlot(element, name, defaultProps, as = false) {\n  element.setAttribute('slot', name);\n  if (!as) {\n    return <Slot {...(defaultProps || EMPTY)} name={name} />;\n  }\n\n  const cached = cache.get(element);\n  if (cached && objectsEqualShallow(cached.oldProps, defaultProps)) {\n    return cached.component;\n  }\n\n  /**\n   * @param {!Object|undefined} props\n   * @return {!PreactDef.VNode}\n   */\n  function SlotWithProps(props) {\n    return <Slot {...(defaultProps || EMPTY)} name={name} {...props} />;\n  }\n  cache.set(element, {oldProps: defaultProps, component: SlotWithProps});\n\n  return SlotWithProps;\n}\n\n/**\n * Slot component.\n *\n * @param {!JsonObject} props\n * @return {!PreactDef.VNode}\n */\nexport function Slot(props) {\n  const ref = useRef(/** @type {?Element} */ (null));\n\n  useSlotContext(ref, props);\n\n  useEffect(() => {\n    // Post-rendering cleanup, if any.\n    if (props['postRender']) {\n      props['postRender']();\n    }\n  });\n\n  return <slot {...props} ref={ref} />;\n}\n\n/**\n * @param {{current:?}} ref\n * @param {!JsonObject=} opt_props\n */\nexport function useSlotContext(ref, opt_props) {\n  const {'loading': loading} = opt_props || EMPTY;\n  const context = useAmpContext();\n\n  // Context changes.\n  useLayoutEffect(() => {\n    const slot = ref.current;\n    devAssert(isElement(slot), 'Element expected');\n\n    setProp(slot, CanRender, Slot, context.renderable);\n    setProp(slot, CanPlay, Slot, context.playable);\n    setProp(\n      slot,\n      LoadingProp,\n      Slot,\n      /** @type {!./core/loading-instructions.Loading} */ (context.loading)\n    );\n\n    if (!context.playable) {\n      execute(slot, pauseAll);\n    }\n\n    return () => {\n      removeProp(slot, CanRender, Slot);\n      removeProp(slot, CanPlay, Slot);\n      removeProp(slot, LoadingProp, Slot);\n      rediscoverChildren(slot);\n    };\n  }, [ref, context]);\n\n  // Mount and unmount. Keep it at the bottom because it's much better to\n  // execute `pause` before `unmount` in this case.\n  // This has to be a layout-effect to capture the old `Slot.assignedElements`\n  // before the browser undistributes them.\n  useLayoutEffect(() => {\n    const slot = ref.current;\n    devAssert(isElement(slot), 'Element expected');\n\n    // Mount children, unless lazy loading requested. If so the element should\n    // use `BaseElement.setAsContainer`.\n    if (loading != Loading.LAZY) {\n      // TODO(#31915): switch to `mount`.\n      execute(slot, loadAll);\n    }\n\n    return () => {\n      execute(slot, unmountAll);\n    };\n  }, [ref, loading]);\n}\n\n/**\n * @param {!Element} slot\n * @param {function(!AmpElement):void|function(!Array<!AmpElement>):void} action\n */\nfunction execute(slot, action) {\n  const assignedElements = slot.assignedElements\n    ? slot.assignedElements()\n    : slot;\n  if (Array.isArray(assignedElements) && assignedElements.length == 0) {\n    return;\n  }\n\n  const win = slot.ownerDocument.defaultView;\n  if (!win) {\n    return;\n  }\n\n  const scheduler = win.requestIdleCallback || win.setTimeout;\n  scheduler(() => action(assignedElements));\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../../../third_party/css-escape/css-escape';\nimport {devAssert} from '../assert';\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n * @suppress {uselessCode}\n */\nexport function escapeCssSelectorIdent(ident) {\n  // This gets rewritten to true/false during compilation. It will trigger an\n  // JSC_UNREACHABLE_CODE warning, but that's intentional for DCE.\n  if (IS_ESM) {\n    return CSS.escape(ident);\n  }\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n* @license\n* Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n* Use of this source code is governed by a BSD-style\n* license that can be found in the LICENSE file or at\n* https://developers.google.com/open-source/licenses/bsd\n*/\n\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsultion: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to imlement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\n\nexport const ShadowCSS = {\n  strictStyling: false,\n  // change a selector like 'div' to 'name div'\n  /** @this {ShadowCSS} */\n  scopeRules: function(cssRules, scopeSelector, opt_transformer) {\n    var cssText = '';\n    if (cssRules) {\n      Array.prototype.forEach.call(cssRules, function(rule) {\n        if (rule.selectorText && (rule.style && rule.style.cssText !== undefined)) {\n          cssText += this.scopeSelector(rule.selectorText, scopeSelector,\n            this.strictStyling, opt_transformer) + ' {\\n\\t';\n          cssText += this.propertiesFromRule(rule) + '\\n}\\n\\n';\n        } else if (rule.type === CSSRule.MEDIA_RULE) {\n          cssText += '@media ' + rule.media.mediaText + ' {\\n';\n          cssText += this.scopeRules(rule.cssRules, scopeSelector);\n          cssText += '\\n}\\n\\n';\n        } else {\n          // KEYFRAMES_RULE in IE throws when we query cssText\n          // when it contains a -webkit- property.\n          // if this happens, we fallback to constructing the rule\n          // from the CSSRuleSet\n          // https://connect.microsoft.com/IE/feedbackdetail/view/955703/accessing-csstext-of-a-keyframe-rule-that-contains-a-webkit-property-via-cssom-generates-exception\n          try {\n            if (rule.cssText) {\n              cssText += rule.cssText + '\\n\\n';\n            }\n          } catch(x) {\n            if (rule.type === CSSRule.KEYFRAMES_RULE && rule.cssRules) {\n              cssText += this.ieSafeCssTextFromKeyFrameRule(rule);\n            }\n          }\n        }\n      }, this);\n    }\n    return cssText;\n  },\n  /** @this {ShadowCSS} */\n  ieSafeCssTextFromKeyFrameRule: function(rule) {\n    var cssText = '@keyframes ' + rule.name + ' {';\n    Array.prototype.forEach.call(rule.cssRules, function(rule) {\n      cssText += ' ' + rule.keyText + ' {' + rule.style.cssText + '}';\n    });\n    cssText += ' }';\n    return cssText;\n  },\n  /** @this {ShadowCSS} */\n  scopeSelector: function(selector, scopeSelector, strict, opt_transformer) {\n    var r = [], parts = selector.split(',');\n    parts.forEach(function(p) {\n      p = p.trim();\n      if (opt_transformer) {\n        p = opt_transformer(p);\n      }\n      if (this.selectorNeedsScoping(p, scopeSelector)) {\n        p = (strict && !p.match(polyfillHostNoCombinator)) ?\n            this.applyStrictSelectorScope(p, scopeSelector) :\n            this.applySelectorScope(p, scopeSelector);\n      }\n      r.push(p);\n    }, this);\n    return r.join(', ');\n  },\n  /** @this {ShadowCSS} */\n  selectorNeedsScoping: function(selector, scopeSelector) {\n    if (Array.isArray(scopeSelector)) {\n      return true;\n    }\n    var re = this.makeScopeMatcher(scopeSelector);\n    return !selector.match(re);\n  },\n  /** @this {ShadowCSS} */\n  makeScopeMatcher: function(scopeSelector) {\n    scopeSelector = scopeSelector.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + selectorReSuffix, 'm');\n  },\n  /** @this {ShadowCSS} */\n  applySelectorScope: function(selector, selectorScope) {\n    return Array.isArray(selectorScope) ?\n        this.applySelectorScopeList(selector, selectorScope) :\n        this.applySimpleSelectorScope(selector, selectorScope);\n  },\n  // apply an array of selectors\n  /** @this {ShadowCSS} */\n  applySelectorScopeList: function(selector, scopeSelectorList) {\n    var r = [];\n    for (var i=0, s; (s=scopeSelectorList[i]); i++) {\n      r.push(this.applySimpleSelectorScope(selector, s));\n    }\n    return r.join(', ');\n  },\n  // scope via name and [is=name]\n  /** @this {ShadowCSS} */\n  applySimpleSelectorScope: function(selector, scopeSelector) {\n    if (selector.match(polyfillHostRe)) {\n      selector = selector.replace(polyfillHostNoCombinator, scopeSelector);\n      return selector.replace(polyfillHostRe, scopeSelector + ' ');\n    } else {\n      return scopeSelector + ' ' + selector;\n    }\n  },\n  // return a selector with [name] suffix on each simple selector\n  // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]\n  /** @this {ShadowCSS} */\n  applyStrictSelectorScope: function(selector, scopeSelector) {\n    scopeSelector = scopeSelector.replace(/\\[is=([^\\]]*)\\]/g, '$1');\n    var splits = [' ', '>', '+', '~'],\n      scoped = selector,\n      attrName = '[' + scopeSelector + ']';\n    splits.forEach(function(sep) {\n      var parts = scoped.split(sep);\n      scoped = parts.map(function(p) {\n        // remove :host since it should be unnecessary\n        var t = p.trim().replace(polyfillHostRe, '');\n        if (t && (splits.indexOf(t) < 0) && (t.indexOf(attrName) < 0)) {\n          p = t.replace(/([^:]*)(:*)(.*)/, '$1' + attrName + '$2$3');\n        }\n        return p;\n      }).join(sep);\n    });\n    return scoped;\n  },\n  /** @this {ShadowCSS} */\n  propertiesFromRule: function(rule) {\n    var cssText = rule.style.cssText;\n    // TODO(sorvell): Safari cssom incorrectly removes quotes from the content\n    // property. (https://bugs.webkit.org/show_bug.cgi?id=118045)\n    // don't replace attr rules\n    if (rule.style.content && !rule.style.content.match(/['\"]+|attr/)) {\n      cssText = cssText.replace(/content:[^;]*;/g, 'content: \\'' +\n          rule.style.content + '\\';');\n    }\n    // TODO(sorvell): we can workaround this issue here, but we need a list\n    // of troublesome properties to fix https://github.com/Polymer/platform/issues/53\n    //\n    // inherit rules can be omitted from cssText\n    // TODO(sorvell): remove when Blink bug is fixed:\n    // https://code.google.com/p/chromium/issues/detail?id=358273\n    var style = rule.style;\n    for (var i in style) {\n      if (style[i] === 'initial') {\n        cssText += i + ': initial; ';\n      }\n    }\n    return cssText;\n  }\n};\n\nvar selectorRe = /([^{]*)({[\\s\\S]*?})/gim,\n    cssCommentRe = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentNextSelectorRe = /\\/\\*\\s*@polyfill ([^*]*\\*+([^/*][^*]*\\*+)*\\/)([^{]*?){/gim,\n    cssContentNextSelectorRe = /polyfill-next-selector[^}]*content\\:[\\s]*?['\"](.*?)['\"][;\\s]*}([^{]*?){/gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentRuleRe = /\\/\\*\\s@polyfill-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim,\n    cssContentRuleRe = /(polyfill-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentUnscopedRuleRe = /\\/\\*\\s@polyfill-unscoped-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim,\n    cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim,\n    cssPseudoRe = /::(x-[^\\s{,(]*)/gim,\n    cssPartRe = /::part\\(([^)]*)\\)/gim,\n    // note: :host pre-processed to -shadowcsshost.\n    polyfillHost = '-shadowcsshost',\n    // note: :host-context pre-processed to -shadowcsshostcontext.\n    polyfillHostContext = '-shadowcsscontext',\n    parenSuffix = ')(?:\\\\((' +\n        '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n        ')\\\\))?([^,{]*)';\n    var cssColonHostRe = new RegExp('(' + polyfillHost + parenSuffix, 'gim'),\n    cssColonHostContextRe = new RegExp('(' + polyfillHostContext + parenSuffix, 'gim'),\n    selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$',\n    colonHostRe = /\\:host/gim,\n    colonHostContextRe = /\\:host-context/gim,\n    /* host name without combinator */\n    polyfillHostNoCombinator = polyfillHost + '-no-combinator',\n    polyfillHostRe = new RegExp(polyfillHost, 'gim'),\n    polyfillHostContextRe = new RegExp(polyfillHostContext, 'gim'),\n    shadowDOMSelectorsRe = [\n      />>>/g,\n      /::shadow/g,\n      /::content/g,\n      // Deprecated selectors\n      /\\/deep\\//g, // former >>>\n      /\\/shadow\\//g, // former ::shadow\n      /\\/shadow-deep\\//g, // former /deep/\n      /\\^\\^/g,     // former /shadow/\n      /\\^(?!=)/g   // former /shadow-deep/\n    ];\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DomWriterBulk, DomWriterStreamer} from './utils/dom-writer';\nimport {Services} from './services';\nimport {ShadowCSS} from '../third_party/webcomponentsjs/ShadowCSS';\nimport {\n  ShadowDomVersion,\n  getShadowDomSupportedVersion,\n  isShadowCssSupported,\n} from './core/dom/web-components';\nimport {dev, devAssert} from './log';\nimport {escapeCssSelectorIdent} from './core/dom/css-selectors';\nimport {installCssTransformer} from './style-installer';\nimport {iterateCursor} from './dom';\nimport {setInitialDisplay, setStyle} from './style';\nimport {toArray} from './core/types/array';\nimport {toWin} from './core/window';\n\n/** @const {!RegExp} */\nconst CSS_SELECTOR_BEG_REGEX = /[^\\.\\-\\_0-9a-zA-Z]/;\n\n/** @const {!RegExp} */\nconst CSS_SELECTOR_END_REGEX = /[^\\-\\_0-9a-zA-Z]/;\n\nconst SHADOW_CSS_CACHE = '__AMP_SHADOW_CSS';\n\n/**\n * @type {boolean|undefined}\n */\nlet shadowDomStreamingSupported;\n\n/**\n * Creates a shadow root for the specified host and returns it. Polyfills\n * shadow root creation if necessary.\n * @param {!Element} hostElement\n * @return {!ShadowRoot}\n */\nexport function createShadowRoot(hostElement) {\n  const win = toWin(hostElement.ownerDocument.defaultView);\n\n  const existingRoot = hostElement.shadowRoot || hostElement.__AMP_SHADOW_ROOT;\n  if (existingRoot) {\n    existingRoot./*OK*/ innerHTML = '';\n    return existingRoot;\n  }\n\n  let shadowRoot;\n  const shadowDomSupported = getShadowDomSupportedVersion();\n  if (shadowDomSupported == ShadowDomVersion.V1) {\n    shadowRoot = hostElement.attachShadow({mode: 'open'});\n    if (!shadowRoot.styleSheets) {\n      Object.defineProperty(shadowRoot, 'styleSheets', {\n        get: function () {\n          const items = [];\n          iterateCursor(shadowRoot.childNodes, (child) => {\n            if (child.tagName === 'STYLE') {\n              items.push(child.sheet);\n            }\n          });\n          return items;\n        },\n      });\n    }\n  } else if (shadowDomSupported == ShadowDomVersion.V0) {\n    shadowRoot = hostElement.createShadowRoot();\n  } else {\n    shadowRoot = createShadowRootPolyfill(hostElement);\n  }\n\n  if (!isShadowCssSupported()) {\n    const rootId = `i-amphtml-sd-${win.Math.floor(win.Math.random() * 10000)}`;\n    shadowRoot['id'] = rootId;\n    shadowRoot.host.classList.add(rootId);\n\n    // CSS isolation.\n    installCssTransformer(shadowRoot, (css) => {\n      return transformShadowCss(shadowRoot, css);\n    });\n  }\n\n  return shadowRoot;\n}\n\n/**\n * Shadow root polyfill.\n * @param {!Element} hostElement\n * @return {!ShadowRoot}\n */\nfunction createShadowRootPolyfill(hostElement) {\n  const doc = hostElement.ownerDocument;\n\n  // Host CSS polyfill.\n  hostElement.classList.add('i-amphtml-shadow-host-polyfill');\n  const hostStyle = doc.createElement('style');\n  hostStyle.textContent =\n    '.i-amphtml-shadow-host-polyfill>:not(i-amphtml-shadow-root)' +\n    '{display:none!important}';\n  hostElement.appendChild(hostStyle);\n\n  // Shadow root.\n  const shadowRoot /** @type {!ShadowRoot} */ =\n    // Cast to ShadowRoot even though it is an Element\n    // TODO(@dvoytenko) Consider to switch to a type union instead.\n    /** @type {?}  */ (doc.createElement('i-amphtml-shadow-root'));\n  hostElement.appendChild(shadowRoot);\n  hostElement.__AMP_SHADOW_ROOT = shadowRoot;\n  Object.defineProperty(hostElement, 'shadowRoot', {\n    enumerable: true,\n    configurable: true,\n    value: shadowRoot,\n  });\n\n  // API: https://www.w3.org/TR/shadow-dom/#the-shadowroot-interface\n\n  shadowRoot.host = hostElement;\n\n  // `getElementById` is resolved via `querySelector('#id')`.\n  shadowRoot.getElementById = function (id) {\n    const escapedId = escapeCssSelectorIdent(id);\n    return /** @type {?HTMLElement} */ (\n      shadowRoot./*OK*/ querySelector(`#${escapedId}`)\n    );\n  };\n\n  // The styleSheets property should have a list of local styles.\n  Object.defineProperty(shadowRoot, 'styleSheets', {\n    get: () => {\n      if (!doc.styleSheets) {\n        return [];\n      }\n      return toArray(doc.styleSheets).filter((styleSheet) =>\n        shadowRoot.contains(styleSheet.ownerNode)\n      );\n    },\n  });\n\n  return shadowRoot;\n}\n\n/**\n * Imports a body into a shadow root with the workaround for a polyfill case.\n * @param {!ShadowRoot} shadowRoot\n * @param {!Element} body\n * @param {boolean} deep\n * @return {!Element}\n */\nexport function importShadowBody(shadowRoot, body, deep) {\n  const doc = shadowRoot.ownerDocument;\n  let resultBody;\n  if (isShadowCssSupported()) {\n    resultBody = dev().assertElement(doc.importNode(body, deep));\n  } else {\n    resultBody = doc.createElement('amp-body');\n    setInitialDisplay(resultBody, 'block');\n    for (let i = 0; i < body.attributes.length; i++) {\n      resultBody.setAttribute(\n        body.attributes[0].name,\n        body.attributes[0].value\n      );\n    }\n    if (deep) {\n      for (let n = body.firstChild; !!n; n = n.nextSibling) {\n        resultBody.appendChild(doc.importNode(n, true));\n      }\n    }\n  }\n  setStyle(resultBody, 'position', 'relative');\n  const oldBody = shadowRoot['body'];\n  if (oldBody) {\n    shadowRoot.removeChild(oldBody);\n  }\n  shadowRoot.appendChild(resultBody);\n  Object.defineProperty(shadowRoot, 'body', {\n    configurable: true,\n    value: resultBody,\n  });\n  return resultBody;\n}\n\n/**\n * If necessary, transforms CSS to isolate AMP CSS within the shaodw root and\n * reduce the possibility of high-level conflicts.\n * @param {!ShadowRoot} shadowRoot\n * @param {string} css\n * @return {string}\n */\nexport function transformShadowCss(shadowRoot, css) {\n  return scopeShadowCss(shadowRoot, css);\n}\n\n/**\n * Transforms CSS to isolate AMP CSS within the shadow root and reduce the\n * possibility of high-level conflicts. There are two types of transformations:\n * 1. Root transformation: `body` -> `amp-body`, etc.\n * 2. Scoping: `a {}` -> `.i-amphtml-sd-123 a {}`.\n *\n * @param {!ShadowRoot} shadowRoot\n * @param {string} css\n * @return {string}\n * @visibleForTesting\n */\nexport function scopeShadowCss(shadowRoot, css) {\n  const id = devAssert(shadowRoot['id']);\n  const doc = shadowRoot.ownerDocument;\n  let rules = null;\n  // Try to use a separate document.\n  try {\n    rules = getStylesheetRules(doc.implementation.createHTMLDocument(''), css);\n  } catch (e) {\n    // Ignore.\n  }\n  // Try to use the current document.\n  if (!rules) {\n    try {\n      rules = getStylesheetRules(doc, css);\n    } catch (e) {\n      // Ignore.\n    }\n  }\n\n  // No rules could be parsed - return css as is.\n  if (!rules) {\n    return css;\n  }\n\n  // Patch selectors.\n  // Invoke `ShadowCSS.scopeRules` via `call` because the way it uses `this`\n  // internally conflicts with Closure compiler's advanced optimizations.\n  const {scopeRules} = ShadowCSS;\n  return scopeRules.call(ShadowCSS, rules, `.${id}`, transformRootSelectors);\n}\n\n/**\n * Replaces top-level selectors such as `html` and `body` with their polyfill\n * counterparts: `amp-html` and `amp-body`.\n * @param {string} selector\n * @return {string}\n */\nfunction transformRootSelectors(selector) {\n  return selector.replace(/(html|body)/g, rootSelectorPrefixer);\n}\n\n/**\n * See `transformRootSelectors`.\n * @param {string} match\n * @param {string} name\n * @param {number} pos\n * @param {string} selector\n * @return {string}\n * @private\n */\nfunction rootSelectorPrefixer(match, name, pos, selector) {\n  const prev = selector.charAt(pos - 1);\n  const next = selector.charAt(pos + match.length);\n  if (\n    (!prev || CSS_SELECTOR_BEG_REGEX.test(prev)) &&\n    (!next || CSS_SELECTOR_END_REGEX.test(next))\n  ) {\n    return 'amp-' + match;\n  }\n  return match;\n}\n\n/**\n * @param {!Document} doc\n * @param {string} css\n * @return {?CSSRuleList}\n */\nfunction getStylesheetRules(doc, css) {\n  const style = /** @type {!HTMLStyleElement} */ (doc.createElement('style'));\n  style./*OK*/ textContent = css;\n  try {\n    (doc.head || doc.documentElement).appendChild(style);\n    if (style.sheet) {\n      return /** @type {!CSSStyleSheet} */ (style.sheet).cssRules;\n    }\n    return null;\n  } finally {\n    if (style.parentNode) {\n      style.parentNode.removeChild(style);\n    }\n  }\n}\n\n/**\n * @param {!ShadowRoot} shadowRoot\n * @param {string} name\n * @param {string} cssText\n */\nexport function installShadowStyle(shadowRoot, name, cssText) {\n  const doc = shadowRoot.ownerDocument;\n  const win = toWin(doc.defaultView);\n  if (\n    shadowRoot.adoptedStyleSheets !== undefined &&\n    win.CSSStyleSheet.prototype.replaceSync !== undefined\n  ) {\n    const cache = win[SHADOW_CSS_CACHE] || (win[SHADOW_CSS_CACHE] = {});\n    let styleSheet = cache[name];\n    if (!styleSheet) {\n      styleSheet = new win.CSSStyleSheet();\n      styleSheet.replaceSync(cssText);\n      cache[name] = styleSheet;\n    }\n    shadowRoot.adoptedStyleSheets =\n      shadowRoot.adoptedStyleSheets.concat(styleSheet);\n  } else {\n    const styleEl = doc.createElement('style');\n    styleEl.setAttribute('data-name', name);\n    styleEl.textContent = cssText;\n    shadowRoot.appendChild(styleEl);\n  }\n}\n\n/**\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetShadowStyleCacheForTesting(win) {\n  win[SHADOW_CSS_CACHE] = null;\n}\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setShadowDomStreamingSupportedForTesting(val) {\n  shadowDomStreamingSupported = val;\n}\n\n/**\n * Returns `true` if the Shadow DOM streaming is supported.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isShadowDomStreamingSupported(win) {\n  if (shadowDomStreamingSupported === undefined) {\n    shadowDomStreamingSupported = calcShadowDomStreamingSupported(win);\n  }\n  return shadowDomStreamingSupported;\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nfunction calcShadowDomStreamingSupported(win) {\n  // API must be supported.\n  if (\n    !win.document.implementation ||\n    typeof win.document.implementation.createHTMLDocument != 'function'\n  ) {\n    return false;\n  }\n  // Firefox does not support DOM streaming.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=867102\n  if (Services.platformFor(win).isFirefox()) {\n    return false;\n  }\n  // Assume full streaming support.\n  return true;\n}\n\n/**\n * Creates the Shadow DOM writer available on this platform.\n * @param {!Window} win\n * @return {!./utils/dom-writer.DomWriter}\n */\nexport function createShadowDomWriter(win) {\n  if (isShadowDomStreamingSupported(win)) {\n    return new DomWriterStreamer(win);\n  }\n  return new DomWriterBulk(win);\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the \"next\" function that generates a new sequential ID on each call.\n * @return {function():string}\n */\nexport function sequentialIdGenerator() {\n  let counter = 0;\n  return () => String(++counter);\n}\n\n/**\n * Returns a function that generates a random id in string format.  The random\n * id will be an integer from 0 to maxValue (non-inclusive).\n * @param {number} maxValue\n * @return {function():string}\n */\nexport function randomIdGenerator(maxValue) {\n  return () => String(Math.floor(Math.random() * maxValue));\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from './index';\nimport {ActionTrust} from '../core/constants/action-constants';\nimport {AmpEvents} from '../core/constants/amp-events';\nimport {CanPlay, CanRender, LoadingProp} from '../context/contextprops';\nimport {Deferred} from '../core/data-structures/promise';\nimport {Layout, isLayoutSizeDefined} from '../layout';\nimport {Loading} from '../core/loading-instructions';\nimport {MediaQueryProps} from '../core/dom/media-query-props';\nimport {PauseHelper} from '../utils/pause-helper';\nimport {ReadyState} from '../core/constants/ready-state';\nimport {Slot, createSlot} from './slot';\nimport {WithAmpContext} from './context';\nimport {\n  addGroup,\n  discover,\n  setGroupProp,\n  setParent,\n  subscribe,\n} from '../context';\nimport {\n  childElementByAttr,\n  childElementByTag,\n  matches,\n} from '../core/dom/query';\nimport {\n  createElementWithAttributes,\n  dispatchCustomEvent,\n  parseBooleanAttribute,\n} from '../dom';\nimport {dashToCamelCase} from '../core/types/string';\nimport {devAssert} from '../core/assert';\nimport {dict, hasOwn, map} from '../core/types/object';\nimport {getDate} from '../core/types/date';\nimport {getMode} from '../mode';\nimport {hydrate, render} from './index';\nimport {installShadowStyle} from '../shadow-embed';\nimport {isElement} from '../core/types';\nimport {sequentialIdGenerator} from '../core/math/id-generator';\nimport {toArray} from '../core/types/array';\n\n/**\n * The following combinations are allowed.\n * - `attr`, (optionally) `type`, and (optionally) `media` can be specified when\n *   an attribute maps to a component prop 1:1.\n * - `attrs` and `parseAttrs` can be specified when multiple attributes map\n *   to a single prop.\n * - `attrPrefix` can be specified when multiple attributes with the same prefix\n *   map to a single prop object. The prefix cannot equal the attribute name.\n * - `selector` can be specified for children of a certain shape and structure\n *   according to ChildDef.\n * - `passthrough` can be specified to slot children using a single\n *   `<slot>` element for all children. This is in contrast to selector mode,\n *   which creates a new named `<slot>` for every selector.\n * - `passthroughNonEmpty` is similar to passthrough mode except that when there\n *   are no children elements, the returned value will be null instead of the\n *   unnamed `<slot>`. This allows the Preact environment to have conditional\n *   behavior depending on whether or not there are children.\n *\n * @typedef {{\n *   attr: (string|undefined),\n *   type: (string|undefined),\n *   attrPrefix: (string|undefined),\n *   attrs: (!Array<string>|undefined),\n *   parseAttrs: ((function(!Element):*)|undefined),\n *   media: (boolean|undefined),\n *   default: *,\n * }|string}\n */\nlet AmpElementPropDef;\n\n/**\n * @typedef {{\n *   name: string,\n *   selector: string,\n *   single: (boolean|undefined),\n *   clone: (boolean|undefined),\n *   props: (!JsonObject|undefined),\n * }}\n */\nlet ChildDef;\n\n/** @const {!MutationObserverInit} */\nconst CHILDREN_MUTATION_INIT = {\n  childList: true,\n};\n\n/** @const {!MutationObserverInit} */\nconst PASSTHROUGH_MUTATION_INIT = {\n  childList: true,\n  characterData: true,\n};\n\n/** @const {!MutationObserverInit} */\nconst TEMPLATES_MUTATION_INIT = {\n  childList: true,\n};\n\n/** @const {!JsonObject<string, string>} */\nconst SHADOW_CONTAINER_ATTRS = dict({\n  'style': 'display: contents; background: inherit;',\n  'part': 'c',\n});\n\n/** @const {string} */\nconst SERVICE_SLOT_NAME = 'i-amphtml-svc';\n\n/** @const {!JsonObject<string, string>} */\nconst SERVICE_SLOT_ATTRS = dict({'name': SERVICE_SLOT_NAME});\n\n/** @const {string} */\nconst RENDERED_ATTR = 'i-amphtml-rendered';\n\n/** @const {!JsonObject<string, string>} */\nconst RENDERED_ATTRS = dict({'i-amphtml-rendered': ''});\n\n/**\n * The same as `applyFillContent`, but inside the shadow.\n * @const {!Object}\n */\nconst SIZE_DEFINED_STYLE = {\n  'position': 'absolute',\n  'top': '0',\n  'left': '0',\n  'width': '100%',\n  'height': '100%',\n};\n\n/**\n * This is an internal property that marks light DOM nodes that were rendered\n * by AMP/Preact bridge and thus must be ignored by the mutation observer to\n * avoid mutate->rerender->mutate loops.\n */\nconst RENDERED_PROP = '__AMP_RENDERED';\n\nconst UNSLOTTED_GROUP = 'unslotted';\n\n/** @return {boolean} */\nconst MATCH_ANY = () => true;\n\nconst childIdGenerator = sequentialIdGenerator();\n\nconst ONE_OF_ERROR_MESSAGE =\n  'Only one of \"attr\", \"attrs\", \"attrPrefix\", \"passthrough\", ' +\n  '\"passthroughNonEmpty\", or \"selector\" must be given';\n\n/**\n * @param {!Object<string, !AmpElementPropDef>} propDefs\n * @param {function(!AmpElementPropDef):boolean} cb\n * @return {boolean}\n */\nfunction checkPropsFor(propDefs, cb) {\n  return Object.values(propDefs).some(cb);\n}\n\n/**\n * @param {!AmpElementPropDef} def\n * @return {boolean}\n */\nconst HAS_MEDIA = (def) => !!def.media;\n\n/**\n * @param {!AmpElementPropDef} def\n * @return {boolean}\n */\nconst HAS_SELECTOR = (def) => typeof def === 'string' || !!def.selector;\n\n/**\n * @param {!AmpElementPropDef} def\n * @return {boolean}\n */\nconst HAS_PASSTHROUGH = (def) => !!(def.passthrough || def.passthroughNonEmpty);\n\n/**\n * @param {Node} node\n * @return {boolean}\n */\nconst IS_EMPTY_TEXT_NODE = (node) =>\n  node.nodeType === /* TEXT_NODE */ 3 && node.nodeValue.trim().length === 0;\n\n/**\n * Wraps a Preact Component in a BaseElement class.\n *\n * Most functionality should be done in Preact. We don't expose the BaseElement\n * subclass on purpose, you're not meant to do work in the subclass! There will\n * be very few exceptions, which is why we allow options to configure the\n * class.\n *\n * @template API_TYPE\n */\nexport class PreactBaseElement extends AMP.BaseElement {\n  /** @override @nocollapse */\n  static R1() {\n    return true;\n  }\n\n  /** @override @nocollapse */\n  static requiresShadowDom() {\n    // eslint-disable-next-line local/no-static-this\n    return this['usesShadowDom'];\n  }\n\n  /** @override @nocollapse */\n  static usesLoading() {\n    // eslint-disable-next-line local/no-static-this\n    const Ctor = this;\n    return Ctor['loadable'];\n  }\n\n  /** @override @nocollapse */\n  static prerenderAllowed() {\n    // eslint-disable-next-line local/no-static-this\n    const Ctor = this;\n    return !Ctor.usesLoading();\n  }\n\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {!JsonObject} */\n    this.defaultProps_ = dict({\n      'loading': Loading.AUTO,\n      'onReadyState': this.onReadyState_.bind(this),\n      'onPlayingState': this.updateIsPlaying_.bind(this),\n    });\n\n    /** @private {!AmpContextDef.ContextType} */\n    this.context_ = {\n      renderable: false,\n      playable: true,\n      loading: Loading.AUTO,\n      notify: () => this.mutateElement(() => {}),\n    };\n\n    /** @private {boolean} */\n    this.resetLoading_ = false;\n\n    /** @private {?API_TYPE} */\n    this.apiWrapper_ = null;\n\n    /** @private {?API_TYPE} */\n    this.currentRef_ = null;\n\n    /** @param {?API_TYPE|null} current */\n    this.refSetter_ = (current) => {\n      // The API shape **must** be consistent.\n      if (current !== null) {\n        if (this.apiWrapper_) {\n          this.checkApiWrapper_(current);\n        } else {\n          this.initApiWrapper_(current);\n        }\n      }\n      this.currentRef_ = current;\n      this.maybeUpdateReadyState_();\n    };\n\n    /** @type {?Deferred<!API_TYPE>} */\n    this.deferredApi_ = null;\n\n    /** @private {?Array} */\n    this.contextValues_ = null;\n\n    /** @private {?Node} */\n    this.container_ = null;\n\n    /** @private {boolean} */\n    this.scheduledRender_ = false;\n\n    /** @private {?Deferred} */\n    this.renderDeferred_ = null;\n\n    /** @private @const {function()} */\n    this.boundRerender_ = () => {\n      this.scheduledRender_ = false;\n      this.rerender_();\n    };\n\n    /** @private {boolean} */\n    this.hydrationPending_ = false;\n\n    /** @private {boolean} */\n    this.mounted_ = false;\n\n    /** @protected {?MutationObserver} */\n    this.observer = null;\n\n    /** @private {!PauseHelper} */\n    this.pauseHelper_ = new PauseHelper(element);\n\n    /** @protected {?MediaQueryProps} */\n    this.mediaQueryProps_ = null;\n  }\n\n  /**\n   * A chance to initialize default Preact props for the element.\n   *\n   * @return {!JsonObject|undefined}\n   */\n  init() {}\n\n  /** @override */\n  isLayoutSupported(layout) {\n    const Ctor = this.constructor;\n    if (Ctor['layoutSizeDefined']) {\n      return (\n        isLayoutSizeDefined(layout) ||\n        // This allows a developer to specify the component's size using the\n        // user stylesheet without the help of AMP's static layout rules.\n        // Bento components use `ContainWrapper` with `contain:strict`, thus\n        // if a user stylesheet doesn't provide for the appropriate size, the\n        // element's size will be 0. The user stylesheet CSS can use\n        // fixed `width`/`height`, `aspect-ratio`, `flex`, `grid`, or any\n        // other CSS layouts coupled with `@media` queries and other CSS tools.\n        // Besides normal benefits of using plain CSS, an important feature of\n        // using this layout is that AMP does not add \"sizer\" elements thus\n        // keeping the user DOM clean.\n        layout == Layout.CONTAINER\n      );\n    }\n    return super.isLayoutSupported(layout);\n  }\n\n  /** @override */\n  buildCallback() {\n    const Ctor = this.constructor;\n\n    this.observer = new MutationObserver(this.checkMutations_.bind(this));\n    const props = Ctor['props'];\n    const childrenInit = checkPropsFor(props, HAS_SELECTOR)\n      ? CHILDREN_MUTATION_INIT\n      : null;\n    const passthroughInit = checkPropsFor(props, HAS_PASSTHROUGH)\n      ? PASSTHROUGH_MUTATION_INIT\n      : null;\n    const templatesInit = Ctor['usesTemplate'] ? TEMPLATES_MUTATION_INIT : null;\n    this.observer.observe(this.element, {\n      attributes: true,\n      ...childrenInit,\n      ...passthroughInit,\n      ...templatesInit,\n    });\n\n    this.mediaQueryProps_ = checkPropsFor(props, HAS_MEDIA)\n      ? new MediaQueryProps(this.win, () => this.scheduleRender_())\n      : null;\n\n    const staticProps = Ctor['staticProps'];\n    const initProps = this.init();\n    Object.assign(\n      /** @type {!Object} */ (this.defaultProps_),\n      staticProps,\n      initProps\n    );\n\n    this.checkPropsPostMutations();\n\n    // Unmount callback.\n    subscribe(this.element, [], () => {\n      return () => {\n        this.mounted_ = false;\n        if (this.container_) {\n          // We have to unmount the component to run all cleanup functions and\n          // release handlers. The only way to unmount right now is by\n          // unrendering the DOM. If the new `unmount` API becomes available, this\n          // code can be changed to `unmount` and the follow up render would\n          // have to execute the fast `hydrate` API.\n          render(null, this.container_);\n        }\n      };\n    });\n\n    // Unblock rendering on first `CanRender` response. And keep the context\n    // in-sync.\n    subscribe(\n      this.element,\n      [CanRender, CanPlay, LoadingProp],\n      (canRender, canPlay, loading) => {\n        this.context_.renderable = canRender;\n        this.context_.playable = canPlay;\n        this.context_.loading = loading;\n        this.mounted_ = true;\n        this.scheduleRender_();\n      }\n    );\n\n    const useContexts = Ctor['useContexts'];\n    if (useContexts.length != 0) {\n      subscribe(this.element, useContexts, (...contexts) => {\n        this.contextValues_ = contexts;\n        this.scheduleRender_();\n      });\n    }\n\n    this.renderDeferred_ = new Deferred();\n    this.scheduleRender_();\n\n    if (Ctor['loadable']) {\n      this.setReadyState(ReadyState.LOADING);\n    }\n    this.maybeUpdateReadyState_();\n\n    return this.renderDeferred_.promise;\n  }\n\n  /** @override */\n  ensureLoaded() {\n    const Ctor = this.constructor;\n    if (!Ctor['loadable']) {\n      return;\n    }\n    this.mutateProps(dict({'loading': Loading.EAGER}));\n    this.resetLoading_ = true;\n  }\n\n  /** @override */\n  mountCallback() {\n    discover(this.element);\n    const Ctor = this.constructor;\n    if (Ctor['loadable'] && this.getProp('loading') != Loading.AUTO) {\n      this.mutateProps({'loading': Loading.AUTO});\n      this.resetLoading_ = false;\n    }\n  }\n\n  /** @override */\n  unmountCallback() {\n    discover(this.element);\n    const Ctor = this.constructor;\n    if (Ctor['loadable']) {\n      this.mutateProps({'loading': Loading.UNLOAD});\n    }\n    this.updateIsPlaying_(false);\n    this.mediaQueryProps_?.dispose();\n  }\n\n  /** @override */\n  mutatedAttributesCallback() {\n    if (this.container_) {\n      this.scheduleRender_();\n    }\n  }\n\n  /**\n   * @protected\n   * @param {!JsonObject} props\n   */\n  mutateProps(props) {\n    Object.assign(/** @type {!Object} */ (this.defaultProps_), props);\n    this.scheduleRender_();\n  }\n\n  /**\n   * @return {!API_TYPE}\n   * @protected\n   */\n  api() {\n    return devAssert(this.currentRef_);\n  }\n\n  /**\n   * @param {string} alias\n   * @param {function(!API_TYPE, !../service/action-impl.ActionInvocation)} handler\n   * @param {../action-constants.ActionTrust} minTrust\n   * @protected\n   */\n  registerApiAction(alias, handler, minTrust = ActionTrust.DEFAULT) {\n    this.registerAction(\n      alias,\n      (invocation) => handler(this.api(), invocation),\n      minTrust\n    );\n  }\n\n  /**\n   * A callback called immediately after mutations have been observed on a\n   * component. This differs from `checkPropsPostMutations` in that it is\n   * called in all cases of mutation.\n   * @param {!Array<MutationRecord>} unusedRecords\n   * @protected\n   */\n  mutationObserverCallback(unusedRecords) {}\n\n  /**\n   * A callback called immediately after mutations have been observed on a\n   * component's defined props. The implementation can verify if any\n   * additional properties need to be mutated via `mutateProps()` API.\n   * @protected\n   */\n  checkPropsPostMutations() {}\n\n  /**\n   * A callback called to compute props before rendering is run. The properties\n   * computed here and ephemeral and thus should not be persisted via a\n   * `mutateProps()` method.\n   * @param {!JsonObject} unusedProps\n   * @protected\n   */\n  updatePropsForRendering(unusedProps) {}\n\n  /**\n   * A callback called to check whether the element is ready for rendering.\n   * @param {!JsonObject} unusedProps\n   * @return {boolean}\n   * @protected\n   */\n  isReady(unusedProps) {\n    return true;\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} records\n   * @private\n   */\n  checkMutations_(records) {\n    const Ctor = this.constructor;\n    this.mutationObserverCallback(records);\n    const rerender = records.some((m) => shouldMutationBeRerendered(Ctor, m));\n    if (rerender) {\n      this.checkPropsPostMutations();\n      this.scheduleRender_();\n    }\n  }\n\n  /** @private */\n  scheduleRender_() {\n    if (!this.scheduledRender_) {\n      this.scheduledRender_ = true;\n      this.mutateElement(this.boundRerender_);\n    }\n  }\n\n  /** @private */\n  maybeUpdateReadyState_() {\n    const {currentRef_: api} = this;\n\n    const apiReadyState = api?.['readyState'];\n    if (apiReadyState && apiReadyState !== this.element.readyState) {\n      this.onReadyState_(apiReadyState);\n    }\n  }\n\n  /**\n   * @param {!ReadyState} state\n   * @param {*=} opt_failure\n   * @private\n   */\n  onReadyState_(state, opt_failure) {\n    this.setReadyState(state, opt_failure);\n\n    const Ctor = this.constructor;\n    if (Ctor['unloadOnPause']) {\n      // These are typically iframe-based elements where we don't know\n      // whether a media is currently playing. So we have to assume that\n      // it is whenever the element is loaded.\n      this.updateIsPlaying_(state == ReadyState.COMPLETE);\n    }\n\n    // Reset \"loading\" property back to \"auto\".\n    if (this.resetLoading_) {\n      this.resetLoading_ = false;\n      this.mutateProps({'loading': Loading.AUTO});\n    }\n  }\n\n  /** @private */\n  rerender_() {\n    // If the component unmounted before the scheduled render runs, exit\n    // early.\n    if (!this.mounted_) {\n      return;\n    }\n\n    const Ctor = this.constructor;\n    const isShadow = Ctor['usesShadowDom'];\n    const lightDomTag = isShadow ? null : Ctor['lightDomTag'];\n    const isDetached = Ctor['detached'];\n\n    if (!this.container_) {\n      const doc = this.win.document;\n      if (isShadow) {\n        devAssert(\n          !isDetached,\n          'The AMP element cannot be rendered in detached mode ' +\n            'when \"props\" are configured with \"children\" property.'\n        );\n        // Check if there's a pre-constructed shadow DOM.\n        let {shadowRoot} = this.element;\n        let container = shadowRoot && childElementByTag(shadowRoot, 'c');\n        if (container) {\n          this.hydrationPending_ = true;\n        } else {\n          // Create new shadow root.\n          shadowRoot = this.element.attachShadow({\n            mode: 'open',\n            delegatesFocus: Ctor['delegatesFocus'],\n          });\n\n          // The pre-constructed shadow root is required to have the stylesheet\n          // inline. Thus, only the new shadow roots share the stylesheets.\n          const shadowCss = Ctor['shadowCss'];\n          if (shadowCss) {\n            installShadowStyle(shadowRoot, this.element.tagName, shadowCss);\n          }\n\n          // Create container.\n          // The pre-constructed shadow root is required to have this container.\n          container = createElementWithAttributes(\n            doc,\n            'c',\n            SHADOW_CONTAINER_ATTRS\n          );\n          shadowRoot.appendChild(container);\n\n          // Create a slot for internal service elements i.e. \"i-amphtml-sizer\".\n          // The pre-constructed shadow root is required to have this slot.\n          const serviceSlot = createElementWithAttributes(\n            doc,\n            'slot',\n            SERVICE_SLOT_ATTRS\n          );\n          shadowRoot.appendChild(serviceSlot);\n          this.getPlaceholder()?.setAttribute('slot', SERVICE_SLOT_NAME);\n          this.getFallback()?.setAttribute('slot', SERVICE_SLOT_NAME);\n        }\n        this.container_ = container;\n\n        // Connect shadow root to the element's context.\n        setParent(shadowRoot, this.element);\n        // In Shadow DOM, only the children distributed in\n        // slots are displayed. All other children are undisplayed. We need\n        // to create a simple mechanism that would automatically compute\n        // `CanRender = false` on undistributed children.\n        addGroup(this.element, UNSLOTTED_GROUP, MATCH_ANY, /* weight */ -1);\n        setGroupProp(this.element, UNSLOTTED_GROUP, CanRender, this, false);\n      } else if (lightDomTag) {\n        this.container_ = this.element;\n        const replacement =\n          childElementByAttr(this.container_, RENDERED_ATTR) ||\n          createElementWithAttributes(doc, lightDomTag, RENDERED_ATTRS);\n        replacement[RENDERED_PROP] = true;\n        if (Ctor['layoutSizeDefined']) {\n          replacement.classList.add('i-amphtml-fill-content');\n        }\n        this.container_.appendChild(replacement);\n      } else {\n        const container = doc.createElement('i-amphtml-c');\n        this.container_ = container;\n        this.applyFillContent(container);\n        if (!isDetached) {\n          this.element.appendChild(container);\n        }\n      }\n    }\n\n    // Exit early if contexts are not ready. Optional contexts will yield\n    // right away, even when `null`. The required contexts will block the\n    // `contextValues` until available.\n    const useContexts = Ctor['useContexts'];\n    const contextValues = this.contextValues_;\n    const isContextReady = useContexts.length == 0 || contextValues != null;\n    if (!isContextReady) {\n      return;\n    }\n\n    // Process attributes and children.\n    const props = collectProps(\n      Ctor,\n      this.element,\n      this.refSetter_,\n      this.defaultProps_,\n      this.mediaQueryProps_\n    );\n    this.updatePropsForRendering(props);\n\n    if (!this.isReady(props)) {\n      return;\n    }\n\n    // While this \"creates\" a new element, diffing will not create a second\n    // instance of Component. Instead, the existing one already rendered into\n    // this element will be reused.\n    let comp = Preact.createElement(Ctor['Component'], props);\n\n    // Add contexts.\n    for (let i = 0; i < useContexts.length; i++) {\n      const Context = useContexts[i].type;\n      const value = contextValues[i];\n      if (value) {\n        comp = <Context.Provider value={value}>{comp}</Context.Provider>;\n      }\n    }\n\n    // Add AmpContext with renderable/playable proeprties.\n    const v = <WithAmpContext {...this.context_}>{comp}</WithAmpContext>;\n\n    if (this.hydrationPending_) {\n      this.hydrationPending_ = false;\n      hydrate(v, this.container_);\n    } else {\n      const replacement = lightDomTag\n        ? childElementByAttr(this.container_, RENDERED_ATTR)\n        : null;\n      if (replacement) {\n        replacement[RENDERED_PROP] = true;\n      }\n      render(v, this.container_, replacement);\n    }\n\n    // Dispatch the DOM_UPDATE event when rendered in the light DOM.\n    if (!isShadow && !isDetached) {\n      this.mutateElement(() =>\n        dispatchCustomEvent(this.element, AmpEvents.DOM_UPDATE, null)\n      );\n    }\n\n    if (this.renderDeferred_) {\n      this.renderDeferred_.resolve();\n      this.renderDeferred_ = null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {string} prop\n   * @param {*} opt_fallback\n   * @return {*}\n   */\n  getProp(prop, opt_fallback) {\n    if (!hasOwn(this.defaultProps_, prop)) {\n      return opt_fallback;\n    }\n    return this.defaultProps_[prop];\n  }\n\n  /**\n   * Returns reference to upgraded imperative API object, as in React's\n   * useImperativeHandle.\n   *\n   * @return {!Promise<!API_TYPE>}\n   * @override\n   */\n  getApi() {\n    const api = this.apiWrapper_;\n    if (api) {\n      return Promise.resolve(api);\n    }\n    if (!this.deferredApi_) {\n      this.deferredApi_ = new Deferred();\n    }\n    return this.deferredApi_.promise;\n  }\n\n  /**\n   * Creates a wrapper around a Preact ref. The API surface exposed by this ref\n   * **must** be consistent accross all rerenders.\n   *\n   * This wrapper is necessary because every time React rerenders, it creates\n   * (depending on deps checking) a new imperative handle and sets that to\n   * `ref.current`. So if we ever returned `ref.current` directly, it could go\n   * stale by the time its actually used.\n   *\n   * @param {!API_TYPE} current\n   * @private\n   */\n  initApiWrapper_(current) {\n    const api = map();\n    const keys = Object.keys(current);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      wrapRefProperty(this, api, key);\n    }\n    this.apiWrapper_ = api;\n    if (this.deferredApi_) {\n      this.deferredApi_.resolve(api);\n      this.deferredApi_ = null;\n    }\n  }\n\n  /**\n   * Verifies that every Preact render exposes the same API surface as the previous render.\n   * If it does not, the API wrapper is syncrhonized.\n   *\n   * @param {!API_TYPE} current\n   * @private\n   */\n  checkApiWrapper_(current) {\n    if (!getMode().localDev) {\n      return;\n    }\n    // Hack around https://github.com/preactjs/preact/issues/3084\n    if (current.constructor && current.constructor.name !== 'Object') {\n      return;\n    }\n    const api = this.apiWrapper_;\n    const newKeys = Object.keys(current);\n    for (let i = 0; i < newKeys.length; i++) {\n      const key = newKeys[i];\n      devAssert(\n        hasOwn(api, key),\n        'Inconsistent Bento API shape: imperative API gained a \"%s\" key for %s',\n        key,\n        this.element\n      );\n    }\n    const oldKeys = Object.keys(api);\n    for (let i = 0; i < oldKeys.length; i++) {\n      const key = oldKeys[i];\n      devAssert(\n        hasOwn(current, key),\n        'Inconsistent Bento API shape: imperative API lost a \"%s\" key for %s',\n        key,\n        this.element\n      );\n    }\n  }\n\n  /**\n   * Dispatches an error event. Provided as a method so Preact components can\n   * call into it, while AMP components can override to trigger action services.\n   * @param {!Element} element\n   * @param {string} eventName\n   * @param {!JSONObject|string|undefined|null} detail\n   * @return {!Object}\n   */\n  triggerEvent(element, eventName, detail) {\n    dispatchCustomEvent(element, eventName, detail);\n  }\n\n  /** @override */\n  pauseCallback() {\n    const Ctor = this.constructor;\n    if (Ctor['unloadOnPause']) {\n      this.mutateProps(dict({'loading': Loading.UNLOAD}));\n      this.resetLoading_ = true;\n    } else {\n      const {currentRef_: api} = this;\n      api?.['pause']?.();\n    }\n  }\n\n  /**\n   * @param {boolean} isPlaying\n   * @private\n   */\n  updateIsPlaying_(isPlaying) {\n    this.pauseHelper_.updatePlaying(isPlaying);\n  }\n}\n\n/**\n * @param {typeof PreactBaseElement} baseElement\n * @param {!Object} api\n * @param {string} key\n */\nfunction wrapRefProperty(baseElement, api, key) {\n  Object.defineProperty(api, key, {\n    configurable: true,\n\n    get() {\n      return baseElement.currentRef_[key];\n    },\n\n    set(v) {\n      baseElement.currentRef_[key] = v;\n    },\n  });\n}\n\n/**\n * Returns the upgraded imperative API object, once Preact has actually mounted.\n *\n * This technically works with both Bento and Legacy components, returning the\n * BaseElement instance in the later case.\n *\n * @param {!Element} el\n * @return {!Promise<!Object>}\n */\nexport function whenUpgraded(el) {\n  return el.ownerDocument.defaultView.customElements\n    .whenDefined(el.localName)\n    .then(() => el.getImpl())\n    .then((impl) => impl.getApi());\n}\n\n// Ideally, these would be Static Class Fields. But Closure can't even.\n\n/**\n * Override to provide the Component definition.\n *\n * @protected {!PreactDef.FunctionalComponent}\n */\nPreactBaseElement['Component'] = function () {\n  devAssert(false, 'Must provide Component');\n};\n\n/**\n * If default props are static, this can be used instead of init().\n * @protected {!JsonObject|undefined}\n */\nPreactBaseElement['staticProps'] = undefined;\n\n/**\n * @protected {!Array<!ContextProp>}\n */\nPreactBaseElement['useContexts'] = getMode().localDev ? Object.freeze([]) : [];\n\n/**\n * Whether the component implements a loading protocol.\n *\n * @protected {boolean}\n */\nPreactBaseElement['loadable'] = false;\n\n/**\n * Whether a component should be unloaded for `pauseCallback`.\n *\n * @protected {boolean}\n */\nPreactBaseElement['unloadOnPause'] = false;\n\n/**\n * An override to specify that the component requires `layoutSizeDefined`.\n * This typically means that the element's `isLayoutSupported()` is\n * implemented via `isLayoutSizeDefined()`, and this is how the default\n * `isLayoutSupported()` is implemented when this flag is set.\n *\n * @protected {string}\n */\nPreactBaseElement['layoutSizeDefined'] = false;\n\n/**\n * The tag name, e.g. \"div\", \"span\", time\" that should be used as a replacement\n * node for Preact rendering. This is the node that Preact will diff with\n * with specified, instead of rendering a new node. Only applicable to light-DOM\n * mapping styles.\n *\n * @protected {string}\n */\nPreactBaseElement['lightDomTag'] = '';\n\n/**\n * An override to specify an exact className prop to Preact.\n *\n * @protected {string}\n */\nPreactBaseElement['className'] = '';\n\n/**\n * Whether this element uses \"templates\" system.\n *\n * @protected {boolean}\n */\nPreactBaseElement['usesTemplate'] = false;\n\n/**\n * The CSS for shadow stylesheets.\n *\n * @protected {?string}\n */\nPreactBaseElement['shadowCss'] = null;\n\n/**\n * Whether this element uses Shadow DOM.\n *\n * @protected {boolean}\n */\nPreactBaseElement['usesShadowDom'] = false;\n\n/**\n * Enabling detached mode alters the children to be rendered in an\n * unappended container. By default the children will be attached to the DOM.\n *\n * @protected {boolean}\n */\nPreactBaseElement['detached'] = false;\n\n/**\n * This enables the 'delegatesFocus' option when creating the shadow DOM for\n * this component.  A key feature of 'delegatesFocus' set to true is that\n * when elements within the shadow DOM gain focus, the focus is also applied\n * to the host element.\n */\nPreactBaseElement['delegatesFocus'] = false;\n\n/**\n * Provides a mapping of Preact prop to AmpElement DOM attributes.\n *\n * @protected {!Object<string, !AmpElementPropDef>}\n */\nPreactBaseElement['props'] = {};\n\n/**\n * @param {null|string} attributeName\n * @param {string|undefined} attributePrefix\n * @return {boolean}\n */\nfunction matchesAttrPrefix(attributeName, attributePrefix) {\n  return (\n    attributeName !== null &&\n    attributePrefix !== undefined &&\n    attributeName.startsWith(attributePrefix) &&\n    attributeName !== attributePrefix\n  );\n}\n\n/**\n * @param {typeof PreactBaseElement} Ctor\n * @param {!AmpElement} element\n * @param {{current: ?}} ref\n * @param {!JsonObject|null|undefined} defaultProps\n * @param {?MediaQueryProps} mediaQueryProps\n * @return {!JsonObject}\n */\nfunction collectProps(Ctor, element, ref, defaultProps, mediaQueryProps) {\n  const {\n    'className': className,\n    'layoutSizeDefined': layoutSizeDefined,\n    'lightDomTag': lightDomTag,\n    'props': propDefs,\n  } = Ctor;\n\n  if (mediaQueryProps) {\n    mediaQueryProps.start();\n  }\n\n  const props = /** @type {!JsonObject} */ ({...defaultProps, ref});\n\n  // Light DOM.\n  if (lightDomTag) {\n    props[RENDERED_ATTR] = true;\n    props[RENDERED_PROP] = true;\n    props['as'] = lightDomTag;\n  }\n\n  // Class.\n  if (className) {\n    props['className'] = className;\n  }\n\n  // Common styles.\n  if (layoutSizeDefined) {\n    if (Ctor['usesShadowDom']) {\n      props['style'] = SIZE_DEFINED_STYLE;\n    } else {\n      props['className'] =\n        `i-amphtml-fill-content ${className || ''}`.trim() || null;\n    }\n  }\n\n  // Props.\n  parsePropDefs(Ctor, props, propDefs, element, mediaQueryProps);\n  if (mediaQueryProps) {\n    mediaQueryProps.complete();\n  }\n\n  return props;\n}\n\n/**\n * @param {typeof PreactBaseElement} Ctor\n * @param {!Object} props\n * @param {!Object} propDefs\n * @param {!Element} element\n * @param {?MediaQueryProps} mediaQueryProps\n */\nfunction parsePropDefs(Ctor, props, propDefs, element, mediaQueryProps) {\n  // Match all children defined with \"selector\".\n  if (checkPropsFor(propDefs, HAS_SELECTOR)) {\n    // There are plain \"children\" and there're slotted children assigned\n    // as separate properties. Thus in a carousel the plain \"children\" are\n    // slides, and the \"arrowNext\" children are passed via a \"arrowNext\"\n    // property.\n    const nodes = element.getRealChildNodes\n      ? element.getRealChildNodes()\n      : toArray(element.childNodes);\n    for (let i = 0; i < nodes.length; i++) {\n      const childElement = nodes[i];\n      const match = matchChild(childElement, propDefs);\n      if (!match) {\n        continue;\n      }\n      const def = propDefs[match];\n      const {\n        as = false,\n        single,\n        name = match,\n        clone,\n        props: slotProps = {},\n      } = def;\n      devAssert(clone || Ctor['usesShadowDom']);\n      const parsedSlotProps = {};\n      parsePropDefs(\n        Ctor,\n        parsedSlotProps,\n        slotProps,\n        childElement,\n        mediaQueryProps\n      );\n\n      // TBD: assign keys, reuse slots, etc.\n      if (single) {\n        props[name] = createSlot(\n          childElement,\n          childElement.getAttribute('slot') || `i-amphtml-${name}`,\n          parsedSlotProps,\n          as\n        );\n      } else {\n        const list = props[name] || (props[name] = []);\n        devAssert(!as);\n        list.push(\n          clone\n            ? createShallowVNodeCopy(childElement)\n            : createSlot(\n                childElement,\n                childElement.getAttribute('slot') ||\n                  `i-amphtml-${name}-${childIdGenerator()}`,\n                parsedSlotProps\n              )\n        );\n      }\n    }\n  }\n\n  for (const name in propDefs) {\n    const def = /** @type {!AmpElementPropDef} */ (propDefs[name]);\n    devAssert(\n      !!def.attr +\n        !!def.attrs +\n        !!def.attrPrefix +\n        !!def.selector +\n        !!def.passthrough +\n        !!def.passthroughNonEmpty <=\n        1,\n      ONE_OF_ERROR_MESSAGE\n    );\n    let value;\n    if (def.passthrough) {\n      devAssert(Ctor['usesShadowDom']);\n      // Use lazy loading inside the passthrough by default due to too many\n      // elements.\n      value = [<Slot loading={Loading.LAZY} />];\n    } else if (def.passthroughNonEmpty) {\n      devAssert(Ctor['usesShadowDom']);\n      // Use lazy loading inside the passthrough by default due to too many\n      // elements.\n      value = element.getRealChildNodes().every(IS_EMPTY_TEXT_NODE)\n        ? null\n        : [<Slot loading={Loading.LAZY} />];\n    } else if (def.attr) {\n      value = element.getAttribute(def.attr);\n      if (def.media && value != null) {\n        value = mediaQueryProps.resolveListQuery(String(value));\n      }\n    } else if (def.parseAttrs) {\n      devAssert(def.attrs);\n      value = def.parseAttrs(element);\n    } else if (def.attrPrefix) {\n      const currObj = {};\n      let objContains = false;\n      const attrs = element.attributes;\n      for (let i = 0; i < attrs.length; i++) {\n        const attrib = attrs[i];\n        if (matchesAttrPrefix(attrib.name, def.attrPrefix)) {\n          currObj[dashToCamelCase(attrib.name.slice(def.attrPrefix.length))] =\n            attrib.value;\n          objContains = true;\n        }\n      }\n      if (objContains) {\n        value = currObj;\n      }\n    }\n    if (value == null) {\n      if (def.default != null) {\n        props[name] = def.default;\n      }\n    } else {\n      const v =\n        def.type == 'number'\n          ? parseFloat(value)\n          : def.type == 'boolean'\n          ? parseBooleanAttribute(/** @type {string} */ (value))\n          : def.type == 'date'\n          ? getDate(value)\n          : value;\n      props[name] = v;\n    }\n  }\n}\n\n/**\n * Copies an Element into a VNode representation.\n * (Interpretation into VNode is not recursive, so it excludes children.)\n * @param {!Element} element\n * @return {!PreactDef.Renderable}\n */\nfunction createShallowVNodeCopy(element) {\n  const props = {\n    // Setting `key` to an object is fine in Preact, but not React.\n    'key': element,\n  };\n  // We need to read element.attributes and element.attributes.length only once,\n  // since reading a live NamedNodeMap repeatedly is expensive.\n  const {attributes, localName} = element;\n  const {length} = attributes;\n  for (let i = 0; i < length; i++) {\n    const {name, value} = attributes[i];\n    props[name] = value;\n  }\n  return Preact.createElement(localName, props);\n}\n\n/**\n * @param {!Element} element\n * @param {!Object} defs\n * @return {?ChildDef}\n */\nfunction matchChild(element, defs) {\n  // TODO: a little slow to do this repeatedly.\n  for (const match in defs) {\n    const def = defs[match];\n    const selector = typeof def == 'string' ? def : def.selector;\n    if (matches(element, selector)) {\n      return match;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!NodeList} nodeList\n * @return {boolean}\n */\nfunction shouldMutationForNodeListBeRerendered(nodeList) {\n  for (let i = 0; i < nodeList.length; i++) {\n    const node = nodeList[i];\n    if (isElement(node)) {\n      // Ignore service elements, e.g. `<i-amphtml-svc>` or\n      // `<x slot=\"i-amphtml-svc\">`.\n      if (\n        node[RENDERED_PROP] ||\n        node.tagName.startsWith('I-') ||\n        node.getAttribute('slot') == 'i-amphtml-svc'\n      ) {\n        continue;\n      }\n      return true;\n    }\n    if (node.nodeType == /* TEXT */ 3) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {typeof PreactBaseElement} Ctor\n * @param {!MutationRecord} m\n * @return {boolean}\n */\nfunction shouldMutationBeRerendered(Ctor, m) {\n  const {type} = m;\n  if (type == 'attributes') {\n    // Check whether this is a templates attribute.\n    if (Ctor['usesTemplate'] && m.attributeName == 'template') {\n      return true;\n    }\n    // Check if the attribute is mapped to one of the properties.\n    const props = Ctor['props'];\n    for (const name in props) {\n      const def = /** @type {!AmpElementPropDef} */ (props[name]);\n      if (\n        m.attributeName == def.attr ||\n        (def.attrs && def.attrs.includes(devAssert(m.attributeName))) ||\n        matchesAttrPrefix(m.attributeName, def.attrPrefix)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (type == 'childList') {\n    return (\n      shouldMutationForNodeListBeRerendered(m.addedNodes) ||\n      shouldMutationForNodeListBeRerendered(m.removedNodes)\n    );\n  }\n  return false;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {TimestampDef, parseDate} from '../types/date';\nimport {devAssert, userAssert} from '../assert';\n\n/** @typedef {function(string):!TimestampDef} */\nlet DateParserDef;\n\n/**\n * Map from attribute names to their parsers.\n * @type {Object<string, !DateParserDef>}\n */\nconst dateAttrParsers = {\n  'datetime': (datetime) =>\n    userAssert(parseDate(datetime), 'Invalid date: %s', datetime),\n  'end-date': (datetime) =>\n    userAssert(parseDate(datetime), 'Invalid date: %s', datetime),\n  'timeleft-ms': (timeleftMs) => Date.now() + Number(timeleftMs),\n  'timestamp-ms': (ms) => Number(ms),\n  'timestamp-seconds': (timestampSeconds) => 1000 * Number(timestampSeconds),\n};\n\n/**\n * @param {!Element} element\n * @param {!Array<string>} dateAttrs list of attribute names\n * @return {?TimestampDef}\n */\nexport function parseDateAttrs(element, dateAttrs) {\n  const epoch = userAssert(\n    parseEpoch(element, dateAttrs),\n    'One of attributes [%s] is required',\n    dateAttrs.join(', ')\n  );\n\n  const offsetSeconds =\n    (Number(element.getAttribute('offset-seconds')) || 0) * 1000;\n  return epoch + offsetSeconds;\n}\n\n/**\n * Parse epoch from list of possible element attributes, returning the first one\n * that is truthy.\n * @param {!Element} element\n * @param {!Array<string>} dateAttrs list of attribute names\n * @return {?TimestampDef}\n */\nfunction parseEpoch(element, dateAttrs) {\n  // Validate provided dateAttrs outside the loop so it will fail when an\n  // invalid attr is provided, even if that attribute isn't present on the\n  // element.\n  /** @type {!Array<!DateParserDef>} */\n  const parsers = dateAttrs.map((attrName) =>\n    devAssert(\n      dateAttrParsers[attrName],\n      'Invalid date attribute \"%s\"',\n      attrName\n    )\n  );\n\n  for (let i = 0; i < dateAttrs.length; ++i) {\n    const attrVal = element.getAttribute(dateAttrs[i]);\n    if (attrVal) {\n      return parsers[i](attrVal);\n    }\n  }\n\n  return null;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DateCountdown} from './component';\nimport {PreactBaseElement} from '../../../src/preact/base-element';\nimport {parseDateAttrs as parseDateAttrsBase} from '../../../src/core/dom/parse-date-attributes';\n\nexport class BaseElement extends PreactBaseElement {}\n\n/** @override */\nBaseElement['Component'] = DateCountdown;\n\n/** @override */\nBaseElement['layoutSizeDefined'] = true;\n\n/** @override */\nBaseElement['lightDomTag'] = 'div';\n\n/** @override */\nBaseElement['usesTemplate'] = true;\n\n/** @override */\nBaseElement['props'] = {\n  'datetime': {\n    attrs: [\n      'end-date',\n      'timeleft-ms',\n      'timestamp-ms',\n      'timestamp-seconds',\n      'offset-seconds',\n    ],\n    parseAttrs: parseDateAttrs,\n  },\n  'whenEnded': {attr: 'when-ended', type: 'string'},\n  'locale': {attr: 'locale', type: 'string'},\n  'biggestUnit': {attr: 'biggest-unit', type: 'string'},\n  'countUp': {attr: 'count-up', type: 'boolean'},\n};\n\n/**\n * @param {!Element} element\n * @return {?number}\n * @throws {UserError} when attribute values are missing or invalid.\n * @visibleForTesting\n */\nexport function parseDateAttrs(element) {\n  return parseDateAttrsBase(element, [\n    'end-date',\n    'timeleft-ms',\n    'timestamp-ms',\n    'timestamp-seconds',\n  ]);\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {BaseElement} from './base-element';\nimport {Services} from '../../../src/services';\nimport {dev, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {isLayoutSizeDefined} from '../../../src/layout';\n\n/** @const {string} */\nconst TAG = 'amp-date-countdown';\n\nclass AmpDateCountdown extends BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {?../../../src/service/template-impl.Templates} */\n    this.templates_ = null;\n\n    /** @private {?Element} */\n    this.template_ = null;\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    userAssert(\n      isExperimentOn(this.win, 'bento') ||\n        isExperimentOn(this.win, 'bento-date-countdown'),\n      'expected global \"bento\" or specific \"bento-date-countdown\" experiment to be enabled'\n    );\n    return isLayoutSizeDefined(layout);\n  }\n\n  /** @override */\n  checkPropsPostMutations() {\n    const templates =\n      this.templates_ ||\n      (this.templates_ = Services.templatesForDoc(this.element));\n    const template = templates.maybeFindTemplate(this.element);\n    if (template === this.template_) {\n      return;\n    }\n    this.template_ = template;\n    if (template) {\n      // Only overwrite `render` when template is ready to minimize FOUC.\n      templates.whenReady(template).then(() => {\n        if (template != this.template_) {\n          // A new template has been set while the old one was initializing.\n          return;\n        }\n        this.mutateProps(\n          dict({\n            'render': (data) => {\n              return templates\n                .renderTemplateAsString(dev().assertElement(template), data)\n                .then((html) => dict({'__html': html}));\n            },\n          })\n        );\n      });\n    } else {\n      this.mutateProps(dict({'render': null}));\n    }\n  }\n\n  /** @override */\n  isReady(props) {\n    if (this.template_ && !('render' in props)) {\n      // The template is specified, but not available yet.\n      return false;\n    }\n    return true;\n  }\n}\n\nAMP.extension(TAG, '1.0', (AMP) => {\n  AMP.registerElement(TAG, AmpDateCountdown);\n});\n"],
  "mappings": "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",
  "names": []
}
