{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../src/core/constants/enums.js", "../../src/core/types/array.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/core/minified-mode.js", "../../src/core/assert/dev.js", "../../src/core/constants/action-constants.js", "../../src/core/error/index.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/config.js", "../../src/log.js", "../../src/core/dom/event-helper-listen.js", "../../src/core/types/object/json.js", "../../src/3p-frame-messaging.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/query.js", "../../src/core/window/index.js", "../../src/dom.js", "../../src/event-helper.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../src/style.js", "../../src/iframe-helper.js", "../../src/core/math/layout-rect.js", "../../src/utils/intersection-observer-3p-host.js", "../../src/service.js", "../../src/experiments/index.js", "../../src/layout.js", "../../src/utils/size-observer.js", "../../src/utils/pause-helper.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../src/core/types/string/bytes.js", "../../src/core/types/string/base64.js", "../../src/consent.js", "../../src/ad-helper.js", "../../extensions/amp-iframe/0.1/amp-iframe.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Registred singleton on AMP doc.\n * @enum {number}\n */\nexport const AMPDOC_SINGLETON_NAME = {\n  TRACKING_IFRAME: 1,\n  LINKER: 2,\n};\n\n/**\n * Enum for tick labels (used by Performance service)\n * @enum {string}\n */\nexport const TickLabel = {\n  ACCESS_AUTHORIZATION: 'aaa',\n  ACCESS_AUTHORIZATION_VISIBLE: 'aaav',\n  ADS_LAYOUT_DELAY: 'adld',\n  BAD_FRAMES: 'bf',\n  BATTERY_DROP: 'bd',\n  CONTENT_LAYOUT_DELAY: 'cld',\n  CUMULATIVE_LAYOUT_SHIFT: 'cls',\n  CUMULATIVE_LAYOUT_SHIFT_2: 'cls-2',\n  // TODO(#33207): Remove after data collection\n  CUMULATIVE_LAYOUT_SHIFT_BEFORE_FCP: 'cls-fcp',\n  CUMULATIVE_LAYOUT_SHIFT_BEFORE_VISIBLE: 'cls-ofv',\n  DOCUMENT_READY: 'dr',\n  END_INSTALL_STYLES: 'e_is',\n  FIRST_CONTENTFUL_PAINT: 'fcp',\n  FIRST_CONTENTFUL_PAINT_VISIBLE: 'fcpv',\n  FIRST_PAINT: 'fp',\n  FIRST_INPUT_DELAY: 'fid',\n  FIRST_INPUT_DELAY_POLYFILL: 'fid-polyfill',\n  FIRST_VIEWPORT_READY: 'pc',\n  GOOD_FRAME_PROBABILITY: 'gfp',\n  INSTALL_STYLES: 'is',\n  LARGEST_CONTENTFUL_PAINT_VISIBLE: 'lcpv',\n  LARGEST_CONTENTFUL_PAINT_LOAD: 'lcpl',\n  LARGEST_CONTENTFUL_PAINT_RENDER: 'lcpr',\n  LONG_TASKS_CHILD: 'ltc',\n  LONG_TASKS_SELF: 'lts',\n  MAKE_BODY_VISIBLE: 'mbv',\n  MESSAGING_READY: 'msr',\n  ON_FIRST_VISIBLE: 'ofv',\n  ON_LOAD: 'ol',\n  TIME_ORIGIN: 'timeOrigin',\n  VIDEO_CACHE_STATE: 'vcs',\n  VIDEO_ERROR: 'verr',\n  VIDEO_ON_FIRST_PAGE: 'vofp',\n  VIDEO_JOINT_LATENCY: 'vjl',\n  VIDEO_MEAN_TIME_BETWEEN_REBUFFER: 'vmtbrb',\n  VIDEO_REBUFFERS: 'vrb',\n  VIDEO_REBUFFER_RATE: 'vrbr',\n  VIDEO_WATCH_TIME: 'vwt',\n};\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Magic constant that is replaced by babel.\n// IS_MINIFIED is always replaced with true when closure compiler is used\nconst IS_MINIFIED = false;\n\n/**\n * Returns true whenever closure compiler is used.\n * @return {boolean}\n */\nexport function isMinifiedMode() {\n  return IS_MINIFIED;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {isMinifiedMode} from '../minified-mode';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (isMinifiedMode()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nexport const RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n\n/**\n * Identifier for an element's default action.\n *\n * @const {string}\n */\nexport const DEFAULT_ACTION = 'activate';\n\n/**\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\nexport const ActionTrust = {\n  /**\n   * Events that are triggered without a user gesture, or triggered by a user\n   * gesture with weak intent (e.g. scroll) are \"low trust\".\n   *\n   * Actions that have low impact on the page's visual state should require\n   * \"low trust\" (e.g. pausing a video).\n   */\n  LOW: 1,\n  /**\n   * Events that are triggered nearly immediately (up to a few seconds) after\n   * a user gesture with strong intent (e.g. tap or swipe) are \"default trust\".\n   *\n   * Actions that can modify the page's visual state (e.g. content jumping)\n   * should require \"default trust\". This is the default required trust level\n   * for actions.\n   */\n  DEFAULT: 2,\n  /**\n   * Events that are triggered immediately after a user gesture with\n   * strong intent (e.g. tap or swipe) are \"high trust\".\n   *\n   * There are no actions yet that require high trust.\n   */\n  HIGH: 3,\n};\n\n/**\n * @param {!ActionTrust} actionTrust\n * @return {string}\n */\nexport function actionTrustToString(actionTrust) {\n  switch (actionTrust) {\n    case ActionTrust.LOW:\n      return 'low';\n    case ActionTrust.HIGH:\n      return 'high';\n    default:\n      devAssert(actionTrust === ActionTrust.DEFAULT);\n      return 'default';\n  }\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty?.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (const arg of arguments) {\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n    // It may not exist for Bento components without the runtime.\n    self.__AMP_REPORT_ERROR?.(error);\n    throw error;\n  });\n}\n\n/**\n * Executes the provided callback in a try/catch and rethrows any errors\n * asynchronously.\n *\n * @param {function(...*):T} callback\n * @param {...*} args\n * @return {T}\n * @template T\n */\nexport function tryCallback(callback, ...args) {\n  try {\n    return callback.apply(null, args);\n  } catch (e) {\n    rethrowAsync(e);\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isArray} from '../array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {tryParseJson} from './core/types/object/json';\n\n/** @const */\nconst AMP_MESSAGE_PREFIX = 'amp-';\nexport const CONSTANTS = {\n  responseTypeSuffix: '-result',\n  messageIdFieldName: 'messageId',\n  payloadFieldName: 'payload',\n  contentFieldName: 'content',\n};\n\n/** @enum {string} */\nexport const MessageType = {\n  // For amp-ad\n  SEND_EMBED_STATE: 'send-embed-state',\n  EMBED_STATE: 'embed-state',\n  SEND_EMBED_CONTEXT: 'send-embed-context',\n  EMBED_CONTEXT: 'embed-context',\n  SEND_INTERSECTIONS: 'send-intersections',\n  INTERSECTION: 'intersection',\n  EMBED_SIZE: 'embed-size',\n  EMBED_SIZE_CHANGED: 'embed-size-changed',\n  EMBED_SIZE_DENIED: 'embed-size-denied',\n  NO_CONTENT: 'no-content',\n  GET_HTML: 'get-html',\n  GET_CONSENT_STATE: 'get-consent-state',\n  SIGNAL_INTERACTIVE: 'signal-interactive',\n\n  // For the frame to be placed in full overlay mode for lightboxes\n  FULL_OVERLAY_FRAME: 'full-overlay-frame',\n  FULL_OVERLAY_FRAME_RESPONSE: 'full-overlay-frame-response',\n  CANCEL_FULL_OVERLAY_FRAME: 'cancel-full-overlay-frame',\n  CANCEL_FULL_OVERLAY_FRAME_RESPONSE: 'cancel-full-overlay-frame-response',\n\n  // For amp-inabox\n  SEND_POSITIONS: 'send-positions',\n  POSITION: 'position',\n\n  // For amp-analytics' iframe-transport\n  SEND_IFRAME_TRANSPORT_EVENTS: 'send-iframe-transport-events',\n  IFRAME_TRANSPORT_EVENTS: 'iframe-transport-events',\n  IFRAME_TRANSPORT_RESPONSE: 'iframe-transport-response',\n\n  // For user-error-in-iframe\n  USER_ERROR_IN_IFRAME: 'user-error-in-iframe',\n\n  // For amp-iframe\n  SEND_CONSENT_DATA: 'send-consent-data',\n  CONSENT_DATA: 'consent-data',\n};\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Serialize an AMP post message. Output looks like:\n * 'amp-011481323099490{\"type\":\"position\",\"sentinel\":\"12345\",\"foo\":\"bar\"}'\n * @param {string} type\n * @param {string} sentinel\n * @param {JsonObject=} data\n * @param {?string=} rtvVersion\n * @return {string}\n */\nexport function serializeMessage(\n  type,\n  sentinel,\n  data = dict(),\n  rtvVersion = null\n) {\n  // TODO: consider wrap the data in a \"data\" field. { type, sentinal, data }\n  const message = data;\n  message['type'] = type;\n  message['sentinel'] = sentinel;\n  return AMP_MESSAGE_PREFIX + (rtvVersion || '') + JSON.stringify(message);\n}\n\n/**\n * Deserialize an AMP post message.\n * Returns null if it's not valid AMP message format.\n *\n * @param {*} message\n * @return {?JsonObject|undefined}\n */\nexport function deserializeMessage(message) {\n  if (!isAmpMessage(message)) {\n    return null;\n  }\n  const startPos = message.indexOf('{');\n  devAssert(startPos != -1, 'JSON missing in %s', message);\n  return tryParseJson(message.substr(startPos), (e) =>\n    dev().error('MESSAGING', 'Failed to parse message: ' + message, e)\n  );\n}\n\n/**\n *  Returns true if message looks like it is an AMP postMessage\n *  @param {*} message\n *  @return {boolean}\n */\nexport function isAmpMessage(message) {\n  return (\n    typeof message == 'string' &&\n    message.indexOf(AMP_MESSAGE_PREFIX) == 0 &&\n    message.indexOf('{') != -1\n  );\n}\n\n/** @typedef {{creativeId: string, message: string}} */\nexport let IframeTransportEvent;\n// An event, and the transport ID of the amp-analytics tags that\n// generated it. For instance if the creative with transport\n// ID 2 sends \"hi\", then an IframeTransportEvent would look like:\n// { creativeId: \"2\", message: \"hi\" }\n// If the creative with transport ID 2 sent that, and also sent \"hello\",\n// and the creative with transport ID 3 sends \"goodbye\" then an *array* of 3\n// AmpAnalyticsIframeTransportEvent would be sent to the 3p frame like so:\n// [\n//   { creativeId: \"2\", message: \"hi\" }, // An AmpAnalyticsIframeTransportEvent\n//   { creativeId: \"2\", message: \"hello\" }, // Another\n//   { creativeId: \"3\", message: \"goodbye\" } // And another\n// ]\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {lastChildElement} from './core/dom/query';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './core/data-structures/lru-cache';\nimport {dict, hasOwn} from './core/types/object';\nimport {endsWith} from './core/types/string';\nimport {getMode} from './mode';\nimport {isArray} from './core/types';\nimport {parseQueryString} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {?} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {addAttributesToElement} from './dom';\nimport {closestAncestorElementBySelector} from './core/dom/query';\nimport {deserializeMessage, isAmpMessage} from './3p-frame-messaging';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {getData} from './event-helper';\nimport {parseUrlDeprecated} from './url';\nimport {remove} from './core/types/array';\nimport {setStyle} from './style';\nimport {tryParseJson} from './core/types/object/json';\n\n/**\n * Sentinel used to force unlistening after a iframe is detached.\n * @type {string}\n */\nconst UNLISTEN_SENTINEL = 'unlisten';\n\n/**\n * @typedef {{\n *   frame: !Element,\n *   events: !Object<string, !Array<function(!JsonObject)>>\n * }}\n */\nlet WindowEventsDef;\n\n/**\n * Returns a mapping from a URL's origin to an array of windows and their\n * listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {boolean=} opt_create create the mapping if it does not exist\n * @return {?Object<string, !Array<!WindowEventsDef>>}\n */\nfunction getListenFors(parentWin, opt_create) {\n  let {listeningFors} = parentWin;\n\n  if (!listeningFors && opt_create) {\n    listeningFors = parentWin.listeningFors = Object.create(null);\n  }\n  return listeningFors || null;\n}\n\n/**\n * Returns an array of WindowEventsDef that have had any listenFor listeners\n * registered for this sentinel.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {boolean=} opt_create create the array if it does not exist\n * @return {?Array<!WindowEventsDef>}\n */\nfunction getListenForSentinel(parentWin, sentinel, opt_create) {\n  const listeningFors = getListenFors(parentWin, opt_create);\n  if (!listeningFors) {\n    return listeningFors;\n  }\n\n  let listenSentinel = listeningFors[sentinel];\n  if (!listenSentinel && opt_create) {\n    listenSentinel = listeningFors[sentinel] = [];\n  }\n  return listenSentinel || null;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {!Element} iframe the iframe element who's context will trigger the\n *     event\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getOrCreateListenForEvents(parentWin, iframe, opt_is3P) {\n  const sentinel = getSentinel_(iframe, opt_is3P);\n  const listenSentinel = getListenForSentinel(parentWin, sentinel, true);\n\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    if (we.frame === iframe) {\n      windowEvents = we;\n      break;\n    }\n  }\n\n  if (!windowEvents) {\n    windowEvents = {\n      frame: iframe,\n      events: Object.create(null),\n    };\n    listenSentinel.push(windowEvents);\n  }\n\n  return windowEvents.events;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {string} origin the source window's origin\n * @param {?Window} triggerWin the window that triggered the event\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getListenForEvents(parentWin, sentinel, origin, triggerWin) {\n  const listenSentinel = getListenForSentinel(parentWin, sentinel);\n\n  if (!listenSentinel) {\n    return listenSentinel;\n  }\n\n  // Find the entry for the frame.\n  // TODO(@nekodo): Add a WeakMap<Window, WindowEventsDef> cache to\n  //     speed up this process.\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    const {contentWindow} = we.frame;\n    if (!contentWindow) {\n      setTimeout(dropListenSentinel, 0, listenSentinel);\n    } else if (\n      triggerWin == contentWindow ||\n      isDescendantWindow(contentWindow, triggerWin)\n    ) {\n      // 3p code path, we may accept messages from nested frames.\n      windowEvents = we;\n      break;\n    }\n  }\n\n  return windowEvents ? windowEvents.events : null;\n}\n\n/**\n * Checks whether one window is a descendant of another by climbing\n * the parent chain.\n * @param {?Window} ancestor potential ancestor window\n * @param {?Window} descendant potential descendant window\n * @return {boolean}\n */\nfunction isDescendantWindow(ancestor, descendant) {\n  for (let win = descendant; win && win != win.parent; win = win.parent) {\n    if (win == ancestor) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Removes any listenFors registed on listenSentinel that do not have\n * a contentWindow (the frame was removed from the DOM tree).\n * @param {!Array<!WindowEventsDef>} listenSentinel\n */\nfunction dropListenSentinel(listenSentinel) {\n  const noopData = dict({'sentinel': UNLISTEN_SENTINEL});\n\n  for (let i = listenSentinel.length - 1; i >= 0; i--) {\n    const windowEvents = listenSentinel[i];\n\n    if (!windowEvents.frame.contentWindow) {\n      listenSentinel.splice(i, 1);\n\n      const {events} = windowEvents;\n      for (const name in events) {\n        // Splice here, so that each unlisten does not shift the array\n        events[name].splice(0, Infinity).forEach((event) => {\n          event(noopData);\n        });\n      }\n    }\n  }\n}\n\n/**\n * Registers the global listenFor event listener if it has yet to be.\n * @param {?Window} parentWin\n */\nfunction registerGlobalListenerIfNeeded(parentWin) {\n  if (parentWin.listeningFors) {\n    return;\n  }\n  const listenForListener = function (event) {\n    if (!getData(event)) {\n      return;\n    }\n    const data = parseIfNeeded(getData(event));\n\n    if (!data || !data['sentinel']) {\n      return;\n    }\n\n    const listenForEvents = getListenForEvents(\n      parentWin,\n      data['sentinel'],\n      event.origin,\n      event.source\n    );\n    if (!listenForEvents) {\n      return;\n    }\n\n    let listeners = listenForEvents[data['type']];\n    if (!listeners) {\n      return;\n    }\n\n    // We slice to avoid issues with adding another listener or unlistening\n    // during iteration. We could move to a Doubly Linked List with\n    // backtracking, but that's overly complicated.\n    listeners = listeners.slice();\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i];\n      listener(data, event.source, event.origin, event);\n    }\n  };\n\n  parentWin.addEventListener('message', listenForListener);\n}\n\n/**\n * Allows listening for message from the iframe. Returns an unlisten\n * function to remove the listener.\n *\n * @param {?Element} iframe\n * @param {string} typeOfMessage\n * @param {?function(!JsonObject, !Window, string, !MessageEvent)} callback Called when a\n *     message of this type arrives for this iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @param {boolean=} opt_includingNestedWindows set to true if messages from\n *     nested frames should also be accepted.\n * @param {boolean=} opt_allowOpaqueOrigin set to true if messages from\n       opaque origins (origin == null) are allowed.\n * @return {!UnlistenDef}\n */\nexport function listenFor(\n  iframe,\n  typeOfMessage,\n  callback,\n  opt_is3P,\n  opt_includingNestedWindows,\n  opt_allowOpaqueOrigin\n) {\n  devAssert(iframe.src, 'only iframes with src supported');\n  devAssert(\n    !iframe.parentNode,\n    'cannot register events on an attached ' +\n      'iframe. It will cause hair-pulling bugs like #2942'\n  );\n  devAssert(callback);\n  const parentWin = iframe.ownerDocument.defaultView;\n\n  registerGlobalListenerIfNeeded(parentWin);\n\n  const listenForEvents = getOrCreateListenForEvents(\n    parentWin,\n    iframe,\n    opt_is3P\n  );\n\n  const iframeOrigin = parseUrlDeprecated(iframe.src).origin;\n  let events =\n    listenForEvents[typeOfMessage] || (listenForEvents[typeOfMessage] = []);\n\n  let unlisten;\n  let listener = function (data, source, origin, event) {\n    const sentinel = data['sentinel'];\n\n    // Exclude messages that don't satisfy amp sentinel rules.\n    if (sentinel == 'amp') {\n      // For `amp` sentinel, nested windows are not allowed\n      if (source != iframe.contentWindow) {\n        return;\n      }\n\n      // For `amp` sentinel origin must match unless opaque origin is allowed\n      const isOpaqueAndAllowed = origin == 'null' && opt_allowOpaqueOrigin;\n      if (iframeOrigin != origin && !isOpaqueAndAllowed) {\n        return;\n      }\n    }\n\n    // Exclude nested frames if necessary.\n    // Note that the source was already verified to be either the contentWindow\n    // of the iframe itself or a descendant window within it.\n    if (!opt_includingNestedWindows && source != iframe.contentWindow) {\n      return;\n    }\n\n    if (data.sentinel == UNLISTEN_SENTINEL) {\n      unlisten();\n      return;\n    }\n    callback(data, source, origin, event);\n  };\n\n  events.push(listener);\n\n  return (unlisten = function () {\n    if (listener) {\n      const index = events.indexOf(listener);\n      if (index > -1) {\n        events.splice(index, 1);\n      }\n      // Make sure references to the unlisten function do not keep\n      // alive too much.\n      listener = null;\n      events = null;\n      callback = null;\n    }\n  });\n}\n\n/**\n * Returns a promise that resolves when one of given messages has been observed\n * for the first time. And remove listener for all other messages.\n * @param {!Element} iframe\n * @param {string|!Array<string>} typeOfMessages\n * @param {boolean=} opt_is3P\n * @return {!Promise<!{data: !JsonObject, source: !Window, origin: string, event: !MessageEvent}>}\n */\nexport function listenForOncePromise(iframe, typeOfMessages, opt_is3P) {\n  const unlistenList = [];\n  if (typeof typeOfMessages == 'string') {\n    typeOfMessages = [typeOfMessages];\n  }\n  return new Promise((resolve) => {\n    for (let i = 0; i < typeOfMessages.length; i++) {\n      const message = typeOfMessages[i];\n      const unlisten = listenFor(\n        iframe,\n        message,\n        (data, source, origin, event) => {\n          for (let i = 0; i < unlistenList.length; i++) {\n            unlistenList[i]();\n          }\n          resolve({data, source, origin, event});\n        },\n        opt_is3P\n      );\n      unlistenList.push(unlisten);\n    }\n  });\n}\n\n/**\n * Posts a message to the iframe.\n * @param {!Element} iframe The iframe.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {string} targetOrigin origin of the target.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessage(iframe, type, object, targetOrigin, opt_is3P) {\n  postMessageToWindows(\n    iframe,\n    [{win: iframe.contentWindow, origin: targetOrigin}],\n    type,\n    object,\n    opt_is3P\n  );\n}\n\n/**\n * Posts an identical message to multiple target windows with the same\n * sentinel.\n * The message is serialized only once.\n * @param {!Element} iframe The iframe.\n * @param {!Array<{win: !Window, origin: string}>} targets to send the message\n *     to, pairs of window and its origin.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessageToWindows(iframe, targets, type, object, opt_is3P) {\n  if (!iframe.contentWindow) {\n    return;\n  }\n  object['type'] = type;\n  object['sentinel'] = getSentinel_(iframe, opt_is3P);\n  let payload = object;\n  if (opt_is3P) {\n    // Serialize ourselves because that is much faster in Chrome.\n    payload = 'amp-' + JSON.stringify(object);\n  }\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n    target.win./*OK*/ postMessage(payload, target.origin);\n  }\n}\n\n/**\n * Gets the sentinel string.\n * @param {!Element} iframe The iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {string} Sentinel string.\n * @private\n */\nfunction getSentinel_(iframe, opt_is3P) {\n  return opt_is3P ? iframe.getAttribute('data-amp-3p-sentinel') : 'amp';\n}\n\n/**\n * JSON parses event.data if it needs to be\n * @param {*} data\n * @return {?JsonObject} object message\n * @private\n * @visibleForTesting\n */\nexport function parseIfNeeded(data) {\n  if (typeof data == 'string') {\n    if (data.charAt(0) == '{') {\n      data =\n        tryParseJson(data, (e) => {\n          dev().warn(\n            'IFRAME-HELPER',\n            'Postmessage could not be parsed. ' +\n              'Is it in a valid JSON format?',\n            e\n          );\n        }) || null;\n    } else if (isAmpMessage(data)) {\n      data = deserializeMessage(data);\n    } else {\n      data = null;\n    }\n  }\n  return /** @type {?JsonObject} */ (data);\n}\n\n/**\n * Manages a postMessage API for an iframe with a subscription message and\n * a way to broadcast messages to all subscribed windows, which\n * in turn must all be descendants of the contentWindow of the iframe.\n */\nexport class SubscriptionApi {\n  /**\n   * @param {!Element} iframe The iframe.\n   * @param {string} type Type of the subscription message.\n   * @param {boolean} is3p set to true if the iframe is 3p.\n   * @param {function(!JsonObject, !Window, string)} requestCallback Callback\n   *     invoked whenever a new window subscribes.\n   */\n  constructor(iframe, type, is3p, requestCallback) {\n    /** @private @const {!Element} */\n    this.iframe_ = iframe;\n    /** @private @const {boolean} */\n    this.is3p_ = is3p;\n    /** @private @const {!Array<{win: !Window, origin: string}>} */\n    this.clientWindows_ = [];\n\n    /** @private @const {!UnlistenDef} */\n    this.unlisten_ = listenFor(\n      this.iframe_,\n      type,\n      (data, source, origin) => {\n        // This message might be from any window within the iframe, we need\n        // to keep track of which windows want to be sent updates.\n        if (!this.clientWindows_.some((entry) => entry.win == source)) {\n          this.clientWindows_.push({win: source, origin});\n        }\n        requestCallback(data, source, origin);\n      },\n      this.is3p_,\n      // For 3P frames we also allow nested frames within them to subscribe..\n      this.is3p_ /* opt_includingNestedWindows */\n    );\n  }\n\n  /**\n   * Sends a message to all subscribed windows.\n   * @param {string} type Type of the message.\n   * @param {!JsonObject} data Message payload.\n   */\n  send(type, data) {\n    // Remove clients that have been removed from the DOM.\n    remove(this.clientWindows_, (client) => !client.win.parent);\n    postMessageToWindows(\n      this.iframe_,\n      this.clientWindows_,\n      type,\n      data,\n      this.is3p_\n    );\n  }\n\n  /**\n   * Destroys iframe.\n   */\n  destroy() {\n    this.unlisten_();\n    this.clientWindows_.length = 0;\n  }\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function looksLikeTrackingIframe(element) {\n  const {height, width} = element.getLayoutSize();\n  // This heuristic is subject to change.\n  if (width > 10 || height > 10) {\n    return false;\n  }\n  // Iframe is not tracking iframe if open with user interaction\n  return !closestAncestorElementBySelector(element, '.i-amphtml-overlay');\n}\n\n// Most common ad sizes\n// Array of [width, height] pairs.\nconst adSizes = [\n  [300, 250],\n  [320, 50],\n  [300, 50],\n  [320, 100],\n];\n\n/**\n * Guess whether this element might be an ad.\n * @param {!Element} element An amp-iframe element.\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isAdLike(element) {\n  const {height, width} = element.getLayoutSize();\n  for (let i = 0; i < adSizes.length; i++) {\n    const refWidth = adSizes[i][0];\n    const refHeight = adSizes[i][1];\n    if (refHeight > height) {\n      continue;\n    }\n    if (refWidth > width) {\n      continue;\n    }\n    // Fuzzy matching to account for padding.\n    if (height - refHeight <= 20 && width - refWidth <= 20) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {!Element} iframe\n * @return {!Element}\n */\nexport function disableScrollingOnIframe(iframe) {\n  addAttributesToElement(iframe, dict({'scrolling': 'no'}));\n\n  // This shouldn't work, but it does on Firefox.\n  // https://stackoverflow.com/a/15494969\n  setStyle(iframe, 'overflow', 'hidden');\n\n  return iframe;\n}\n\n/**\n * Returns true if win's properties can be accessed and win is defined.\n * This functioned is used to determine if a window is cross-domained\n * from the perspective of the current window.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function canInspectWindow(win) {\n  // TODO: this is not reliable.  The compiler assumes that property reads are\n  // side-effect free.  The recommended fix is to use goog.reflect.sinkValue\n  // but since we're not using the closure library I'm not sure how to do this.\n  // See https://github.com/google/closure-compiler/issues/3156\n  try {\n    // win['test'] could be truthy but not true the compiler shouldn't be able\n    // to optimize this check away.\n    return !!win.location.href && (win['test'] || true);\n  } catch (unusedErr) {\n    return false;\n  }\n}\n\n/** @const {string} */\nexport const FIE_EMBED_PROP = '__AMP_EMBED__';\n\n/**\n * Returns the embed created using `installFriendlyIframeEmbed` or `null`.\n * Caution: This will only return the FIE after the iframe has 'loaded'. If you\n * are checking before this signal you may be in a race condition that returns\n * null.\n * @param {!HTMLIFrameElement} iframe\n * @return {?./friendly-iframe-embed.FriendlyIframeEmbed}\n */\nexport function getFriendlyIframeEmbedOptional(iframe) {\n  return /** @type {?./friendly-iframe-embed.FriendlyIframeEmbed} */ (\n    iframe[FIE_EMBED_PROP]\n  );\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isInFie(element) {\n  return (\n    element.classList.contains('i-amphtml-fie') ||\n    !!closestAncestorElementBySelector(element, '.i-amphtml-fie')\n  );\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TODO(rcebulko): Migrate the actual ViewportInterface into core or an extern.\n * @typedef {{\n *   getHeight: function(this:ViewportInterfaceDef):number,\n *   getWidth: function(this:ViewportInterfaceDef):number,\n * }}\n */\nlet ViewportInterfaceDef;\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nexport let LayoutRectDef;\n\n/**\n * The structure that contains the size for an element. The exact\n * interpretation of the size depends on the use case.\n *\n * @typedef {{\n *   width: number,\n *   height: number,\n * }}\n */\nexport let LayoutSizeDef;\n\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nexport let LayoutMarginsDef;\n\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\nexport let LayoutMarginsChangeDef;\n\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\nexport const RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n};\n\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\nexport function layoutRectLtwh(left, top, width, height) {\n  return {\n    left,\n    top,\n    width,\n    height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top,\n  };\n}\n\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\nexport function layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(\n    Number(rect.left),\n    Number(rect.top),\n    Number(rect.width),\n    Number(rect.height)\n  );\n}\n\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef|!ClientRect} r1\n * @param {!LayoutRectDef|!ClientRect} r2\n * @return {boolean}\n */\nexport function rectsOverlap(r1, r2) {\n  return (\n    r1.top <= r2.bottom &&\n    r2.top <= r1.bottom &&\n    r1.left <= r2.right &&\n    r2.left <= r1.right\n  );\n}\n\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\nexport function rectIntersection(var_args) {\n  let x0 = -Infinity;\n  let x1 = Infinity;\n  let y0 = -Infinity;\n  let y1 = Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    const current = arguments[i];\n    if (!current) {\n      continue;\n    }\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n  if (x1 == Infinity) {\n    return null;\n  }\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {!RelativePositions}\n */\nexport function layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!ViewportInterfaceDef} viewport\n * @param {number} scrollPos\n * @return {!RelativePositions}\n */\nexport function layoutPositionRelativeToScrolledViewport(\n  layoutBox,\n  viewport,\n  scrollPos\n) {\n  const scrollLayoutBox = layoutRectFromDomRect(\n    /** @type {!ClientRect} */ ({\n      top: scrollPos,\n      bottom: scrollPos + viewport.getHeight(),\n      left: 0,\n      right: viewport.getWidth(),\n    })\n  );\n  if (rectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\nexport function expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(\n    rect.left - rect.width * dw,\n    rect.top - rect.height * dh,\n    rect.width * (1 + dw * 2),\n    rect.height * (1 + dh * 2)\n  );\n}\n\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\nexport function moveLayoutRect(rect, dx, dy) {\n  if ((dx == 0 && dy == 0) || (rect.width == 0 && rect.height == 0)) {\n    return rect;\n  }\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\nexport function areMarginsChanged(margins, change) {\n  return (\n    (change.top !== undefined && change.top != margins.top) ||\n    (change.right !== undefined && change.right != margins.right) ||\n    (change.bottom !== undefined && change.bottom != margins.bottom) ||\n    (change.left !== undefined && change.left != margins.left)\n  );\n}\n\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\nexport function layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n  return (\n    r1.left == r2.left &&\n    r1.top == r2.top &&\n    r1.width == r2.width &&\n    r1.height == r2.height\n  );\n}\n\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\nexport function cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right,\n  };\n}\n\n/**\n * @param {!LayoutRectDef|!ClientRect|!DOMRect} rect\n * @return {!LayoutSizeDef}\n */\nexport function layoutSizeFromRect(rect) {\n  const {height, width} = rect;\n  return {width, height};\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MessageType} from '../3p-frame-messaging';\nimport {SubscriptionApi} from '../iframe-helper';\nimport {dict} from '../core/types/object';\nimport {\n  layoutRectLtwh,\n  moveLayoutRect,\n  rectIntersection,\n} from '../core/math/layout-rect';\n\n/**\n * The structure that defines the rectangle used in intersection observers.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number,\n * }}\n */\nexport let DOMRect;\n\nexport const DEFAULT_THRESHOLD = [\n  0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65,\n  0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1,\n];\n\n/** @typedef {{\n *    element: !Element,\n *    currentThresholdSlot: number,\n *  }}\n */\nlet ElementIntersectionStateDef;\n\n/** @const @private */\nconst INIT_TIME = Date.now();\n\n/**\n * A function to get the element's current IntersectionObserverEntry\n * regardless of the intersetion ratio. Only available when element is not\n * nested in a container iframe.\n * @param {!../layout-rect.LayoutRectDef} element element's rect\n * @param {?../layout-rect.LayoutRectDef} owner element's owner rect\n * @param {!../layout-rect.LayoutRectDef} hostViewport hostViewport's rect\n * @return {!IntersectionObserverEntry} A change entry.\n */\nexport function getIntersectionChangeEntry(element, owner, hostViewport) {\n  const intersection =\n    rectIntersection(element, owner, hostViewport) ||\n    layoutRectLtwh(0, 0, 0, 0);\n  const ratio = intersectionRatio(intersection, element);\n  return calculateChangeEntry(element, hostViewport, intersection, ratio);\n}\n\n/**\n * A class to help amp-iframe and amp-ad nested iframe listen to intersection\n * change.\n */\nexport class IntersectionObserver3pHost {\n  /**\n   * @param {!AMP.BaseElement} baseElement\n   * @param {!Element} iframe\n   */\n  constructor(baseElement, iframe) {\n    /** @private @const {!AMP.BaseElement} */\n    this.baseElement_ = baseElement;\n\n    /** @private {?IntersectionObserver} */\n    this.intersectionObserver_ = null;\n\n    /** @private {?SubscriptionApi} */\n    this.subscriptionApi_ = new SubscriptionApi(\n      iframe,\n      MessageType.SEND_INTERSECTIONS,\n      false, // is3P\n      () => {\n        this.startSendingIntersection_();\n      }\n    );\n\n    this.intersectionObserver_ = new IntersectionObserver(\n      (entries) => {\n        this.subscriptionApi_.send(\n          MessageType.INTERSECTION,\n          dict({'changes': entries.map(cloneEntryForCrossOrigin)})\n        );\n      },\n      {threshold: DEFAULT_THRESHOLD}\n    );\n  }\n\n  /**\n   * Function to start listening to viewport event. and observer intersection\n   * change on the element.\n   */\n  startSendingIntersection_() {\n    this.intersectionObserver_.observe(this.baseElement_.element);\n  }\n\n  /**\n   * Clean all listenrs\n   */\n  destroy() {\n    this.intersectionObserver_.disconnect();\n    this.intersectionObserver_ = null;\n    this.subscriptionApi_.destroy();\n    this.subscriptionApi_ = null;\n  }\n}\n\n/**\n * Returns the ratio of the smaller box's area to the larger box's area.\n * @param {!../layout-rect.LayoutRectDef} smaller\n * @param {!../layout-rect.LayoutRectDef} larger\n * @return {number}\n * @visibleForTesting\n */\nexport function intersectionRatio(smaller, larger) {\n  const smallerBoxArea = smaller.width * smaller.height;\n  const largerBoxArea = larger.width * larger.height;\n\n  // Check for a divide by zero\n  return largerBoxArea === 0 ? 0 : smallerBoxArea / largerBoxArea;\n}\n\n/**\n * Helper function to calculate the IntersectionObserver change entry.\n * @param {!../layout-rect.LayoutRectDef} element element's rect\n * @param {?../layout-rect.LayoutRectDef} hostViewport hostViewport's rect\n * @param {!../layout-rect.LayoutRectDef} intersection\n * @param {number} ratio\n * @return {!IntersectionObserverEntry}}\n */\nfunction calculateChangeEntry(element, hostViewport, intersection, ratio) {\n  // If element not in an iframe.\n  // adjust all LayoutRect to hostViewport Origin.\n  let boundingClientRect = element;\n  let rootBounds = hostViewport;\n  // If no hostViewport is provided, element is inside an non-scrollable iframe.\n  // Every Layoutrect has already adjust their origin according to iframe\n  // rect origin. LayoutRect position is relative to iframe origin,\n  // thus relative to iframe's viewport origin because the viewport is at the\n  // iframe origin. No need to adjust position here.\n\n  if (hostViewport) {\n    // If element not in an iframe.\n    // adjust all LayoutRect to hostViewport Origin.\n    rootBounds = /** @type {!../layout-rect.LayoutRectDef} */ (rootBounds);\n    intersection = moveLayoutRect(\n      intersection,\n      -hostViewport.left,\n      -hostViewport.top\n    );\n    // The element is relative to (0, 0), while the viewport moves. So, we must\n    // adjust.\n    boundingClientRect = moveLayoutRect(\n      boundingClientRect,\n      -hostViewport.left,\n      -hostViewport.top\n    );\n    // Now, move the viewport to (0, 0)\n    rootBounds = moveLayoutRect(\n      rootBounds,\n      -hostViewport.left,\n      -hostViewport.top\n    );\n  }\n\n  return /** @type {!IntersectionObserverEntry} */ ({\n    time:\n      typeof performance !== 'undefined' && performance.now\n        ? performance.now()\n        : Date.now() - INIT_TIME,\n    rootBounds,\n    boundingClientRect,\n    intersectionRect: intersection,\n    intersectionRatio: ratio,\n  });\n}\n\n/**\n * @param {!IntersectionObserverEntry} entry\n * @return {!IntersectionObserverEntry}\n */\nfunction cloneEntryForCrossOrigin(entry) {\n  return /** @type {!IntersectionObserverEntry} */ ({\n    'time': entry.time,\n    'rootBounds': entry.rootBounds,\n    'boundingClientRect': entry.boundingClientRect,\n    'intersectionRect': entry.intersectionRect,\n    'intersectionRatio': entry.intersectionRatio,\n  });\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from '../log';\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service';\nimport {hasOwn, map} from '../core/types/object';\nimport {isArray} from '../core/types';\nimport {parseQueryString} from '../core/types/string/url';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isExperimentOn} from './experiments';\nimport {isFiniteNumber} from './core/types';\nimport {setStyle, setStyles, toggle} from './style';\nimport {toWin} from './core/window';\nimport {transparentPng} from './core/dom/img';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-RENDER': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe =\n  /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n * @type {?boolean}\n */\nlet aspectRatioCssCache = null;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && tagName.toLowerCase().startsWith('i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  const m = userAssert(\n    /[a-z]+/i.exec(length),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element allowlisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified element. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ allowlist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @param {boolean} fixIeIntrinsic\n * @return {!Layout}\n */\nexport function applyStaticLayout(element, fixIeIntrinsic = false) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (\n      devAssert(parseLayout(completedLayoutAttr))\n    );\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n      if (element.sizerElement) {\n        element.sizerElement.setAttribute('slot', 'i-amphtml-svc');\n      }\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(\n    inputLayout !== undefined,\n    'Invalid \"layout\" value: %s, %s',\n    layoutAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(\n    inputWidth !== undefined,\n    'Invalid \"width\" value: %s, %s',\n    widthAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(\n    inputHeight !== undefined,\n    'Invalid \"height\" value: %s, %s',\n    heightAttr,\n    element\n  );\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'The \"height\" attribute is missing: %s', element);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'The \"width\" attribute must be missing or \"auto\": %s',\n      element\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'The \"width\" attribute must be present and not \"auto\": %s',\n      element\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for \"width\" and \"height\": %s, %s, %s',\n      widthAttr,\n      heightAttr,\n      element\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      '\"heights\" attribute must be missing: %s',\n      element\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    if (shouldUseAspectRatioCss(toWin(element.ownerDocument.defaultView))) {\n      setStyle(\n        element,\n        'aspect-ratio',\n        `${getLengthNumeral(width)}/${getLengthNumeral(height)}`\n      );\n    } else {\n      const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n      sizer.setAttribute('slot', 'i-amphtml-svc');\n      setStyles(sizer, {\n        paddingTop:\n          (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n      });\n      element.insertBefore(sizer, element.firstChild);\n      element.sizerElement = sizer;\n    }\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\" slot=\"i-amphtml-svc\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      !IS_ESM && fixIeIntrinsic && element.ownerDocument\n        ? transparentPng(\n            element.ownerDocument,\n            dev().assertNumber(getLengthNumeral(width)),\n            dev().assertNumber(getLengthNumeral(height))\n          )\n        : `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n *\n * @param {!Window} win\n * @return {boolean}\n */\nfunction shouldUseAspectRatioCss(win) {\n  if (aspectRatioCssCache == null) {\n    aspectRatioCssCache =\n      (isExperimentOn(win, 'layout-aspect-ratio-css') &&\n        win.CSS &&\n        win.CSS.supports &&\n        win.CSS.supports('aspect-ratio: 1/1')) ||\n      false;\n  }\n  return aspectRatioCssCache;\n}\n\n/** @visibleForTesting */\nexport function resetShouldUseAspectRatioCssForTesting() {\n  aspectRatioCssCache = null;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {computedStyle} from '../style';\nimport {remove} from '../core/types/array';\nimport {toWin} from '../core/window';\nimport {tryCallback} from '../core/error';\n\n/** @enum {number} */\nconst Type = {\n  /**\n   * Mapped to the `ResizeObserverEntry.contentRect` and returns a\n   * `LayoutSizeDef` value.\n   */\n  CONTENT: 0,\n  /**\n   * Mapped to the `ResizeObserverEntry.borderBoxSize` and returns a\n   * `ResizeObserverSize` value.\n   */\n  BORDER_BOX: 1,\n};\n\nconst VERTICAL_RE = /vertical/;\n\n/** @const {!WeakMap<!Window, !ResizeObserver>} */\nconst observers = new WeakMap();\n\n/** @const {!WeakMap<!Element, !Array<{type: Type, callback: function(?)}>>} */\nconst targetObserverMultimap = new WeakMap();\n\n/** @const {!WeakMap<!Element, !ResizeObserverEntry>} */\nconst targetEntryMap = new WeakMap();\n\n/**\n * @param {!Element} element\n * @param {function(!../layout-rect.LayoutSizeDef)} callback\n */\nexport function observeContentSize(element, callback) {\n  observeSize(element, Type.CONTENT, callback);\n}\n\n/**\n * @param {!Element} element\n * @param {!Function} callback\n */\nexport function unobserveContentSize(element, callback) {\n  unobserveSize(element, Type.CONTENT, callback);\n}\n\n/**\n * @param {!Element} element\n * @return {!Promise<!../layout-rect.LayoutSizeDef>}\n */\nexport function measureContentSize(element) {\n  return new Promise((resolve) => {\n    const onSize = (size) => {\n      resolve(size);\n      unobserveContentSize(element, onSize);\n    };\n    observeContentSize(element, onSize);\n  });\n}\n\n/**\n * Note: this method doesn't support multi-fragment border boxes.\n * @param {!Element} element\n * @param {function(!ResizeObserverSize)} callback\n */\nexport function observeBorderBoxSize(element, callback) {\n  observeSize(element, Type.BORDER_BOX, callback);\n}\n\n/**\n * Note: this method doesn't support multi-fragment border boxes.\n * @param {!Element} element\n * @param {!Function} callback\n */\nexport function unobserveBorderBoxSize(element, callback) {\n  unobserveSize(element, Type.BORDER_BOX, callback);\n}\n\n/**\n * Note: this method doesn't support multi-fragment border boxes.\n * @param {!Element} element\n * @return {!Promise<!ResizeObserverSize>}\n */\nexport function measureBorderBoxSize(element) {\n  return new Promise((resolve) => {\n    const onSize = (size) => {\n      resolve(size);\n      unobserveBorderBoxSize(element, onSize);\n    };\n    observeBorderBoxSize(element, onSize);\n  });\n}\n\n/**\n * @param {!Element} element\n * @param {Type} type\n * @param {function(?)} callback\n */\nfunction observeSize(element, type, callback) {\n  const win = element.ownerDocument.defaultView;\n  if (!win) {\n    return;\n  }\n  let callbacks = targetObserverMultimap.get(element);\n  if (!callbacks) {\n    callbacks = [];\n    targetObserverMultimap.set(element, callbacks);\n    getObserver(win).observe(element);\n  }\n  const exists = callbacks.some(\n    (cb) => cb.callback === callback && cb.type === type\n  );\n  if (!exists) {\n    callbacks.push({type, callback});\n    const entry = targetEntryMap.get(element);\n    if (entry) {\n      setTimeout(() => computeAndCall(type, callback, entry));\n    }\n  }\n}\n\n/**\n * @param {!Element} element\n * @param {Type} type\n * @param {function(?)} callback\n */\nfunction unobserveSize(element, type, callback) {\n  const callbacks = targetObserverMultimap.get(element);\n  if (!callbacks) {\n    return;\n  }\n  remove(callbacks, (cb) => cb.callback === callback && cb.type === type);\n  if (callbacks.length == 0) {\n    targetObserverMultimap.delete(element);\n    targetEntryMap.delete(element);\n    const win = element.ownerDocument.defaultView;\n    if (win) {\n      getObserver(win).unobserve(element);\n    }\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!ResizeObserver}\n */\nfunction getObserver(win) {\n  let observer = observers.get(win);\n  if (!observer) {\n    observer = new win.ResizeObserver(processEntries);\n    observers.set(win, observer);\n  }\n  return observer;\n}\n\n/**\n * @param {!Array<!ResizeObserverEntry>} entries\n */\nfunction processEntries(entries) {\n  const seen = new Set();\n  for (let i = entries.length - 1; i >= 0; i--) {\n    const entry = entries[i];\n    const {target} = entry;\n    if (seen.has(target)) {\n      continue;\n    }\n    seen.add(target);\n    const callbacks = targetObserverMultimap.get(target);\n    if (!callbacks) {\n      continue;\n    }\n    targetEntryMap.set(target, entry);\n    for (let k = 0; k < callbacks.length; k++) {\n      const {callback, type} = callbacks[k];\n      computeAndCall(type, callback, entry);\n    }\n  }\n}\n\n/**\n * @param {Type} type\n * @param {function(?)} callback\n * @param {!ResizeObserverEntry} entry\n */\nfunction computeAndCall(type, callback, entry) {\n  if (type == Type.CONTENT) {\n    const {contentRect} = entry;\n    const {height, width} = contentRect;\n    /** @type {!../layout-rect.LayoutSizeDef} */\n    const size = {width, height};\n    tryCallback(callback, size);\n  } else if (type == Type.BORDER_BOX) {\n    const {borderBoxSize: borderBoxSizeArray} = entry;\n    /** @type {!ResizeObserverSize} */\n    let borderBoxSize;\n    if (borderBoxSizeArray) {\n      // `borderBoxSize` is supported. Only single-fragment border boxes are\n      // supported here (`borderBoxSize[0]`).\n      if (borderBoxSizeArray.length > 0) {\n        borderBoxSize = borderBoxSizeArray[0];\n      } else {\n        borderBoxSize = /** @type {!ResizeObserverSize} */ ({\n          inlineSize: 0,\n          blockSize: 0,\n        });\n      }\n    } else {\n      // `borderBoxSize` is not supported: polyfill it via blocking measures.\n      const {target} = entry;\n      const win = toWin(target.ownerDocument.defaultView);\n      const isVertical = VERTICAL_RE.test(\n        computedStyle(win, target)['writing-mode']\n      );\n      const {offsetHeight, offsetWidth} = /** @type {!HTMLElement} */ (target);\n      let inlineSize, blockSize;\n      if (isVertical) {\n        blockSize = offsetWidth;\n        inlineSize = offsetHeight;\n      } else {\n        inlineSize = offsetWidth;\n        blockSize = offsetHeight;\n      }\n      borderBoxSize = /** @type {!ResizeObserverSize} */ ({\n        inlineSize,\n        blockSize,\n      });\n    }\n    tryCallback(callback, borderBoxSize);\n  }\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {observeBorderBoxSize, unobserveBorderBoxSize} from './size-observer';\n\nexport class PauseHelper {\n  /**\n   * @param {!AmpElement} element\n   */\n  constructor(element) {\n    /** @private @const */\n    this.element_ = element;\n\n    /** @private {boolean} */\n    this.isPlaying_ = false;\n\n    /** @private {boolean} */\n    this.hasSize_ = false;\n\n    this.pauseWhenNoSize_ = this.pauseWhenNoSize_.bind(this);\n  }\n\n  /**\n   * @param {boolean} isPlaying\n   */\n  updatePlaying(isPlaying) {\n    if (isPlaying === this.isPlaying_) {\n      return;\n    }\n    this.isPlaying_ = isPlaying;\n    if (isPlaying) {\n      // Pause will not be called until transitioning from \"has size\" to\n      // \"no size\". Which means a measurement must first be received that\n      // has size, then a measurement that does not have size.\n      this.hasSize_ = false;\n      observeBorderBoxSize(this.element_, this.pauseWhenNoSize_);\n    } else {\n      unobserveBorderBoxSize(this.element_, this.pauseWhenNoSize_);\n    }\n  }\n\n  /**\n   * @param {!ResizeObserverSize} size\n   * @private\n   */\n  pauseWhenNoSize_({blockSize, inlineSize}) {\n    const hasSize = inlineSize > 0 && blockSize > 0;\n    if (hasSize === this.hasSize_) {\n      return;\n    }\n    this.hasSize_ = hasSize;\n    if (!hasSize) {\n      this.element_.pause();\n    }\n  }\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../../assert';\n\n/**\n * Interpret a byte array as a UTF-8 string.\n * @param {!BufferSource} bytes\n * @return {string}\n */\nexport function utf8Decode(bytes) {\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder('utf-8').decode(bytes);\n  }\n  const asciiString = bytesToString(new Uint8Array(bytes.buffer || bytes));\n  return decodeURIComponent(escape(asciiString));\n}\n\n/**\n * Turn a string into UTF-8 bytes.\n * @param {string} string\n * @return {!Uint8Array}\n */\nexport function utf8Encode(string) {\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder('utf-8').encode(string);\n  }\n  return stringToBytes(unescape(encodeURIComponent(string)));\n}\n\n/**\n * Converts a string which holds 8-bit code points, such as the result of atob,\n * into a Uint8Array with the corresponding bytes.\n * If you have a string of characters, you probably want to be using utf8Encode.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function stringToBytes(str) {\n  const bytes = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    const charCode = str.charCodeAt(i);\n    devAssert(charCode <= 255, 'Characters must be in range [0,255]');\n    bytes[i] = charCode;\n  }\n  return bytes;\n}\n\n/**\n * Converts a 8-bit bytes array into a string\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function bytesToString(bytes) {\n  // Intentionally avoids String.fromCharCode.apply so we don't suffer a\n  // stack overflow. #10495, https://jsperf.com/bytesToString-2\n  const array = new Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = String.fromCharCode(bytes[i]);\n  }\n  return array.join('');\n}\n\n/**\n * Converts a 4-item byte array to an unsigned integer.\n * Assumes bytes are big endian.\n * @param {!Uint8Array} bytes\n * @return {number}\n */\nexport function bytesToUInt32(bytes) {\n  if (bytes.length != 4) {\n    throw new Error('Received byte array with length != 4');\n  }\n  const val =\n    ((bytes[0] & 0xff) << 24) |\n    ((bytes[1] & 0xff) << 16) |\n    ((bytes[2] & 0xff) << 8) |\n    (bytes[3] & 0xff);\n  // Convert to unsigned.\n  return val >>> 0;\n}\n\n/**\n * Generate a random bytes array with specific length using\n * win.crypto.getRandomValues. Return null if it is not available.\n * @param {!Window} win\n * @param {number} length\n * @return {?Uint8Array}\n */\nexport function getCryptoRandomBytesArray(win, length) {\n  let {crypto} = win;\n\n  // Support IE 11\n  if (!IS_ESM) {\n    crypto = /** @type {!webCrypto.Crypto|undefined} */ (\n      crypto || win.msCrypto\n    );\n    if (!crypto || !crypto.getRandomValues) {\n      return null;\n    }\n  }\n\n  // Widely available in browsers we support:\n  // http://caniuse.com/#search=getRandomValues\n  const uint8array = new Uint8Array(length);\n  crypto.getRandomValues(uint8array);\n  return uint8array;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {bytesToString, stringToBytes, utf8Decode, utf8Encode} from './bytes';\n\n/**\n * Character mapping from base64url to base64.\n * @const {!Object<string, string>}\n */\nconst base64UrlDecodeSubs = {'-': '+', '_': '/', '.': '='};\n\n/**\n * Character mapping from base64 to base64url.\n * @const {!Object<string, string>}\n */\nconst base64UrlEncodeSubs = {'+': '-', '/': '_', '=': '.'};\n\n/**\n * Converts a string which is in base64url encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64UrlDecodeToBytes(str) {\n  const encoded = atob(str.replace(/[-_.]/g, (ch) => base64UrlDecodeSubs[ch]));\n  return stringToBytes(encoded);\n}\n\n/**\n * Converts a string which is in base64 encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64DecodeToBytes(str) {\n  return stringToBytes(atob(str));\n}\n\n/**\n * Converts a bytes array into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64UrlEncodeFromBytes(bytes) {\n  const str = bytesToString(bytes);\n  return btoa(str).replace(/[+/=]/g, (ch) => base64UrlEncodeSubs[ch]);\n}\n\n/**\n * Converts a string into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlEncodeFromString(str) {\n  const bytes = utf8Encode(str);\n  return base64UrlEncodeFromBytes(bytes);\n}\n\n/**\n * Decode a base64url encoded string by `base64UrlEncodeFromString`\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlDecodeFromString(str) {\n  const bytes = base64UrlDecodeToBytes(str);\n  return utf8Decode(bytes);\n}\n\n/**\n * Converts a bytes array into base64 encoded string.\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64EncodeFromBytes(bytes) {\n  return btoa(bytesToString(bytes));\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSENT_POLICY_STATE, // eslint-disable-line no-unused-vars\n} from './core/constants/consent-state';\nimport {Services} from './services';\nimport {dict} from './core/types/object';\n\n/**\n * Returns a promise that resolve when all consent state the policy wait\n * for resolve. Or if consent service is not available.\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?CONSENT_POLICY_STATE>}\n */\nexport function getConsentPolicyState(element, policyId = 'default') {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.whenPolicyResolved(/** @type {string} */ (policyId));\n    }\n  );\n}\n\n/**\n * Returns a promise that resolves to a sharedData retrieved from consent\n * remote endpoint.\n * @param {!Element|!ShadowRoot} element\n * @param {string} policyId\n * @return {!Promise<?Object>}\n */\nexport function getConsentPolicySharedData(element, policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getMergedSharedData(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<string>}\n */\nexport function getConsentPolicyInfo(element, policyId = 'default') {\n  // Return the stored consent string.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentStringInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * @param {!Element|!ShadowRoot} element\n * @param {string=} policyId\n * @return {!Promise<?Object|undefined>}\n */\nexport function getConsentMetadata(element, policyId = 'default') {\n  // Return the stored consent metadata.\n  return Services.consentPolicyServiceForDocOrNull(element).then(\n    (consentPolicy) => {\n      if (!consentPolicy) {\n        return null;\n      }\n      return consentPolicy.getConsentMetadataInfo(\n        /** @type {string} */ (policyId)\n      );\n    }\n  );\n}\n\n/**\n * Returns a set of consent values to forward to a 3rd party (like an iframe).\n * @param {!Element} element\n * @param {?string=} opt_policyId\n * @return {!Promise<!JsonObject>}\n *   See extensions/amp-consent/customizing-extension-behaviors-on-consent.md:\n *    - consentMetadata\n *    - consentString\n *    - consentPolicyState\n *    - consentPolicySharedData\n */\nexport function getConsentDataToForward(element, opt_policyId) {\n  return Services.consentPolicyServiceForDocOrNull(element).then((policy) => {\n    const gettersOrNull = dict({\n      'consentMetadata': policy && policy.getConsentMetadataInfo,\n      'consentString': policy && policy.getConsentStringInfo,\n      'consentPolicyState': policy && policy.whenPolicyResolved,\n      'consentPolicySharedData': policy && policy.getMergedSharedData,\n    });\n    if (!policy) {\n      return gettersOrNull;\n    }\n    return /** @type {!JsonObject} */ (\n      Promise.all(\n        Object.keys(gettersOrNull).map((key) =>\n          gettersOrNull[key]\n            .call(policy, opt_policyId || 'default')\n            .then((value) => ({[key]: value}))\n        )\n      ).then((objs) => Object.assign.apply({}, objs))\n    );\n  });\n}\n\n/**\n * Determine if an element needs to be blocked by consent based on meta tags.\n * @param {*} element\n * @return {boolean}\n */\nexport function shouldBlockOnConsentByMeta(element) {\n  const ampdoc = element.getAmpDoc();\n  let content = ampdoc.getMetaByName('amp-consent-blocking');\n  if (!content) {\n    return false;\n  }\n\n  // Handles whitespace\n  content = content.toUpperCase().replace(/\\s+/g, '');\n\n  const contents = /** @type {Array<string>} */ (content.split(','));\n  return contents.includes(element.tagName);\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {computedStyle} from './style';\nimport {dev} from './log';\nimport {getParentWindowFrameElement} from './service';\n\nconst AD_CONTAINER_PROP = '__AMP__AD_CONTAINER';\n\n/**\n * Tags that are allowed to have fixed positioning\n * @const {!Object<string, boolean>}\n */\nconst CONTAINERS = {\n  'AMP-FX-FLYING-CARPET': true,\n  'AMP-LIGHTBOX': true,\n  'AMP-STICKY-AD': true,\n  'AMP-LIGHTBOX-GALLERY': true,\n};\n\n/**\n * Determines if an element is fixed-positioned.\n * OK to use, because it's only called from onLayoutMeasure\n * @param {!Element} el\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isPositionFixed(el, win) {\n  const {position} = computedStyle(win, el);\n  // We consider sticky positions as fixed, since they can be fixed.\n  return position == 'fixed' || position == 'sticky';\n}\n\n/**\n * @param {!Element} element\n * @param {!Window} win\n * @return {boolean} whether the element position is allowed. If the element\n * belongs to CONTAINERS, it is allowed to be position fixed.\n * If the element has a position fixed ancestor, it is not allowed.\n * This should only be called when a layout on the page was just forced\n * anyway.\n */\nexport function isAdPositionAllowed(element, win) {\n  let hasFixedAncestor = false;\n  let containers = 0;\n  let el = element;\n  do {\n    if (CONTAINERS[el.tagName]) {\n      // The containers must not themselves be contained in a fixed-position\n      // element. Continue the search.\n      containers++;\n      hasFixedAncestor = false;\n    } else if (isPositionFixed(dev().assertElement(el), win)) {\n      // Because certain blessed elements may contain a position fixed\n      // container (which contain an ad), we continue to search the\n      // ancestry tree.\n      hasFixedAncestor = true;\n    }\n    el = el.parentElement;\n  } while (el && el.tagName != 'BODY');\n  return !hasFixedAncestor && containers <= 1;\n}\n\n/**\n * Returns the blessed container element tagName if the ad is contained by one.\n * This is called during layout measure.\n * @param {!Element} element\n * @return {?string}\n */\nexport function getAdContainer(element) {\n  if (element[AD_CONTAINER_PROP] === undefined) {\n    let el = element.parentElement;\n    while (el && el.tagName != 'BODY') {\n      if (CONTAINERS[el.tagName]) {\n        return (element[AD_CONTAINER_PROP] = el.tagName);\n      }\n      el = el.parentElement;\n    }\n    element[AD_CONTAINER_PROP] = null;\n  }\n  return element[AD_CONTAINER_PROP];\n}\n\n/**\n * Gets the resource ID of the amp-ad element containing the passed node.\n * If there is no containing amp-ad tag, then null will be returned.\n * TODO(jonkeller): Investigate whether non-A4A use case is needed. Issue 11436\n * @param {!Element} node\n * @param {!Window} topWin\n * @return {?string}\n */\nexport function getAmpAdResourceId(node, topWin) {\n  try {\n    const frameParent = getParentWindowFrameElement(node, topWin).parentElement;\n    if (frameParent.nodeName == 'AMP-AD') {\n      return String(frameParent.getResourceId());\n    }\n  } catch (e) {}\n  // Whether we entered the catch above (e.g. due to attempt to access\n  // across xdomain boundary), or failed to enter the if further above, the\n  // node is not within a friendly amp-ad tag. So, there is no amp-ad\n  // resource ID. How to handle that is up to the caller, but see TODO above.\n  return null;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AMPDOC_SINGLETON_NAME} from '../../../src/core/constants/enums';\nimport {ActionTrust} from '../../../src/core/constants/action-constants';\nimport {IntersectionObserver3pHost} from '../../../src/utils/intersection-observer-3p-host';\nimport {LayoutPriority, isLayoutSizeDefined} from '../../../src/layout';\nimport {MessageType} from '../../../src/3p-frame-messaging';\nimport {PauseHelper} from '../../../src/utils/pause-helper';\nimport {Services} from '../../../src/services';\nimport {base64EncodeFromBytes} from '../../../src/core/types/string/base64.js';\nimport {createCustomEvent, getData, listen} from '../../../src/event-helper';\nimport {devAssert, user, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {endsWith} from '../../../src/core/types/string';\nimport {getConsentDataToForward} from '../../../src/consent';\nimport {\n  isAdLike,\n  listenFor,\n  looksLikeTrackingIframe,\n} from '../../../src/iframe-helper';\nimport {isAdPositionAllowed} from '../../../src/ad-helper';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {moveLayoutRect} from '../../../src/core/math/layout-rect';\nimport {parseJson} from '../../../src/core/types/object/json';\nimport {removeElement} from '../../../src/dom';\nimport {removeFragment} from '../../../src/url';\nimport {setStyle} from '../../../src/style';\nimport {urls} from '../../../src/config';\nimport {utf8Encode} from '../../../src/core/types/string/bytes.js';\n\n/** @const {string} */\nconst TAG_ = 'amp-iframe';\n\n/** @const {!Array<string>} */\nconst ATTRIBUTES_TO_PROPAGATE = [\n  'allowfullscreen',\n  'allowpaymentrequest',\n  'allowtransparency',\n  'allow',\n  'frameborder',\n  'referrerpolicy',\n  'scrolling',\n  'tabindex',\n  'title',\n];\n\n/** @type {number}  */\nlet count = 0;\n\n/** @type {number}  */\nlet trackingIframeTimeout = 5000;\n\nexport class AmpIframe extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {?Element} */\n    this.placeholder_ = null;\n\n    /** @private {boolean} */\n    this.isClickToPlay_ = false;\n\n    /** @private {boolean} */\n    this.isAdLike_ = false;\n\n    /** @private {boolean} */\n    this.isTrackingFrame_ = false;\n\n    /** @private {boolean} */\n    this.isDisallowedAsAd_ = false;\n\n    /**\n     * The (relative) layout box of the ad iframe to the amp-ad tag.\n     * @private {?../../../src/layout-rect.LayoutRectDef}\n     */\n    this.iframeLayoutBox_ = null;\n\n    /** @private  {?HTMLIFrameElement} */\n    this.iframe_ = null;\n\n    /** @private {boolean} */\n    this.isResizable_ = false;\n\n    /** @private {?IntersectionObserver3pHost} */\n    this.intersectionObserverHostApi_ = null;\n\n    /** @private {string} */\n    this.sandbox_ = '';\n\n    /** @private {Function} */\n    this.unlistenPym_ = null;\n\n    /**\n     * The source of the iframe. May change to null for tracking iframes\n     * to prevent them from being recreated.\n     * @type {?string}\n     **/\n    this.iframeSrc = null;\n\n    /**\n     * The element which will contain the iframe. This may be the amp-iframe\n     * itself if the iframe is non-scrolling, or a wrapper element if it is.\n     * @private {?Element}\n     */\n    this.container_ = null;\n\n    /**\n     * The origin of URL at `src` attr, if available. Otherwise, null.\n     * @private {?string}\n     */\n    this.targetOrigin_ = null;\n\n    /** @private {boolean} */\n    this.hasErroredEmbedSize_ = false;\n\n    /** @private @const */\n    this.pauseHelper_ = new PauseHelper(this.element);\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    return isLayoutSizeDefined(layout);\n  }\n\n  /**\n   * @param {string} src\n   * @param {string} containerSrc\n   * @param {string} sandbox\n   * @return {string}\n   * @private\n   */\n  assertSource_(src, containerSrc, sandbox = '') {\n    const {element} = this;\n    const urlService = Services.urlForDoc(element);\n    const url = urlService.parse(src);\n    const {hostname, origin, protocol} = url;\n    // Some of these can be easily circumvented with redirects.\n    // Checks are mostly there to prevent people easily do something\n    // they did not mean to.\n    userAssert(\n      urlService.isSecure(src) || protocol == 'data:',\n      'Invalid <amp-iframe> src. Must start with https://. Found %s',\n      element\n    );\n    const containerUrl = urlService.parse(containerSrc);\n    userAssert(\n      !this.sandboxContainsToken_(sandbox, 'allow-same-origin') ||\n        (origin != containerUrl.origin && protocol != 'data:'),\n      'Origin of <amp-iframe> must not be equal to container %s' +\n        ' if allow-same-origin is set. See https://github.com/ampproject/' +\n        'amphtml/blob/main/docs/spec/amp-iframe-origin-policy.md for details.',\n      element\n    );\n    userAssert(\n      !(\n        endsWith(hostname, `.${urls.thirdPartyFrameHost}`) ||\n        endsWith(hostname, '.ampproject.org')\n      ),\n      'amp-iframe does not allow embedding of frames from ' +\n        'ampproject.*: %s',\n      src\n    );\n    return src;\n  }\n\n  /** @private */\n  assertPosition_() {\n    const pos = this.element.getLayoutBox();\n    const minTop = Math.min(600, this.getViewport().getSize().height * 0.75);\n    userAssert(\n      pos.top >= minTop,\n      '<amp-iframe> elements must be positioned outside the first 75% ' +\n        'of the viewport or 600px from the top (whichever is smaller): %s ' +\n        ' Current position %s. Min: %s' +\n        \"Positioning rules don't apply for iframes that use `placeholder`.\" +\n        'See https://github.com/ampproject/amphtml/blob/main/extensions/' +\n        'amp-iframe/amp-iframe.md#iframe-with-placeholder for details.',\n      this.element,\n      pos.top,\n      minTop\n    );\n  }\n\n  /**\n   * @param {string} sandbox\n   * @param {string} token\n   * @return {boolean}\n   * @private\n   */\n  sandboxContainsToken_(sandbox, token) {\n    const re = new RegExp(`\\\\s${token}\\\\s`, 'i');\n    return re.test(' ' + sandbox + ' ');\n  }\n\n  /**\n   * Transforms the src attribute. When possible, it adds `#amp=1` fragment\n   * to indicate that the iframe is running in AMP environment.\n   * @param {?string} src\n   * @return {string|undefined}\n   * @private\n   */\n  transformSrc_(src) {\n    if (!src) {\n      return;\n    }\n    const {hash, protocol} = Services.urlForDoc(this.element).parse(src);\n    // data-URLs are not modified.\n    if (protocol == 'data:') {\n      return src;\n    }\n    // If fragment already exists, it's not modified.\n    if (hash && hash != '#') {\n      return src;\n    }\n    // Add `#amp=1` fragment.\n    return removeFragment(src) + '#amp=1';\n  }\n\n  /**\n   * Transforms the srcdoc attribute if present to an equivalent data URI.\n   *\n   * It may be OK to change this later to leave the `srcdoc` in place and\n   * instead ensure that `allow-same-origin` is not present, but this\n   * implementation has the right security behavior which is that the document\n   * may under no circumstances be able to run JS on the parent.\n   * @param {?string} srcdoc\n   * @param {string} sandbox\n   * @return {string|undefined} Data URI for the srcdoc\n   * @private\n   */\n  transformSrcDoc_(srcdoc, sandbox) {\n    if (!srcdoc) {\n      return;\n    }\n    userAssert(\n      !(' ' + sandbox + ' ').match(/\\s+allow-same-origin\\s+/i),\n      'allow-same-origin is not allowed with the srcdoc attribute %s.',\n      this.element\n    );\n\n    return (\n      'data:text/html;charset=utf-8;base64,' +\n      base64EncodeFromBytes(utf8Encode(srcdoc))\n    );\n  }\n\n  /**\n   * @param {boolean=} onLayout\n   * @override\n   */\n  preconnectCallback(onLayout) {\n    if (this.iframeSrc) {\n      Services.preconnectFor(this.win).url(\n        this.getAmpDoc(),\n        this.iframeSrc,\n        onLayout\n      );\n    }\n  }\n\n  /** @override */\n  buildCallback() {\n    this.sandbox_ = this.element.getAttribute('sandbox');\n\n    const iframeSrc = /** @type {string} */ (\n      this.transformSrc_(this.element.getAttribute('src')) ||\n        this.transformSrcDoc_(\n          this.element.getAttribute('srcdoc'),\n          this.sandbox_\n        )\n    );\n    this.iframeSrc = this.assertSource_(\n      iframeSrc,\n      window.location.href,\n      this.sandbox_\n    );\n\n    this.placeholder_ = this.getPlaceholder();\n    this.isClickToPlay_ = !!this.placeholder_;\n\n    this.isResizable_ = this.element.hasAttribute('resizable');\n    if (this.isResizable_) {\n      this.element.setAttribute('scrolling', 'no');\n    }\n\n    if (!this.element.hasAttribute('frameborder')) {\n      this.element.setAttribute('frameborder', '0');\n    }\n\n    this.container_ = makeIOsScrollable(this.element);\n\n    this.registerIframeMessaging_();\n  }\n\n  /** @override */\n  onLayoutMeasure() {\n    // We remeasured this tag, lets also remeasure the iframe. Should be\n    // free now and it might have changed.\n    this.measureIframeLayoutBox_();\n\n    const {element} = this;\n\n    this.isAdLike_ = isAdLike(element);\n    this.isTrackingFrame_ = this.looksLikeTrackingIframe_();\n    this.isDisallowedAsAd_ =\n      this.isAdLike_ && !isAdPositionAllowed(element, this.win);\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  looksLikeTrackingIframe_() {\n    // It may be tempting to inline this method, but it's referenced in tests.\n    return looksLikeTrackingIframe(this.element);\n  }\n\n  /**\n   * Measure the layout box of the iframe if we rendered it already.\n   * @private\n   */\n  measureIframeLayoutBox_() {\n    if (this.iframe_) {\n      const iframeBox = this.getViewport().getLayoutRect(this.iframe_);\n      const box = this.getLayoutBox();\n      // Cache the iframe's relative position to the amp-iframe. This is\n      // necessary for fixed-position containers which \"move\" with the\n      // viewport.\n      this.iframeLayoutBox_ = moveLayoutRect(iframeBox, -box.left, -box.top);\n    }\n  }\n\n  /** @override */\n  getIntersectionElementLayoutBox() {\n    if (!this.iframe_) {\n      return super.getIntersectionElementLayoutBox();\n    }\n    const box = this.getLayoutBox();\n    if (!this.iframeLayoutBox_) {\n      this.measureIframeLayoutBox_();\n    }\n\n    const iframe = /** @type {!../../../src/layout-rect.LayoutRectDef} */ (\n      devAssert(this.iframeLayoutBox_)\n    );\n    return moveLayoutRect(iframe, box.left, box.top);\n  }\n\n  /** @override */\n  layoutCallback() {\n    userAssert(\n      !this.isDisallowedAsAd_,\n      'amp-iframe is not used for ' +\n        'displaying fixed ad. Please use amp-sticky-ad and amp-ad instead.'\n    );\n\n    if (!this.isClickToPlay_) {\n      this.assertPosition_();\n    }\n\n    if (this.isResizable_) {\n      userAssert(\n        this.getOverflowElement(),\n        'Overflow element must be defined for resizable frames: %s',\n        this.element\n      );\n    }\n\n    if (!this.iframeSrc) {\n      // This failed already, lets not signal another error.\n      return Promise.resolve();\n    }\n\n    if (this.isTrackingFrame_) {\n      if (\n        !this.getAmpDoc().registerSingleton(\n          AMPDOC_SINGLETON_NAME.TRACKING_IFRAME\n        )\n      ) {\n        console /*OK*/\n          .error(\n            'Only 1 analytics/tracking iframe allowed per ' +\n              'page. Please use amp-analytics instead or file a GitHub issue ' +\n              'for your use case: ' +\n              'https://github.com/ampproject/amphtml/issues/new/choose'\n          );\n        return Promise.resolve();\n      }\n    }\n\n    const iframe = this.element.ownerDocument.createElement('iframe');\n\n    this.iframe_ = /** @type {HTMLIFrameElement} */ (iframe);\n\n    this.applyFillContent(iframe);\n    iframe.name = 'amp_iframe' + count++;\n\n    if (this.isClickToPlay_) {\n      setStyle(iframe, 'zIndex', -1);\n    }\n\n    this.propagateAttributes(ATTRIBUTES_TO_PROPAGATE, iframe);\n\n    // TEMPORARY: disable `allow=autoplay`\n    // This is a workaround for M72-M74 user-activation breakage.\n    // If this is still here in May 2019, please ping @aghassemi\n    // See https://github.com/ampproject/amphtml/issues/21242 for details.\n    // TODO(aghassemi, #21247)\n    let allowVal = iframe.getAttribute('allow') || '';\n    // allow syntax is complex, not worth parsing for temp code.\n    allowVal = allowVal.replace('autoplay', 'autoplay-disabled');\n    iframe.setAttribute('allow', allowVal);\n\n    setSandbox(this.element, iframe, this.sandbox_);\n\n    iframe.src = this.iframeSrc;\n\n    if (!this.isTrackingFrame_) {\n      this.intersectionObserverHostApi_ = new IntersectionObserver3pHost(\n        this,\n        iframe\n      );\n    }\n\n    iframe.onload = () => {\n      // Chrome does not reflect the iframe readystate.\n      iframe.readyState = 'complete';\n      this.activateIframe_();\n\n      if (this.isTrackingFrame_) {\n        // Prevent this iframe from ever being recreated.\n        this.iframeSrc = null;\n\n        Services.timerFor(this.win)\n          .promise(trackingIframeTimeout)\n          .then(() => {\n            removeElement(iframe);\n            this.element.setAttribute('amp-removed', '');\n            this.iframe_ = null;\n          });\n      }\n    };\n\n    listenFor(\n      iframe,\n      'embed-size',\n      (data) => {\n        this.updateSize_(data['height'], data['width']);\n      },\n      /*opt_is3P*/ undefined,\n      /*opt_includingNestedWindows*/ undefined,\n      /*opt_allowOpaqueOrigin*/ true\n    );\n\n    // Listen for resize messages sent by Pym.js.\n    this.unlistenPym_ = listen(this.win, 'message', (event) => {\n      return this.listenForPymMessage_(/** @type {!MessageEvent} */ (event));\n    });\n\n    if (this.isClickToPlay_) {\n      listenFor(iframe, 'embed-ready', this.activateIframe_.bind(this));\n    }\n\n    listenFor(iframe, MessageType.SEND_CONSENT_DATA, (data, source, origin) => {\n      this.sendConsentData_(source, origin);\n    });\n\n    this.container_.appendChild(iframe);\n\n    return this.loadPromise(iframe).then(() => {\n      // On iOS the iframe at times fails to render inside the `overflow:auto`\n      // container. To avoid this problem, we set the `overflow:auto` property\n      // 1s later via `amp-active` class.\n      if (this.container_ != this.element) {\n        Services.timerFor(this.win).delay(() => {\n          this.mutateElement(() => {\n            this.container_.classList.add('amp-active');\n          });\n        }, 1000);\n      }\n\n      this.pauseHelper_.updatePlaying(true);\n    });\n  }\n\n  /**\n   * Listen for Pym.js messages for 'height' and 'width'.\n   *\n   * @see http://blog.apps.npr.org/pym.js/\n   * @param {!MessageEvent} event\n   * @private\n   */\n  listenForPymMessage_(event) {\n    if (!this.iframe_ || event.source !== this.iframe_.contentWindow) {\n      return;\n    }\n    const data = getData(event);\n    if (typeof data !== 'string' || !data.startsWith('pym')) {\n      return;\n    }\n\n    // The format of the message takes the form of `pymxPYMx${id}xPYMx${type}xPYMx${message}`.\n    // The id is unnecessary for integration with amp-iframe; the possible types include\n    // 'height', 'width', 'parentPositionInfo', 'navigateTo', and  'scrollToChildPos'.\n    // Only the 'height' and 'width' messages are currently supported.\n    // See <https://github.com/nprapps/pym.js/blob/57feb68/src/pym.js#L85-L102>\n    const args = data.split(/xPYMx/);\n    if ('height' === args[2]) {\n      this.updateSize_(parseInt(args[3], 10), undefined);\n    } else if ('width' === args[2]) {\n      this.updateSize_(undefined, parseInt(args[3], 10));\n    } else {\n      user().warn(TAG_, `Unsupported Pym.js message: ${data}`);\n    }\n  }\n\n  /**\n   * Requests consent data from consent module\n   * and forwards information to iframe\n   * @param {Window} source\n   * @param {string} origin\n   * @private\n   */\n  sendConsentData_(source, origin) {\n    getConsentDataToForward(this.element, this.getConsentPolicy()).then(\n      (consents) => {\n        this.sendConsentDataToIframe_(\n          source,\n          origin,\n          Object.assign(\n            dict({\n              'sentinel': 'amp',\n              'type': MessageType.CONSENT_DATA,\n            }),\n            consents\n          )\n        );\n      }\n    );\n  }\n\n  /**\n   * Send consent data to iframe\n   * @param {Window} source\n   * @param {string} origin\n   * @param {JsonObject} data\n   * @private\n   */\n  sendConsentDataToIframe_(source, origin, data) {\n    source./*OK*/ postMessage(data, origin);\n  }\n\n  /**\n   * Removes this iframe from the page, freeing its resources. This is needed\n   * to stop the bad eggs who continue to play videos even after the user has\n   * swiped away from the doc.\n   * @override\n   **/\n  unlayoutCallback() {\n    if (this.unlistenPym_) {\n      this.unlistenPym_();\n      this.unlistenPym_ = null;\n    }\n    if (this.iframe_) {\n      removeElement(this.iframe_);\n      if (this.placeholder_) {\n        this.togglePlaceholder(true);\n      }\n\n      this.iframe_ = null;\n      // Needs to clean up intersectionObserverHostApi_\n      if (this.intersectionObserverHostApi_) {\n        this.intersectionObserverHostApi_.destroy();\n        this.intersectionObserverHostApi_ = null;\n      }\n    }\n    this.pauseHelper_.updatePlaying(false);\n    return true;\n  }\n\n  /** @override  */\n  getLayoutPriority() {\n    if (this.isAdLike_) {\n      return LayoutPriority.ADS; // See AmpAd3PImpl.\n    }\n    if (this.isTrackingFrame_) {\n      return LayoutPriority.METADATA;\n    }\n    return super.getLayoutPriority();\n  }\n\n  /** @override */\n  mutatedAttributesCallback(mutations) {\n    const src = mutations['src'];\n    if (src !== undefined) {\n      this.iframeSrc = /** @type {?string} */ (this.transformSrc_(src));\n      if (this.iframe_) {\n        this.iframe_.src = this.assertSource_(\n          /** @type {string} */ (this.iframeSrc),\n          window.location.href,\n          this.sandbox_\n        );\n      }\n    }\n    if (this.iframe_ && mutations['title']) {\n      // only propagating title because propagating all causes e2e error:\n      this.propagateAttributes(['title'], this.iframe_);\n    }\n  }\n\n  /** @override */\n  unlayoutOnPause() {\n    return true;\n  }\n\n  /**\n   * Makes the iframe visible.\n   * @private\n   */\n  activateIframe_() {\n    if (this.placeholder_) {\n      this.getVsync().mutate(() => {\n        if (this.iframe_) {\n          setStyle(this.iframe_, 'zIndex', 0);\n          this.togglePlaceholder(false);\n        }\n      });\n    }\n  }\n\n  /**\n   * No need for the default behavior, we'll call togglePlaceholder ourselves.\n   * @override\n   */\n  firstLayoutCompleted() {}\n\n  /**\n   * Throws an error if window navigation is disallowed by this element.\n   * Otherwise, does nothing.\n   * @throws {!Error}\n   */\n  throwIfCannotNavigate() {\n    if (!this.sandboxContainsToken_(this.sandbox_, 'allow-top-navigation')) {\n      throw user().createError(\n        '\"AMP.navigateTo\" is only allowed on ' +\n          '<amp-iframe> when its \"sandbox\" attribute contains ' +\n          '\"allow-top-navigation\".'\n      );\n    }\n  }\n\n  /**\n   * Updates the element's dimensions to accommodate the iframe's\n   *    requested dimensions.\n   * @param {number|undefined} height\n   * @param {number|undefined} width\n   * @private\n   */\n  updateSize_(height, width) {\n    if (!this.isResizable_) {\n      if (!this.hasErroredEmbedSize_) {\n        this.user().error(\n          TAG_,\n          'Ignoring embed-size request because this iframe is not resizable',\n          this.element\n        );\n        this.hasErroredEmbedSize_ = true;\n      }\n      return;\n    }\n\n    if (height < 100) {\n      this.user().error(\n        TAG_,\n        'Ignoring embed-size request because the resize height is less ' +\n          'than 100px. If you are using amp-iframe to display ads, consider ' +\n          'using amp-ad instead.',\n        this.element\n      );\n      return;\n    }\n\n    // Calculate new width and height of the container to include the padding.\n    // If padding is negative, just use the requested width and height directly.\n    let newHeight, newWidth;\n    height = parseInt(height, 10);\n    if (!isNaN(height)) {\n      newHeight = Math.max(\n        height +\n          (this.element./*OK*/ offsetHeight - this.iframe_./*OK*/ offsetHeight),\n        height\n      );\n    }\n    width = parseInt(width, 10);\n    if (!isNaN(width)) {\n      newWidth = Math.max(\n        width +\n          (this.element./*OK*/ offsetWidth - this.iframe_./*OK*/ offsetWidth),\n        width\n      );\n    }\n\n    if (newHeight !== undefined || newWidth !== undefined) {\n      this.attemptChangeSize(newHeight, newWidth).then(\n        () => {\n          if (newHeight !== undefined) {\n            this.element.setAttribute('height', newHeight);\n          }\n          if (newWidth !== undefined) {\n            this.element.setAttribute('width', newWidth);\n          }\n          this.element.overflowCallback(\n            /* overflown */ false,\n            newHeight,\n            newWidth\n          );\n        },\n        () => {}\n      );\n    } else {\n      this.user().error(\n        TAG_,\n        'Ignoring embed-size request because ' +\n          'no width or height value is provided',\n        this.element\n      );\n    }\n  }\n\n  /**\n   * Registers 'postMessage' action and 'message' event.\n   * @private\n   */\n  registerIframeMessaging_() {\n    if (!isExperimentOn(this.win, 'iframe-messaging')) {\n      return;\n    }\n\n    const {element} = this;\n    const src = element.getAttribute('src');\n    if (src) {\n      this.targetOrigin_ = Services.urlForDoc(element).parse(src).origin;\n    }\n\n    // Register action (even if targetOrigin_ is not available so we can\n    // provide a helpful error message).\n    this.registerAction('postMessage', (invocation) => {\n      if (this.targetOrigin_) {\n        this.iframe_.contentWindow./*OK*/ postMessage(\n          invocation.args,\n          this.targetOrigin_\n        );\n      } else {\n        user().error(\n          TAG_,\n          '\"postMessage\" action is only allowed with \"src\"' +\n            'attribute with an origin.'\n        );\n      }\n    });\n\n    // However, don't listen for 'message' event if targetOrigin_ is null.\n    if (!this.targetOrigin_) {\n      return;\n    }\n\n    const maxUnexpectedMessages = 10;\n    let unexpectedMessages = 0;\n\n    const listener = (e) => {\n      if (e.source !== this.iframe_.contentWindow) {\n        // Ignore messages from other iframes.\n        return;\n      }\n      if (e.origin !== this.targetOrigin_) {\n        user().error(\n          TAG_,\n          '\"message\" received from unexpected origin: ' +\n            e.origin +\n            '. Only allowed from: ' +\n            this.targetOrigin_\n        );\n        return;\n      }\n      if (!this.isUserGesture_()) {\n        unexpectedMessages++;\n        user().error(\n          TAG_,\n          '\"message\" event may only be triggered from a user gesture.'\n        );\n        // Disable the 'message' event if the iframe is behaving badly.\n        if (unexpectedMessages >= maxUnexpectedMessages) {\n          user().error(\n            TAG_,\n            'Too many non-gesture-triggered \"message\" ' +\n              'events; detaching event listener.'\n          );\n          this.win.removeEventListener('message', listener);\n        }\n        return;\n      }\n      const unsanitized = getData(e);\n      let sanitized;\n      try {\n        sanitized = parseJson(JSON.stringify(unsanitized));\n      } catch (e) {\n        user().error(TAG_, 'Data from \"message\" event must be JSON.');\n        return;\n      }\n      const event = createCustomEvent(\n        this.win,\n        'amp-iframe:message',\n        dict({'data': sanitized})\n      );\n      const actionService = Services.actionServiceForDoc(this.element);\n      actionService.trigger(this.element, 'message', event, ActionTrust.HIGH);\n    };\n    // TODO(choumx): Consider using global listener in iframe-helper.\n    this.win.addEventListener('message', listener);\n  }\n\n  /**\n   * Returns true if a user gesture was recently performed.\n   * @return {boolean}\n   * @private\n   */\n  isUserGesture_() {\n    // Best effort polyfill until native support is available: check that\n    // iframe has focus and audio playback isn't immediately paused.\n    if (this.getAmpDoc().getRootNode().activeElement !== this.iframe_) {\n      return false;\n    }\n    const audio = this.win.document.createElement('audio');\n    audio.play();\n    if (audio.paused) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @param {string} value\n   * @visibleForTesting\n   */\n  setTargetOriginForTesting(value) {\n    this.targetOrigin_ = value;\n  }\n}\n\n/**\n * We always set a sandbox. Default is that none of the things that need\n * to be opted in are allowed.\n * @param {!Element} element\n * @param {!Element} iframe\n * @param {string} sandbox\n */\nfunction setSandbox(element, iframe, sandbox) {\n  const allows = sandbox || '';\n  iframe.setAttribute('sandbox', allows);\n}\n\n/**\n * If scrolling is allowed for the iframe, wraps the element into a container\n * that is scrollable because iOS auto expands iframes to their size.\n * @param {!Element} element\n * @return {!Element} The container or the iframe.\n */\nfunction makeIOsScrollable(element) {\n  if (element.getAttribute('scrolling') != 'no') {\n    const wrapper = element.ownerDocument.createElement(\n      'i-amphtml-scroll-container'\n    );\n    element.appendChild(wrapper);\n    return wrapper;\n  }\n  return element;\n}\n\n/**\n * @param {number} ms\n */\nexport function setTrackingIframeTimeoutForTesting(ms) {\n  trackingIframeTimeout = ms;\n}\n\nAMP.extension(TAG_, '0.1', (AMP) => {\n  AMP.registerElement(TAG_, AmpIframe);\n});\n"],
  "mappings": "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",
  "names": []
}
