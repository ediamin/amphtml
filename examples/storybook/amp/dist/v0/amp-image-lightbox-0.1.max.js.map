{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../src/core/types/array.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/config.js", "../../src/log.js", "../../src/core/minified-mode.js", "../../src/core/assert/dev.js", "../../src/core/assert/user.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/css-selectors.js", "../../src/core/dom/query.js", "../../src/core/window/index.js", "../../src/dom.js", "../../src/style.js", "../../src/core/data-structures/curve.js", "../../src/transition.js", "../../src/service.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../src/animation.js", "../../build/amp-image-lightbox-0.1.css.js", "../../src/core/data-structures/observable.js", "../../src/pass.js", "../../src/core/dom/event-helper-listen.js", "../../src/gesture.js", "../../src/motion.js", "../../src/gesture-recognizers.js", "../../src/core/constants/key-codes.js", "../../src/core/window/interface.js", "../../src/core/math/index.js", "../../src/event-helper.js", "../../src/core/math/layout-rect.js", "../../src/core/dom/srcset.js", "../../extensions/amp-image-lightbox/0.1/amp-image-lightbox.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Magic constant that is replaced by babel.\n// IS_MINIFIED is always replaced with true when closure compiler is used\nconst IS_MINIFIED = false;\n\n/**\n * Returns true whenever closure compiler is used.\n * @return {boolean}\n */\nexport function isMinifiedMode() {\n  return IS_MINIFIED;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {isMinifiedMode} from '../minified-mode';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (isMinifiedMode()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {USER_ERROR_SENTINEL} from '../error/message-helpers';\n\n/**\n * @fileoverview This file provides the entrypoint for user assertions. It's\n * designed so all functions are pure function calls to improve inlining.\n */\n\n/**\n * Throws a user error if the first argument isn't trueish. Mirrors userAssert\n * in src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {UserError} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return assertions.assert(\n    USER_ERROR_SENTINEL,\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertElement(shouldBeElement, opt_message) {\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertString(shouldBeString, opt_message) {\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertNumber(shouldBeNumber, opt_message) {\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertArray(shouldBeArray, opt_message) {\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertBoolean(shouldBeBoolean, opt_message) {\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../../../third_party/css-escape/css-escape';\nimport {devAssert} from '../assert';\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n * @suppress {uselessCode}\n */\nexport function escapeCssSelectorIdent(ident) {\n  // This gets rewritten to true/false during compilation. It will trigger an\n  // JSC_UNREACHABLE_CODE warning, but that's intentional for DCE.\n  if (IS_ESM) {\n    return CSS.escape(ident);\n  }\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isString} from '../types';\n\n/**\n * Number between 0 and 1 that designates normalized time, as in \"from start to\n * end\".\n * @typedef {number}\n */\nexport let NormTimeDef;\n\n/**\n * A CurveDef is a function that returns a normtime value (0 to 1) for another\n * normtime value.\n * @typedef {function(NormTimeDef): NormTimeDef}\n */\nexport let CurveDef;\n\n/**\n * Returns a cubic bezier curve.\n * @param {number} x1 X coordinate of the first control point.\n * @param {number} y1 Y coordinate of the first control point.\n * @param {number} x2 X coordinate of the second control point.\n * @param {number} y2 Y coordinate of the second control point.\n * @return {!CurveDef}\n */\nexport function bezierCurve(x1, y1, x2, y2) {\n  return (xVal) =>\n    Bezier.solveYValueFromXValue(xVal, 0, 0, x1, y1, x2, y2, 1, 1);\n}\n\n/**\n * Thanks to\n * https://closure-library.googlecode.com/git-history/docs/local_closure_goog_math_bezier.js.source.html\n */\nclass Bezier {\n  /**\n   * Computes the y coordinate of a point on the curve given its x coordinate.\n   * @param {number} xVal The x coordinate of the point on the curve.\n   * @param {number} x0 X coordinate of the start point.\n   * @param {number} y0 Y coordinate of the start point.\n   * @param {number} x1 X coordinate of the first control point.\n   * @param {number} y1 Y coordinate of the first control point.\n   * @param {number} x2 X coordinate of the second control point.\n   * @param {number} y2 Y coordinate of the second control point.\n   * @param {number} x3 X coordinate of the end point.\n   * @param {number} y3 Y coordinate of the end point.\n   * @return {number} The y coordinate of the point on the curve.\n   */\n  static solveYValueFromXValue(xVal, x0, y0, x1, y1, x2, y2, x3, y3) {\n    return Bezier.getPointY_(\n      Bezier.solvePositionFromXValue_(xVal, x0, x1, x2, x3),\n      y0,\n      y1,\n      y2,\n      y3\n    );\n  }\n\n  /**\n   * Computes the position t of a point on the curve given its x coordinate.\n   * That is, for an input xVal, finds t s.t. getPointX(t) = xVal.\n   * As such, the following should always be true up to some small epsilon:\n   * t ~ solvePositionFromXValue(getPointX(t)) for t in [0, 1].\n   * @param {number} xVal The x coordinate of the point to find on the curve.\n   * @param {number} x0 X coordinate of the start point.\n   * @param {number} x1 X coordinate of the first control point.\n   * @param {number} x2 X coordinate of the second control point.\n   * @param {number} x3 X coordinate of the end point.\n   * @return {number} The position t.\n   * @private\n   */\n  static solvePositionFromXValue_(xVal, x0, x1, x2, x3) {\n    // Desired precision on the computation.\n    const epsilon = 1e-6;\n\n    // Initial estimate of t using linear interpolation.\n    let t = (xVal - x0) / (x3 - x0);\n    if (t <= 0) {\n      return 0;\n    } else if (t >= 1) {\n      return 1;\n    }\n\n    // Try gradient descent to solve for t. If it works, it is very fast.\n    let tMin = 0;\n    let tMax = 1;\n    let value = 0;\n    for (let i = 0; i < 8; i++) {\n      value = Bezier.getPointX_(t, x0, x1, x2, x3);\n      const derivative =\n        (Bezier.getPointX_(t + epsilon, x0, x1, x2, x3) - value) / epsilon;\n      if (Math.abs(value - xVal) < epsilon) {\n        return t;\n      } else if (Math.abs(derivative) < epsilon) {\n        break;\n      } else {\n        if (value < xVal) {\n          tMin = t;\n        } else {\n          tMax = t;\n        }\n        t -= (value - xVal) / derivative;\n      }\n    }\n\n    // If the gradient descent got stuck in a local minimum, e.g. because\n    // the derivative was close to 0, use a Dichotomy refinement instead.\n    // We limit the number of iterations to 8.\n    for (let i = 0; Math.abs(value - xVal) > epsilon && i < 8; i++) {\n      if (value < xVal) {\n        tMin = t;\n        t = (t + tMax) / 2;\n      } else {\n        tMax = t;\n        t = (t + tMin) / 2;\n      }\n      value = Bezier.getPointX_(t, x0, x1, x2, x3);\n    }\n    return t;\n  }\n\n  /**\n   * Computes the curve's X coordinate at a point between 0 and 1.\n   * @param {number} t The point on the curve to find.\n   * @param {number} x0 X coordinate of the start point.\n   * @param {number} x1 X coordinate of the first control point.\n   * @param {number} x2 X coordinate of the second control point.\n   * @param {number} x3 X coordinate of the end point.\n   * @return {number} The computed coordinate.\n   * @private\n   */\n  static getPointX_(t, x0, x1, x2, x3) {\n    // Special case start and end.\n    if (t == 0) {\n      return x0;\n    } else if (t == 1) {\n      return x3;\n    }\n\n    // Step one - from 4 points to 3\n    let ix0 = Bezier.lerp_(x0, x1, t);\n    let ix1 = Bezier.lerp_(x1, x2, t);\n    const ix2 = Bezier.lerp_(x2, x3, t);\n\n    // Step two - from 3 points to 2\n    ix0 = Bezier.lerp_(ix0, ix1, t);\n    ix1 = Bezier.lerp_(ix1, ix2, t);\n\n    // Final step - last point\n    return Bezier.lerp_(ix0, ix1, t);\n  }\n\n  /**\n   * Computes the curve's Y coordinate at a point between 0 and 1.\n   * @param {number} t The point on the curve to find.\n   * @param {number} y0 Y coordinate of the start point.\n   * @param {number} y1 Y coordinate of the first control point.\n   * @param {number} y2 Y coordinate of the second control point.\n   * @param {number} y3 Y coordinate of the end point.\n   * @return {number} The computed coordinate.\n   * @private\n   */\n  static getPointY_(t, y0, y1, y2, y3) {\n    // Special case start and end.\n    if (t == 0) {\n      return y0;\n    } else if (t == 1) {\n      return y3;\n    }\n\n    // Step one - from 4 points to 3\n    let iy0 = Bezier.lerp_(y0, y1, t);\n    let iy1 = Bezier.lerp_(y1, y2, t);\n    const iy2 = Bezier.lerp_(y2, y3, t);\n\n    // Step two - from 3 points to 2\n    iy0 = Bezier.lerp_(iy0, iy1, t);\n    iy1 = Bezier.lerp_(iy1, iy2, t);\n\n    // Final step - last point\n    return Bezier.lerp_(iy0, iy1, t);\n  }\n\n  /**\n   * Performs linear interpolation between values a and b. Returns the value\n   * between a and b proportional to x (when x is between 0 and 1. When x is\n   * outside this range, the return value is a linear extrapolation).\n   * @param {number} a A number.\n   * @param {number} b A number.\n   * @param {number} x The proportion between a and b.\n   * @return {number} The interpolated value between a and b.\n   * @private\n   */\n  static lerp_(a, b, x) {\n    return a + x * (b - a);\n  }\n}\n\n/**\n * A collection of common curves.\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function\n * @enum {!CurveDef}\n */\nexport const Curves = {\n  /**\n   * linear\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  LINEAR(xVal) {\n    return xVal;\n  },\n\n  /**\n   * ease\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.25, 0.1, 0.25, 1.0, 1, 1);\n  },\n\n  /**\n   * ease-in: slow out, fast in\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE_IN(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.42, 0.0, 1.0, 1.0, 1, 1);\n  },\n\n  /**\n   * ease-out: fast out, slow in\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE_OUT(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.0, 0.0, 0.58, 1.0, 1, 1);\n  },\n\n  /**\n   * ease-in-out\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE_IN_OUT(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.42, 0.0, 0.58, 1.0, 1, 1);\n  },\n};\n\n/**\n * @const {!Object<string, !CurveDef>}\n */\nconst NAME_MAP = {\n  'linear': Curves.LINEAR,\n  'ease': Curves.EASE,\n  'ease-in': Curves.EASE_IN,\n  'ease-out': Curves.EASE_OUT,\n  'ease-in-out': Curves.EASE_IN_OUT,\n};\n\n/**\n * If the argument is a string, this methods matches an existing curve by name.\n * @param {?CurveDef|string|undefined} curve\n * @return {?CurveDef}\n */\nexport function getCurve(curve) {\n  if (!curve) {\n    return null;\n  }\n  if (isString(curve)) {\n    curve = /** @type {string} */ (curve);\n    // If the curve is a custom cubic-bezier curve\n    if (curve.indexOf('cubic-bezier') != -1) {\n      const match = curve.match(/cubic-bezier\\((.+)\\)/);\n      if (match) {\n        const values = match[1].split(',').map(parseFloat);\n        if (values.length == 4) {\n          for (let i = 0; i < 4; i++) {\n            if (isNaN(values[i])) {\n              return null;\n            }\n          }\n          return bezierCurve(values[0], values[1], values[2], values[3]);\n        }\n      }\n      return null;\n    }\n    return NAME_MAP[curve];\n  }\n  return /** @type {!CurveDef} */ (curve);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as st from './style';\nimport {assertNotDisplay, setStyle} from './style';\nimport {getCurve} from './core/data-structures/curve';\n\nexport const NOOP = function (unusedTime) {\n  return null;\n};\n\n/**\n * Returns a transition that combines a number of other transitions and\n * invokes them all in parallel.\n * @param {!Array<!TransitionDef>} transitions\n * @return {!TransitionDef<void>}\n */\nexport function all(transitions) {\n  return (time, complete) => {\n    for (let i = 0; i < transitions.length; i++) {\n      const tr = transitions[i];\n      tr(time, complete);\n    }\n  };\n}\n\n/**\n * Returns a transition that combines the string result of other string-based\n * transitions such as transform and scale using the given opt_delimiter.\n * @param {!Array<!TransitionDef<string>>} transitions\n * @param {string=} opt_delimiter Defaults to a single whitespace.\n * @return {!TransitionDef<string>}\n */\nexport function concat(transitions, opt_delimiter = ' ') {\n  return (time, complete) => {\n    const results = [];\n    for (let i = 0; i < transitions.length; i++) {\n      const tr = transitions[i];\n      const result = tr(time, complete);\n      if (typeof result == 'string') {\n        results.push(result);\n      }\n    }\n    return results.join(opt_delimiter);\n  };\n}\n\n/**\n * Returns the specified transition with the time curved via specified curve\n * function.\n * @param {!TransitionDef<RESULT>} transition\n * @param {!./core/data-structures/curve.CurveDef|string} curve\n * @return {!TransitionDef<RESULT>}\n * @template RESULT\n */\nexport function withCurve(transition, curve) {\n  /** @const {?./core/data-structures/curve.CurveDef} */\n  const curveFn = getCurve(curve);\n  return (time, complete) => {\n    return transition(complete ? 1 : curveFn(time), complete);\n  };\n}\n\n/**\n * A transition that sets the CSS style of the specified element. The styles\n * a specified as a map from CSS property names to transition functions for\n * each of these properties.\n * @param {!Element} element\n * @param {!Object<string, !TransitionDef>} styles\n * @return {!TransitionDef<void>}\n */\nexport function setStyles(element, styles) {\n  return (time, complete) => {\n    for (const k in styles) {\n      setStyle(element, assertNotDisplay(k), styles[k](time, complete));\n    }\n  };\n}\n\n/**\n * A basic numeric interpolation.\n * @param {number} start\n * @param {number} end\n * @return {!TransitionDef<number>}\n */\nexport function numeric(start, end) {\n  return (time) => {\n    return start + (end - start) * time;\n  };\n}\n\n/**\n * Spring numeric interpolation.\n * @param {number} start\n * @param {number} end\n * @param {number} extended\n * @param {number} threshold\n * @return {!TransitionDef<number>}\n */\nexport function spring(start, end, extended, threshold) {\n  if (end == extended) {\n    return (time) => {\n      return numeric(start, end)(time);\n    };\n  }\n  return (time) => {\n    if (time < threshold) {\n      return start + (extended - start) * (time / threshold);\n    }\n    return extended + (end - extended) * ((time - threshold) / (1 - threshold));\n  };\n}\n\n/**\n * Adds \"px\" units.\n * @param {!TransitionDef<number>} transition\n * @return {!TransitionDef<string>}\n */\nexport function px(transition) {\n  return (time) => {\n    return transition(time) + 'px';\n  };\n}\n\n/**\n * A transition for \"translateX\" of CSS \"transform\" property.\n * @param {!TransitionDef<number|string>} transition\n * @return {!TransitionDef<string>}\n */\nexport function translateX(transition) {\n  return (time) => {\n    const res = transition(time);\n    if (typeof res == 'string') {\n      return `translateX(${res})`;\n    }\n    return `translateX(${res}px)`;\n  };\n}\n\n/**\n * A transition for \"translateY\" of CSS \"transform\" property.\n * @param {!TransitionDef<number|string>} transition\n * @return {!TransitionDef<string>}\n */\nexport function translateY(transition) {\n  return (time) => {\n    const res = transition(time);\n    if (typeof res == 'string') {\n      return `translateY(${res})`;\n    }\n    return `translateY(${res}px)`;\n  };\n}\n\n/**\n * A transition for \"translate(x, y)\" of CSS \"transform\" property.\n * @param {!TransitionDef<number|string>} transitionX\n * @param {!TransitionDef<number|string>|undefined} opt_transitionY\n * @return {!TransitionDef<string>}\n */\nexport function translate(transitionX, opt_transitionY) {\n  return (time) => {\n    let x = transitionX(time);\n    if (typeof x == 'number') {\n      x = st.px(x);\n    }\n    if (!opt_transitionY) {\n      return `translate(${x})`;\n    }\n\n    let y = opt_transitionY(time);\n    if (typeof y == 'number') {\n      y = st.px(y);\n    }\n    return `translate(${x},${y})`;\n  };\n}\n\n/**\n * A transition for \"scale\" of CSS \"transform\" property.\n * @param {!TransitionDef<number|string>} transition\n * @return {!TransitionDef<string>}\n */\nexport function scale(transition) {\n  return (time) => {\n    return `scale(${transition(time)})`;\n  };\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {NormTimeDef, getCurve} from './core/data-structures/curve';\nimport {Services} from './services';\nimport {TimestampDef} from './core/types/date';\nimport {dev} from './log';\n\nconst TAG_ = 'Animation';\n\nconst NOOP_CALLBACK = function () {};\n\n/**\n * The animation class allows construction of arbitrary animation processes.\n * The main method is \"add\" that adds a segment of animation at particular\n * time offset (delay) and duration. All animation segments are simply functions\n * of type Transition which are iterated from 0 to 1 in animation frames to\n * achieve the desired effect.\n */\nexport class Animation {\n  /**\n   * Creates and starts animation with a single segment. Returns AnimationPlayer\n   * object that can be used to monitor or control animation.\n   *\n   * @param {!Node} contextNode The context node.\n   * @param {!TransitionDef<?>} transition Transition to animate.\n   * @param {TimestampDef} duration Duration in milliseconds.\n   * @param {(!./core/data-structures/curve.CurveDef|string)=} opt_curve Optional curve to use for\n   *   animation. Default is the linear animation.\n   * @return {!AnimationPlayer}\n   */\n  static animate(contextNode, transition, duration, opt_curve) {\n    return new Animation(contextNode)\n      .setCurve(opt_curve)\n      .add(0, transition, 1)\n      .start(duration);\n  }\n\n  /**\n   * @param {!Node} contextNode\n   * @param {!./service/vsync-impl.Vsync=} opt_vsync\n   */\n  constructor(contextNode, opt_vsync) {\n    /** @private @const {!Node} */\n    this.contextNode_ = contextNode;\n\n    /** @private @const {!./service/vsync-impl.Vsync} */\n    this.vsync_ = opt_vsync || Services.vsyncFor(self);\n\n    /** @private {?./core/data-structures/curve.CurveDef} */\n    this.curve_ = null;\n\n    /**\n     * @private @const {!Array<!SegmentDef>}\n     */\n    this.segments_ = [];\n  }\n\n  /**\n   * Sets the default curve for the animation. Each segment is allowed to have\n   * its own curve, but this curve will be used if a segment doesn't specify\n   * its own.\n   * @param {!./core/data-structures/curve.CurveDef|string|undefined} curve\n   * @return {!Animation}\n   */\n  setCurve(curve) {\n    if (curve) {\n      this.curve_ = getCurve(curve);\n    }\n    return this;\n  }\n\n  /**\n   * Adds a segment to the animation. Each segment starts at offset (delay) and\n   * runs for a portion of the overall animation (duration). Note that both\n   * delay and duration and NormTimeDef types which accept values from 0 to 1.\n   * Optionally, the time is pushed through a curve. If curve is not specified,\n   * the default animation curve will be used. The specified transition is\n   * animated over the specified duration from 0 to 1.\n   *\n   * @param {!NormTimeDef} delay\n   * @param {!TransitionDef<?>} transition\n   * @param {!NormTimeDef} duration\n   * @param {(!./core/data-structures/curve.CurveDef|string)=} opt_curve\n   * @return {!Animation}\n   */\n  add(delay, transition, duration, opt_curve) {\n    this.segments_.push({\n      delay,\n      func: transition,\n      duration,\n      curve: getCurve(opt_curve),\n    });\n    return this;\n  }\n\n  /**\n   * Starts the animation and returns the AnimationPlayer object that can be\n   * used to monitor and control the animation.\n   *\n   * @param {!TimestampDef} duration Absolute time in milliseconds.\n   * @return {!AnimationPlayer}\n   */\n  start(duration) {\n    const player = new AnimationPlayer(\n      this.vsync_,\n      this.contextNode_,\n      this.segments_,\n      this.curve_,\n      duration\n    );\n    return player;\n  }\n}\n\n/**\n * AnimationPlayer allows tracking and monitoring of the running animation.\n * Most importantly it exposes methods \"then\" and \"thenAlways\" that have the\n * semantics of a Promise and signal when the animation completed or failed.\n * Additionally, it exposes the method \"halt\" which allows to stop/reset the\n * animation.\n * // TODO(@cramforce) Actually fully implement.\n * implements {IThenable}\n */\nclass AnimationPlayer {\n  /**\n   * @param {!./service/vsync-impl.Vsync} vsync\n   * @param {!Node} contextNode\n   * @param {!Array<!SegmentDef>} segments\n   * @param {?./core/data-structures/curve.CurveDef} defaultCurve\n   * @param {!TimestampDef} duration\n   */\n  constructor(vsync, contextNode, segments, defaultCurve, duration) {\n    /** @private @const {!./service/vsync-impl.Vsync} */\n    this.vsync_ = vsync;\n\n    /** @private @const {!Node} */\n    this.contextNode_ = contextNode;\n\n    /** @private @const {!Array<!SegmentRuntimeDef>} */\n    this.segments_ = [];\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      this.segments_.push({\n        delay: segment.delay,\n        func: segment.func,\n        duration: segment.duration,\n        curve: segment.curve || defaultCurve,\n        started: false,\n        completed: false,\n      });\n    }\n\n    /** @private @const */\n    this.duration_ = duration;\n\n    /** @private {!TimestampDef} */\n    this.startTime_ = Date.now();\n\n    /** @private {!NormTimeDef} */\n    // this.normLinearTime_ = 0;\n\n    /** @private {!NormTimeDef} */\n    // this.normTime_ = 0;\n\n    /** @private {boolean} */\n    this.running_ = true;\n\n    /** @private {!Object<string, *>} */\n    this.state_ = {};\n\n    const deferred = new Deferred();\n\n    /** @const @private */\n    this.promise_ = deferred.promise;\n\n    /** @const @private */\n    this.resolve_ = deferred.resolve;\n\n    /** @const @private */\n    this.reject_ = deferred.reject;\n\n    /** @const */\n    this.task_ = this.vsync_.createAnimTask(this.contextNode_, {\n      mutate: this.stepMutate_.bind(this),\n    });\n\n    if (this.vsync_.canAnimate(this.contextNode_)) {\n      this.task_(this.state_);\n    } else {\n      dev().warn(TAG_, 'cannot animate');\n      this.complete_(/* success */ false, /* dir */ 0);\n    }\n  }\n\n  /**\n   * Chains to the animation's promise that will resolve when the animation has\n   * completed or will reject if animation has failed or was interrupted.\n   * @param {!Function=} opt_resolve\n   * @param {!Function=} opt_reject\n   * @return {!Promise}\n   */\n  then(opt_resolve, opt_reject) {\n    if (!opt_resolve && !opt_reject) {\n      return this.promise_;\n    }\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n\n  /**\n   * Callback for regardless whether the animation succeeds or fails.\n   * @param {!Function=} opt_callback\n   * @return {!Promise}\n   */\n  thenAlways(opt_callback) {\n    const callback = opt_callback || NOOP_CALLBACK;\n    return this.then(callback, callback);\n  }\n\n  /**\n   * Halts the animation. Depending on the opt_dir value, the following actions\n   * can be performed:\n   * 0: No action. The state will be as at the moment of halting (default)\n   * 1: Final state. Transitionable will be set to state = 1.\n   * -1: Reset state. Transitionable will be reset to state = 0.\n   * The animation's promise will be rejected since the transition has been\n   * interrupted.\n   * @param {number=} opt_dir\n   */\n  halt(opt_dir) {\n    this.complete_(/* success */ false, /* dir */ opt_dir || 0);\n  }\n\n  /**\n   * @param {boolean} success\n   * @param {number} dir\n   * @private\n   */\n  complete_(success, dir) {\n    if (!this.running_) {\n      return;\n    }\n    this.running_ = false;\n    if (dir != 0) {\n      // Sort in the completion order.\n      if (this.segments_.length > 1) {\n        this.segments_.sort((s1, s2) => {\n          return s1.delay + s1.duration - (s2.delay + s2.duration);\n        });\n      }\n      try {\n        if (dir > 0) {\n          // Natural order - all set to 1.\n          for (let i = 0; i < this.segments_.length; i++) {\n            this.segments_[i].func(1, true);\n          }\n        } else {\n          // Reverse order - all set to 0.\n          for (let i = this.segments_.length - 1; i >= 0; i--) {\n            this.segments_[i].func(0, false);\n          }\n        }\n      } catch (e) {\n        dev().error(TAG_, 'completion failed: ' + e, e);\n        success = false;\n      }\n    }\n    if (success) {\n      this.resolve_();\n    } else {\n      this.reject_();\n    }\n  }\n\n  /**\n   * @param {!Object<string, *>} unusedState\n   * @private\n   */\n  stepMutate_(unusedState) {\n    if (!this.running_) {\n      return;\n    }\n    const currentTime = Date.now();\n    const normLinearTime = Math.min(\n      (currentTime - this.startTime_) / this.duration_,\n      1\n    );\n\n    // Start segments due to be started\n    for (let i = 0; i < this.segments_.length; i++) {\n      const segment = this.segments_[i];\n      if (!segment.started && normLinearTime >= segment.delay) {\n        segment.started = true;\n      }\n    }\n\n    // Execute all pending segments.\n    for (let i = 0; i < this.segments_.length; i++) {\n      const segment = this.segments_[i];\n      if (!segment.started || segment.completed) {\n        continue;\n      }\n      this.mutateSegment_(segment, normLinearTime);\n    }\n\n    // Complete or start next cycle.\n    if (normLinearTime == 1) {\n      this.complete_(/* success */ true, /* dir */ 0);\n    } else {\n      if (this.vsync_.canAnimate(this.contextNode_)) {\n        this.task_(this.state_);\n      } else {\n        dev().warn(TAG_, 'cancel animation');\n        this.complete_(/* success */ false, /* dir */ 0);\n      }\n    }\n  }\n\n  /**\n   * @param {!SegmentRuntimeDef} segment\n   * @param {number} totalLinearTime\n   */\n  mutateSegment_(segment, totalLinearTime) {\n    let normLinearTime;\n    let normTime;\n    if (segment.duration > 0) {\n      normLinearTime = Math.min(\n        (totalLinearTime - segment.delay) / segment.duration,\n        1\n      );\n      normTime = normLinearTime;\n      if (segment.curve && normTime != 1) {\n        try {\n          normTime = segment.curve(normLinearTime);\n        } catch (e) {\n          dev().error(TAG_, 'step curve failed: ' + e, e);\n          this.complete_(/* success */ false, /* dir */ 0);\n          return;\n        }\n      }\n    } else {\n      normLinearTime = 1;\n      normTime = 1;\n    }\n    if (normLinearTime == 1) {\n      segment.completed = true;\n    }\n    try {\n      segment.func(normTime, segment.completed);\n    } catch (e) {\n      dev().error(TAG_, 'step mutate failed: ' + e, e);\n      this.complete_(/* success */ false, /* dir */ 0);\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {{\n *   delay: NormTimeDef,\n *   func: !TransitionDef,\n *   duration: NormTimeDef,\n *   curve: ?./core/data-structures/curve.CurveDef\n * }}\n */\nlet SegmentDef;\n\n/**\n * @typedef {{\n *   delay: NormTimeDef,\n *   func: !TransitionDef,\n *   duration: NormTimeDef,\n *   curve: ?./core/data-structures/curve.CurveDef,\n *   started: boolean,\n *   completed: boolean\n * }}\n */\nlet SegmentRuntimeDef;\n", "export const CSS = \"amp-image-lightbox{position:fixed!important;top:0!important;left:0!important;bottom:0!important;right:0!important;margin:0!important;padding:0!important;overflow:hidden!important;transform:translateZ(0)!important;-ms-touch-action:none!important;touch-action:none!important;z-index:1000;background:rgba(0,0,0,0.95);color:#f2f2f2}.i-amphtml-image-lightbox-container{position:absolute;z-index:0;top:0;left:0;right:0;bottom:0;overflow:hidden;transform:translateZ(0)}.i-amphtml-image-lightbox-trans{pointer-events:none!important;position:fixed;z-index:1001;top:0;left:0;bottom:0;right:0}.i-amphtml-image-lightbox-caption{position:absolute!important;z-index:2;bottom:0!important;left:0!important;right:0!important}.i-amphtml-image-lightbox-caption.i-amphtml-empty,.i-amphtml-image-lightbox-view-mode .i-amphtml-image-lightbox-caption{visibility:hidden}.amp-image-lightbox-caption{background:rgba(0,0,0,0.5);max-height:25%;padding:8px}.i-amphtml-image-lightbox-viewer{position:absolute;z-index:1;top:0;left:0;right:0;bottom:0;overflow:hidden;transform:translateZ(0)}.i-amphtml-image-lightbox-viewer-image{position:absolute;z-index:1;display:block;transform-origin:50% 50%}\\n/*# sourceURL=/extensions/amp-image-lightbox/0.1/amp-image-lightbox.css*/\";\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {removeItem} from '../types/array';\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    removeItem(this.handlers_, handler);\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    for (const handler of this.handlers_) {\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    return this.handlers_?.length ?? 0;\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\n\n/**\n * Pass class helps to manage single-pass process. A pass is scheduled using\n * delay method. Only one pass can be pending at a time. If no pass is pending\n * the process is considered to be \"idle\".\n */\nexport class Pass {\n  /**\n   * Creates a new Pass instance.\n   * @param {!Window} win\n   * @param {function()} handler Handler to be executed when pass is triggered.\n   * @param {number=} opt_defaultDelay Default delay to be used when schedule\n   *   is called without one.\n   */\n  constructor(win, handler, opt_defaultDelay) {\n    this.timer_ = Services.timerFor(win);\n\n    /** @private @const {function()} */\n    this.handler_ = handler;\n\n    /** @private @const {number} */\n    this.defaultDelay_ = opt_defaultDelay || 0;\n\n    /** @private {number|string} */\n    this.scheduled_ = -1;\n\n    /** @private {number} */\n    this.nextTime_ = 0;\n\n    /** @private {boolean} */\n    this.running_ = false;\n\n    /**\n     * @private\n     * @const {function()}\n     */\n    this.boundPass_ = () => {\n      this.pass_();\n    };\n  }\n\n  /**\n   * Whether or not a pass is currently pending.\n   * @return {boolean}\n   */\n  isPending() {\n    return this.scheduled_ != -1;\n  }\n\n  /**\n   * Tries to schedule a new pass optionally with specified delay. If the new\n   * requested pass is requested before the pending pass, the pending pass is\n   * canceled. If the new pass is requested after the pending pass, the newly\n   * requested pass is ignored.\n   *\n   * Returns {@code true} if the pass has been scheduled and {@code false} if\n   * ignored.\n   *\n   * @param {number=} opt_delay Delay to schedule the pass. If not specified\n   *   the default delay is used, falling back to 0.\n   * @return {boolean}\n   */\n  schedule(opt_delay) {\n    let delay = opt_delay || this.defaultDelay_;\n    if (this.running_ && delay < 10) {\n      // If we get called recursively, wait at least 10ms for the next\n      // execution.\n      delay = 10;\n    }\n\n    const nextTime = Date.now() + delay;\n    // Schedule anew if nothing is scheduled currently or if the new time is\n    // sooner then previously requested.\n    if (!this.isPending() || nextTime - this.nextTime_ < -10) {\n      this.cancel();\n      this.nextTime_ = nextTime;\n      this.scheduled_ = this.timer_.delay(this.boundPass_, delay);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   *\n   */\n  pass_() {\n    this.scheduled_ = -1;\n    this.nextTime_ = 0;\n    this.running_ = true;\n    this.handler_();\n    this.running_ = false;\n  }\n\n  /**\n   * Cancels the pending pass if any.\n   */\n  cancel() {\n    if (this.isPending()) {\n      this.timer_.cancel(this.scheduled_);\n      this.scheduled_ = -1;\n    }\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Observable} from './core/data-structures/observable';\nimport {Pass} from './pass';\nimport {devAssert} from './log';\nimport {findIndex} from './core/types/array';\nimport {supportsPassiveEventListener} from './core/dom/event-helper-listen';\nimport {toWin} from './core/window';\n\nconst PROP_ = '__AMP_Gestures';\n\n/**\n * A gesture object contains the type and data of the gesture such as\n * a tap or a double-tap or a swipe. See {@link GestureRecognizer} for\n * more details.\n * @struct\n * @const\n * @template DATA\n */\nexport class Gesture {\n  /**\n   * @param {string} type The gesture's string type.\n   * @param {DATA} data The data of the gesture.\n   * @param {time} time The time that the gesture has been emitted.\n   * @param {?Event} event An optional browser event that resulted in the\n   *   gesture.\n   */\n  constructor(type, data, time, event) {\n    /** @const {string} */\n    this.type = type;\n    /** @const {DATA} */\n    this.data = data;\n    /** @const {number} */\n    this.time = time;\n    /** @const {?Event} */\n    this.event = event;\n  }\n}\n\n/**\n * Gestures object manages all gestures on a particular element. It listens\n * to all pointer events and delegates them to individual gesture recognizers.\n * When a recognizer has recognized a gesture and ready to start emitting it\n * it requests permission to do so from this class which resolves conflicts\n * between competing recognizers to decide which gesture should go forward.\n */\nexport class Gestures {\n  /**\n   * Creates if not yet created and returns the shared Gestures instance for\n   * the specified element.\n   * @param {!Element} element\n   * @param {boolean=} opt_shouldNotPreventDefault\n   * @param {boolean=} opt_shouldStopPropagation\n   * @return {!Gestures}\n   */\n  static get(\n    element,\n    opt_shouldNotPreventDefault = false,\n    opt_shouldStopPropagation = false\n  ) {\n    let res = element[PROP_];\n    if (!res) {\n      res = new Gestures(\n        element,\n        opt_shouldNotPreventDefault,\n        opt_shouldStopPropagation\n      );\n      element[PROP_] = res;\n    }\n    return res;\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {boolean} shouldNotPreventDefault\n   * @param {boolean} shouldStopPropagation\n   */\n  constructor(element, shouldNotPreventDefault, shouldStopPropagation) {\n    /** @private {!Element} */\n    this.element_ = element;\n\n    /** @private {!Array<!GestureRecognizer>} */\n    this.recognizers_ = [];\n\n    /** @private {!Array<boolean>} */\n    this.tracking_ = [];\n\n    /** @private {!Array<time>} */\n    this.ready_ = [];\n\n    /** @private {!Array<time>} */\n    this.pending_ = [];\n\n    /** @private {?GestureRecognizer} */\n    this.eventing_ = null;\n\n    /** @private {boolean} */\n    this.shouldNotPreventDefault_ = shouldNotPreventDefault;\n\n    /** @private {boolean} */\n    this.shouldStopPropagation_ = shouldStopPropagation;\n\n    /**\n     * This variable indicates that the eventing has stopped on this\n     * event cycle.\n     * @private {boolean}\n     */\n    this.wasEventing_ = false;\n\n    /** @private {!Pass} */\n    this.pass_ = new Pass(\n      toWin(element.ownerDocument.defaultView),\n      this.doPass_.bind(this)\n    );\n\n    /** @private {!Observable} */\n    this.pointerDownObservable_ = new Observable();\n\n    /**\n     * Observers for each type of registered gesture types.\n     * @private {!Object<string, !Observable<!Gesture>>}\n     */\n    this.overservers_ = Object.create(null);\n\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchStart_ = this.onTouchStart_.bind(this);\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchEnd_ = this.onTouchEnd_.bind(this);\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchMove_ = this.onTouchMove_.bind(this);\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchCancel_ = this.onTouchCancel_.bind(this);\n\n    const win = element.ownerDocument.defaultView;\n    const passiveSupported = supportsPassiveEventListener(toWin(win));\n    this.element_.addEventListener(\n      'touchstart',\n      this.boundOnTouchStart_,\n      passiveSupported ? {passive: true} : false\n    );\n    this.element_.addEventListener('touchend', this.boundOnTouchEnd_);\n    this.element_.addEventListener(\n      'touchmove',\n      this.boundOnTouchMove_,\n      passiveSupported ? {passive: true} : false\n    );\n    this.element_.addEventListener('touchcancel', this.boundOnTouchCancel_);\n\n    /** @private {boolean} */\n    this.passAfterEvent_ = false;\n  }\n\n  /**\n   * Unsubscribes from all pointer events and removes the shared cache instance.\n   */\n  cleanup() {\n    this.element_.removeEventListener('touchstart', this.boundOnTouchStart_);\n    this.element_.removeEventListener('touchend', this.boundOnTouchEnd_);\n    this.element_.removeEventListener('touchmove', this.boundOnTouchMove_);\n    this.element_.removeEventListener('touchcancel', this.boundOnTouchCancel_);\n    delete this.element_[PROP_];\n    this.pass_.cancel();\n  }\n\n  /**\n   * Subscribes to a gesture emitted by the specified recognizer. For a first\n   * gesture handler registered in this method the recognizer is installed\n   * and from that point on it participates in the event processing.\n   *\n   * @param {function(new:GestureRecognizer, !Gestures)} recognizerConstr\n   * @param {function(!Gesture)} handler\n   * @return {!UnlistenDef}\n   * @template DATA\n   */\n  onGesture(recognizerConstr, handler) {\n    const recognizer = new recognizerConstr(this);\n    const type = recognizer.getType();\n    let overserver = this.overservers_[type];\n    if (!overserver) {\n      this.recognizers_.push(recognizer);\n      overserver = new Observable();\n      this.overservers_[type] = overserver;\n    }\n    return overserver.add(handler);\n  }\n\n  /**\n   * Unsubscribes all handlers from the given gesture recognizer. Returns\n   * true if anything was done. Returns false if there were no handlers\n   * registered on the given gesture recognizer in first place.\n   *\n   * @param {function(new:GestureRecognizer, !Gestures)} recognizerConstr\n   * @return {boolean}\n   */\n  removeGesture(recognizerConstr) {\n    const type = new recognizerConstr(this).getType();\n    const overserver = this.overservers_[type];\n    if (overserver) {\n      overserver.removeAll();\n      const index = findIndex(this.recognizers_, (e) => e.getType() == type);\n      if (index < 0) {\n        return false;\n      }\n      // Remove the recognizer as well as all associated tracking state\n      this.recognizers_.splice(index, 1);\n      this.ready_.splice(index, 1);\n      this.pending_.splice(index, 1);\n      this.tracking_.splice(index, 1);\n      delete this.overservers_[type];\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Subscribes to pointer down events, such as \"touchstart\" or \"mousedown\".\n   * @param {!Function} handler\n   * @return {!UnlistenDef}\n   */\n  onPointerDown(handler) {\n    return this.pointerDownObservable_.add(handler);\n  }\n\n  /**\n   * Handles all \"touchstart\" events and dispatches them to the tracking\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchStart_(event) {\n    const now = Date.now();\n    this.wasEventing_ = false;\n\n    this.pointerDownObservable_.fire(event);\n\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.ready_[i]) {\n        // If the recognizer is in the \"ready\" state, it won't receive\n        // any more touch series until it's allowed to emit.\n        continue;\n      }\n      if (this.pending_[i] && this.pending_[i] < now) {\n        // Pending state expired. Reset.\n        this.stopTracking_(i);\n      }\n      if (this.recognizers_[i].onTouchStart(event)) {\n        // When a recognizer is interested in the touch series it returns \"true\"\n        // from its onTouchStart method. For this recognizer we start tracking\n        // the whole series of touch events from touchstart to touchend. Other\n        // recognizers will not receive them unless they return \"true\" from\n        // onTouchStart.\n        this.startTracking_(i);\n      }\n    }\n\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Handles all \"touchmove\" events and dispatches them to the tracking\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchMove_(event) {\n    const now = Date.now();\n\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (!this.tracking_[i]) {\n        // The whole touch series are ignored for non-tracking recognizers.\n        continue;\n      }\n      if (this.pending_[i] && this.pending_[i] < now) {\n        // Pending state expired. Reset.\n        this.stopTracking_(i);\n        continue;\n      }\n      if (!this.recognizers_[i].onTouchMove(event)) {\n        // Recognizer lost interest in the series. Reset.\n        this.stopTracking_(i);\n      }\n    }\n\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Handles all \"touchend\" events and dispatches them to the tracking\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchEnd_(event) {\n    const now = Date.now();\n\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (!this.tracking_[i]) {\n        // The whole touch series are ignored for non-tracking recognizers.\n        continue;\n      }\n      if (this.pending_[i] && this.pending_[i] < now) {\n        // Pending state expired. Reset.\n        this.stopTracking_(i);\n        continue;\n      }\n\n      this.recognizers_[i].onTouchEnd(event);\n\n      const isReady = !this.pending_[i];\n      const isExpired = this.pending_[i] < now;\n      const isEventing = this.eventing_ == this.recognizers_[i];\n\n      if (!isEventing && (isReady || isExpired)) {\n        this.stopTracking_(i);\n      }\n    }\n\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Handles all \"touchcancel\" events. Cancels all tracking/emitting\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchCancel_(event) {\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      this.cancelEventing_(i);\n    }\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Callback for a gesture recognizer to communicate that it's ready to\n   * start emitting gestures. Gestures instance may or may not allow the\n   * recognizer to proceed.\n   * @param {!GestureRecognizer} recognizer\n   * @param {number} offset\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalReady_(recognizer, offset) {\n    // Somebody got here first.\n    if (this.eventing_) {\n      recognizer.acceptCancel();\n      return;\n    }\n\n    // Set the recognizer as ready and wait for the pass to\n    // make the decision.\n    const now = Date.now();\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.recognizers_[i] == recognizer) {\n        this.ready_[i] = now + offset;\n        this.pending_[i] = 0;\n      }\n    }\n    this.passAfterEvent_ = true;\n  }\n\n  /**\n   * Callback for a gesture recognizer to communicate that it's close to\n   * start emitting gestures, but needs more time to see more events. Once\n   * this time expires the recognizer should either signal readiness or it\n   * will be canceled.\n   * @param {!GestureRecognizer} recognizer\n   * @param {number} timeLeft\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalPending_(recognizer, timeLeft) {\n    // Somebody got here first.\n    if (this.eventing_) {\n      recognizer.acceptCancel();\n      return;\n    }\n\n    const now = Date.now();\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.recognizers_[i] == recognizer) {\n        this.pending_[i] = now + timeLeft;\n      }\n    }\n  }\n\n  /**\n   * Callback for a gesture recognizer to communicate that it's done\n   * emitting gestures.\n   * @param {!GestureRecognizer} recognizer\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalEnd_(recognizer) {\n    if (this.eventing_ == recognizer) {\n      this.eventing_ = null;\n      this.wasEventing_ = true;\n    }\n  }\n\n  /**\n   * Callback for a gesture emit the gesture. Only the currently emitting\n   * recognizer is allowed to emit gestures.\n   * @param {!GestureRecognizer} recognizer\n   * @param {*} data\n   * @param {?Event} event\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalEmit_(recognizer, data, event) {\n    devAssert(\n      this.eventing_ == recognizer,\n      'Recognizer is not currently allowed: %s',\n      recognizer.getType()\n    );\n    const overserver = this.overservers_[recognizer.getType()];\n    if (overserver) {\n      overserver.fire(\n        new Gesture(recognizer.getType(), data, Date.now(), event)\n      );\n    }\n  }\n\n  /**\n   * @param {!Event} event\n   * @private\n   */\n  afterEvent_(event) {\n    let cancelEvent = !!this.eventing_ || this.wasEventing_;\n    this.wasEventing_ = false;\n    if (!cancelEvent) {\n      const now = Date.now();\n      for (let i = 0; i < this.recognizers_.length; i++) {\n        if (this.ready_[i] || (this.pending_[i] && this.pending_[i] >= now)) {\n          cancelEvent = true;\n          break;\n        }\n      }\n    }\n    if (cancelEvent) {\n      event.stopPropagation();\n      if (!this.shouldNotPreventDefault_) {\n        event.preventDefault();\n      }\n    } else if (this.shouldStopPropagation_) {\n      event.stopPropagation();\n    }\n    if (this.passAfterEvent_) {\n      this.passAfterEvent_ = false;\n      this.doPass_();\n    }\n  }\n\n  /**\n   * The pass that decides which recognizers can start emitting and which\n   * are canceled.\n   * @private\n   */\n  doPass_() {\n    const now = Date.now();\n\n    // The \"most ready\" recognizer is the youngest in the \"ready\" set.\n    // Otherwise we wouldn't wait for it at all.\n    let readyIndex = -1;\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (!this.ready_[i]) {\n        if (this.pending_[i] && this.pending_[i] < now) {\n          // Pending state expired. Reset.\n          this.stopTracking_(i);\n        }\n        continue;\n      }\n      if (readyIndex == -1 || this.ready_[i] > this.ready_[readyIndex]) {\n        readyIndex = i;\n      }\n    }\n\n    if (readyIndex == -1) {\n      // Nothing to do.\n      return;\n    }\n\n    // Look for conflicts.\n    let waitTime = 0;\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.ready_[i] || !this.tracking_[i]) {\n        continue;\n      }\n      waitTime = Math.max(waitTime, this.pending_[i] - now);\n    }\n\n    if (waitTime < 2) {\n      // We waited long enough.\n      this.startEventing_(readyIndex);\n      return;\n    }\n\n    // Some conflicts: have to wait to see who wins.\n    this.pass_.schedule(waitTime);\n  }\n\n  /**\n   * This recognizer is given \"go ahead\" and all others are canceled.\n   * @param {number} index\n   * @private\n   */\n  startEventing_(index) {\n    const recognizer = this.recognizers_[index];\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (i != index) {\n        this.cancelEventing_(i);\n      }\n    }\n    this.ready_[index] = 0;\n    this.pending_[index] = 0;\n    this.eventing_ = recognizer;\n    recognizer.acceptStart();\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  startTracking_(index) {\n    this.tracking_[index] = true;\n    this.pending_[index] = 0;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  stopTracking_(index) {\n    this.tracking_[index] = false;\n    this.pending_[index] = 0;\n    if (!this.ready_[index]) {\n      this.recognizers_[index].acceptCancel();\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  cancelEventing_(index) {\n    this.ready_[index] = 0;\n    this.stopTracking_(index);\n  }\n}\n\n/**\n * The gesture recognizer receives the pointer events from Gestures instance.\n * Based on these events, it can \"recognize\" the gesture it's responsible for,\n * request to start emitting and emit gestures. Gestures instances manages\n * several competing recognizers and decides which ones get to emit gestures\n * and which do not.\n *\n * The recognizer can be in several main states:\n * 1. Tracking state. In this state the recognizer is receiving the series of\n *    touch events from touchstart to touchend. To get into this state the\n *    recognizer has to return \"true\" from the {@link onTouchStart}.\n * 2. Pending state (optional). The recognizer matched part of the gesture,\n *    but needs more time to get track more events. It requests more time\n *    by calling {@link signalPending}, By the end of this time the recognizer\n *    has either matched the gesture or has been canceled.\n * 3. Ready state. The recognizer matched the whole gesture and ready to start\n *    emitting. It communicates to the Gestures this readiness by calling\n *    {@link signalReady}.\n * 5. Emitting state. If Gestures decides to go ahead with this recognizer, it\n *    will call {@link acceptStart} method. Otherwise, it will call\n *    {@link acceptCancel} method. Once in the emitting state, the recognizer\n *    can emit any number of events by calling {@link signalEmit}.\n * 6. Complete state. Once done, the recognizer can call {@link signalEnd} to\n *    communicate that it's done.\n *\n * @template DATA\n */\nexport class GestureRecognizer {\n  /**\n   * @param {string} type\n   * @param {!Gestures} manager\n   */\n  constructor(type, manager) {\n    /** @private @const {string} */\n    this.type_ = type;\n\n    /** @private @const {!Gestures} */\n    this.manager_ = manager;\n  }\n\n  /**\n   * Returns the type of the gesture emitted by the instance of this class.\n   * It has to be unique in the scope of the Gestures instance.\n   * @return {string}\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * The recognizer can call this method to communicate that it's ready to\n   * start emitting the gesture. Optionally it can pass a zero, positive or\n   * negative offset - a time on how much the gesture should be penalized or\n   * given advantage in conflict resolution. The recognizer at this point is\n   * in the \"ready\" state.\n   * @param {time} offset\n   */\n  signalReady(offset) {\n    this.manager_.signalReady_(this, offset);\n  }\n\n  /**\n   * The recognizer can call this method to communicate that it needs more\n   * time (timeLeft) to match the gesture. By the end of this time the\n   * recognizer has to either transit to the ready state using\n   * {@link signalReady} or it will be canceled. The recognizer is in the\n   * \"pending\" state.\n   * @param {time} timeLeft\n   */\n  signalPending(timeLeft) {\n    this.manager_.signalPending_(this, timeLeft);\n  }\n\n  /**\n   * The recognizer can call this method to communicate that it's done\n   * emitting the gestures. It will return to the waiting state. Recognizer\n   * can only call this method if it has previously received the\n   * {@link acceptStart} call.\n   */\n  signalEnd() {\n    this.manager_.signalEnd_(this);\n  }\n\n  /**\n   * The recognizer can call this method to emit the gestures while in the\n   * \"emitting\" state. Recognizer can only call this method if it has\n   * previously received the {@link acceptStart} call.\n   * @param {DATA} data\n   * @param {?Event} event\n   */\n  signalEmit(data, event) {\n    this.manager_.signalEmit_(this, data, event);\n  }\n\n  /**\n   * The Gestures instance calls this method to allow the recognizer to start\n   * emitting the gestures. At this point the recognizer is in the \"emitting\"\n   * state. It will be in this state until it calls {@link signalEnd} or\n   * the {@link acceptCancel} is called by the Gestures instance.\n   */\n  acceptStart() {}\n\n  /**\n   * The Gestures instance calls this method to reset the recognizer. At this\n   * point the recognizer is in the initial waiting state.\n   */\n  acceptCancel() {}\n\n  /**\n   * The Gestures instance calls this method for each \"touchstart\" event. If\n   * the recognizer wants to receive other touch events in the series, it has\n   * to return \"true\".\n   * @param {!Event} unusedEvent\n   * @return {boolean}\n   */\n  onTouchStart(unusedEvent) {\n    return false;\n  }\n\n  /**\n   * The Gestures instance calls this method for each \"touchmove\" event. If\n   * the recognizer wants to continue receiving touch events in the series,\n   * it has to return \"true\".\n   * @param {!Event} unusedEvent\n   * @return {boolean}\n   */\n  onTouchMove(unusedEvent) {\n    return false;\n  }\n\n  /**\n   * The Gestures instance calls this method for the \"touchend\" event.\n   * Somewhere within this touch series the recognizer has to call\n   * {@link signalReady} or {@link signalPending} or it will be reset for the\n   * next touch series.\n   * @param {!Event} unusedEvent\n   */\n  onTouchEnd(unusedEvent) {}\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {Services} from './services';\n\n/** @const {function()} */\nconst NOOP_CALLBACK_ = function () {};\n\n/** @const {number} */\nconst MIN_VELOCITY_ = 0.02;\n\n/** @const {number} */\nconst FRAME_CONST_ = 16.67;\n\n/** @const {number} */\nconst EXP_FRAME_CONST_ = Math.round(-FRAME_CONST_ / Math.log(0.95));\n\n/**\n * Depreciation factor of 1/100 of a millisecond. This is how much previous\n * velocity is depreciated when calculating the new velocity.\n * @const {number}\n */\nconst VELOCITY_DEPR_FACTOR_ = FRAME_CONST_ * 2;\n\n/**\n * Calculates velocity for an object traveling the distance deltaV in the\n * time deltaTime given the previous velocity prevVelocity. The calculation\n * assumes a basic informational depreciation of previous velocity.\n * @param {number} deltaV\n * @param {time} deltaTime\n * @param {number} prevVelocity\n * @return {number}\n */\nexport function calcVelocity(deltaV, deltaTime, prevVelocity) {\n  if (deltaTime < 1) {\n    deltaTime = 1;\n  }\n\n  // Calculate speed and speed depreciation.\n  const speed = deltaV / deltaTime;\n\n  // Depreciation is simply an informational quality. It basically means:\n  // we can't ignore the velocity we knew recently, but we'd only consider\n  // it proportionally to how long ago we've seen it. Currently, this\n  // depreciation factor is 1/100 of a millisecond. New average velocity is\n  // calculated by weighing toward the new velocity and away from old\n  // velocity based on the depreciation.\n  const depr = 0.5 + Math.min(deltaTime / VELOCITY_DEPR_FACTOR_, 0.5);\n  return speed * depr + prevVelocity * (1 - depr);\n}\n\n/**\n * Returns a motion process that will yield when the velocity has run down to\n * zerp. For each iteration, the velocity is depreciated and the coordinates\n * are advanced from start X/Y to the destination according to velocity\n * vectors. For each such iteration the callback is called with the new x and y.\n * @param {!Node} contextNode\n * @param {number} startX Start X coordinate.\n * @param {number} startY Start Y coordinate.\n * @param {number} veloX Starting X velocity.\n * @param {number} veloY Starting Y velocity.\n * @param {function(number, number):boolean} callback The callback for each\n *   step of the deceleration motion.\n * @param {!./service/vsync-impl.Vsync=} opt_vsync Mostly for testing only.\n * @return {!Motion}\n */\nexport function continueMotion(\n  contextNode,\n  startX,\n  startY,\n  veloX,\n  veloY,\n  callback,\n  opt_vsync\n) {\n  return new Motion(\n    contextNode,\n    startX,\n    startY,\n    veloX,\n    veloY,\n    callback,\n    opt_vsync\n  ).start();\n}\n\n/**\n * Motion process that allows tracking and monitoring of the running motion.\n * Most importantly it exposes methods \"then\" and \"thenAlways\" that have the\n * semantics of a Promise and signal when the motion has completed or failed.\n * Additionally, it exposes the method \"halt\" which allows to stop/reset the\n * motion.\n * @implements {IThenable}\n */\nexport class Motion {\n  /**\n   * @param {!Node} contextNode Context node.\n   * @param {number} startX Start X coordinate.\n   * @param {number} startY Start Y coordinate.\n   * @param {number} veloX Starting X velocity.\n   * @param {number} veloY Starting Y velocity.\n   * @param {function(number, number):boolean} callback The callback for each\n   *   step of the deceleration motion.\n   * @param {!./service/vsync-impl.Vsync=} opt_vsync\n   */\n  constructor(contextNode, startX, startY, veloX, veloY, callback, opt_vsync) {\n    /** @private @const {!./service/vsync-impl.Vsync} */\n    this.vsync_ = opt_vsync || Services.vsyncFor(self);\n\n    /** @private @const {!Node} */\n    this.contextNode_ = contextNode;\n\n    /** @private @const */\n    this.callback_ = callback;\n\n    /** @private {number} */\n    this.lastX_ = startX;\n\n    /** @private {number} */\n    this.lastY_ = startY;\n\n    /** @private {number} */\n    this.maxVelocityX_ = veloX;\n\n    /** @private {number} */\n    this.maxVelocityY_ = veloY;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n\n    /** @private {number} */\n    this.velocityY_ = 0;\n\n    const deferred = new Deferred();\n\n    /** @private {!Promise} */\n    this.promise_ = deferred.promise;\n\n    /** @private {!Function} */\n    this.resolve_ = deferred.resolve;\n\n    /** @private {!Function} */\n    this.reject_ = deferred.reject;\n\n    /** @private {boolean} */\n    this.continuing_ = false;\n  }\n\n  /** */\n  start() {\n    this.continuing_ = true;\n    if (\n      Math.abs(this.maxVelocityX_) <= MIN_VELOCITY_ &&\n      Math.abs(this.maxVelocityY_) <= MIN_VELOCITY_\n    ) {\n      this.fireMove_();\n      this.completeContinue_(true);\n    } else {\n      this.runContinuing_();\n    }\n    return this;\n  }\n\n  /**\n   * Halts the motion. The motion promise will be rejected since the motion\n   * has been interrupted.\n   */\n  halt() {\n    if (this.continuing_) {\n      this.completeContinue_(false);\n    }\n  }\n\n  /**\n   * Chains to the motion's promise that will resolve when the motion has\n   * completed or will reject if motion has failed or was interrupted.\n   * @override\n   */\n  then(opt_resolve, opt_reject) {\n    if (!opt_resolve && !opt_reject) {\n      return this.promise_;\n    }\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n\n  /**\n   * Callback for regardless whether the motion succeeds or fails.\n   * @param {function()=} opt_callback\n   * @return {!Promise}\n   */\n  thenAlways(opt_callback) {\n    const callback = opt_callback || NOOP_CALLBACK_;\n    return /** @type {!Promise} */ (this.then(callback, callback));\n  }\n\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  runContinuing_() {\n    this.velocityX_ = this.maxVelocityX_;\n    this.velocityY_ = this.maxVelocityY_;\n    const boundStep = this.stepContinue_.bind(this);\n    const boundComplete = this.completeContinue_.bind(this, true);\n    return this.vsync_\n      .runAnimMutateSeries(this.contextNode_, boundStep, 5000)\n      .then(boundComplete, boundComplete);\n  }\n\n  /**\n   * Returns \"true\" to continue and \"false\" to stop motion process.\n   * @param {time} timeSinceStart\n   * @param {time} timeSincePrev\n   * @return {boolean}\n   * @private\n   */\n  stepContinue_(timeSinceStart, timeSincePrev) {\n    if (!this.continuing_) {\n      return false;\n    }\n\n    this.lastX_ += timeSincePrev * this.velocityX_;\n    this.lastY_ += timeSincePrev * this.velocityY_;\n    if (!this.fireMove_()) {\n      return false;\n    }\n\n    const decel = Math.exp(-timeSinceStart / EXP_FRAME_CONST_);\n    this.velocityX_ = this.maxVelocityX_ * decel;\n    this.velocityY_ = this.maxVelocityY_ * decel;\n    return (\n      Math.abs(this.velocityX_) > MIN_VELOCITY_ ||\n      Math.abs(this.velocityY_) > MIN_VELOCITY_\n    );\n  }\n\n  /**\n   * @param {boolean} success\n   * @private\n   */\n  completeContinue_(success) {\n    if (!this.continuing_) {\n      return;\n    }\n    this.continuing_ = false;\n    this.fireMove_();\n    if (success) {\n      this.resolve_();\n    } else {\n      this.reject_();\n    }\n  }\n\n  /** @private */\n  fireMove_() {\n    return this.callback_(this.lastX_, this.lastY_);\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {GestureRecognizer} from './gesture';\nimport {calcVelocity} from './motion';\n\nconst DOUBLETAP_DELAY = 200;\n\n/**\n * A \"tap\" gesture.\n * @typedef {{\n *   clientX: number,\n *   clientY: number\n * }}\n */\nexport let TapDef;\n\n/**\n * Recognizes \"tap\" gestures.\n * @extends {GestureRecognizer<TapDef>}\n */\nexport class TapRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('tap', manager);\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {?EventTarget} */\n    this.target_ = null;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    const {touches} = e;\n    this.target_ = e.target;\n    if (touches && touches.length == 1) {\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const touches = e.changedTouches || e.touches;\n    if (touches && touches.length == 1) {\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      const dx = Math.abs(this.lastX_ - this.startX_) >= 8;\n      const dy = Math.abs(this.lastY_ - this.startY_) >= 8;\n      if (dx || dy) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @override */\n  onTouchEnd(unusedE) {\n    this.signalReady(0);\n  }\n\n  /** @override */\n  acceptStart() {\n    this.signalEmit(\n      {\n        clientX: this.lastX_,\n        clientY: this.lastY_,\n        target: this.target_,\n      },\n      null\n    );\n    this.signalEnd();\n  }\n}\n\n/**\n * A \"doubletap\" gesture.\n * @typedef {{\n *   clientX: number,\n *   clientY: number\n * }}\n */\nexport let DoubletapDef;\n\n/**\n * Recognizes a \"doubletap\" gesture. This gesture will block a single \"tap\"\n * for about 200ms while it's expecting the second \"tap\".\n * @extends {GestureRecognizer<DoubletapDef>}\n */\nexport class DoubletapRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('doubletap', manager);\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {number} */\n    this.tapCount_ = 0;\n\n    /** @private {?Event} */\n    this.event_ = null;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    if (this.tapCount_ > 1) {\n      return false;\n    }\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      const dx = Math.abs(this.lastX_ - this.startX_) >= 8;\n      const dy = Math.abs(this.lastY_ - this.startY_) >= 8;\n      if (dx || dy) {\n        this.acceptCancel();\n        return false;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    this.tapCount_++;\n    if (this.tapCount_ < 2) {\n      this.signalPending(DOUBLETAP_DELAY);\n    } else {\n      this.event_ = e;\n      this.signalReady(0);\n    }\n  }\n\n  /** @override */\n  acceptStart() {\n    this.tapCount_ = 0;\n    this.signalEmit({clientX: this.lastX_, clientY: this.lastY_}, this.event_);\n    this.signalEnd();\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.tapCount_ = 0;\n  }\n}\n\n/**\n * A \"swipe-xy\", \"swipe-x\" or \"swipe-y\" gesture. A number of these gestures\n * may be emitted for a single touch series.\n * @typedef {{\n *   first: boolean,\n *   last: boolean,\n *   deltaX: number,\n *   deltaY: number,\n *   velocityX: number,\n *   velocityY: number\n * }}\n */\nexport let SwipeDef;\n\n/**\n * Recognizes swipe gestures. This gesture will yield about 10ms to other\n * gestures.\n * @extends {GestureRecognizer<SwipeDef>}\n */\nclass SwipeRecognizer extends GestureRecognizer {\n  /**\n   * @param {string} type\n   * @param {!./gesture.Gestures} manager\n   * @param {boolean} horiz\n   * @param {boolean} vert\n   */\n  constructor(type, manager, horiz, vert) {\n    super(type, manager);\n\n    /** @private {boolean} */\n    this.horiz_ = horiz;\n\n    /** @private {boolean} */\n    this.vert_ = vert;\n\n    /** @private {boolean} */\n    this.eventing_ = false;\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {number} */\n    this.prevX_ = 0;\n\n    /** @private {number} */\n    this.prevY_ = 0;\n\n    /** @private {time} */\n    this.startTime_ = 0;\n\n    /** @private {time} */\n    this.lastTime_ = 0;\n\n    /** @private {time} */\n    this.prevTime_ = 0;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n\n    /** @private {number} */\n    this.velocityY_ = 0;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    const {touches} = e;\n    // If already eventing, ignore additional touches\n    if (this.eventing_ && touches && touches.length > 1) {\n      return true;\n    }\n    if (touches && touches.length == 1) {\n      this.startTime_ = Date.now();\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (touches && touches.length >= 1) {\n      const {clientX: x, clientY: y} = touches[0];\n      this.lastX_ = x;\n      this.lastY_ = y;\n      if (this.eventing_) {\n        // If already eventing, always emit new coordinates\n        this.emit_(false, false, e);\n      } else {\n        // Figure out whether or not we should start eventing\n        const dx = Math.abs(x - this.startX_);\n        const dy = Math.abs(y - this.startY_);\n        // Swipe is penalized slightly since it's one of the least demanding\n        // gesture, thus -10 in signalReady.\n        if (this.horiz_ && this.vert_) {\n          if (dx >= 8 || dy >= 8) {\n            this.signalReady(-10);\n          }\n        } else if (this.horiz_) {\n          if (dx >= 8 && dx > dy) {\n            this.signalReady(-10);\n          } else if (dy >= 8) {\n            return false;\n          }\n        } else if (this.vert_) {\n          if (dy >= 8 && dy > dx) {\n            this.signalReady(-10);\n          } else if (dx >= 8) {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    const {touches} = e;\n    // Number of current touches on the page\n    if (touches && touches.length == 0) {\n      this.end_(e);\n    }\n  }\n\n  /** @override */\n  acceptStart() {\n    this.eventing_ = true;\n    // Reset start coordinates to where the gesture began to avoid visible\n    // jump, but preserve them as \"prev\" coordinates to calculate the right\n    // velocity.\n    this.prevX_ = this.startX_;\n    this.prevY_ = this.startY_;\n    this.prevTime_ = this.startTime_;\n    this.startX_ = this.lastX_;\n    this.startY_ = this.lastY_;\n    this.emit_(true, false, null);\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.eventing_ = false;\n  }\n\n  /**\n   * @param {boolean} first\n   * @param {boolean} last\n   * @param {?Event} event\n   * @private\n   */\n  emit_(first, last, event) {\n    this.lastTime_ = Date.now();\n    const deltaTime = this.lastTime_ - this.prevTime_;\n    // It's often that `touchend` arrives on the next frame. These should\n    // be ignored to avoid a significant velocity downgrade.\n    if ((!last && deltaTime > 4) || (last && deltaTime > 16)) {\n      const velocityX = calcVelocity(\n        this.lastX_ - this.prevX_,\n        deltaTime,\n        this.velocityX_\n      );\n      const velocityY = calcVelocity(\n        this.lastY_ - this.prevY_,\n        deltaTime,\n        this.velocityY_\n      );\n\n      // On iOS, the touchend will always have the same x/y position as the\n      // last touchmove, so we want to make sure we do not remove the velocity.\n      // The touchend event with zero velocity can occur within a couple of\n      // frames of the last touchmove.\n      if (!last || deltaTime > 32 || velocityX != 0 || velocityY != 0) {\n        this.velocityX_ = Math.abs(velocityX) > 1e-4 ? velocityX : 0;\n        this.velocityY_ = Math.abs(velocityY) > 1e-4 ? velocityY : 0;\n      }\n\n      this.prevX_ = this.lastX_;\n      this.prevY_ = this.lastY_;\n      this.prevTime_ = this.lastTime_;\n    }\n\n    this.signalEmit(\n      {\n        first,\n        last,\n        time: this.lastTime_,\n        deltaX: this.lastX_ - this.startX_,\n        deltaY: this.lastY_ - this.startY_,\n        startX: this.startX_,\n        startY: this.startY_,\n        lastX: this.lastX_,\n        lastY: this.lastY_,\n        velocityX: this.velocityX_,\n        velocityY: this.velocityY_,\n      },\n      event\n    );\n  }\n\n  /**\n   * @param {?Event} event\n   * @private\n   */\n  end_(event) {\n    if (this.eventing_) {\n      this.eventing_ = false;\n      this.emit_(false, true, event);\n      this.signalEnd();\n    }\n  }\n}\n\n/**\n * Recognizes \"swipe-xy\" gesture. Yields about 10ms to other gestures.\n */\nexport class SwipeXYRecognizer extends SwipeRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('swipe-xy', manager, true, true);\n  }\n}\n\n/**\n * Recognizes \"swipe-x\" gesture. Yields about 10ms to other gestures.\n */\nexport class SwipeXRecognizer extends SwipeRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('swipe-x', manager, true, false);\n  }\n}\n\n/**\n * Recognizes \"swipe-y\" gesture. Yields about 10ms to other gestures.\n */\nexport class SwipeYRecognizer extends SwipeRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('swipe-y', manager, false, true);\n  }\n}\n\n/**\n * A \"tapzoom\" gesture. It has a center, delta off the center center and\n * the velocity of moving away from the center.\n * @typedef {{\n *   first: boolean,\n *   last: boolean,\n *   centerClientX: number,\n *   centerClientY: number,\n *   deltaX: number,\n *   deltaY: number,\n *   velocityX: number,\n *   velocityY: number\n * }}\n */\nlet TapzoomDef;\n\n/**\n * Recognizes a \"tapzoom\" gesture. This gesture will block other gestures\n * for about 400ms after first \"tap\" while it's expecting swipe.\n * @extends {GestureRecognizer<TapzoomDef>}\n */\nexport class TapzoomRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('tapzoom', manager);\n\n    /** @private {boolean} */\n    this.eventing_ = false;\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {number} */\n    this.tapCount_ = 0;\n\n    /** @private {number} */\n    this.prevX_ = 0;\n\n    /** @private {number} */\n    this.prevY_ = 0;\n\n    /** @private {time} */\n    this.lastTime_ = 0;\n\n    /** @private {time} */\n    this.prevTime_ = 0;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n\n    /** @private {number} */\n    this.velocityY_ = 0;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    if (this.eventing_) {\n      return false;\n    }\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      if (this.eventing_) {\n        this.emit_(false, false, e);\n      } else {\n        const dx = Math.abs(this.lastX_ - this.startX_) >= 8;\n        const dy = Math.abs(this.lastY_ - this.startY_) >= 8;\n        if (dx || dy) {\n          if (this.tapCount_ == 0) {\n            this.acceptCancel();\n            return false;\n          } else {\n            this.signalReady(0);\n          }\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    if (this.eventing_) {\n      this.end_(e);\n      return;\n    }\n\n    this.tapCount_++;\n    if (this.tapCount_ == 1) {\n      this.signalPending(400);\n      return;\n    }\n\n    this.acceptCancel();\n  }\n\n  /** @override */\n  acceptStart() {\n    this.tapCount_ = 0;\n    this.eventing_ = true;\n    this.emit_(true, false, null);\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.tapCount_ = 0;\n    this.eventing_ = false;\n  }\n\n  /**\n   * @param {boolean} first\n   * @param {boolean} last\n   * @param {?Event} event\n   * @private\n   */\n  emit_(first, last, event) {\n    this.lastTime_ = Date.now();\n    if (first) {\n      this.velocityX_ = this.velocityY_ = 0;\n    } else if (this.lastTime_ - this.prevTime_ > 2) {\n      this.velocityX_ = calcVelocity(\n        this.lastX_ - this.prevX_,\n        this.lastTime_ - this.prevTime_,\n        this.velocityX_\n      );\n      this.velocityY_ = calcVelocity(\n        this.lastY_ - this.prevY_,\n        this.lastTime_ - this.prevTime_,\n        this.velocityY_\n      );\n    }\n    this.prevX_ = this.lastX_;\n    this.prevY_ = this.lastY_;\n    this.prevTime_ = this.lastTime_;\n\n    this.signalEmit(\n      {\n        first,\n        last,\n        centerClientX: this.startX_,\n        centerClientY: this.startY_,\n        deltaX: this.lastX_ - this.startX_,\n        deltaY: this.lastY_ - this.startY_,\n        velocityX: this.velocityX_,\n        velocityY: this.velocityY_,\n      },\n      event\n    );\n  }\n\n  /**\n   * @param {?Event} event\n   * @private\n   */\n  end_(event) {\n    if (this.eventing_) {\n      this.eventing_ = false;\n      this.emit_(false, true, event);\n      this.signalEnd();\n    }\n  }\n}\n\n/**\n * A \"pinch\" gesture. It has a center, delta off the center center and\n * the velocity of moving away from the center. \"dir\" component of `1`\n * indicates that it's a expand motion and `-1` indicates pinch motion.\n * @typedef {{\n *   first: boolean,\n *   last: boolean,\n *   centerClientX: number,\n *   centerClientY: number,\n *   dir: number,\n *   deltaX: number,\n *   deltaY: number,\n *   velocityX: number,\n *   velocityY: number\n * }}\n */\nexport let PinchDef;\n\n/**\n * Threshold in pixels for how much two touches move away from\n * each other before we recognize the gesture as a pinch.\n */\nconst PINCH_ACCEPT_THRESHOLD = 4;\n\n/**\n * Threshold in pixels for how much two touches move in the same\n * direction before we reject the gesture as a pinch.\n */\nconst PINCH_REJECT_THRESHOLD = 10;\n\n/**\n * Recognizes a \"pinch\" gesture.\n * @extends {GestureRecognizer<PinchDef>}\n */\nexport class PinchRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('pinch', manager);\n\n    /** @private {boolean} */\n    this.eventing_ = false;\n\n    /** @private {number} */\n    this.startX1_ = 0;\n    /** @private {number} */\n    this.startY1_ = 0;\n\n    /** @private {number} */\n    this.startX2_ = 0;\n    /** @private {number} */\n    this.startY2_ = 0;\n\n    /** @private {number} */\n    this.lastX1_ = 0;\n    /** @private {number} */\n    this.lastY1_ = 0;\n\n    /** @private {number} */\n    this.lastX2_ = 0;\n    /** @private {number} */\n    this.lastY2_ = 0;\n\n    /** @private {number} */\n    this.prevDeltaX_ = 0;\n    /** @private {number} */\n    this.prevDeltaY_ = 0;\n\n    /** @private {number} */\n    this.centerClientX_ = 0;\n    /** @private {number} */\n    this.centerClientY_ = 0;\n\n    /** @private {time} */\n    this.startTime_ = 0;\n    /** @private {time} */\n    this.lastTime_ = 0;\n    /** @private {time} */\n    this.prevTime_ = 0;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n    /** @private {number} */\n    this.velocityY_ = 0;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    const {touches} = e;\n    if (!touches) {\n      return false;\n    }\n    // Pinch touches are not always simultaneous, continue to listen\n    // for second touch.\n    if (touches.length == 1) {\n      return true;\n    }\n    // If already in the middle of a pinch event, ignore additional touches.\n    if (this.eventing_ && touches.length > 2) {\n      return true;\n    }\n    if (touches.length == 2) {\n      this.startTime_ = Date.now();\n      this.startX1_ = touches[0].clientX;\n      this.startY1_ = touches[0].clientY;\n      this.startX2_ = touches[1].clientX;\n      this.startY2_ = touches[1].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (!touches || touches.length == 0) {\n      return false;\n    }\n    // Pinch touches are not always simultaneous, continue to listen\n    // for second touch.\n    if (touches.length == 1) {\n      return true;\n    }\n\n    // Have 2+ touches\n    this.lastX1_ = touches[0].clientX;\n    this.lastY1_ = touches[0].clientY;\n    this.lastX2_ = touches[1].clientX;\n    this.lastY2_ = touches[1].clientY;\n\n    // If eventing, always emit gesture with new coordinates\n    if (this.eventing_) {\n      this.emit_(false, false, e);\n      return true;\n    }\n\n    // Gesture is 2+ touch but direction indicates not a pinch\n    if (this.isPinchRejected_()) {\n      return false;\n    }\n\n    if (this.isPinchReady_()) {\n      this.signalReady(0);\n    }\n    // Pinch gesture detected but threshold not reached, continue listening\n    return true;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isPinchReady_() {\n    const dx1 = this.lastX1_ - this.startX1_;\n    const dy1 = this.lastY1_ - this.startY1_;\n    const dx2 = this.lastX2_ - this.startX2_;\n    const dy2 = this.lastY2_ - this.startY2_;\n\n    const pinchDirectionCorrect = dx1 * dx2 <= 0 && dy1 * dy2 <= 0;\n    const xPinchRecognized = Math.abs(dx1 - dx2) >= PINCH_ACCEPT_THRESHOLD;\n    const yPinchRecognized = Math.abs(dy1 - dy2) >= PINCH_ACCEPT_THRESHOLD;\n    return pinchDirectionCorrect && (xPinchRecognized || yPinchRecognized);\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isPinchRejected_() {\n    const dx1 = this.lastX1_ - this.startX1_;\n    const dy1 = this.lastY1_ - this.startY1_;\n    const dx2 = this.lastX2_ - this.startX2_;\n    const dy2 = this.lastY2_ - this.startY2_;\n\n    const pinchDirectionIncorrect = dx1 * dx2 > 0 || dy1 * dy2 > 0;\n    const xPinchRejected = Math.abs(dx1 + dx2) >= PINCH_REJECT_THRESHOLD;\n    const yPinchRejected = Math.abs(dy1 + dy2) >= PINCH_REJECT_THRESHOLD;\n    return pinchDirectionIncorrect && (xPinchRejected || yPinchRejected);\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    // Pinch requires at least two touches on the page\n    const {touches} = e;\n    if (touches && touches.length < 2) {\n      this.end_(e);\n    }\n  }\n\n  /** @override */\n  acceptStart() {\n    this.eventing_ = true;\n    this.prevTime_ = this.startTime_;\n    this.prevDeltaX_ = 0;\n    this.prevDeltaY_ = 0;\n    this.centerClientX_ = (this.startX1_ + this.startX2_) * 0.5;\n    this.centerClientY_ = (this.startY1_ + this.startY2_) * 0.5;\n    this.emit_(true, false, null);\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.eventing_ = false;\n  }\n\n  /**\n   * @param {boolean} first\n   * @param {boolean} last\n   * @param {?Event} event\n   * @private\n   */\n  emit_(first, last, event) {\n    this.lastTime_ = Date.now();\n    const deltaTime = this.lastTime_ - this.prevTime_;\n    const deltaX = this.deltaX_();\n    const deltaY = this.deltaY_();\n    // It's often that `touchend` arrives on the next frame. These should\n    // be ignored to avoid a significant velocity downgrade.\n    if ((!last && deltaTime > 4) || (last && deltaTime > 16)) {\n      this.velocityX_ = calcVelocity(\n        deltaX - this.prevDeltaX_,\n        deltaTime,\n        this.velocityX_\n      );\n      this.velocityY_ = calcVelocity(\n        deltaY - this.prevDeltaY_,\n        deltaTime,\n        this.velocityY_\n      );\n      this.velocityX_ = Math.abs(this.velocityX_) > 1e-4 ? this.velocityX_ : 0;\n      this.velocityY_ = Math.abs(this.velocityY_) > 1e-4 ? this.velocityY_ : 0;\n      this.prevDeltaX_ = deltaX;\n      this.prevDeltaY_ = deltaY;\n      this.prevTime_ = this.lastTime_;\n    }\n\n    const startSq = this.sqDist_(\n      this.startX1_,\n      this.startX2_,\n      this.startY1_,\n      this.startY2_\n    );\n    const lastSq = this.sqDist_(\n      this.lastX1_,\n      this.lastX2_,\n      this.lastY1_,\n      this.lastY2_\n    );\n    this.signalEmit(\n      {\n        first,\n        last,\n        time: this.lastTime_,\n        centerClientX: this.centerClientX_,\n        centerClientY: this.centerClientY_,\n        dir: Math.sign(lastSq - startSq),\n        deltaX: deltaX * 0.5,\n        deltaY: deltaY * 0.5,\n        velocityX: this.velocityX_ * 0.5,\n        velocityY: this.velocityY_ * 0.5,\n      },\n      event\n    );\n  }\n\n  /**\n   * @param {?Event} event\n   * @private\n   */\n  end_(event) {\n    if (this.eventing_) {\n      this.eventing_ = false;\n      this.emit_(false, true, event);\n      this.signalEnd();\n    }\n  }\n\n  /**\n   * @param {number} x1\n   * @param {number} x2\n   * @param {number} y1\n   * @param {number} y2\n   * @return {number}\n   * @private\n   */\n  sqDist_(x1, x2, y1, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  deltaX_() {\n    return Math.abs(\n      this.lastX1_ - this.startX1_ - (this.lastX2_ - this.startX2_)\n    );\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  deltaY_() {\n    return Math.abs(\n      this.lastY1_ - this.startY1_ - (this.lastY2_ - this.startY2_)\n    );\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @enum {number}\n */\nexport const KeyCodes = {\n  ENTER: 13,\n  ESCAPE: 27,\n  SPACE: 32,\n  LEFT_ARROW: 37,\n  UP_ARROW: 38,\n  RIGHT_ARROW: 39,\n  DOWN_ARROW: 40,\n};\n\n/**\n * @enum {string}\n */\nexport const Keys = {\n  ENTER: 'Enter',\n  ESCAPE: 'Escape',\n  SPACE: ' ',\n  LEFT_ARROW: 'ArrowLeft',\n  UP_ARROW: 'ArrowUp',\n  RIGHT_ARROW: 'ArrowRight',\n  DOWN_ARROW: 'ArrowDown',\n  TAB: 'Tab',\n  BACKSPACE: 'Backspace',\n  HOME: 'Home',\n  END: 'End',\n};\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An interface to interact with browser window object.\n * Mainly used to mock out read only APIs in test.\n * See test-helper.js#mockWindowInterface\n */\nexport class WindowInterface {\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {!Window}\n   */\n  static getTop(win) {\n    return win.top;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {!Location}\n   */\n  static getLocation(win) {\n    return win.location;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getDocumentReferrer(win) {\n    return win.document.referrer;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getHostname(win) {\n    return win.location.hostname;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getUserAgent(win) {\n    return win.navigator.userAgent;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {string}\n   */\n  static getUserLanguage(win) {\n    // The `navigator.userLanguage` is only supported by IE. The standard is\n    // the `navigator.language`.\n    return win.navigator['userLanguage'] || win.navigator.language;\n  }\n\n  /**\n   * @static\n   * @return {number}\n   */\n  static getDevicePixelRatio() {\n    // No matter the window, the device-pixel-ratio is always one.\n    return self.devicePixelRatio || 1;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {function(string,(ArrayBufferView|Blob|FormData|null|string)=):boolean|undefined}\n   */\n  static getSendBeacon(win) {\n    if (!win.navigator.sendBeacon) {\n      return undefined;\n    }\n    return win.navigator.sendBeacon.bind(win.navigator);\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {typeof XMLHttpRequest}\n   */\n  static getXMLHttpRequest(win) {\n    return win.XMLHttpRequest;\n  }\n\n  /**\n   * @static\n   * @param {!Window} win\n   * @return {typeof Image}\n   */\n  static getImage(win) {\n    return win.Image;\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\n\n/**\n * Maps a value in a first range to its equivalent in a second range\n * Ex.: 5 in the range [0,10] gives 60 in the range[40,80]\n *\n * NOTE: lower/upper bounds on the source range are detected automatically,\n * however the bounds on the target range are not altered (thus the target\n * range could be decreasing).\n * Ex1: 8 in the range [0, 10] gives 2 in the range [10, 0]\n * Ex2: also, 8 in the range [10, 0] gives 2 in the range [10, 0]\n *\n * NOTE: Input value is enforced to be bounded inside the source range\n * Ex1: -2 in the range [0, 10] is interpreted as 0 and thus gives 40 in [40,80]\n * Ex2: 19 in the range [0, 5] is interpreted as 5 and thus gives 80 in [40,80]\n *\n * @param {number} val the value in the source range\n * @param {number} min1 the lower bound of the source range\n * @param {number} max1 the upper bound of the source range\n * @param {number} min2 the lower bound of the target range\n * @param {number} max2 the upper bound of the target range\n * @return {number} the equivalent value in the target range\n */\nexport function mapRange(val, min1, max1, min2, max2) {\n  let max1Bound = max1;\n  let min1Bound = min1;\n  if (min1 > max1) {\n    max1Bound = min1;\n    min1Bound = max1;\n  }\n\n  if (val < min1Bound) {\n    val = min1Bound;\n  } else if (val > max1Bound) {\n    val = max1Bound;\n  }\n\n  return ((val - min1) * (max2 - min2)) / (max1 - min1) + min2;\n}\n\n/**\n * Computes the modulus of values `a` and `b`.\n *\n * This is needed because the % operator in JavaScript doesn't implement\n * modulus behavior as can be seen by the spec here:\n * http://www.ecma-international.org/ecma-262/5.1/#sec-11.5.3.\n * It instead is used to obtain the remainder of a division.\n * This function uses the remainder (%) operator to determine the modulus.\n * Derived from here:\n * https://stackoverflow.com/questions/25726760/javascript-modular-arithmetic/47354356#47354356\n *\n * @param {number} a\n * @param {number} b\n * @return {number} returns the modulus of the two numbers.\n * @example\n *\n * _.min(10, 5);\n * // => 0\n *\n * _.mod(-1, 5);\n * // => 4\n */\nexport function mod(a, b) {\n  return a > 0 && b > 0 ? a % b : ((a % b) + b) % b;\n}\n\n/**\n * Restricts a number to be in the given min/max range. The minimum value must\n * be less than or equal to the maximum value.\n *\n * Examples:\n * clamp(0.5, 0, 1) -> 0.5\n * clamp(1.5, 0, 1) -> 1\n * clamp(-0.5, 0, 1) -> 0\n *\n * @param {number} val the value to clamp.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound.\n * @return {number} the clamped value.\n */\nexport function clamp(val, min, max) {\n  devAssert(min <= max, 'Minimum value is greater than the maximum.');\n  return Math.min(Math.max(val, min), max);\n}\n\n/**\n * Returns value bound to min and max values +/- extent. The lower bound must\n * be less than or equal to the upper bound.\n * @param {number} val the value to bound.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound\n * @param {number} extent the allowed extent beyond the bounds.\n * @return {number} the bounded value.\n */\nexport function boundValue(val, min, max, extent) {\n  devAssert(min <= max, 'Lower bound is greater than the upper bound.');\n  return clamp(val, min - extent, max + extent);\n}\n\n/**\n * Returns the length of a vector given in X- and Y-coordinates.\n * @param {number} deltaX distance in the X direction.\n * @param {number} deltaY distance in the Y direction.\n * @return {number} the magnitude of the vector.\n */\nexport function magnitude(deltaX, deltaY) {\n  return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\n/**\n * Returns the distance between two points.\n * @param {number} x1 X-coordinate of the first point.\n * @param {number} y1 Y-coordinate of the first point.\n * @param {number} x2 X-coordinate of the second point.\n * @param {number} y2 Y-coordinate of the second point.\n * @return {number} the distance between the two points.\n */\nexport function distance(x1, y1, x2, y2) {\n  return magnitude(x2 - x1, y2 - y1);\n}\n\n/**\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} angleInDegrees\n * @return {{\n *  x: number,\n *  y: number,\n * }}\n */\nexport function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  };\n}\n\n/**\n * Sums up the values of the given array and returns the result\n * @param {Array<number>} values\n * @return {number}\n */\nexport function sum(values) {\n  return values.reduce(function (a, b) {\n    return a + b;\n  });\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {lastChildElement} from './core/dom/query';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TODO(rcebulko): Migrate the actual ViewportInterface into core or an extern.\n * @typedef {{\n *   getHeight: function(this:ViewportInterfaceDef):number,\n *   getWidth: function(this:ViewportInterfaceDef):number,\n * }}\n */\nlet ViewportInterfaceDef;\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nexport let LayoutRectDef;\n\n/**\n * The structure that contains the size for an element. The exact\n * interpretation of the size depends on the use case.\n *\n * @typedef {{\n *   width: number,\n *   height: number,\n * }}\n */\nexport let LayoutSizeDef;\n\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nexport let LayoutMarginsDef;\n\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\nexport let LayoutMarginsChangeDef;\n\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\nexport const RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n};\n\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\nexport function layoutRectLtwh(left, top, width, height) {\n  return {\n    left,\n    top,\n    width,\n    height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top,\n  };\n}\n\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\nexport function layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(\n    Number(rect.left),\n    Number(rect.top),\n    Number(rect.width),\n    Number(rect.height)\n  );\n}\n\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef|!ClientRect} r1\n * @param {!LayoutRectDef|!ClientRect} r2\n * @return {boolean}\n */\nexport function rectsOverlap(r1, r2) {\n  return (\n    r1.top <= r2.bottom &&\n    r2.top <= r1.bottom &&\n    r1.left <= r2.right &&\n    r2.left <= r1.right\n  );\n}\n\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\nexport function rectIntersection(var_args) {\n  let x0 = -Infinity;\n  let x1 = Infinity;\n  let y0 = -Infinity;\n  let y1 = Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    const current = arguments[i];\n    if (!current) {\n      continue;\n    }\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n  if (x1 == Infinity) {\n    return null;\n  }\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {!RelativePositions}\n */\nexport function layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!ViewportInterfaceDef} viewport\n * @param {number} scrollPos\n * @return {!RelativePositions}\n */\nexport function layoutPositionRelativeToScrolledViewport(\n  layoutBox,\n  viewport,\n  scrollPos\n) {\n  const scrollLayoutBox = layoutRectFromDomRect(\n    /** @type {!ClientRect} */ ({\n      top: scrollPos,\n      bottom: scrollPos + viewport.getHeight(),\n      left: 0,\n      right: viewport.getWidth(),\n    })\n  );\n  if (rectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\nexport function expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(\n    rect.left - rect.width * dw,\n    rect.top - rect.height * dh,\n    rect.width * (1 + dw * 2),\n    rect.height * (1 + dh * 2)\n  );\n}\n\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\nexport function moveLayoutRect(rect, dx, dy) {\n  if ((dx == 0 && dy == 0) || (rect.width == 0 && rect.height == 0)) {\n    return rect;\n  }\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\nexport function areMarginsChanged(margins, change) {\n  return (\n    (change.top !== undefined && change.top != margins.top) ||\n    (change.right !== undefined && change.right != margins.right) ||\n    (change.bottom !== undefined && change.bottom != margins.bottom) ||\n    (change.left !== undefined && change.left != margins.left)\n  );\n}\n\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\nexport function layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n  return (\n    r1.left == r2.left &&\n    r1.top == r2.top &&\n    r1.width == r2.width &&\n    r1.height == r2.height\n  );\n}\n\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\nexport function cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right,\n  };\n}\n\n/**\n * @param {!LayoutRectDef|!ClientRect|!DOMRect} rect\n * @return {!LayoutSizeDef}\n */\nexport function layoutSizeFromRect(rect) {\n  const {height, width} = rect;\n  return {width, height};\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert, userAssert} from '../assert';\n\n/**\n * A single source within a srcset. Only one: width or DPR can be specified at\n * a time.\n * @typedef {{\n *   url: string,\n *   width: (number|undefined),\n *   dpr: (number|undefined)\n * }}\n */\nlet SrcsetSourceDef;\n\n/**\n * General grammar: (URL [NUM[w|x]],)*\n * Example 1: \"image1.png 100w, image2.png 50w\"\n * Example 2: \"image1.png 2x, image2.png\"\n * Example 3: \"image1,100w.png 100w, image2.png 50w\"\n */\nconst srcsetRegex = /(\\S+)(?:\\s+(?:(-?\\d+(?:\\.\\d+)?)([a-zA-Z]*)))?\\s*(?:,|$)/g;\n\n/**\n * Extracts `srcset` and fallbacks to `src` if not available.\n * @param {!Element} element\n * @return {!Srcset}\n */\nexport function srcsetFromElement(element) {\n  const srcsetAttr = element.getAttribute('srcset');\n  if (srcsetAttr) {\n    return parseSrcset(srcsetAttr);\n  }\n  // We can't push `src` via `parseSrcset` because URLs in `src` are not always\n  // RFC compliant and can't be easily parsed as an `srcset`. For instance,\n  // they sometimes contain space characters.\n  const srcAttr = userAssert(\n    element.getAttribute('src'),\n    'Either non-empty \"srcset\" or \"src\" attribute must be specified: %s',\n    element\n  );\n  return srcsetFromSrc(srcAttr);\n}\n\n/**\n * Creates a Srcset from a `src` attribute value.\n * @param {string} src\n * @return {!Srcset}\n */\nexport function srcsetFromSrc(src) {\n  return new Srcset([{url: src, width: undefined, dpr: 1}]);\n}\n\n/**\n * Parses the text representation of srcset into Srcset object.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes.\n * See http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n * @param {string} s\n * @return {!Srcset}\n */\nexport function parseSrcset(s) {\n  const sources = [];\n  let match;\n  while ((match = srcsetRegex.exec(s))) {\n    const url = match[1];\n    let width, dpr;\n    if (match[2]) {\n      const type = match[3].toLowerCase();\n      if (type == 'w') {\n        width = parseInt(match[2], 10);\n      } else if (type == 'x') {\n        dpr = parseFloat(match[2]);\n      } else {\n        continue;\n      }\n    } else {\n      // If no \"w\" or \"x\" specified, we assume it's \"1x\".\n      dpr = 1;\n    }\n    sources.push({url, width, dpr});\n  }\n  return new Srcset(sources);\n}\n\n/**\n * A srcset object contains one or more sources.\n *\n * There are two types of sources: width-based and DPR-based. Only one type\n * of sources allowed to be specified within a single srcset. Depending on a\n * usecase, the components are free to choose any source that best corresponds\n * to the required rendering quality and network and CPU conditions. See\n * \"select\" method for details on how this selection is performed.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes\n */\nexport class Srcset {\n  /**\n   * @param {!Array<!SrcsetSourceDef>} sources\n   */\n  constructor(sources) {\n    userAssert(sources.length > 0, 'Srcset must have at least one source');\n    /** @private @const {!Array<!SrcsetSourceDef>} */\n    this.sources_ = sources;\n\n    // Only one type of source specified can be used - width or DPR.\n    let hasWidth = false;\n    let hasDpr = false;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      hasWidth = hasWidth || !!source.width;\n      hasDpr = hasDpr || !!source.dpr;\n    }\n    userAssert(\n      !!(hasWidth ^ hasDpr),\n      'Srcset must have width or dpr sources, but not both'\n    );\n\n    // Source and assert duplicates.\n    sources.sort(hasWidth ? sortByWidth : sortByDpr);\n\n    /** @private @const {boolean} */\n    this.widthBased_ = hasWidth;\n  }\n\n  /**\n   * Performs selection for specified width and DPR. Here, width is the width\n   * in screen pixels and DPR is the device-pixel-ratio or pixel density of\n   * the device. Depending on the circumstances, such as low network conditions,\n   * it's possible to manipulate the result of this method by passing a lower\n   * DPR value.\n   *\n   * The source selection depends on whether this is width-based or DPR-based\n   * srcset.\n   *\n   * In a width-based source, the source's width is the physical width of a\n   * resource (e.g. an image). Depending on the provided DPR, this width is\n   * converted to the screen pixels as following:\n   *   pixelWidth = sourceWidth / DPR\n   *\n   * Then, the source closest to the requested \"width\" is selected using\n   * the \"pixelWidth\". The slight preference is given to the bigger sources to\n   * ensure the most optimal quality.\n   *\n   * In a DPR-based source, the source's DPR is used to return the source that\n   * is closest to the requested DPR.\n   *\n   * Based on\n   * http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n   * @param {number} width\n   * @param {number} dpr\n   * @return {string}\n   */\n  select(width, dpr) {\n    devAssert(width, 'width=%s', width);\n    devAssert(dpr, 'dpr=%s', dpr);\n    let index = 0;\n    if (this.widthBased_) {\n      index = this.selectByWidth_(width * dpr);\n    } else {\n      index = this.selectByDpr_(dpr);\n    }\n    return this.sources_[index].url;\n  }\n\n  /**\n   * @param {number} width\n   * @return {number}\n   * @private\n   */\n  selectByWidth_(width) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n    let minWidth = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const sWidth = sources[i].width;\n      const score = Math.abs(sWidth - width);\n\n      // Select the one that is closer with a slight preference toward larger\n      // widths. If smaller size is closer, enforce minimum ratio to ensure\n      // image isn't too distorted.\n      if (score <= minScore * 1.1 || width / minWidth > 1.2) {\n        minIndex = i;\n        minScore = score;\n        minWidth = sWidth;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * @param {number} dpr\n   * @return {number}\n   * @private\n   */\n  selectByDpr_(dpr) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const score = Math.abs(sources[i].dpr - dpr);\n      if (score <= minScore) {\n        minIndex = i;\n        minScore = score;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * Returns all URLs in the srcset.\n   * @return {!Array<string>}\n   */\n  getUrls() {\n    return this.sources_.map((s) => s.url);\n  }\n\n  /**\n   * Reconstructs the string expression for this srcset.\n   * @param {function(string):string=} opt_mapper\n   * @return {string}\n   */\n  stringify(opt_mapper) {\n    const res = [];\n    const sources = this.sources_;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      let src = source.url;\n      if (opt_mapper) {\n        src = opt_mapper(src);\n      }\n      if (this.widthBased_) {\n        src += ` ${source.width}w`;\n      } else {\n        src += ` ${source.dpr}x`;\n      }\n      res.push(src);\n    }\n    return res.join(', ');\n  }\n}\n\n/**\n * Sorts by width\n *\n * @param {!SrcsetSourceDef} s1\n * @param {!SrcsetSourceDef} s2\n * @return {number}\n */\nfunction sortByWidth(s1, s2) {\n  userAssert(s1.width != s2.width, 'Duplicate width: %s', s1.width);\n  return s1.width - s2.width;\n}\n\n/**\n * Sorts by dpr\n *\n * @param {!SrcsetSourceDef} s1\n * @param {!SrcsetSourceDef} s2\n * @return {number}\n */\nfunction sortByDpr(s1, s2) {\n  userAssert(s1.dpr != s2.dpr, 'Duplicate dpr: %s', s1.dpr);\n  return s1.dpr - s2.dpr;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from '../../../src/dom';\nimport * as query from '../../../src/core/dom/query';\nimport * as st from '../../../src/style';\nimport * as tr from '../../../src/transition';\nimport {Animation} from '../../../src/animation';\nimport {CSS} from '../../../build/amp-image-lightbox-0.1.css';\nimport {\n  DoubletapRecognizer,\n  SwipeXYRecognizer,\n  TapRecognizer,\n  TapzoomRecognizer,\n} from '../../../src/gesture-recognizers';\nimport {Gestures} from '../../../src/gesture';\nimport {Keys} from '../../../src/core/constants/key-codes';\nimport {Services} from '../../../src/services';\nimport {WindowInterface} from '../../../src/core/window/interface';\nimport {bezierCurve} from '../../../src/core/data-structures/curve';\nimport {boundValue, clamp, distance, magnitude} from '../../../src/core/math';\nimport {continueMotion} from '../../../src/motion';\nimport {dev, userAssert} from '../../../src/log';\nimport {isLoaded} from '../../../src/event-helper';\nimport {\n  layoutRectFromDomRect,\n  layoutRectLtwh,\n  moveLayoutRect,\n} from '../../../src/core/math/layout-rect';\nimport {setStyles, toggle} from '../../../src/style';\nimport {srcsetFromElement} from '../../../src/core/dom/srcset';\n\nconst TAG = 'amp-image-lightbox';\n\n/** @private @const {!Object<string, boolean>} */\nconst SUPPORTED_ELEMENTS_ = {\n  'amp-img': true,\n  'amp-anim': true,\n};\n\n/** @private @const */\nconst ARIA_ATTRIBUTES = ['aria-label', 'aria-describedby', 'aria-labelledby'];\n\n/** @private @const {!../../../src/core/data-structures/curve.CurveDef} */\nconst ENTER_CURVE_ = bezierCurve(0.4, 0, 0.2, 1);\n\n/** @private @const {!../../../src/core/data-structures/curve.CurveDef} */\nconst EXIT_CURVE_ = bezierCurve(0.4, 0, 0.2, 1);\n\n/** @private @const {!../../../src/core/data-structures/curve.CurveDef} */\nconst PAN_ZOOM_CURVE_ = bezierCurve(0.4, 0, 0.2, 1.4);\n\n/** @private @const {number} */\nconst DEFAULT_MAX_SCALE = 2;\n\n/**\n * This class is responsible providing all operations necessary for viewing\n * an image, such as full-bleed display, zoom and pan, etc.\n * @package  Visible for testing only!\n * TODO(dvoytenko): move to the separate file once build system is ready.\n */\nexport class ImageViewer {\n  /**\n   * @param {!AmpImageLightbox} lightbox\n   * @param {!Window} win\n   * @param {function(T, number=):Promise<T>} loadPromise\n   * @template T\n   */\n  constructor(lightbox, win, loadPromise) {\n    /** @private {!AmpImageLightbox} */\n    this.lightbox_ = lightbox;\n\n    /** @const {!Window} */\n    this.win = win;\n\n    /** @private {function(T, number=):Promise<T>} */\n    this.loadPromise_ = loadPromise;\n\n    /** @private {!Element} */\n    this.viewer_ = lightbox.element.ownerDocument.createElement('div');\n    this.viewer_.classList.add('i-amphtml-image-lightbox-viewer');\n\n    /** @private {!Element} */\n    this.image_ = lightbox.element.ownerDocument.createElement('img');\n    this.image_.classList.add('i-amphtml-image-lightbox-viewer-image');\n    this.viewer_.appendChild(this.image_);\n\n    /** @private {?../../../src/srcset.Srcset} */\n    this.srcset_ = null;\n\n    /** @private {number} */\n    this.sourceWidth_ = 0;\n\n    /** @private {number} */\n    this.sourceHeight_ = 0;\n\n    /** @private {!../../../src/layout-rect.LayoutRectDef} */\n    this.viewerBox_ = layoutRectLtwh(0, 0, 0, 0);\n\n    /** @private {!../../../src/layout-rect.LayoutRectDef} */\n    this.imageBox_ = layoutRectLtwh(0, 0, 0, 0);\n\n    /** @private {number} */\n    this.scale_ = 1;\n    /** @private {number} */\n    this.startScale_ = 1;\n    /** @private {number} */\n    this.maxSeenScale_ = 1;\n    /** @private {number} */\n    this.minScale_ = 1;\n    /** @private {number} */\n    this.maxScale_ = DEFAULT_MAX_SCALE;\n\n    /** @private {number} */\n    this.startX_ = 0;\n    /** @private {number} */\n    this.startY_ = 0;\n    /** @private {number} */\n    this.posX_ = 0;\n    /** @private {number} */\n    this.posY_ = 0;\n    /** @private {number} */\n    this.minX_ = 0;\n    /** @private {number} */\n    this.minY_ = 0;\n    /** @private {number} */\n    this.maxX_ = 0;\n    /** @private {number} */\n    this.maxY_ = 0;\n\n    /** @private {?../../../src/motion.Motion} */\n    this.motion_ = null;\n\n    this.setupGestures_();\n  }\n\n  /**\n   * Returns the root element of the image viewer.\n   * @return {!Element}\n   */\n  getElement() {\n    return this.viewer_;\n  }\n\n  /**\n   * Returns the img element of the image viewer.\n   * @return {!Element}\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Returns the boundaries of the viewer.\n   * @return {!../../../src/layout-rect.LayoutRectDef}\n   */\n  getViewerBox() {\n    return this.viewerBox_;\n  }\n\n  /**\n   * Returns the boundaries of the image element.\n   * @return {!../../../src/layout-rect.LayoutRectDef}\n   */\n  getImageBox() {\n    return this.imageBox_;\n  }\n\n  /**\n   * Returns the boundaries of the image element with the offset if it was\n   * moved by a gesture.\n   * @return {!../../../src/layout-rect.LayoutRectDef}\n   */\n  getImageBoxWithOffset() {\n    if (this.posX_ == 0 && this.posY_ == 0) {\n      return this.imageBox_;\n    }\n    return moveLayoutRect(this.imageBox_, this.posX_, this.posY_);\n  }\n\n  /**\n   * Resets the image viewer to the initial state.\n   */\n  reset() {\n    this.image_.setAttribute('src', '');\n    ARIA_ATTRIBUTES.forEach((key) => {\n      this.image_.removeAttribute(key);\n    });\n    this.image_.removeAttribute('aria-describedby');\n    this.srcset_ = null;\n    this.imageBox_ = layoutRectLtwh(0, 0, 0, 0);\n    this.sourceWidth_ = 0;\n    this.sourceHeight_ = 0;\n\n    this.maxSeenScale_ = 1;\n    this.scale_ = 1;\n    this.startScale_ = 1;\n    this.maxScale_ = 2;\n\n    this.startX_ = 0;\n    this.startY_ = 0;\n    this.posX_ = 0;\n    this.posY_ = 0;\n    this.minX_ = 0;\n    this.minY_ = 0;\n    this.maxX_ = 0;\n    this.maxY_ = 0;\n\n    if (this.motion_) {\n      this.motion_.halt();\n    }\n    this.motion_ = null;\n  }\n\n  /**\n   * Sets the source width and height based the natural dimensions of the\n   * source image if loaded, and the offset dimensions of amp-img element\n   * if not.\n   * @param {!Element} ampImg\n   * @param {?Element} img\n   * @private\n   */\n  setSourceDimensions_(ampImg, img) {\n    if (img) {\n      this.sourceWidth_ = img.naturalWidth || ampImg./*OK*/ offsetWidth;\n      this.sourceHeight_ = img.naturalHeight || ampImg./*OK*/ offsetHeight;\n    } else {\n      this.sourceWidth_ = ampImg./*OK*/ offsetWidth;\n      this.sourceHeight_ = ampImg./*OK*/ offsetHeight;\n    }\n  }\n\n  /**\n   * Initializes the image viewer to the target image element such as\n   * \"amp-img\". The target image element may or may not yet have the img\n   * element initialized.\n   * @param {!Element} sourceElement\n   * @param {?Element} sourceImage\n   */\n  init(sourceElement, sourceImage) {\n    this.setSourceDimensions_(sourceElement, sourceImage);\n    this.srcset_ = srcsetFromElement(sourceElement);\n\n    sourceElement.getImpl().then((elem) => {\n      elem.propagateAttributes(ARIA_ATTRIBUTES, this.image_);\n    });\n\n    if (sourceImage && isLoaded(sourceImage) && sourceImage.src) {\n      // Set src provisionally to the known loaded value for fast display.\n      // It will be updated later.\n      this.image_.setAttribute('src', sourceImage.src);\n    }\n  }\n\n  /**\n   * Measures the image viewer and image sizes and positioning.\n   * @return {!Promise}\n   */\n  measure() {\n    this.viewerBox_ = layoutRectFromDomRect(\n      this.viewer_./*OK*/ getBoundingClientRect()\n    );\n    const sourceAspectRatio = this.sourceWidth_ / this.sourceHeight_;\n    let height = Math.min(\n      this.viewerBox_.width / sourceAspectRatio,\n      this.viewerBox_.height\n    );\n    let width = Math.min(\n      this.viewerBox_.height * sourceAspectRatio,\n      this.viewerBox_.width\n    );\n\n    // TODO(dvoytenko): This is to reduce very small expansions that often\n    // look like a stutter. To be evaluated if this is still the right\n    // idea.\n    if (\n      Math.abs(width - this.sourceWidth_) <= 16 &&\n      Math.abs(height - this.sourceHeight_) <= 16\n    ) {\n      width = this.sourceWidth_;\n      height = this.sourceHeight_;\n    }\n\n    this.imageBox_ = layoutRectLtwh(\n      Math.round((this.viewerBox_.width - width) / 2),\n      Math.round((this.viewerBox_.height - height) / 2),\n      Math.round(width),\n      Math.round(height)\n    );\n\n    setStyles(this.image_, {\n      top: st.px(this.imageBox_.top),\n      left: st.px(this.imageBox_.left),\n      width: st.px(this.imageBox_.width),\n      height: st.px(this.imageBox_.height),\n    });\n\n    // If aspect ratio is off by too much, adjust max scale\n    const viewerBoxRatio = this.viewerBox_.width / this.viewerBox_.height;\n    const maxScale = Math.max(\n      viewerBoxRatio / sourceAspectRatio,\n      sourceAspectRatio / viewerBoxRatio\n    );\n    this.maxScale_ = Math.max(DEFAULT_MAX_SCALE, maxScale);\n\n    // Reset zoom and pan.\n    this.startScale_ = this.scale_ = 1;\n    this.startX_ = this.posX_ = 0;\n    this.startY_ = this.posY_ = 0;\n    this.updatePanZoomBounds_(this.scale_);\n    this.updatePanZoom_();\n\n    return this.updateSrc_();\n  }\n\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  updateSrc_() {\n    if (!this.srcset_) {\n      // Do not update source if the lightbox has already exited.\n      return Promise.resolve();\n    }\n    this.maxSeenScale_ = Math.max(this.maxSeenScale_, this.scale_);\n    const width = this.imageBox_.width * this.maxSeenScale_;\n    const src = this.srcset_.select(\n      width,\n      WindowInterface.getDevicePixelRatio()\n    );\n    if (src == this.image_.getAttribute('src')) {\n      return Promise.resolve();\n    }\n    // Notice that we will wait until the next event cycle to set the \"src\".\n    // This ensures that the already available image will show immediately\n    // and then naturally upgrade to a higher quality image.\n    return Services.timerFor(this.win)\n      .promise(1)\n      .then(() => {\n        this.image_.setAttribute('src', src);\n        return this.loadPromise_(this.image_);\n      });\n  }\n\n  /** @private */\n  setupGestures_() {\n    const gestures = Gestures.get(this.image_);\n\n    // Toggle viewer mode.\n    gestures.onGesture(TapRecognizer, () => {\n      this.lightbox_.toggleViewMode();\n    });\n\n    // Movable.\n    gestures.onGesture(SwipeXYRecognizer, (e) => {\n      this.onMove_(e.data.deltaX, e.data.deltaY, false);\n      if (e.data.last) {\n        this.onMoveRelease_(e.data.velocityX, e.data.velocityY);\n      }\n    });\n    gestures.onPointerDown(() => {\n      if (this.motion_) {\n        this.motion_.halt();\n      }\n    });\n\n    // Zoomable.\n    gestures.onGesture(DoubletapRecognizer, (e) => {\n      let newScale;\n      if (this.scale_ == 1) {\n        newScale = this.maxScale_;\n      } else {\n        newScale = this.minScale_;\n      }\n      const deltaX = this.viewerBox_.width / 2 - e.data.clientX;\n      const deltaY = this.viewerBox_.height / 2 - e.data.clientY;\n      this.onZoom_(newScale, deltaX, deltaY, true).then(() => {\n        return this.onZoomRelease_(0, 0, 0, 0, 0, 0);\n      });\n    });\n    gestures.onGesture(TapzoomRecognizer, (e) => {\n      this.onZoomInc_(\n        e.data.centerClientX,\n        e.data.centerClientY,\n        e.data.deltaX,\n        e.data.deltaY\n      );\n      if (e.data.last) {\n        this.onZoomRelease_(\n          e.data.centerClientX,\n          e.data.centerClientY,\n          e.data.deltaX,\n          e.data.deltaY,\n          e.data.velocityY,\n          e.data.velocityY\n        );\n      }\n    });\n  }\n\n  /**\n   * Returns the scale within the allowed range with possible extent.\n   * @param {number} s\n   * @param {boolean} allowExtent\n   * @return {number}\n   * @private\n   */\n  boundScale_(s, allowExtent) {\n    return boundValue(\n      s,\n      this.minScale_,\n      this.maxScale_,\n      allowExtent ? 0.25 : 0\n    );\n  }\n\n  /**\n   * Returns the X position within the allowed range with possible extent.\n   * @param {number} x\n   * @param {boolean} allowExtent\n   * @return {number}\n   * @private\n   */\n  boundX_(x, allowExtent) {\n    return boundValue(\n      x,\n      this.minX_,\n      this.maxX_,\n      allowExtent && this.scale_ > 1 ? this.viewerBox_.width * 0.25 : 0\n    );\n  }\n\n  /**\n   * Returns the Y position within the allowed range with possible extent.\n   * @param {number} y\n   * @param {boolean} allowExtent\n   * @return {number}\n   * @private\n   */\n  boundY_(y, allowExtent) {\n    return boundValue(\n      y,\n      this.minY_,\n      this.maxY_,\n      allowExtent ? this.viewerBox_.height * 0.25 : 0\n    );\n  }\n\n  /**\n   * Updates X/Y bounds based on the provided scale value. The min/max bounds\n   * are calculated to allow full pan of the image regardless of the scale\n   * value.\n   * @param {number} scale\n   * @private\n   */\n  updatePanZoomBounds_(scale) {\n    let maxY = 0;\n    let minY = 0;\n    const dh = this.viewerBox_.height - this.imageBox_.height * scale;\n    if (dh >= 0) {\n      minY = maxY = 0;\n    } else {\n      minY = dh / 2;\n      maxY = -minY;\n    }\n\n    let maxX = 0;\n    let minX = 0;\n    const dw = this.viewerBox_.width - this.imageBox_.width * scale;\n    if (dw >= 0) {\n      minX = maxX = 0;\n    } else {\n      minX = dw / 2;\n      maxX = -minX;\n    }\n\n    this.minX_ = minX;\n    this.minY_ = minY;\n    this.maxX_ = maxX;\n    this.maxY_ = maxY;\n  }\n\n  /**\n   * Updates pan/zoom of the image based on the current values.\n   * @private\n   */\n  updatePanZoom_() {\n    setStyles(this.image_, {\n      transform:\n        st.translate(this.posX_, this.posY_) + ' ' + st.scale(this.scale_),\n    });\n    if (this.scale_ != 1) {\n      this.lightbox_.toggleViewMode(true);\n    }\n  }\n\n  /**\n   * Performs a one-step or an animated motion (panning).\n   * @param {number} deltaX\n   * @param {number} deltaY\n   * @param {boolean} animate\n   * @private\n   */\n  onMove_(deltaX, deltaY, animate) {\n    const newPosX = this.boundX_(this.startX_ + deltaX, true);\n    const newPosY = this.boundY_(this.startY_ + deltaY, true);\n    this.set_(this.scale_, newPosX, newPosY, animate);\n  }\n\n  /**\n   * Performs actions once the motion gesture has been complete. The motion\n   * may continue based on the final velocity.\n   * @param {number} veloX\n   * @param {number} veloY\n   * @private\n   */\n  onMoveRelease_(veloX, veloY) {\n    const deltaY = this.posY_ - this.startY_;\n    if (this.scale_ == 1 && Math.abs(deltaY) > 10) {\n      this.lightbox_.close();\n      return;\n    }\n\n    // Continue motion.\n    this.motion_ = continueMotion(\n      this.image_,\n      this.posX_,\n      this.posY_,\n      veloX,\n      veloY,\n      (x, y) => {\n        const newPosX = this.boundX_(x, true);\n        const newPosY = this.boundY_(y, true);\n        if (\n          Math.abs(newPosX - this.posX_) < 1 &&\n          Math.abs(newPosY - this.posY_) < 1\n        ) {\n          // Hit the wall: stop motion.\n          return false;\n        }\n        this.set_(this.scale_, newPosX, newPosY, false);\n        return true;\n      }\n    );\n\n    // Snap back.\n    this.motion_.thenAlways(() => {\n      this.motion_ = null;\n      return this.release_();\n    });\n  }\n\n  /**\n   * Performs a one-step zoom action.\n   * @param {number} centerClientX\n   * @param {number} centerClientY\n   * @param {number} deltaX\n   * @param {number} deltaY\n   * @private\n   */\n  onZoomInc_(centerClientX, centerClientY, deltaX, deltaY) {\n    const dist = magnitude(deltaX, deltaY);\n\n    const zoomSign =\n      Math.abs(deltaY) > Math.abs(deltaX)\n        ? Math.sign(deltaY)\n        : Math.sign(-deltaX);\n    if (zoomSign == 0) {\n      return;\n    }\n\n    const newScale = this.startScale_ * (1 + (zoomSign * dist) / 100);\n    const deltaCenterX = this.viewerBox_.width / 2 - centerClientX;\n    const deltaCenterY = this.viewerBox_.height / 2 - centerClientY;\n    deltaX = Math.min(deltaCenterX, deltaCenterX * (dist / 100));\n    deltaY = Math.min(deltaCenterY, deltaCenterY * (dist / 100));\n    this.onZoom_(newScale, deltaX, deltaY, false);\n  }\n\n  /**\n   * Performs a one-step or an animated zoom action.\n   * @param {number} scale\n   * @param {number} deltaX\n   * @param {number} deltaY\n   * @param {boolean} animate\n   * @return {!Promise|undefined}\n   * @private\n   */\n  onZoom_(scale, deltaX, deltaY, animate) {\n    const newScale = this.boundScale_(scale, true);\n    if (newScale == this.scale_) {\n      return;\n    }\n\n    this.updatePanZoomBounds_(newScale);\n\n    const newPosX = this.boundX_(this.startX_ + deltaX * newScale, false);\n    const newPosY = this.boundY_(this.startY_ + deltaY * newScale, false);\n    return /** @type {!Promise|undefined} */ (\n      this.set_(newScale, newPosX, newPosY, animate)\n    );\n  }\n\n  /**\n   * Performs actions after the gesture that was performing zooming has been\n   * released. The zooming may continue based on the final velocity.\n   * @param {number} centerClientX\n   * @param {number} centerClientY\n   * @param {number} deltaX\n   * @param {number} deltaY\n   * @param {number} veloX\n   * @param {number} veloY\n   * @return {!Promise}\n   * @private\n   */\n  onZoomRelease_(centerClientX, centerClientY, deltaX, deltaY, veloX, veloY) {\n    let promise;\n    if (veloX == 0 && veloY == 0) {\n      promise = Promise.resolve();\n    } else {\n      promise = continueMotion(\n        this.image_,\n        deltaX,\n        deltaY,\n        veloX,\n        veloY,\n        (x, y) => {\n          this.onZoomInc_(centerClientX, centerClientY, x, y);\n          return true;\n        }\n      ).thenAlways();\n    }\n\n    const relayout = this.scale_ > this.startScale_;\n    return promise\n      .then(() => {\n        return this.release_();\n      })\n      .then(() => {\n        if (relayout) {\n          this.updateSrc_();\n        }\n      });\n  }\n\n  /**\n   * Sets or animates pan/zoom parameters.\n   * @param {number} newScale\n   * @param {number} newPosX\n   * @param {number} newPosY\n   * @param {boolean} animate\n   * @return {!Promise|undefined}\n   * @private\n   */\n  set_(newScale, newPosX, newPosY, animate) {\n    const ds = newScale - this.scale_;\n    const dist = distance(this.posX_, this.posY_, newPosX, newPosY);\n\n    let dur = 0;\n    if (animate) {\n      const maxDur = 250;\n      dur = Math.min(\n        maxDur,\n        Math.max(\n          maxDur * dist * 0.01, // Moving component.\n          maxDur * Math.abs(ds)\n        )\n      ); // Zooming component.\n    }\n\n    let promise;\n    if (dur > 16 && animate) {\n      /** @const {!TransitionDef<number>} */\n      const scaleFunc = tr.numeric(this.scale_, newScale);\n      /** @const {!TransitionDef<number>} */\n      const xFunc = tr.numeric(this.posX_, newPosX);\n      /** @const {!TransitionDef<number>} */\n      const yFunc = tr.numeric(this.posY_, newPosY);\n      promise = Animation.animate(\n        this.image_,\n        (time) => {\n          this.scale_ = scaleFunc(time);\n          this.posX_ = xFunc(time);\n          this.posY_ = yFunc(time);\n          this.updatePanZoom_();\n        },\n        dur,\n        PAN_ZOOM_CURVE_\n      ).thenAlways(() => {\n        this.scale_ = newScale;\n        this.posX_ = newPosX;\n        this.posY_ = newPosY;\n        this.updatePanZoom_();\n      });\n    } else {\n      this.scale_ = newScale;\n      this.posX_ = newPosX;\n      this.posY_ = newPosY;\n      this.updatePanZoom_();\n      if (animate) {\n        promise = Promise.resolve();\n      } else {\n        promise = undefined;\n      }\n    }\n\n    return promise;\n  }\n\n  /**\n   * Sets or animates pan/zoom parameters after release of the gesture.\n   * @return {!Promise}\n   * @private\n   */\n  release_() {\n    const newScale = this.boundScale_(this.scale_, false);\n    if (newScale != this.scale_) {\n      this.updatePanZoomBounds_(newScale);\n    }\n    const newPosX = this.boundX_((this.posX_ / this.scale_) * newScale, false);\n    const newPosY = this.boundY_((this.posY_ / this.scale_) * newScale, false);\n    return this.set_(newScale, newPosX, newPosY, true).then(() => {\n      this.startScale_ = this.scale_;\n      this.startX_ = this.posX_;\n      this.startY_ = this.posY_;\n    });\n  }\n}\n\n/**\n * This class implements \"amp-image-lightbox\" extension element.\n */\nclass AmpImageLightbox extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {number} */\n    this.historyId_ = -1;\n\n    /** @private {boolean} */\n    this.active_ = false;\n\n    /** @private {boolean} */\n    this.entering_ = false;\n\n    /** @private {?Element} */\n    this.sourceElement_ = null;\n\n    /** @private {?Element} */\n    this.sourceImage_ = null;\n\n    /** @private {?UnlistenDef} */\n    this.unlistenViewport_ = null;\n\n    /** @private {?Element} */\n    this.container_ = null;\n\n    /** @private {?ImageViewer} */\n    this.imageViewer_ = null;\n\n    /** @private {?Element} */\n    this.captionElement_ = null;\n\n    /** @private {!Function} */\n    this.boundCloseOnEscape_ = this.closeOnEscape_.bind(this);\n\n    this.registerDefaultAction((invocation) => this.open_(invocation), 'open');\n  }\n\n  /** @override */\n  buildCallback() {\n    /** If the element is in an email document, allow its `open` action. */\n    Services.actionServiceForDoc(this.element).addToAllowlist(\n      'AMP-IMAGE-LIGHTBOX',\n      'open',\n      ['email']\n    );\n  }\n\n  /**\n   * Lazily builds the image-lightbox DOM on the first open.\n   * @private\n   */\n  buildLightbox_() {\n    if (this.container_) {\n      return;\n    }\n\n    this.container_ = this.element.ownerDocument.createElement('div');\n    this.container_.classList.add('i-amphtml-image-lightbox-container');\n    this.element.appendChild(this.container_);\n\n    this.imageViewer_ = new ImageViewer(\n      this,\n      this.win,\n      this.loadPromise.bind(this)\n    );\n    this.container_.appendChild(this.imageViewer_.getElement());\n\n    this.captionElement_ = this.element.ownerDocument.createElement('div');\n\n    // Set id to the captionElement_ for accessibility reason\n    this.captionElement_.setAttribute(\n      'id',\n      this.element.getAttribute('id') + '-caption'\n    );\n\n    this.captionElement_.classList.add('amp-image-lightbox-caption');\n    this.captionElement_.classList.add('i-amphtml-image-lightbox-caption');\n    this.container_.appendChild(this.captionElement_);\n\n    // Invisible close button at the end of lightbox for screen-readers.\n    const screenReaderCloseButton =\n      this.element.ownerDocument.createElement('button');\n    // TODO(aghassemi, #4146) i18n\n    const ariaLabel =\n      this.element.getAttribute('data-close-button-aria-label') ||\n      'Close the lightbox';\n    screenReaderCloseButton.textContent = ariaLabel;\n    screenReaderCloseButton.classList.add('i-amphtml-screen-reader');\n\n    // This is for screen-readers only, should not get a tab stop.\n    screenReaderCloseButton.tabIndex = -1;\n    screenReaderCloseButton.addEventListener('click', () => {\n      this.close();\n    });\n    this.element.appendChild(screenReaderCloseButton);\n\n    const gestures = Gestures.get(this.element);\n    this.element.addEventListener('click', (e) => {\n      if (\n        !this.entering_ &&\n        !this.imageViewer_.getImage().contains(/** @type {?Node} */ (e.target))\n      ) {\n        this.close();\n      }\n    });\n    gestures.onGesture(TapRecognizer, () => {\n      if (!this.entering_) {\n        this.close();\n      }\n    });\n    gestures.onGesture(SwipeXYRecognizer, () => {\n      // Consume to block scroll events and side-swipe.\n    });\n  }\n\n  /**\n   * @param {?../../../src/service/action-impl.ActionInvocation=} invocation\n   * @private\n   */\n  open_(invocation) {\n    if (this.active_) {\n      return;\n    }\n    this.buildLightbox_();\n\n    const source = invocation.caller;\n    userAssert(\n      source && SUPPORTED_ELEMENTS_[source.tagName.toLowerCase()],\n      'Unsupported element: %s',\n      source.tagName\n    );\n\n    this.active_ = true;\n    this.reset_();\n    this.init_(source);\n\n    this.win.document.documentElement.addEventListener(\n      'keydown',\n      this.boundCloseOnEscape_\n    );\n\n    // Prepare to enter in lightbox\n    this.getViewport().enterLightboxMode();\n\n    this.enter_();\n\n    this.unlistenViewport_ = this.getViewport().onChanged(() => {\n      if (this.active_) {\n        // In IOS 10.3, the measured size of an element is incorrect if the\n        // element size depends on window size directly and the measurement\n        // happens in window.resize event. Adding a timeout for correct\n        // measurement. See https://github.com/ampproject/amphtml/issues/8479\n        if (\n          Services.platformFor(this.win)\n            .getIosVersionString()\n            .startsWith('10.3')\n        ) {\n          Services.timerFor(this.win).delay(() => {\n            this.imageViewer_.measure();\n          }, 500);\n        } else {\n          this.imageViewer_.measure();\n        }\n      }\n    });\n\n    this.getHistory_()\n      .push(this.close.bind(this))\n      .then((historyId) => {\n        this.historyId_ = historyId;\n      });\n  }\n\n  /**\n   * Handles closing the lightbox when the ESC key is pressed.\n   * @param {!Event} event\n   * @private\n   */\n  closeOnEscape_(event) {\n    if (event.key == Keys.ESCAPE) {\n      event.preventDefault();\n      this.close();\n    }\n  }\n\n  /**\n   * Closes the lightbox.\n   */\n  close() {\n    if (!this.active_) {\n      return;\n    }\n    this.active_ = false;\n    this.entering_ = false;\n\n    this.exit_();\n\n    if (this.unlistenViewport_) {\n      this.unlistenViewport_();\n      this.unlistenViewport_ = null;\n    }\n\n    this.getViewport().leaveLightboxMode();\n    if (this.historyId_ != -1) {\n      this.getHistory_().pop(this.historyId_);\n    }\n    this.win.document.documentElement.removeEventListener(\n      'keydown',\n      this.boundCloseOnEscape_\n    );\n    if (this.sourceElement_) {\n      dom.tryFocus(this.sourceElement_);\n    }\n  }\n\n  /**\n   * Toggles the view mode.\n   * @param {boolean=} opt_on\n   */\n  toggleViewMode(opt_on) {\n    if (opt_on !== undefined) {\n      this.container_.classList.toggle(\n        'i-amphtml-image-lightbox-view-mode',\n        opt_on\n      );\n    } else {\n      this.container_.classList.toggle('i-amphtml-image-lightbox-view-mode');\n    }\n  }\n\n  /**\n   * @param {!Element} sourceElement\n   * @private\n   */\n  init_(sourceElement) {\n    this.sourceElement_ = sourceElement;\n\n    // Initialize the viewer.\n    this.sourceImage_ = query.childElementByTag(sourceElement, 'img');\n    this.imageViewer_.init(this.sourceElement_, this.sourceImage_);\n\n    // Discover caption.\n    let caption = null;\n\n    // 1. Check <figure> and <figcaption>.\n    const figure = query.closestAncestorElementBySelector(\n      sourceElement,\n      'figure'\n    );\n    if (figure) {\n      caption = query.elementByTag(figure, 'figcaption');\n    }\n\n    // 2. Check \"aria-describedby\".\n    if (!caption) {\n      const describedBy = sourceElement.getAttribute('aria-describedby');\n      caption = this.element.ownerDocument.getElementById(describedBy);\n    }\n\n    if (caption) {\n      dom.copyChildren(caption, dev().assertElement(this.captionElement_));\n      this.imageViewer_\n        .getImage()\n        .setAttribute(\n          'aria-describedby',\n          this.captionElement_.getAttribute('id')\n        );\n    }\n\n    this.captionElement_.classList.toggle('i-amphtml-empty', !caption);\n  }\n\n  /** @private */\n  reset_() {\n    this.imageViewer_.reset();\n    dom.removeChildren(dev().assertElement(this.captionElement_));\n    this.sourceElement_ = null;\n    this.sourceImage_ = null;\n    this.toggleViewMode(false);\n  }\n\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  enter_() {\n    this.entering_ = true;\n\n    toggle(this.element, true);\n    setStyles(this.element, {\n      opacity: 0,\n    });\n    this.imageViewer_.measure();\n\n    const anim = new Animation(this.element);\n    const dur = 500;\n\n    // Lightbox background fades in.\n    anim.add(\n      0,\n      tr.setStyles(this.element, {\n        opacity: tr.numeric(0, 1),\n      }),\n      0.6,\n      ENTER_CURVE_\n    );\n\n    // Try to transition from the source image.\n    let transLayer = null;\n    if (\n      this.sourceImage_ &&\n      isLoaded(this.sourceImage_) &&\n      this.sourceImage_.src\n    ) {\n      transLayer = this.element.ownerDocument.createElement('div');\n      transLayer.classList.add('i-amphtml-image-lightbox-trans');\n      this.getAmpDoc().getBody().appendChild(transLayer);\n\n      const rect = layoutRectFromDomRect(\n        this.sourceImage_./*OK*/ getBoundingClientRect()\n      );\n      const imageBox = this.imageViewer_.getImageBox();\n      const clone = this.sourceImage_.cloneNode(true);\n      clone.className = '';\n      setStyles(clone, {\n        position: 'absolute',\n        top: st.px(rect.top),\n        left: st.px(rect.left),\n        width: st.px(rect.width),\n        height: st.px(rect.height),\n        transformOrigin: 'top left',\n        willChange: 'transform',\n      });\n      transLayer.appendChild(clone);\n\n      this.sourceImage_.classList.add('i-amphtml-ghost');\n\n      // Move and resize the image to the location given by the lightbox.\n      const dx = imageBox.left - rect.left;\n      const dy = imageBox.top - rect.top;\n      const scaleX = rect.width != 0 ? imageBox.width / rect.width : 1;\n      // Duration will be somewhere between 0.2 and 0.8 depending on how far\n      // the image needs to move.\n      const motionTime = clamp((Math.abs(dy) / 250) * 0.8, 0.2, 0.8);\n      anim.add(\n        0,\n        tr.setStyles(clone, {\n          transform: tr.concat([\n            tr.translate(tr.numeric(0, dx), tr.numeric(0, dy)),\n            tr.scale(tr.numeric(1, scaleX)),\n          ]),\n        }),\n        motionTime,\n        ENTER_CURVE_\n      );\n\n      // Fade in the container. This will mostly affect the caption.\n      setStyles(dev().assertElement(this.container_), {opacity: 0});\n      anim.add(\n        0.8,\n        tr.setStyles(dev().assertElement(this.container_), {\n          opacity: tr.numeric(0, 1),\n        }),\n        0.1,\n        ENTER_CURVE_\n      );\n\n      // At the end, fade out the transition image.\n      anim.add(\n        0.9,\n        tr.setStyles(transLayer, {\n          opacity: tr.numeric(1, 0.01),\n        }),\n        0.1,\n        EXIT_CURVE_\n      );\n    }\n\n    return anim.start(dur).thenAlways(() => {\n      this.entering_ = false;\n      setStyles(this.element, {opacity: ''});\n      setStyles(dev().assertElement(this.container_), {opacity: ''});\n      if (transLayer) {\n        this.getAmpDoc().getBody().removeChild(transLayer);\n      }\n    });\n  }\n\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  exit_() {\n    const image = this.imageViewer_.getImage();\n    const imageBox = this.imageViewer_.getImageBoxWithOffset();\n\n    const anim = new Animation(this.element);\n    let dur = 500;\n\n    // Lightbox background fades out.\n    anim.add(\n      0,\n      tr.setStyles(this.element, {\n        opacity: tr.numeric(1, 0),\n      }),\n      0.9,\n      EXIT_CURVE_\n    );\n\n    // Try to transition to the source image.\n    let transLayer = null;\n    if (isLoaded(image) && image.src && this.sourceImage_) {\n      transLayer = this.element.ownerDocument.createElement('div');\n      transLayer.classList.add('i-amphtml-image-lightbox-trans');\n      this.getAmpDoc().getBody().appendChild(transLayer);\n\n      const rect = layoutRectFromDomRect(\n        this.sourceImage_./*OK*/ getBoundingClientRect()\n      );\n      const clone = image.cloneNode(true);\n      setStyles(clone, {\n        position: 'absolute',\n        top: st.px(imageBox.top),\n        left: st.px(imageBox.left),\n        width: st.px(imageBox.width),\n        height: st.px(imageBox.height),\n        transform: '',\n        transformOrigin: 'top left',\n        willChange: 'transform',\n      });\n      transLayer.appendChild(clone);\n\n      // Fade out the container.\n      anim.add(\n        0,\n        tr.setStyles(dev().assertElement(this.container_), {\n          opacity: tr.numeric(1, 0),\n        }),\n        0.1,\n        EXIT_CURVE_\n      );\n\n      // Move and resize the image back to where it is in the article.\n      const dx = rect.left - imageBox.left;\n      const dy = rect.top - imageBox.top;\n      const scaleX = imageBox.width != 0 ? rect.width / imageBox.width : 1;\n      /** @const {!TransitionDef<void>} */\n      const moveAndScale = tr.setStyles(clone, {\n        transform: tr.concat([\n          tr.translate(tr.numeric(0, dx), tr.numeric(0, dy)),\n          tr.scale(tr.numeric(1, scaleX)),\n        ]),\n      });\n\n      // Duration will be somewhere between 0.2 and 0.8 depending on how far\n      // the image needs to move. Start the motion later too, but no later\n      // than 0.2.\n      const motionTime = clamp((Math.abs(dy) / 250) * 0.8, 0.2, 0.8);\n      anim.add(\n        Math.min(0.8 - motionTime, 0.2),\n        (time, complete) => {\n          moveAndScale(time);\n          if (complete) {\n            this.sourceImage_.classList.remove('i-amphtml-ghost');\n          }\n        },\n        motionTime,\n        EXIT_CURVE_\n      );\n\n      // Fade out the transition image.\n      anim.add(\n        0.8,\n        tr.setStyles(transLayer, {\n          opacity: tr.numeric(1, 0.01),\n        }),\n        0.2,\n        EXIT_CURVE_\n      );\n\n      // Duration will be somewhere between 300ms and 700ms depending on\n      // how far the image needs to move.\n      dur = clamp((Math.abs(dy) / 250) * dur, 300, dur);\n    }\n\n    return anim.start(dur).thenAlways(() => {\n      if (this.sourceImage_) {\n        this.sourceImage_.classList.remove('i-amphtml-ghost');\n      }\n      this./*OK*/ collapse();\n      setStyles(this.element, {\n        opacity: '',\n      });\n      setStyles(dev().assertElement(this.container_), {opacity: ''});\n      if (transLayer) {\n        this.getAmpDoc().getBody().removeChild(transLayer);\n      }\n      this.reset_();\n    });\n  }\n\n  /**\n   * @private\n   * @return {!../../../src/service/history-impl.History}\n   */\n  getHistory_() {\n    return Services.historyForDoc(this.getAmpDoc());\n  }\n}\n\nAMP.extension(TAG, '0.1', (AMP) => {\n  AMP.registerElement(TAG, AmpImageLightbox, CSS);\n});\n"],
  "mappings": "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",
  "names": []
}
