{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../build/amp-lightbox-gallery-0.1.css.js", "../../src/core/constants/common-signals.js", "../../src/core/constants/amp-events.js", "../../src/core/types/array.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/core/error/index.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/config.js", "../../src/log.js", "../../src/core/window/index.js", "../../src/service.js", "../../src/core/minified-mode.js", "../../src/core/assert/dev.js", "../../src/core/assert/user.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/css-selectors.js", "../../src/core/dom/query.js", "../../src/dom.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../src/core/dom/event-helper-listen.js", "../../src/event-helper.js", "../../src/style.js", "../../src/style-installer.js", "../../src/chunk.js", "../../src/auto-lightbox.js", "../../extensions/amp-lightbox-gallery/0.1/service/lightbox-placeholders.js", "../../src/core/dom/srcset.js", "../../extensions/amp-lightbox-gallery/0.1/service/lightbox-manager-impl.js", "../../src/core/data-structures/observable.js", "../../src/pass.js", "../../src/gesture.js", "../../src/core/constants/key-codes.js", "../../src/static-template.js", "../../extensions/amp-lightbox-gallery/0.1/lightbox-caption.js", "../../extensions/amp-lightbox-gallery/0.1/lightbox-controls.js", "../../src/motion.js", "../../src/gesture-recognizers.js", "../../extensions/amp-lightbox-gallery/0.1/utils.js", "../../extensions/amp-lightbox-gallery/0.1/swipe-to-dismiss.js", "../../src/core/math/index.js", "../../src/experiments/index.js", "../../node_modules/@ampproject/animations/dist/animations.mjs", "../../src/core/types/function/exponential-backoff.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../src/analytics.js", "../../src/error-reporting.js", "../../extensions/amp-lightbox-gallery/0.1/amp-lightbox-gallery.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "export const CSS = \".i-amphtml-lbg-caption-scroll{position:absolute!important;left:0!important;right:0!important;bottom:0!important;z-index:1;padding-top:40px!important;box-sizing:border-box!important;color:#fff;text-shadow:1px 0 5px rgba(0,0,0,0.4)!important;overflow:hidden!important;max-height:calc(80px + 3rem)!important;transition:max-height 0.3s ease-out!important;pointer-events:none!important}.i-amphtml-lbg-caption-text{padding:20px!important;pointer-events:all!important}.i-amphtml-lbg-caption-text:empty{display:none!important}[i-amphtml-lbg-caption-state=clip]{-webkit-mask-image:linear-gradient(0deg,transparent 0rem,rgba(0,0,0,0.2) 1rem,rgba(0,0,0,0.55) 2rem,#000 3rem);mask-image:linear-gradient(0deg,transparent 0rem,rgba(0,0,0,0.2) 1rem,rgba(0,0,0,0.55) 2rem,#000 3rem)}[i-amphtml-lbg-caption-state=expand]{overflow-y:auto!important;-webkit-overflow-scrolling:touch!important;max-height:100%!important;transition:max-height 0.7s ease-out!important;-webkit-mask-image:linear-gradient(transparent,rgba(0,0,0,0.2) 20px,rgba(0,0,0,0.55) 40px,#000 60px);mask-image:linear-gradient(transparent,rgba(0,0,0,0.2) 20px,rgba(0,0,0,0.55) 40px,#000 60px)}.i-amphtml-lbg-caption-mask{min-height:1rem;width:100%!important;position:fixed!important;bottom:0!important;pointer-events:all!important}[i-amphtml-lbg-caption-state=clip]+.i-amphtml-lbg-caption-mask{z-index:1!important;background:transparent!important;transition:background-color 0.5s ease-out!important}[i-amphtml-lbg-caption-state=expand]+.i-amphtml-lbg-caption-mask{background-color:rgba(0,0,0,0.4)!important;top:0!important;z-index:0!important;transition:background-color 0.4s ease-in!important}.i-amphtml-lbg[gallery-view] .i-amphtml-lbg-caption{display:none}.i-amphtml-lbg-top-bar{position:absolute!important;left:0!important;right:0!important;top:0!important;height:56px!important;z-index:1!important;background:linear-gradient(rgba(0,0,0,0.3),transparent)}@media (min-width:1024px){.i-amphtml-lbg-top-bar{height:80px!important}}.i-amphtml-lbg-button{position:absolute!important;cursor:pointer!important;width:24px;height:24px;padding:16px;box-sizing:content-box}@media (min-width:1024px){.i-amphtml-lbg-button{width:40px;height:40px;padding:20px}}.i-amphtml-lbg-button:after{content:\\\"\\\"!important;width:100%!important;height:100%!important;display:block!important;background-repeat:no-repeat!important;background-position:50%!important}.i-amphtml-lbg-button[data-action=close]{top:0!important;right:0!important}.i-amphtml-lbg-button[data-action=close]:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m6.4 6.4 11.2 11.2zm11.2 0L6.4 17.6z' stroke='%23fff' stroke-width='2' stroke-linejoin='round'/%3E%3C/svg%3E\\\")}.i-amphtml-lbg-button[data-action=gallery]{top:0!important;left:0!important}.i-amphtml-lbg-button[data-action=gallery]:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23fff'%3E%3Crect x='3' y='3' width='6' height='8' rx='1' ry='1'/%3E%3Crect x='15' y='13' width='6' height='8' rx='1' ry='1'/%3E%3Crect x='11' y='3' width='10' height='8' rx='1' ry='1'/%3E%3Crect x='3' y='13' width='10' height='8' rx='1' ry='1'/%3E%3C/g%3E%3C/svg%3E\\\")}.i-amphtml-lbg-button[data-action=slides]{top:0!important;left:0!important;display:none}.i-amphtml-lbg-button[data-action=slides]:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='4' y='4' width='16' height='16' rx='1' stroke-width='2' stroke='%23fff' fill='none'/%3E%3Ccircle fill='%23fff' cx='15.5' cy='8.5' r='1.5'/%3E%3Cpath fill='%23fff' d='M5 19v-6l3-3 5 5 3-3 3 3v4z'/%3E%3C/svg%3E\\\")}.i-amphtml-lbg-button[data-action=next],.i-amphtml-lbg-button[data-action=prev]{top:0!important;bottom:0!important;margin:auto!important;filter:drop-shadow(0 0 1px black)!important;width:40px;height:40px;padding:20px}.i-amphtml-lbg-button[data-action=next]{right:0!important;left:auto!important}.i-amphtml-lbg-button[data-action=next]:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m10 7.4 4.6 4.6-4.6 4.6' fill='none' stroke='%23fff' stroke-width='2' stroke-linejoin='round' stroke-linecap='round'/%3E%3C/svg%3E\\\")}.i-amphtml-lbg-button[data-action=prev]{right:auto!important;left:0!important}.i-amphtml-lbg-button[data-action=prev]:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M14 7.4 9.4 12l4.6 4.6' fill='none' stroke='%23fff' stroke-width='2' stroke-linejoin='round' stroke-linecap='round'/%3E%3C/svg%3E\\\")}[i-amphtml-lbg-single-item] .i-amphtml-lbg-button[data-action=gallery],[i-amphtml-lbg-single-item] .i-amphtml-lbg-button[data-action=next],[i-amphtml-lbg-single-item] .i-amphtml-lbg-button[data-action=prev]{visibility:hidden!important}.i-amphtml-lbg[gallery-view] .i-amphtml-lbg-button[data-action=gallery],.i-amphtml-lbg[gallery-view] .i-amphtml-lbg-button[data-action=next],.i-amphtml-lbg[gallery-view] .i-amphtml-lbg-button[data-action=prev]{display:none!important}.i-amphtml-lbg[gallery-view] .i-amphtml-lbg-button[data-action=slides]{display:block!important}[i-amphtml-lbg-fade]{animation-fill-mode:forwards;animation-duration:400ms}[i-amphtml-lbg-fade=in]{animation-name:fadeIn}[i-amphtml-lbg-fade=out]{animation-name:fadeOut}amp-lightbox-gallery[i-amphtml-lbg-fade]{position:relative;z-index:2147483642;animation-timing-function:cubic-bezier(0.8,0,0.2,1)}amp-lightbox-gallery .amp-carousel-button{display:none}amp-lightbox-gallery amp-carousel{background:transparent!important}.i-amphtml-lbg{position:fixed!important;z-index:2147483642}.i-amphtml-lbg,.i-amphtml-lbg-gallery,.i-amphtml-lbg-mask{top:0!important;left:0!important;right:0!important;bottom:0!important}.i-amphtml-lbg-gallery,.i-amphtml-lbg-mask{background-color:#000!important;position:absolute!important}.i-amphtml-lbg-gallery{display:none;top:56px!important;overflow:auto!important}@media (min-width:1024px){.i-amphtml-lbg-gallery{top:80px!important}}.i-amphtml-lbg-overlay:not([i-amphtml-lbg-fade]){opacity:0;visibility:hidden}.i-amphtml-lbg-overlay[i-amphtml-lbg-fade=in]{animation-timing-function:ease-in}.i-amphtml-lbg-overlay[i-amphtml-lbg-fade=out]{animation-timing-function:linear}.i-amphtml-lbg[gallery-view] .i-amphtml-lbg-gallery{display:grid!important;-ms-flex-pack:center!important;justify-content:center!important;grid-gap:5px!important;grid-template-columns:repeat(3,1fr);grid-auto-rows:-webkit-min-content!important;grid-auto-rows:min-content!important;padding:5px}@media (min-width:1024px){.i-amphtml-lbg[gallery-view] .i-amphtml-lbg-gallery{grid-template-columns:repeat(4,249.75px)}}.i-amphtml-lbg-gallery-thumbnail{position:relative!important;padding-top:100%!important}.i-amphtml-lbg-gallery-thumbnail-img{width:100%!important;height:100%!important;position:absolute!important;top:0!important;-o-object-fit:cover!important;object-fit:cover!important;cursor:pointer!important}.i-amphtml-lbg-thumbnail-timestamp-container{background-color:#292d33;color:#fff;position:absolute;bottom:10px;left:10px;height:20px;border-radius:2px;opacity:0.8;width:20px}.i-amphtml-lbg-thumbnail-timestamp-container.i-amphtml-lbg-has-timestamp{font-size:12px;padding:0 5px 0 18px;line-height:1.3rem;width:auto}.i-amphtml-lbg-thumbnail-play-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23fff'%3E%3Cpath d='M8 5v14l11-7z'/%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3C/svg%3E\\\");height:16px;width:16px;position:absolute;left:2px;bottom:2px}amp-lightbox-gallery .i-amphtml-slide-item>*{height:auto}@keyframes fadeIn{0%{opacity:0}to{opacity:1;visibility:visible}}@keyframes fadeOut{0%{opacity:1}to{opacity:0;visibility:hidden}}\\n/*# sourceURL=/extensions/amp-lightbox-gallery/0.1/amp-lightbox-gallery.css*/\";\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element's implementation has been registered and ready for upgrade.\n   */\n  READY_TO_UPGRADE: 'ready-upgrade',\n\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has been mounted.\n   */\n  MOUNTED: 'mounted',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/main/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load-start',\n  LOAD_END: 'amp:load-end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n  UNLOAD: 'amp:unload',\n};\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty?.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (const arg of arguments) {\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n    // It may not exist for Bento components without the runtime.\n    self.__AMP_REPORT_ERROR?.(error);\n    throw error;\n  });\n}\n\n/**\n * Executes the provided callback in a try/catch and rethrows any errors\n * asynchronously.\n *\n * @param {function(...*):T} callback\n * @param {...*} args\n * @return {T}\n * @template T\n */\nexport function tryCallback(callback, ...args) {\n  try {\n    return callback.apply(null, args);\n  } catch (e) {\n    rethrowAsync(e);\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Magic constant that is replaced by babel.\n// IS_MINIFIED is always replaced with true when closure compiler is used\nconst IS_MINIFIED = false;\n\n/**\n * Returns true whenever closure compiler is used.\n * @return {boolean}\n */\nexport function isMinifiedMode() {\n  return IS_MINIFIED;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {isMinifiedMode} from '../minified-mode';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (isMinifiedMode()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {USER_ERROR_SENTINEL} from '../error/message-helpers';\n\n/**\n * @fileoverview This file provides the entrypoint for user assertions. It's\n * designed so all functions are pure function calls to improve inlining.\n */\n\n/**\n * Throws a user error if the first argument isn't trueish. Mirrors userAssert\n * in src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {UserError} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return assertions.assert(\n    USER_ERROR_SENTINEL,\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertElement(shouldBeElement, opt_message) {\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertString(shouldBeString, opt_message) {\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertNumber(shouldBeNumber, opt_message) {\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertArray(shouldBeArray, opt_message) {\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertBoolean(shouldBeBoolean, opt_message) {\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../../../third_party/css-escape/css-escape';\nimport {devAssert} from '../assert';\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n * @suppress {uselessCode}\n */\nexport function escapeCssSelectorIdent(ident) {\n  // This gets rewritten to true/false during compilation. It will trigger an\n  // JSC_UNREACHABLE_CODE warning, but that's intentional for DCE.\n  if (IS_ESM) {\n    return CSS.escape(ident);\n  }\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {lastChildElement} from './core/dom/query';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './core/constants/common-signals';\nimport {Services} from './services';\nimport {TickLabel} from './core/constants/enums';\nimport {dev, devAssert} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './core/types/object';\nimport {rethrowAsync} from './core/error';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch((reason) => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then((services) => {\n      bodyMadeVisible = true;\n      if (INI_LOAD_INOB) {\n        // Force sync measurement to ensure that style recalc is complete\n        // before showing body, which would trigger FCP. This should reduce\n        // make it less likely that a CLS would be triggered after FCP.\n        doc.body./*OK*/ getBoundingClientRect();\n      }\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick(TickLabel.MAKE_BODY_VISIBLE);\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {dev} from './log';\nimport {getData} from './event-helper';\nimport {getServiceForDoc, registerServiceBuilderForDoc} from './service';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport PriorityQueue from './core/data-structures/priority-queue';\n\n/**\n * @const {string}\n */\nconst TAG = 'CHUNK';\n\n/**\n * @type {boolean}\n */\nlet deactivated = /nochunking=1/.test(self.location.hash);\nlet allowLongTasks = false;\n\n/**\n * @const {!Promise}\n */\nconst resolved = Promise.resolve();\n\n/**\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n * @private\n */\nfunction chunkServiceForDoc(elementOrAmpDoc) {\n  registerServiceBuilderForDoc(elementOrAmpDoc, 'chunk', Chunks);\n  return getServiceForDoc(elementOrAmpDoc, 'chunk');\n}\n\n/**\n * Run the given function. For visible documents the function will be\n * called in a micro task (Essentially ASAP). If the document is\n * not visible, tasks will yield to the event loop (to give the browser\n * time to do other things) and may even be further delayed until\n * there is time.\n *\n * @param {!Document|!./service/ampdoc-impl.AmpDoc} doc\n * @param {function(?IdleDeadline)} fn\n * @param {boolean=} opt_makesBodyVisible Pass true if this service makes\n *     the body visible. This is relevant because it may influence the\n *     task scheduling strategy.\n */\nexport function startupChunk(doc, fn, opt_makesBodyVisible) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n  const service = chunkServiceForDoc(doc.documentElement || doc);\n  service.runForStartup(fn);\n  if (opt_makesBodyVisible) {\n    service.runForStartup(() => {\n      service.bodyIsVisible_ = true;\n    });\n  }\n}\n\n/**\n * Run the given function sometime in the future without blocking UI.\n *\n * Higher priority tasks are executed before lower priority tasks.\n * Tasks with the same priority are executed in FIFO order.\n *\n * Uses `requestIdleCallback` if available and passes the `IdleDeadline`\n * object to the function, which can be used to perform a variable amount\n * of work depending on the remaining amount of idle time.\n *\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {function(?IdleDeadline)} fn\n * @param {ChunkPriority} priority\n */\nexport function chunk(elementOrAmpDoc, fn, priority) {\n  if (deactivated) {\n    resolved.then(fn);\n    return;\n  }\n  const service = chunkServiceForDoc(elementOrAmpDoc);\n  service.run(fn, priority);\n}\n\n/**\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @return {!Chunks}\n */\nexport function chunkInstanceForTesting(elementOrAmpDoc) {\n  return chunkServiceForDoc(elementOrAmpDoc);\n}\n\n/**\n * Use a standard micro task for every invocation. This should only\n * be called from the AMP bootstrap script if it is known that\n * chunking makes no sense. In particular this is the case when\n * AMP runs in the `amp-shadow` multi document mode.\n */\nexport function deactivateChunking() {\n  deactivated = true;\n}\n\n/**\n * Allow continuing macro tasks after a long task (>5ms).\n * In particular this is the case when AMP runs in the `amp-inabox` ads mode.\n */\nexport function allowLongTasksInChunking() {\n  allowLongTasks = true;\n}\n\n/**\n * @visibleForTesting\n */\nexport function activateChunkingForTesting() {\n  deactivated = false;\n}\n\n/**\n * Runs all currently scheduled chunks.\n * Independent of errors it will unwind the queue. Will afterwards\n * throw the first encountered error.\n * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n */\nexport function runChunksForTesting(elementOrAmpDoc) {\n  const service = chunkInstanceForTesting(elementOrAmpDoc);\n  const errors = [];\n  while (true) {\n    try {\n      if (!service.execute_(/* idleDeadline */ null)) {\n        break;\n      }\n    } catch (e) {\n      errors.push(e);\n    }\n  }\n  if (errors.length) {\n    throw errors[0];\n  }\n}\n\n/**\n * The priority of a chunk task. Higher priority tasks have higher values.\n * @enum {number}\n */\nexport const ChunkPriority = {\n  HIGH: 20,\n  LOW: 10,\n  BACKGROUND: 0,\n};\n\n/** @enum {string} */\nconst TaskState = {\n  NOT_RUN: 'not_run',\n  RUN: 'run',\n};\n\n/**\n * A default chunkable task.\n * @private\n */\nclass Task {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   */\n  constructor(fn) {\n    /** @public {TaskState} */\n    this.state = TaskState.NOT_RUN;\n\n    /** @private @const {!function(?IdleDeadline)} */\n    this.fn_ = fn;\n  }\n\n  /**\n   * Executes the wrapped function.\n   * @param {?IdleDeadline} idleDeadline\n   * @throws {Error}\n   * @protected\n   */\n  runTask_(idleDeadline) {\n    if (this.state == TaskState.RUN) {\n      return;\n    }\n    this.state = TaskState.RUN;\n    try {\n      this.fn_(idleDeadline);\n    } catch (e) {\n      this.onTaskError_(e);\n      throw e;\n    }\n  }\n\n  /**\n   * @return {string}\n   * @protected\n   */\n  getName_() {\n    return this.fn_.displayName || this.fn_.name;\n  }\n\n  /**\n   * Optional handling when a task run throws an error.\n   * @param {Error} unusedError\n   * @private\n   */\n  onTaskError_(unusedError) {\n    // By default, no-op.\n  }\n\n  /**\n   * Returns true if this task should be run without delay.\n   * @return {boolean}\n   * @protected\n   */\n  immediateTriggerCondition_() {\n    // By default, there are no immediate trigger conditions.\n    return false;\n  }\n\n  /**\n   * Returns true if this task should be scheduled using `requestIdleCallback`.\n   * Otherwise, task is scheduled as macro-task on next event loop.\n   * @return {boolean}\n   * @protected\n   */\n  useRequestIdleCallback_() {\n    // By default, never use requestIdleCallback.\n    return false;\n  }\n}\n\n/**\n * A task that's run as part of AMP's startup sequence.\n * @private\n */\nclass StartupTask extends Task {\n  /**\n   * @param {function(?IdleDeadline)} fn\n   * @param {!Window} win\n   * @param {!Chunks} chunks\n   */\n  constructor(fn, win, chunks) {\n    super(fn);\n\n    /** @private @const */\n    this.chunks_ = chunks;\n  }\n\n  /** @override */\n  onTaskError_(unusedError) {\n    // Startup tasks run early in init. All errors should show the doc.\n    makeBodyVisibleRecovery(self.document);\n  }\n\n  /** @override */\n  immediateTriggerCondition_() {\n    // Run in a micro task when the doc is visible. Otherwise, run after\n    // having yielded to the event queue once.\n    return this.isVisible_();\n  }\n\n  /** @override */\n  useRequestIdleCallback_() {\n    // We only start using requestIdleCallback when the core runtime has\n    // been initialized. Otherwise we risk starving ourselves\n    // before the render-critical work is done.\n    return this.chunks_.coreReady_;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isVisible_() {\n    return this.chunks_.ampdoc.isVisible();\n  }\n}\n\n/**\n * Handles queueing, scheduling and executing tasks.\n */\nclass Chunks {\n  /**\n   * @param {!./service/ampdoc-impl.AmpDoc} ampDoc\n   */\n  constructor(ampDoc) {\n    /** @protected @const {!./service/ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampDoc;\n    /** @private @const {!Window} */\n    this.win_ = ampDoc.win;\n    /** @private @const {!PriorityQueue<Task>} */\n    this.tasks_ = new PriorityQueue();\n    /** @private @const {function(?IdleDeadline)} */\n    this.boundExecute_ = this.execute_.bind(this);\n    /** @private {number} */\n    this.durationOfLastExecution_ = 0;\n    /** @private @const {boolean} */\n    this.supportsInputPending_ = !!(\n      this.win_.navigator.scheduling &&\n      this.win_.navigator.scheduling.isInputPending\n    );\n\n    /**\n     * Set to true if we scheduled a macro or micro task to execute the next\n     * task. If true, we don't schedule another one.\n     * Not set to true if we use rIC, because we always want to transition\n     * to immeditate invocation from that state.\n     * @private {boolean}\n     */\n    this.scheduledImmediateInvocation_ = false;\n    /** @private {boolean} Whether the document can actually be painted. */\n    this.bodyIsVisible_ = this.win_.document.documentElement.hasAttribute(\n      'i-amphtml-no-boilerplate'\n    );\n\n    this.win_.addEventListener('message', (e) => {\n      if (getData(e) == 'amp-macro-task') {\n        this.execute_(/* idleDeadline */ null);\n      }\n    });\n\n    /** @protected {boolean} */\n    this.coreReady_ = false;\n    Services.viewerPromiseForDoc(ampDoc).then(() => {\n      // Once the viewer has been resolved, most of core runtime has been\n      // initialized as well.\n      this.coreReady_ = true;\n    });\n\n    ampDoc.onVisibilityChanged(() => {\n      if (ampDoc.isVisible()) {\n        this.schedule_();\n      }\n    });\n  }\n\n  /**\n   * Run fn as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   * @param {number} priority\n   */\n  run(fn, priority) {\n    const t = new Task(fn);\n    this.enqueueTask_(t, priority);\n  }\n\n  /**\n   * Run a fn that's part of AMP's startup sequence as a \"chunk\".\n   * @param {function(?IdleDeadline)} fn\n   */\n  runForStartup(fn) {\n    const t = new StartupTask(fn, this.win_, this);\n    this.enqueueTask_(t, Number.POSITIVE_INFINITY);\n  }\n\n  /**\n   * Queues a task to be executed later with given priority.\n   * @param {!Task} task\n   * @param {number} priority\n   * @private\n   */\n  enqueueTask_(task, priority) {\n    this.tasks_.enqueue(task, priority);\n    this.schedule_();\n  }\n\n  /**\n   * Returns the next task that hasn't been run yet.\n   * If `opt_dequeue` is true, remove the returned task from the queue.\n   * @param {boolean=} opt_dequeue\n   * @return {?Task}\n   * @private\n   */\n  nextTask_(opt_dequeue) {\n    let t = this.tasks_.peek();\n    // Dequeue tasks until we find one that hasn't been run yet.\n    while (t && t.state !== TaskState.NOT_RUN) {\n      this.tasks_.dequeue();\n      t = this.tasks_.peek();\n    }\n    // If `opt_dequeue` is true, remove this task from the queue.\n    if (t && opt_dequeue) {\n      this.tasks_.dequeue();\n    }\n    return t;\n  }\n\n  /**\n   * Run a task.\n   * Schedule the next round if there are more tasks.\n   * @param {?IdleDeadline} idleDeadline\n   * @return {boolean} Whether anything was executed.\n   * @private\n   */\n  execute_(idleDeadline) {\n    const t = this.nextTask_(/* opt_dequeue */ true);\n    if (!t) {\n      this.scheduledImmediateInvocation_ = false;\n      this.durationOfLastExecution_ = 0;\n      return false;\n    }\n    let before;\n    try {\n      before = Date.now();\n      t.runTask_(idleDeadline);\n    } finally {\n      // We want to capture the time of the entire task duration including\n      // scheduled immediate (from resolved promises) micro tasks.\n      // Lacking a better way to do this we just scheduled 10 nested\n      // micro tasks.\n      resolved\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then()\n        .then(() => {\n          this.scheduledImmediateInvocation_ = false;\n          this.durationOfLastExecution_ += Date.now() - before;\n          dev().fine(\n            TAG,\n            t.getName_(),\n            'Chunk duration',\n            Date.now() - before,\n            this.durationOfLastExecution_\n          );\n\n          this.schedule_();\n        });\n    }\n    return true;\n  }\n\n  /**\n   * Calls `execute_()` asynchronously.\n   * @param {?IdleDeadline} idleDeadline\n   * @private\n   */\n  executeAsap_(idleDeadline) {\n    // If the user-agent supports isInputPending, use it to break to a macro task as necessary.\n    // Otherwise If we've spent over 5 millseconds executing the\n    // last instruction yield back to the main thread.\n    // 5 milliseconds is a magic number.\n    if (\n      !allowLongTasks &&\n      this.bodyIsVisible_ &&\n      (this.supportsInputPending_\n        ? /** @type {!{scheduling: {isInputPending: Function}}} */ (\n            this.win_.navigator\n          ).scheduling.isInputPending()\n        : this.durationOfLastExecution_ > 5)\n    ) {\n      this.durationOfLastExecution_ = 0;\n      this.requestMacroTask_();\n      return;\n    }\n    resolved.then(() => {\n      this.boundExecute_(idleDeadline);\n    });\n  }\n\n  /**\n   * Schedule running the next queued task.\n   * @private\n   */\n  schedule_() {\n    if (this.scheduledImmediateInvocation_) {\n      return;\n    }\n    const nextTask = this.nextTask_();\n    if (!nextTask) {\n      return;\n    }\n    if (nextTask.immediateTriggerCondition_()) {\n      this.scheduledImmediateInvocation_ = true;\n      this.executeAsap_(/* idleDeadline */ null);\n      return;\n    }\n    // If requestIdleCallback exists, schedule a task with it, but\n    // do not wait longer than two seconds.\n    if (nextTask.useRequestIdleCallback_() && this.win_.requestIdleCallback) {\n      onIdle(\n        this.win_,\n        // Wait until we have a budget of at least 15ms.\n        // 15ms is a magic number. Budgets are higher when the user\n        // is completely idle (around 40), but that occurs too\n        // rarely to be usable. 15ms budgets can happen during scrolling\n        // but only if the device is doing super, super well, and no\n        // real processing is done between frames.\n        15 /* minimumTimeRemaining */,\n        2000 /* timeout */,\n        this.boundExecute_\n      );\n      return;\n    }\n    this.requestMacroTask_();\n  }\n\n  /**\n   * Requests executing of a macro task. Yields to the event queue\n   * before executing the task.\n   * Places task on browser message queue which then respectively\n   * triggers dequeuing and execution of a chunk.\n   */\n  requestMacroTask_() {\n    // The message doesn't actually matter.\n    this.win_./*OK*/ postMessage('amp-macro-task', '*');\n  }\n}\n\n/**\n * Delays calling the given function until the browser is notifying us\n * about a certain minimum budget or the timeout is reached.\n * @param {!Window} win\n * @param {number} minimumTimeRemaining Minimum number of millis idle\n *     budget for callback to fire.\n * @param {number} timeout in millis for callback to fire.\n * @param {function(?IdleDeadline)} fn Callback.\n * @visibleForTesting\n */\nexport function onIdle(win, minimumTimeRemaining, timeout, fn) {\n  const startTime = Date.now();\n  /**\n   * @param {!IdleDeadline} info\n   */\n  function rIC(info) {\n    if (info.timeRemaining() < minimumTimeRemaining) {\n      const remainingTimeout = timeout - (Date.now() - startTime);\n      if (remainingTimeout <= 0 || info.didTimeout) {\n        dev().fine(TAG, 'Timed out', timeout, info.didTimeout);\n        fn(info);\n      } else {\n        dev().fine(\n          TAG,\n          'Rescheduling with',\n          remainingTimeout,\n          info.timeRemaining()\n        );\n        win.requestIdleCallback(rIC, {timeout: remainingTimeout});\n      }\n    } else {\n      dev().fine(TAG, 'Running idle callback with ', minimumTimeRemaining);\n      fn(info);\n    }\n  }\n  win.requestIdleCallback(rIC, {timeout});\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChunkPriority, chunk} from './chunk';\nimport {Services} from './services';\nimport {dev} from './log';\nimport {isAmphtml} from './format';\nimport {isStoryDocument} from './utils/story';\n\n/** @const @enum {string} */\nexport const AutoLightboxEvents = {\n  // Triggered when the lightbox attribute is newly set on an item in order to\n  // process by the renderer extension (e.g. amp-lightbox-gallery).\n  NEWLY_SET: 'amp-auto-lightbox:newly-set',\n};\n\n/**\n * Installs the amp-auto-lightbox extension.\n *\n * This extension conditionally loads amp-lightbox-gallery for images and videos\n * that fulfill a set criteria on certain documents.\n *\n * Further information on spec/auto-lightbox.md and the amp-auto-lightbox extension\n * code.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function installAutoLightboxExtension(ampdoc) {\n  const {win} = ampdoc;\n  // Only enabled on single documents tagged as <html amp> or <html \u26A1>.\n  if (!isAmphtml(win.document) || !ampdoc.isSingleDoc()) {\n    return;\n  }\n  chunk(\n    ampdoc,\n    () => {\n      isStoryDocument(ampdoc).then((isStory) => {\n        // Do not enable on amp-story documents.\n        if (isStory) {\n          return;\n        }\n        Services.extensionsFor(win).installExtensionForDoc(\n          ampdoc,\n          'amp-auto-lightbox'\n        );\n      });\n    },\n    ChunkPriority.LOW\n  );\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isActionableByTap(element) {\n  if (element.tagName.toLowerCase() == 'a' && element.hasAttribute('href')) {\n    return true;\n  }\n  if (element.querySelector('a[href]')) {\n    return true;\n  }\n  const action = Services.actionServiceForDoc(element);\n  const hasTapAction = action.hasResolvableAction(\n    element,\n    'tap',\n    dev().assertElement(element.parentElement)\n  );\n  if (hasTapAction) {\n    return true;\n  }\n  const actionables = element.querySelectorAll('[on]');\n  for (let i = 0; i < actionables.length; i++) {\n    const actionable = actionables[i];\n    const hasTapAction = action.hasResolvableAction(\n      actionable,\n      'tap',\n      dev().assertElement(actionable.parentElement)\n    );\n    if (hasTapAction) {\n      return true;\n    }\n  }\n  return false;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const LIGHTBOX_THUMBNAIL_UNKNOWN =\n  'data:image/svg+xml;charset=utf-8,<svg width=\"128\" height=\"128\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path d=\"M9 20.5a1.5 1.5 0 0 1-3 0c0-6.488 5-8.53 5-13.5a4 4 0 1 0-8 0 1.5 1.5 0 0 1-3 0 7 7 0 1 1 14 0c0 5.483-5 7.485-5 13.5z\" id=\"a\"/><circle id=\"b\" cx=\"7.5\" cy=\"29.5\" r=\"1.5\"/></defs><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#1E3B63\" d=\"M0 0h128v128H0z\"/><path d=\"M33 24.5h62a4 4 0 0 1 4 4v54.952L78.081 104.5H33a4 4 0 0 1-4-4v-72a4 4 0 0 1 4-4z\" fill=\"#D1E5FF\"/><g transform=\"translate(57 48)\"><use fill=\"#225CAC\" xlink:href=\"#a\"/><path stroke=\"#225CAC\" d=\"M9.5 20.5a2 2 0 1 1-4 0c0-2.85.756-4.755 2.58-7.59l.385-.595c.152-.236.265-.412.373-.584C10.006 9.873 10.5 8.601 10.5 7a3.5 3.5 0 1 0-7 0 2 2 0 1 1-4 0 7.5 7.5 0 0 1 15 0c0 2.273-.642 3.81-2.314 6.409l-.266.412C10.133 16.592 9.5 18.103 9.5 20.5z\"/></g><g transform=\"translate(57 48)\"><use fill=\"#225CAC\" xlink:href=\"#b\"/><circle stroke=\"#225CAC\" cx=\"7.5\" cy=\"29.5\" r=\"2\"/></g><path d=\"M82 83.5h17l-21 21v-17a4 4 0 0 1 4-4z\" fill=\"#ACC8F0\"/></g></svg>';\nexport const LIGHTBOX_THUMBNAIL_AD =\n  'data:image/svg+xml;charset=utf-8,<svg width=\"128\" height=\"128\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#1E3B63\" d=\"M0 0h128v128H0z\"/><rect fill=\"#2B6AC0\" x=\"34\" y=\"74\" width=\"8\" height=\"30\" rx=\"2\"/><rect fill=\"#2B6AC0\" x=\"87\" y=\"74\" width=\"8\" height=\"30\" rx=\"2\"/><rect fill=\"#ACC8F0\" x=\"24\" y=\"30\" width=\"81\" height=\"54\" rx=\"4\"/><path fill=\"#D1E5FF\" d=\"M29 35h71v44H29z\"/><path d=\"M64 53.5V66a3 3 0 0 1-6 0v-4h-5v4a3 3 0 0 1-6 0V53.5a8.5 8.5 0 0 1 17 0zm-6 0a2.5 2.5 0 0 0-5 0V56h5v-2.5zM71 45h3v.041C80.16 45.55 85 50.71 85 57s-4.84 11.45-11 11.959V69h-3a3 3 0 0 1-3-3V48a3 3 0 0 1 3-3zm3 6.083v11.834a6.002 6.002 0 0 0 0-11.834z\" fill=\"#225CAC\"/></g></svg>';\nexport const LIGHTBOX_THUMBNAIL_IFRAME =\n  'data:image/svg+xml;charset=utf-8,<svg width=\"128\" height=\"128\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#1E3B63\" d=\"M0 0h128v128H0z\"/><path d=\"M22 39h84v58a4 4 0 0 1-4 4H26a4 4 0 0 1-4-4V39z\" fill=\"#D1E5FF\"/><path d=\"M82.243 70l-6.718-6.718a3.5 3.5 0 0 1 4.95-4.95l9.192 9.193a3.5 3.5 0 0 1 0 4.95l-9.192 9.192a3.5 3.5 0 0 1-4.95-4.95L82.243 70zm-36.486 0l6.718 6.718a3.5 3.5 0 0 1-4.95 4.95l-9.192-9.193a3.5 3.5 0 0 1 0-4.95l9.192-9.192a3.5 3.5 0 0 1 4.95 4.95L45.757 70z\" fill=\"#ACC8F0\"/><rect fill=\"#ACC8F0\" transform=\"rotate(15 64 70)\" x=\"60.5\" y=\"50\" width=\"7\" height=\"40\" rx=\"3.5\"/><path d=\"M26 27h76a4 4 0 0 1 4 4v8H22v-8a4 4 0 0 1 4-4z\" fill=\"#225CAC\"/><rect fill=\"#294975\" x=\"97\" y=\"31\" width=\"4\" height=\"4\" rx=\"2\"/><rect fill=\"#294975\" x=\"90\" y=\"31\" width=\"4\" height=\"4\" rx=\"2\"/><rect fill=\"#294975\" x=\"83\" y=\"31\" width=\"4\" height=\"4\" rx=\"2\"/></g></svg>';\nexport const LIGHTBOX_THUMBNAIL_VIDEO =\n  'data:image/svg+xml;charset=utf-8,<svg width=\"128\" height=\"128\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#1E3B63\" d=\"M0 0h128v128H0z\"/><path d=\"M24 51h80v46a4 4 0 0 1-4 4H28a4 4 0 0 1-4-4V51z\" fill=\"#225CAC\"/><path fill=\"#1B519B\" d=\"M24 49h80v12H24z\"/><path fill=\"#D1E5FF\" d=\"M56 49l-8 12h-9l8-12zm16 0l-8 12h-8l8-12zm32 0l-8 12h-8l8-12zm-16 0l-8 12h-8l8-12z\"/><path d=\"M26.916 49.148l77.274-20.705-2.07-7.728a4 4 0 0 0-4.9-2.828L27.674 36.522a4 4 0 0 0-2.829 4.899l2.07 7.727z\" fill=\"#1B519B\"/><path fill=\"#D1E5FF\" d=\"M57.826 40.866l-10.834-9.52-8.693 2.329 10.833 9.52zm15.454-4.141l-10.833-9.52-7.727 2.07 10.833 9.52zm30.91-8.282l-10.833-9.52-7.728 2.07 10.834 9.52zm-15.455 4.141l-10.833-9.52-7.728 2.07 10.834 9.52z\"/><path d=\"M28 37h9.86a4 4 0 0 1 3.327 1.781L48 49l-8 12H24V41a4 4 0 0 1 4-4z\" fill=\"#2B6AC0\"/><circle fill=\"#D1E5FF\" cx=\"29.5\" cy=\"44.5\" r=\"1.5\"/><circle fill=\"#D1E5FF\" cx=\"29.5\" cy=\"55.5\" r=\"1.5\"/></g></svg>';\nexport const LIGHTBOX_THUMBNAIL_TEXT =\n  'data:image/svg+xml;charset=utf-8,<svg width=\"128\" height=\"128\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#1E3B63\" d=\"M0 0h128v128H0z\"/><path d=\"M33 24.5h62a4 4 0 0 1 4 4v54.952L78.081 104.5H33a4 4 0 0 1-4-4v-72a4 4 0 0 1 4-4z\" fill=\"#D1E5FF\"/><path fill=\"#225CAC\" d=\"M42 41h44v6H42zm0 13h44v6H42zm0 13h34v6H42z\"/><path d=\"M82 83.5h17l-21 21v-17a4 4 0 0 1 4-4z\" fill=\"#ACC8F0\"/></g></svg>';\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert, userAssert} from '../assert';\n\n/**\n * A single source within a srcset. Only one: width or DPR can be specified at\n * a time.\n * @typedef {{\n *   url: string,\n *   width: (number|undefined),\n *   dpr: (number|undefined)\n * }}\n */\nlet SrcsetSourceDef;\n\n/**\n * General grammar: (URL [NUM[w|x]],)*\n * Example 1: \"image1.png 100w, image2.png 50w\"\n * Example 2: \"image1.png 2x, image2.png\"\n * Example 3: \"image1,100w.png 100w, image2.png 50w\"\n */\nconst srcsetRegex = /(\\S+)(?:\\s+(?:(-?\\d+(?:\\.\\d+)?)([a-zA-Z]*)))?\\s*(?:,|$)/g;\n\n/**\n * Extracts `srcset` and fallbacks to `src` if not available.\n * @param {!Element} element\n * @return {!Srcset}\n */\nexport function srcsetFromElement(element) {\n  const srcsetAttr = element.getAttribute('srcset');\n  if (srcsetAttr) {\n    return parseSrcset(srcsetAttr);\n  }\n  // We can't push `src` via `parseSrcset` because URLs in `src` are not always\n  // RFC compliant and can't be easily parsed as an `srcset`. For instance,\n  // they sometimes contain space characters.\n  const srcAttr = userAssert(\n    element.getAttribute('src'),\n    'Either non-empty \"srcset\" or \"src\" attribute must be specified: %s',\n    element\n  );\n  return srcsetFromSrc(srcAttr);\n}\n\n/**\n * Creates a Srcset from a `src` attribute value.\n * @param {string} src\n * @return {!Srcset}\n */\nexport function srcsetFromSrc(src) {\n  return new Srcset([{url: src, width: undefined, dpr: 1}]);\n}\n\n/**\n * Parses the text representation of srcset into Srcset object.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes.\n * See http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n * @param {string} s\n * @return {!Srcset}\n */\nexport function parseSrcset(s) {\n  const sources = [];\n  let match;\n  while ((match = srcsetRegex.exec(s))) {\n    const url = match[1];\n    let width, dpr;\n    if (match[2]) {\n      const type = match[3].toLowerCase();\n      if (type == 'w') {\n        width = parseInt(match[2], 10);\n      } else if (type == 'x') {\n        dpr = parseFloat(match[2]);\n      } else {\n        continue;\n      }\n    } else {\n      // If no \"w\" or \"x\" specified, we assume it's \"1x\".\n      dpr = 1;\n    }\n    sources.push({url, width, dpr});\n  }\n  return new Srcset(sources);\n}\n\n/**\n * A srcset object contains one or more sources.\n *\n * There are two types of sources: width-based and DPR-based. Only one type\n * of sources allowed to be specified within a single srcset. Depending on a\n * usecase, the components are free to choose any source that best corresponds\n * to the required rendering quality and network and CPU conditions. See\n * \"select\" method for details on how this selection is performed.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes\n */\nexport class Srcset {\n  /**\n   * @param {!Array<!SrcsetSourceDef>} sources\n   */\n  constructor(sources) {\n    userAssert(sources.length > 0, 'Srcset must have at least one source');\n    /** @private @const {!Array<!SrcsetSourceDef>} */\n    this.sources_ = sources;\n\n    // Only one type of source specified can be used - width or DPR.\n    let hasWidth = false;\n    let hasDpr = false;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      hasWidth = hasWidth || !!source.width;\n      hasDpr = hasDpr || !!source.dpr;\n    }\n    userAssert(\n      !!(hasWidth ^ hasDpr),\n      'Srcset must have width or dpr sources, but not both'\n    );\n\n    // Source and assert duplicates.\n    sources.sort(hasWidth ? sortByWidth : sortByDpr);\n\n    /** @private @const {boolean} */\n    this.widthBased_ = hasWidth;\n  }\n\n  /**\n   * Performs selection for specified width and DPR. Here, width is the width\n   * in screen pixels and DPR is the device-pixel-ratio or pixel density of\n   * the device. Depending on the circumstances, such as low network conditions,\n   * it's possible to manipulate the result of this method by passing a lower\n   * DPR value.\n   *\n   * The source selection depends on whether this is width-based or DPR-based\n   * srcset.\n   *\n   * In a width-based source, the source's width is the physical width of a\n   * resource (e.g. an image). Depending on the provided DPR, this width is\n   * converted to the screen pixels as following:\n   *   pixelWidth = sourceWidth / DPR\n   *\n   * Then, the source closest to the requested \"width\" is selected using\n   * the \"pixelWidth\". The slight preference is given to the bigger sources to\n   * ensure the most optimal quality.\n   *\n   * In a DPR-based source, the source's DPR is used to return the source that\n   * is closest to the requested DPR.\n   *\n   * Based on\n   * http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n   * @param {number} width\n   * @param {number} dpr\n   * @return {string}\n   */\n  select(width, dpr) {\n    devAssert(width, 'width=%s', width);\n    devAssert(dpr, 'dpr=%s', dpr);\n    let index = 0;\n    if (this.widthBased_) {\n      index = this.selectByWidth_(width * dpr);\n    } else {\n      index = this.selectByDpr_(dpr);\n    }\n    return this.sources_[index].url;\n  }\n\n  /**\n   * @param {number} width\n   * @return {number}\n   * @private\n   */\n  selectByWidth_(width) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n    let minWidth = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const sWidth = sources[i].width;\n      const score = Math.abs(sWidth - width);\n\n      // Select the one that is closer with a slight preference toward larger\n      // widths. If smaller size is closer, enforce minimum ratio to ensure\n      // image isn't too distorted.\n      if (score <= minScore * 1.1 || width / minWidth > 1.2) {\n        minIndex = i;\n        minScore = score;\n        minWidth = sWidth;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * @param {number} dpr\n   * @return {number}\n   * @private\n   */\n  selectByDpr_(dpr) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const score = Math.abs(sources[i].dpr - dpr);\n      if (score <= minScore) {\n        minIndex = i;\n        minScore = score;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * Returns all URLs in the srcset.\n   * @return {!Array<string>}\n   */\n  getUrls() {\n    return this.sources_.map((s) => s.url);\n  }\n\n  /**\n   * Reconstructs the string expression for this srcset.\n   * @param {function(string):string=} opt_mapper\n   * @return {string}\n   */\n  stringify(opt_mapper) {\n    const res = [];\n    const sources = this.sources_;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      let src = source.url;\n      if (opt_mapper) {\n        src = opt_mapper(src);\n      }\n      if (this.widthBased_) {\n        src += ` ${source.width}w`;\n      } else {\n        src += ` ${source.dpr}x`;\n      }\n      res.push(src);\n    }\n    return res.join(', ');\n  }\n}\n\n/**\n * Sorts by width\n *\n * @param {!SrcsetSourceDef} s1\n * @param {!SrcsetSourceDef} s2\n * @return {number}\n */\nfunction sortByWidth(s1, s2) {\n  userAssert(s1.width != s2.width, 'Duplicate width: %s', s1.width);\n  return s1.width - s2.width;\n}\n\n/**\n * Sorts by dpr\n *\n * @param {!SrcsetSourceDef} s1\n * @param {!SrcsetSourceDef} s2\n * @return {number}\n */\nfunction sortByDpr(s1, s2) {\n  userAssert(s1.dpr != s2.dpr, 'Duplicate dpr: %s', s1.dpr);\n  return s1.dpr - s2.dpr;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from '../../../../src/core/constants/amp-events';\nimport {\n  AutoLightboxEvents,\n  isActionableByTap,\n} from '../../../../src/auto-lightbox';\nimport {CommonSignals} from '../../../../src/core/constants/common-signals';\nimport {\n  LIGHTBOX_THUMBNAIL_AD,\n  LIGHTBOX_THUMBNAIL_UNKNOWN,\n  LIGHTBOX_THUMBNAIL_VIDEO,\n} from './lightbox-placeholders';\nimport {Services} from '../../../../src/services';\nimport {\n  childElement,\n  childElementByAttr,\n  closestAncestorElementBySelector,\n  elementByTag,\n} from '../../../../src/core/dom/query';\nimport {dev, devAssert, userAssert} from '../../../../src/log';\n\nimport {iterateCursor} from '../../../../src/dom';\nimport {map} from '../../../../src/core/types/object';\nimport {\n  srcsetFromElement,\n  srcsetFromSrc,\n} from '../../../../src/core/dom/srcset';\nimport {toArray} from '../../../../src/core/types/array';\n\nconst LIGHTBOX_ELIGIBLE_TAGS = {\n  'AMP-IMG': true,\n};\n\nexport const ELIGIBLE_TAP_TAGS = {\n  'AMP-IMG': true,\n};\n\nexport const VIDEO_TAGS = {\n  'AMP-YOUTUBE': true,\n  'AMP-VIDEO': true,\n};\n\nconst GALLERY_TAG = 'amp-lightbox-gallery';\nconst CAROUSEL_TAGS = ['AMP-CAROUSEL', 'AMP-BASE-CAROUSEL'];\nconst FIGURE_TAG = 'FIGURE';\nconst SLIDE_SELECTOR = '.amp-carousel-slide, .i-amphtml-carousel-slotted';\n\n/**\n * @param {!Element} slide\n * @return {!Element}\n */\nfunction getBaseElementForSlide(slide) {\n  const tagName = slide.tagName.toUpperCase();\n  if (tagName == 'AMP-IMG' || tagName == 'FIGURE') {\n    return slide;\n  }\n  const figure = slide.querySelector('figure');\n  if (figure) {\n    return figure;\n  }\n  const allImages = slide.querySelectorAll('amp-img');\n  userAssert(\n    allImages.length == 1,\n    'Found more than one images or none in slide!'\n  );\n  return dev().assertElement(allImages[0]);\n}\n\n/** @typedef {{\n *  srcset: ?../../../../src/srcset.Srcset,\n *  placeholderSrc: string,\n *  element: !Element,\n *  timestampPromise: !Promise<number>\n * }} */\nexport let LightboxThumbnailDataDef;\n\n/**\n * LightboxManager is a document-scoped service responsible for:\n *  -Finding elements marked to be lightboxable (via `lightbox` attribute)\n *  -Keeping an ordered list of lightboxable elements\n *  -Providing functionality to get next/previous lightboxable element given\n *   the current element.\n *  -Discovering elements that can be auto-lightboxed and add the\n *   `lightbox` attribute and possibly an on-tap handler to them\n */\nexport class LightboxManager {\n  /**\n   * @param {!../../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const @private {!../../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n\n    /**\n     * Cache for the `maybeInit()` call.\n     * @private {?Promise}\n     **/\n    this.scanPromise_ = null;\n\n    /**\n     * Ordered lists of lightboxable elements according to group\n     * @private {!Object<string, !Array<!Element>>}\n     */\n    this.lightboxGroups_ = map({\n      default: [],\n    });\n\n    /**\n     * Counter tracking number of carousels without ids\n     * @private {number}\n     */\n    this.counter_ = 0;\n\n    // TODO(alanorozco): Improve performance of visited lookup by setting\n    // mapped unique ids.\n    /**\n     * List of lightbox elements that have already been scanned.\n     * @private {!Array<!Element>}\n     */\n    this.seen_ = [];\n  }\n\n  /**\n   * Initializes the manager only once.\n   * @return {!Promise}\n   */\n  maybeInit() {\n    if (this.scanPromise_) {\n      return this.scanPromise_;\n    }\n\n    this.scanPromise_ = this.scanLightboxables_();\n\n    const root = this.ampdoc_.getRootNode();\n\n    // Rescan whenever DOM changes happen.\n    root.addEventListener(AmpEvents.DOM_UPDATE, () => {\n      this.scanPromise_ = this.scanLightboxables_();\n    });\n\n    // Process elements where the `lightbox` attr is dynamically set.\n    root.addEventListener(AutoLightboxEvents.NEWLY_SET, (e) => {\n      const {target} = e;\n      this.processLightboxElement_(dev().assertElement(target));\n    });\n\n    return this.scanPromise_;\n  }\n\n  /**\n   * Scans the document for lightboxable elements and updates `this.elements_`\n   * accordingly.\n   * @private\n   * @return {!Promise}\n   */\n  scanLightboxables_() {\n    return this.ampdoc_.whenReady().then(() => {\n      const matches = this.ampdoc_.getRootNode().querySelectorAll('[lightbox]');\n      const processLightboxElement = this.processLightboxElement_.bind(this);\n      iterateCursor(matches, processLightboxElement);\n    });\n  }\n\n  /**\n   * Checks to see if a root element is supported.\n   * @param {Element} element\n   * @return {boolean}\n   * @private\n   */\n  baseElementIsSupported_(element) {\n    return LIGHTBOX_ELIGIBLE_TAGS[element.tagName];\n  }\n\n  /**\n   * Process an amp-carousel element for lightbox, assigns a lightbox\n   * group id, installs the lightbox attribute and tap handlers to open\n   * the lightbox on the eligible slide elements.\n   * @param {!Element} carousel\n   */\n  processLightboxCarousel_(carousel) {\n    const lightboxGroupId =\n      carousel.getAttribute('lightbox') ||\n      `carousel${carousel.getAttribute('id') || this.counter_++}`;\n\n    this.getSlidesFromCarousel_(carousel).then((slides) => {\n      slides.forEach((slide) => {\n        const shouldExcludeSlide =\n          slide.hasAttribute('lightbox-exclude') ||\n          (slide.hasAttribute('lightbox') &&\n            slide.getAttribute('lightbox') !== lightboxGroupId);\n        if (shouldExcludeSlide) {\n          return;\n        }\n        const baseElement = getBaseElementForSlide(slide);\n        if (this.seen_.includes(baseElement)) {\n          return;\n        }\n        baseElement.setAttribute('lightbox', lightboxGroupId);\n        this.seen_.push(baseElement);\n        this.processBaseLightboxElement_(baseElement, lightboxGroupId);\n      });\n    });\n  }\n  /**\n   * Adds element to correct lightbox group, installs tap handler.\n   * @param {!Element} element\n   * @private\n   */\n  processLightboxElement_(element) {\n    if (this.seen_.includes(element)) {\n      return;\n    }\n    this.seen_.push(element);\n    if (CAROUSEL_TAGS.includes(element.tagName)) {\n      this.processLightboxCarousel_(element);\n    } else {\n      const lightboxGroupId = element.getAttribute('lightbox') || 'default';\n      this.processBaseLightboxElement_(element, lightboxGroupId);\n    }\n  }\n\n  /**\n   * Unwraps a figure element and lightboxes the\n   * @param {!Element} figure\n   * @param {string} lightboxGroupId\n   * @return {?Element}\n   * @private\n   */\n  unwrapLightboxedFigure_(figure, lightboxGroupId) {\n    // Assume that the lightbox target is whichever element inside the figure\n    // that is not the figcaption.\n    const element = childElement(\n      figure,\n      (child) => child.tagName !== 'FIGCAPTION'\n    );\n    const isGallerySlide = element.classList.contains(\n      'i-amphtml-inline-gallery-slide-content-slot'\n    );\n    // Special handling for gallery slides, needed since they require a\n    // wrapping div inside of the figure for the content.\n    const unwrappedElement = isGallerySlide\n      ? isGallerySlide.firstChild\n      : element;\n\n    if (unwrappedElement) {\n      unwrappedElement.setAttribute('lightbox', lightboxGroupId);\n    }\n    return unwrappedElement;\n  }\n\n  /**\n   * Assigns each lightboxed element to a lightbox group and adds\n   * the on tap activate attribute.\n   * @param {!Element} element\n   * @param {string} lightboxGroupId\n   */\n  processBaseLightboxElement_(element, lightboxGroupId) {\n    if (element.tagName == FIGURE_TAG) {\n      const unwrappedFigureElement = this.unwrapLightboxedFigure_(\n        element,\n        lightboxGroupId\n      );\n      if (!unwrappedFigureElement) {\n        return;\n      }\n      element = unwrappedFigureElement;\n    }\n\n    userAssert(\n      this.baseElementIsSupported_(element),\n      \"The element %s isn't supported in lightbox yet.\",\n      element.tagName\n    );\n\n    if (!this.lightboxGroups_[lightboxGroupId]) {\n      this.lightboxGroups_[lightboxGroupId] = [];\n    }\n\n    this.lightboxGroups_[lightboxGroupId].push(dev().assertElement(element));\n    if (isActionableByTap(element)) {\n      return;\n    }\n    const gallery = elementByTag(this.ampdoc_.getRootNode(), GALLERY_TAG);\n    const actions = Services.actionServiceForDoc(element);\n    actions.setActions(element, `tap:${gallery.id}.activate`);\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {!Promise<!Array<!Element>>}\n   * @private\n   */\n  getSlidesFromCarousel_(element) {\n    return element\n      .signals()\n      .whenSignal(CommonSignals.LOAD_END)\n      .then(() => {\n        return toArray(element./*OK*/ querySelectorAll(SLIDE_SELECTOR));\n      });\n  }\n\n  /**\n   * Return a list of lightboxable elements\n   * @param {string} lightboxGroupId\n   * @return {!Promise<!Array<!Element>>}\n   */\n  getElementsForLightboxGroup(lightboxGroupId) {\n    return this.maybeInit().then(() =>\n      devAssert(this.lightboxGroups_[lightboxGroupId])\n    );\n  }\n\n  /**\n   * Get the description for single lightboxed item.\n   * @param {!Element} element\n   * @return {string}\n   */\n  getDescription(element) {\n    // If the element in question is the descendant of a figure element\n    // try using the figure caption as the lightbox description.\n    const figureParent = closestAncestorElementBySelector(element, 'figure');\n    if (figureParent) {\n      const figCaption = elementByTag(figureParent, 'figcaption');\n      if (figCaption) {\n        return figCaption./*OK*/ innerText;\n      }\n    }\n    const ariaDescribedBy = element.getAttribute('aria-describedby');\n    if (ariaDescribedBy) {\n      const descriptionElement = this.ampdoc_.getElementById(ariaDescribedBy);\n      if (descriptionElement) {\n        return descriptionElement./*OK*/ innerText;\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Gets the duration of a supported video element\n   * @param {!Element} element\n   * @return {!Promise<number>}\n   * @private\n   */\n  getVideoTimestamp_(element) {\n    return VIDEO_TAGS[element.tagName]\n      ? element.getImpl().then((videoPlayer) => videoPlayer.getDuration())\n      : Promise.resolve();\n  }\n\n  /**\n   * Find or create thumbnails for lightboxed elements.\n   * Return a list of thumbnails obj for lightbox gallery view\n   * @param {string} lightboxGroupId\n   * @return {!Array<!LightboxThumbnailDataDef>}\n   */\n  getThumbnails(lightboxGroupId) {\n    return this.lightboxGroups_[lightboxGroupId].map((element) => ({\n      srcset: this.getThumbnailSrcset_(dev().assertElement(element)),\n      placeholderSrc: this.getPlaceholderForElementType_(element),\n      element,\n      timestampPromise: this.getVideoTimestamp_(element),\n    }));\n  }\n\n  /**\n   * Returns the default placeholder based on element type\n   * @param {!Element} element\n   * @return {string}\n   * @private\n   */\n  getPlaceholderForElementType_(element) {\n    // TODO(#12713): add placeholder icons for each component type\n    const type = element.tagName;\n    switch (type) {\n      case 'AMP-AD':\n        return LIGHTBOX_THUMBNAIL_AD;\n      // TODO(alanorozco): This can be replaced by a check of video service\n      // registration signal, were this list to grow larger.\n      case 'AMP-VIDEO':\n      case 'AMP-YOUTUBE':\n        return LIGHTBOX_THUMBNAIL_VIDEO;\n      default:\n        return LIGHTBOX_THUMBNAIL_UNKNOWN;\n    }\n  }\n\n  /**\n   * Get thumbnail srcset for single element.\n   * @param {!Element} element\n   * @return {?../../../../src/srcset.Srcset}\n   * @private\n   */\n  getThumbnailSrcset_(element) {\n    if (element.hasAttribute('lightbox-thumbnail-id')) {\n      const thumbnailId = element.getAttribute('lightbox-thumbnail-id');\n      const thumbnailImage = this.ampdoc_.getElementById(thumbnailId);\n      if (thumbnailImage && thumbnailImage.tagName == 'AMP-IMG') {\n        return srcsetFromElement(thumbnailImage);\n      }\n    }\n    return this.getUserPlaceholderSrcset_(element);\n  }\n\n  /**\n   * Get the srcset for the user-specified placeholder for each element\n   * @param {!Element} element\n   * @return {?../../../../src/srcset.Srcset}\n   * @private\n   */\n  getUserPlaceholderSrcset_(element) {\n    if (element.tagName == 'AMP-IMG') {\n      return srcsetFromElement(element);\n    }\n    if (element.tagName == 'AMP-VIDEO') {\n      return this.getThumbnailSrcsetForVideo_(element);\n      // TODO: process placeholder logic for other components as added\n    }\n    const placeholder = childElementByAttr(element, 'placeholder');\n    if (placeholder) {\n      return this.getUserPlaceholderSrcset_(placeholder);\n    }\n    return null;\n  }\n\n  /**\n   * Given an amp video, returns the thumbnail srcset.\n   * @param {!Element} ampVideo\n   * @return {?../../../../src/srcset.Srcset}\n   */\n  getThumbnailSrcsetForVideo_(ampVideo) {\n    const poster = ampVideo.getAttribute('poster');\n    return poster ? srcsetFromSrc(poster) : null;\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {removeItem} from '../types/array';\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    removeItem(this.handlers_, handler);\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    for (const handler of this.handlers_) {\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    return this.handlers_?.length ?? 0;\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\n\n/**\n * Pass class helps to manage single-pass process. A pass is scheduled using\n * delay method. Only one pass can be pending at a time. If no pass is pending\n * the process is considered to be \"idle\".\n */\nexport class Pass {\n  /**\n   * Creates a new Pass instance.\n   * @param {!Window} win\n   * @param {function()} handler Handler to be executed when pass is triggered.\n   * @param {number=} opt_defaultDelay Default delay to be used when schedule\n   *   is called without one.\n   */\n  constructor(win, handler, opt_defaultDelay) {\n    this.timer_ = Services.timerFor(win);\n\n    /** @private @const {function()} */\n    this.handler_ = handler;\n\n    /** @private @const {number} */\n    this.defaultDelay_ = opt_defaultDelay || 0;\n\n    /** @private {number|string} */\n    this.scheduled_ = -1;\n\n    /** @private {number} */\n    this.nextTime_ = 0;\n\n    /** @private {boolean} */\n    this.running_ = false;\n\n    /**\n     * @private\n     * @const {function()}\n     */\n    this.boundPass_ = () => {\n      this.pass_();\n    };\n  }\n\n  /**\n   * Whether or not a pass is currently pending.\n   * @return {boolean}\n   */\n  isPending() {\n    return this.scheduled_ != -1;\n  }\n\n  /**\n   * Tries to schedule a new pass optionally with specified delay. If the new\n   * requested pass is requested before the pending pass, the pending pass is\n   * canceled. If the new pass is requested after the pending pass, the newly\n   * requested pass is ignored.\n   *\n   * Returns {@code true} if the pass has been scheduled and {@code false} if\n   * ignored.\n   *\n   * @param {number=} opt_delay Delay to schedule the pass. If not specified\n   *   the default delay is used, falling back to 0.\n   * @return {boolean}\n   */\n  schedule(opt_delay) {\n    let delay = opt_delay || this.defaultDelay_;\n    if (this.running_ && delay < 10) {\n      // If we get called recursively, wait at least 10ms for the next\n      // execution.\n      delay = 10;\n    }\n\n    const nextTime = Date.now() + delay;\n    // Schedule anew if nothing is scheduled currently or if the new time is\n    // sooner then previously requested.\n    if (!this.isPending() || nextTime - this.nextTime_ < -10) {\n      this.cancel();\n      this.nextTime_ = nextTime;\n      this.scheduled_ = this.timer_.delay(this.boundPass_, delay);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   *\n   */\n  pass_() {\n    this.scheduled_ = -1;\n    this.nextTime_ = 0;\n    this.running_ = true;\n    this.handler_();\n    this.running_ = false;\n  }\n\n  /**\n   * Cancels the pending pass if any.\n   */\n  cancel() {\n    if (this.isPending()) {\n      this.timer_.cancel(this.scheduled_);\n      this.scheduled_ = -1;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Observable} from './core/data-structures/observable';\nimport {Pass} from './pass';\nimport {devAssert} from './log';\nimport {findIndex} from './core/types/array';\nimport {supportsPassiveEventListener} from './core/dom/event-helper-listen';\nimport {toWin} from './core/window';\n\nconst PROP_ = '__AMP_Gestures';\n\n/**\n * A gesture object contains the type and data of the gesture such as\n * a tap or a double-tap or a swipe. See {@link GestureRecognizer} for\n * more details.\n * @struct\n * @const\n * @template DATA\n */\nexport class Gesture {\n  /**\n   * @param {string} type The gesture's string type.\n   * @param {DATA} data The data of the gesture.\n   * @param {time} time The time that the gesture has been emitted.\n   * @param {?Event} event An optional browser event that resulted in the\n   *   gesture.\n   */\n  constructor(type, data, time, event) {\n    /** @const {string} */\n    this.type = type;\n    /** @const {DATA} */\n    this.data = data;\n    /** @const {number} */\n    this.time = time;\n    /** @const {?Event} */\n    this.event = event;\n  }\n}\n\n/**\n * Gestures object manages all gestures on a particular element. It listens\n * to all pointer events and delegates them to individual gesture recognizers.\n * When a recognizer has recognized a gesture and ready to start emitting it\n * it requests permission to do so from this class which resolves conflicts\n * between competing recognizers to decide which gesture should go forward.\n */\nexport class Gestures {\n  /**\n   * Creates if not yet created and returns the shared Gestures instance for\n   * the specified element.\n   * @param {!Element} element\n   * @param {boolean=} opt_shouldNotPreventDefault\n   * @param {boolean=} opt_shouldStopPropagation\n   * @return {!Gestures}\n   */\n  static get(\n    element,\n    opt_shouldNotPreventDefault = false,\n    opt_shouldStopPropagation = false\n  ) {\n    let res = element[PROP_];\n    if (!res) {\n      res = new Gestures(\n        element,\n        opt_shouldNotPreventDefault,\n        opt_shouldStopPropagation\n      );\n      element[PROP_] = res;\n    }\n    return res;\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {boolean} shouldNotPreventDefault\n   * @param {boolean} shouldStopPropagation\n   */\n  constructor(element, shouldNotPreventDefault, shouldStopPropagation) {\n    /** @private {!Element} */\n    this.element_ = element;\n\n    /** @private {!Array<!GestureRecognizer>} */\n    this.recognizers_ = [];\n\n    /** @private {!Array<boolean>} */\n    this.tracking_ = [];\n\n    /** @private {!Array<time>} */\n    this.ready_ = [];\n\n    /** @private {!Array<time>} */\n    this.pending_ = [];\n\n    /** @private {?GestureRecognizer} */\n    this.eventing_ = null;\n\n    /** @private {boolean} */\n    this.shouldNotPreventDefault_ = shouldNotPreventDefault;\n\n    /** @private {boolean} */\n    this.shouldStopPropagation_ = shouldStopPropagation;\n\n    /**\n     * This variable indicates that the eventing has stopped on this\n     * event cycle.\n     * @private {boolean}\n     */\n    this.wasEventing_ = false;\n\n    /** @private {!Pass} */\n    this.pass_ = new Pass(\n      toWin(element.ownerDocument.defaultView),\n      this.doPass_.bind(this)\n    );\n\n    /** @private {!Observable} */\n    this.pointerDownObservable_ = new Observable();\n\n    /**\n     * Observers for each type of registered gesture types.\n     * @private {!Object<string, !Observable<!Gesture>>}\n     */\n    this.overservers_ = Object.create(null);\n\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchStart_ = this.onTouchStart_.bind(this);\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchEnd_ = this.onTouchEnd_.bind(this);\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchMove_ = this.onTouchMove_.bind(this);\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchCancel_ = this.onTouchCancel_.bind(this);\n\n    const win = element.ownerDocument.defaultView;\n    const passiveSupported = supportsPassiveEventListener(toWin(win));\n    this.element_.addEventListener(\n      'touchstart',\n      this.boundOnTouchStart_,\n      passiveSupported ? {passive: true} : false\n    );\n    this.element_.addEventListener('touchend', this.boundOnTouchEnd_);\n    this.element_.addEventListener(\n      'touchmove',\n      this.boundOnTouchMove_,\n      passiveSupported ? {passive: true} : false\n    );\n    this.element_.addEventListener('touchcancel', this.boundOnTouchCancel_);\n\n    /** @private {boolean} */\n    this.passAfterEvent_ = false;\n  }\n\n  /**\n   * Unsubscribes from all pointer events and removes the shared cache instance.\n   */\n  cleanup() {\n    this.element_.removeEventListener('touchstart', this.boundOnTouchStart_);\n    this.element_.removeEventListener('touchend', this.boundOnTouchEnd_);\n    this.element_.removeEventListener('touchmove', this.boundOnTouchMove_);\n    this.element_.removeEventListener('touchcancel', this.boundOnTouchCancel_);\n    delete this.element_[PROP_];\n    this.pass_.cancel();\n  }\n\n  /**\n   * Subscribes to a gesture emitted by the specified recognizer. For a first\n   * gesture handler registered in this method the recognizer is installed\n   * and from that point on it participates in the event processing.\n   *\n   * @param {function(new:GestureRecognizer, !Gestures)} recognizerConstr\n   * @param {function(!Gesture)} handler\n   * @return {!UnlistenDef}\n   * @template DATA\n   */\n  onGesture(recognizerConstr, handler) {\n    const recognizer = new recognizerConstr(this);\n    const type = recognizer.getType();\n    let overserver = this.overservers_[type];\n    if (!overserver) {\n      this.recognizers_.push(recognizer);\n      overserver = new Observable();\n      this.overservers_[type] = overserver;\n    }\n    return overserver.add(handler);\n  }\n\n  /**\n   * Unsubscribes all handlers from the given gesture recognizer. Returns\n   * true if anything was done. Returns false if there were no handlers\n   * registered on the given gesture recognizer in first place.\n   *\n   * @param {function(new:GestureRecognizer, !Gestures)} recognizerConstr\n   * @return {boolean}\n   */\n  removeGesture(recognizerConstr) {\n    const type = new recognizerConstr(this).getType();\n    const overserver = this.overservers_[type];\n    if (overserver) {\n      overserver.removeAll();\n      const index = findIndex(this.recognizers_, (e) => e.getType() == type);\n      if (index < 0) {\n        return false;\n      }\n      // Remove the recognizer as well as all associated tracking state\n      this.recognizers_.splice(index, 1);\n      this.ready_.splice(index, 1);\n      this.pending_.splice(index, 1);\n      this.tracking_.splice(index, 1);\n      delete this.overservers_[type];\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Subscribes to pointer down events, such as \"touchstart\" or \"mousedown\".\n   * @param {!Function} handler\n   * @return {!UnlistenDef}\n   */\n  onPointerDown(handler) {\n    return this.pointerDownObservable_.add(handler);\n  }\n\n  /**\n   * Handles all \"touchstart\" events and dispatches them to the tracking\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchStart_(event) {\n    const now = Date.now();\n    this.wasEventing_ = false;\n\n    this.pointerDownObservable_.fire(event);\n\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.ready_[i]) {\n        // If the recognizer is in the \"ready\" state, it won't receive\n        // any more touch series until it's allowed to emit.\n        continue;\n      }\n      if (this.pending_[i] && this.pending_[i] < now) {\n        // Pending state expired. Reset.\n        this.stopTracking_(i);\n      }\n      if (this.recognizers_[i].onTouchStart(event)) {\n        // When a recognizer is interested in the touch series it returns \"true\"\n        // from its onTouchStart method. For this recognizer we start tracking\n        // the whole series of touch events from touchstart to touchend. Other\n        // recognizers will not receive them unless they return \"true\" from\n        // onTouchStart.\n        this.startTracking_(i);\n      }\n    }\n\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Handles all \"touchmove\" events and dispatches them to the tracking\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchMove_(event) {\n    const now = Date.now();\n\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (!this.tracking_[i]) {\n        // The whole touch series are ignored for non-tracking recognizers.\n        continue;\n      }\n      if (this.pending_[i] && this.pending_[i] < now) {\n        // Pending state expired. Reset.\n        this.stopTracking_(i);\n        continue;\n      }\n      if (!this.recognizers_[i].onTouchMove(event)) {\n        // Recognizer lost interest in the series. Reset.\n        this.stopTracking_(i);\n      }\n    }\n\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Handles all \"touchend\" events and dispatches them to the tracking\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchEnd_(event) {\n    const now = Date.now();\n\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (!this.tracking_[i]) {\n        // The whole touch series are ignored for non-tracking recognizers.\n        continue;\n      }\n      if (this.pending_[i] && this.pending_[i] < now) {\n        // Pending state expired. Reset.\n        this.stopTracking_(i);\n        continue;\n      }\n\n      this.recognizers_[i].onTouchEnd(event);\n\n      const isReady = !this.pending_[i];\n      const isExpired = this.pending_[i] < now;\n      const isEventing = this.eventing_ == this.recognizers_[i];\n\n      if (!isEventing && (isReady || isExpired)) {\n        this.stopTracking_(i);\n      }\n    }\n\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Handles all \"touchcancel\" events. Cancels all tracking/emitting\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchCancel_(event) {\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      this.cancelEventing_(i);\n    }\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Callback for a gesture recognizer to communicate that it's ready to\n   * start emitting gestures. Gestures instance may or may not allow the\n   * recognizer to proceed.\n   * @param {!GestureRecognizer} recognizer\n   * @param {number} offset\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalReady_(recognizer, offset) {\n    // Somebody got here first.\n    if (this.eventing_) {\n      recognizer.acceptCancel();\n      return;\n    }\n\n    // Set the recognizer as ready and wait for the pass to\n    // make the decision.\n    const now = Date.now();\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.recognizers_[i] == recognizer) {\n        this.ready_[i] = now + offset;\n        this.pending_[i] = 0;\n      }\n    }\n    this.passAfterEvent_ = true;\n  }\n\n  /**\n   * Callback for a gesture recognizer to communicate that it's close to\n   * start emitting gestures, but needs more time to see more events. Once\n   * this time expires the recognizer should either signal readiness or it\n   * will be canceled.\n   * @param {!GestureRecognizer} recognizer\n   * @param {number} timeLeft\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalPending_(recognizer, timeLeft) {\n    // Somebody got here first.\n    if (this.eventing_) {\n      recognizer.acceptCancel();\n      return;\n    }\n\n    const now = Date.now();\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.recognizers_[i] == recognizer) {\n        this.pending_[i] = now + timeLeft;\n      }\n    }\n  }\n\n  /**\n   * Callback for a gesture recognizer to communicate that it's done\n   * emitting gestures.\n   * @param {!GestureRecognizer} recognizer\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalEnd_(recognizer) {\n    if (this.eventing_ == recognizer) {\n      this.eventing_ = null;\n      this.wasEventing_ = true;\n    }\n  }\n\n  /**\n   * Callback for a gesture emit the gesture. Only the currently emitting\n   * recognizer is allowed to emit gestures.\n   * @param {!GestureRecognizer} recognizer\n   * @param {*} data\n   * @param {?Event} event\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalEmit_(recognizer, data, event) {\n    devAssert(\n      this.eventing_ == recognizer,\n      'Recognizer is not currently allowed: %s',\n      recognizer.getType()\n    );\n    const overserver = this.overservers_[recognizer.getType()];\n    if (overserver) {\n      overserver.fire(\n        new Gesture(recognizer.getType(), data, Date.now(), event)\n      );\n    }\n  }\n\n  /**\n   * @param {!Event} event\n   * @private\n   */\n  afterEvent_(event) {\n    let cancelEvent = !!this.eventing_ || this.wasEventing_;\n    this.wasEventing_ = false;\n    if (!cancelEvent) {\n      const now = Date.now();\n      for (let i = 0; i < this.recognizers_.length; i++) {\n        if (this.ready_[i] || (this.pending_[i] && this.pending_[i] >= now)) {\n          cancelEvent = true;\n          break;\n        }\n      }\n    }\n    if (cancelEvent) {\n      event.stopPropagation();\n      if (!this.shouldNotPreventDefault_) {\n        event.preventDefault();\n      }\n    } else if (this.shouldStopPropagation_) {\n      event.stopPropagation();\n    }\n    if (this.passAfterEvent_) {\n      this.passAfterEvent_ = false;\n      this.doPass_();\n    }\n  }\n\n  /**\n   * The pass that decides which recognizers can start emitting and which\n   * are canceled.\n   * @private\n   */\n  doPass_() {\n    const now = Date.now();\n\n    // The \"most ready\" recognizer is the youngest in the \"ready\" set.\n    // Otherwise we wouldn't wait for it at all.\n    let readyIndex = -1;\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (!this.ready_[i]) {\n        if (this.pending_[i] && this.pending_[i] < now) {\n          // Pending state expired. Reset.\n          this.stopTracking_(i);\n        }\n        continue;\n      }\n      if (readyIndex == -1 || this.ready_[i] > this.ready_[readyIndex]) {\n        readyIndex = i;\n      }\n    }\n\n    if (readyIndex == -1) {\n      // Nothing to do.\n      return;\n    }\n\n    // Look for conflicts.\n    let waitTime = 0;\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.ready_[i] || !this.tracking_[i]) {\n        continue;\n      }\n      waitTime = Math.max(waitTime, this.pending_[i] - now);\n    }\n\n    if (waitTime < 2) {\n      // We waited long enough.\n      this.startEventing_(readyIndex);\n      return;\n    }\n\n    // Some conflicts: have to wait to see who wins.\n    this.pass_.schedule(waitTime);\n  }\n\n  /**\n   * This recognizer is given \"go ahead\" and all others are canceled.\n   * @param {number} index\n   * @private\n   */\n  startEventing_(index) {\n    const recognizer = this.recognizers_[index];\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (i != index) {\n        this.cancelEventing_(i);\n      }\n    }\n    this.ready_[index] = 0;\n    this.pending_[index] = 0;\n    this.eventing_ = recognizer;\n    recognizer.acceptStart();\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  startTracking_(index) {\n    this.tracking_[index] = true;\n    this.pending_[index] = 0;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  stopTracking_(index) {\n    this.tracking_[index] = false;\n    this.pending_[index] = 0;\n    if (!this.ready_[index]) {\n      this.recognizers_[index].acceptCancel();\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  cancelEventing_(index) {\n    this.ready_[index] = 0;\n    this.stopTracking_(index);\n  }\n}\n\n/**\n * The gesture recognizer receives the pointer events from Gestures instance.\n * Based on these events, it can \"recognize\" the gesture it's responsible for,\n * request to start emitting and emit gestures. Gestures instances manages\n * several competing recognizers and decides which ones get to emit gestures\n * and which do not.\n *\n * The recognizer can be in several main states:\n * 1. Tracking state. In this state the recognizer is receiving the series of\n *    touch events from touchstart to touchend. To get into this state the\n *    recognizer has to return \"true\" from the {@link onTouchStart}.\n * 2. Pending state (optional). The recognizer matched part of the gesture,\n *    but needs more time to get track more events. It requests more time\n *    by calling {@link signalPending}, By the end of this time the recognizer\n *    has either matched the gesture or has been canceled.\n * 3. Ready state. The recognizer matched the whole gesture and ready to start\n *    emitting. It communicates to the Gestures this readiness by calling\n *    {@link signalReady}.\n * 5. Emitting state. If Gestures decides to go ahead with this recognizer, it\n *    will call {@link acceptStart} method. Otherwise, it will call\n *    {@link acceptCancel} method. Once in the emitting state, the recognizer\n *    can emit any number of events by calling {@link signalEmit}.\n * 6. Complete state. Once done, the recognizer can call {@link signalEnd} to\n *    communicate that it's done.\n *\n * @template DATA\n */\nexport class GestureRecognizer {\n  /**\n   * @param {string} type\n   * @param {!Gestures} manager\n   */\n  constructor(type, manager) {\n    /** @private @const {string} */\n    this.type_ = type;\n\n    /** @private @const {!Gestures} */\n    this.manager_ = manager;\n  }\n\n  /**\n   * Returns the type of the gesture emitted by the instance of this class.\n   * It has to be unique in the scope of the Gestures instance.\n   * @return {string}\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * The recognizer can call this method to communicate that it's ready to\n   * start emitting the gesture. Optionally it can pass a zero, positive or\n   * negative offset - a time on how much the gesture should be penalized or\n   * given advantage in conflict resolution. The recognizer at this point is\n   * in the \"ready\" state.\n   * @param {time} offset\n   */\n  signalReady(offset) {\n    this.manager_.signalReady_(this, offset);\n  }\n\n  /**\n   * The recognizer can call this method to communicate that it needs more\n   * time (timeLeft) to match the gesture. By the end of this time the\n   * recognizer has to either transit to the ready state using\n   * {@link signalReady} or it will be canceled. The recognizer is in the\n   * \"pending\" state.\n   * @param {time} timeLeft\n   */\n  signalPending(timeLeft) {\n    this.manager_.signalPending_(this, timeLeft);\n  }\n\n  /**\n   * The recognizer can call this method to communicate that it's done\n   * emitting the gestures. It will return to the waiting state. Recognizer\n   * can only call this method if it has previously received the\n   * {@link acceptStart} call.\n   */\n  signalEnd() {\n    this.manager_.signalEnd_(this);\n  }\n\n  /**\n   * The recognizer can call this method to emit the gestures while in the\n   * \"emitting\" state. Recognizer can only call this method if it has\n   * previously received the {@link acceptStart} call.\n   * @param {DATA} data\n   * @param {?Event} event\n   */\n  signalEmit(data, event) {\n    this.manager_.signalEmit_(this, data, event);\n  }\n\n  /**\n   * The Gestures instance calls this method to allow the recognizer to start\n   * emitting the gestures. At this point the recognizer is in the \"emitting\"\n   * state. It will be in this state until it calls {@link signalEnd} or\n   * the {@link acceptCancel} is called by the Gestures instance.\n   */\n  acceptStart() {}\n\n  /**\n   * The Gestures instance calls this method to reset the recognizer. At this\n   * point the recognizer is in the initial waiting state.\n   */\n  acceptCancel() {}\n\n  /**\n   * The Gestures instance calls this method for each \"touchstart\" event. If\n   * the recognizer wants to receive other touch events in the series, it has\n   * to return \"true\".\n   * @param {!Event} unusedEvent\n   * @return {boolean}\n   */\n  onTouchStart(unusedEvent) {\n    return false;\n  }\n\n  /**\n   * The Gestures instance calls this method for each \"touchmove\" event. If\n   * the recognizer wants to continue receiving touch events in the series,\n   * it has to return \"true\".\n   * @param {!Event} unusedEvent\n   * @return {boolean}\n   */\n  onTouchMove(unusedEvent) {\n    return false;\n  }\n\n  /**\n   * The Gestures instance calls this method for the \"touchend\" event.\n   * Somewhere within this touch series the recognizer has to call\n   * {@link signalReady} or {@link signalPending} or it will be reset for the\n   * next touch series.\n   * @param {!Event} unusedEvent\n   */\n  onTouchEnd(unusedEvent) {}\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @enum {number}\n */\nexport const KeyCodes = {\n  ENTER: 13,\n  ESCAPE: 27,\n  SPACE: 32,\n  LEFT_ARROW: 37,\n  UP_ARROW: 38,\n  RIGHT_ARROW: 39,\n  DOWN_ARROW: 40,\n};\n\n/**\n * @enum {string}\n */\nexport const Keys = {\n  ENTER: 'Enter',\n  ESCAPE: 'Escape',\n  SPACE: ' ',\n  LEFT_ARROW: 'ArrowLeft',\n  UP_ARROW: 'ArrowUp',\n  RIGHT_ARROW: 'ArrowRight',\n  DOWN_ARROW: 'ArrowDown',\n  TAB: 'Tab',\n  BACKSPACE: 'Backspace',\n  HOME: 'Home',\n  END: 'End',\n};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from './log';\nimport {map} from './core/types/object';\n\nlet htmlContainer;\nlet svgContainer;\n\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function htmlFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function svgFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction createNode(container, strings) {\n  devAssert(strings.length === 1, 'Improper html template tag usage.');\n  container./*OK*/ innerHTML = strings[0];\n\n  const el = container.firstElementChild;\n  devAssert(el, 'No elements in template');\n  devAssert(!el.nextElementSibling, 'Too many root elements in template');\n\n  // Clear to free memory.\n  container.removeChild(el);\n\n  return el;\n}\n\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\nexport function htmlRefs(root) {\n  const elements = root.querySelectorAll('[ref]');\n  const refs = map();\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    const ref = devAssert(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    devAssert(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../../../src/log';\nimport {htmlFor} from '../../../src/static-template';\n\n/**\n * @enum {string}\n */\nexport const OverflowState = {\n  NONE: 'none',\n  CLIP: 'clip',\n  EXPAND: 'expand',\n};\n\n/**\n * Manages lightbox captions, handling expansion and collapsing.\n */\nexport class LightboxCaption {\n  /**\n   * @param {!Document} doc\n   * @param {function(function(), function())} measureMutateElement\n   * @return {!LightboxCaption} A LightboxCaption instance.\n   */\n  static build(doc, measureMutateElement) {\n    const el = htmlFor(doc)`\n      <div class=\"i-amphtml-lbg-caption\">\n        <div class=\"i-amphtml-lbg-caption-scroll\">\n          <div class=\"i-amphtml-lbg-caption-text amp-lightbox-gallery-caption\"></div>\n        </div>\n        <div class=\"i-amphtml-lbg-caption-mask\"></div>\n      </div>`;\n    return new LightboxCaption(\n      el,\n      dev().assertElement(el.querySelector('.i-amphtml-lbg-caption-scroll')),\n      dev().assertElement(el.querySelector('.amp-lightbox-gallery-caption')),\n      dev().assertElement(el.querySelector('.i-amphtml-lbg-caption-mask')),\n      measureMutateElement\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {!Element} scrollContainer\n   * @param {!Element} textContainer\n   * @param {!Element} overflowMask\n   * @param {function(function(), function())} measureMutateElement\n   */\n  constructor(\n    element,\n    scrollContainer,\n    textContainer,\n    overflowMask,\n    measureMutateElement\n  ) {\n    /** @private @const */\n    this.element_ = element;\n\n    /** @private @const */\n    this.scrollContainer_ = scrollContainer;\n\n    /** @private @const */\n    this.textContainer_ = textContainer;\n\n    /** @protected @const */\n    this.overflowMask_ = overflowMask;\n\n    /** @private @const */\n    this.measureMutateElement_ = measureMutateElement;\n  }\n\n  /**\n   * @return {!Element} The description box Element.\n   */\n  getElement() {\n    return this.element_;\n  }\n\n  /**\n   * @param {string} content The content for the caption.\n   */\n  setContent(content) {\n    this.textContainer_./*OK*/ innerText = content;\n  }\n\n  /**\n   * @param {!OverflowState} state\n   */\n  setOverflowState(state) {\n    this.scrollContainer_.setAttribute('i-amphtml-lbg-caption-state', state);\n  }\n\n  /**\n   * @return {!OverflowState} state\n   */\n  getOverflowState() {\n    return /** @type {OverflowState} */ (\n      this.scrollContainer_.getAttribute('i-amphtml-lbg-caption-state')\n    );\n  }\n\n  /**\n   * Gets the `OverflowState` to use,\n   * @param {string} overflowState The current overflow state.\n   * @param {boolean} overflows Whether or not the description overflows its\n   *    container.\n   * @param {boolean=} requestExpansion The requested expansion state.\n   * @return {!OverflowState} The new state.\n   * @private\n   */\n  nextOverflowState_(overflowState, overflows, requestExpansion) {\n    const isExpanded = overflowState == OverflowState.EXPAND;\n    const expand =\n      requestExpansion !== undefined ? requestExpansion : !isExpanded;\n    // If we are already expanded, we know we have some overflow, even if\n    // we are not currently \"overflowing\".\n    const hasOverflow = isExpanded || overflows;\n\n    if (!hasOverflow) {\n      return OverflowState.NONE;\n    }\n\n    return expand ? OverflowState.EXPAND : OverflowState.CLIP;\n  }\n\n  /**\n   * Toggles the description overflow state.\n   * @param {boolean=} requestExpansion If specified, whether the\n   *    description should be expanded or collapsed. If not specfied, the\n   *    current state is toggled.\n   */\n  toggleOverflow(requestExpansion) {\n    const {overflowMask_, scrollContainer_} = this;\n    let descriptionOverflows;\n\n    const measureOverflowState = () => {\n      // The height of the description without overflow is set to 4 rem.\n      // The height of the overflow mask is set to 1 rem. We allow 3 lines\n      // for the description and consider it to have overflow if more than 3\n      // lines of text.\n      descriptionOverflows =\n        scrollContainer_./*OK*/ scrollHeight -\n          scrollContainer_./*OK*/ clientHeight >=\n        overflowMask_./*OK*/ clientHeight;\n    };\n\n    const mutateOverflowState = () => {\n      const overflowState = this.getOverflowState();\n      const newState = this.nextOverflowState_(\n        overflowState,\n        descriptionOverflows,\n        requestExpansion\n      );\n\n      this.setOverflowState(newState);\n      if (newState != OverflowState.EXPAND) {\n        scrollContainer_./*OK*/ scrollTop = 0;\n      }\n    };\n\n    this.measureMutateElement_(measureOverflowState, mutateOverflowState);\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {createCustomEvent} from '../../../src/event-helper';\nimport {devAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {htmlFor} from '../../../src/static-template';\nimport {toArray} from '../../../src/core/types/array';\n\n/**\n * @enum {string}\n */\nexport const LightboxControlsAction = {\n  CLOSE: 'close',\n  GALLERY: 'gallery',\n  SLIDES: 'slides',\n  PREV: 'prev',\n  NEXT: 'next',\n};\n\n/**\n * Manages lightbox controls.\n */\nexport class LightboxControls {\n  /**\n   * @param {!Window} win\n   * @param {!Document} doc\n   * @param {function(function(), function())} measureMutateElement\n   * @return {!LightboxControls} A LightboxCaption instance.\n   */\n  static build(win, doc, measureMutateElement) {\n    // TODO(aghassemi): i18n and customization. See https://git.io/v6JWu\n    const el = htmlFor(doc)`\n      <div class=\"i-amphtml-lbg-controls\">\n        <div class=\"i-amphtml-lbg-top-bar\">\n          <div role=\"button\"\n              class=\"i-amphtml-lbg-button \"\n              data-action=\"close\"\n              aria-label=\"Close\">\n          </div>\n          <div role=\"button\"\n              class=\"i-amphtml-lbg-button\"\n              data-action=\"gallery\"\n              aria-label=\"Gallery\">\n          </div>\n          <div role=\"button\"\n              class=\"i-amphtml-lbg-button\"\n              data-action=\"slides\"\n              aria-label=\"Content\">\n          </div>\n        </div>\n        <div role=\"button\"\n            class=\"i-amphtml-lbg-button\"\n            data-action=\"prev\"\n            aria-label=\"Content\">\n        </div>\n        <div role=\"button\"\n            class=\"i-amphtml-lbg-button\"\n            data-action=\"next\"\n            aria-label=\"Content\">\n        </div>\n      </div>`;\n\n    const input = Services.inputFor(win);\n    if (!input.isMouseDetected()) {\n      el.querySelector('[data-action=\"prev\"]').classList.add(\n        'i-amphtml-screen-reader'\n      );\n      el.querySelector('[data-action=\"next\"]').classList.add(\n        'i-amphtml-screen-reader'\n      );\n    }\n\n    const actionStrings = Object.values(LightboxControlsAction);\n    devAssert(\n      toArray(el.querySelectorAll('[data-action]'))\n        .map((div) => div.getAttribute('data-action'))\n        .every((action) => actionStrings.includes(action)),\n      'Action for a button does not map to enum.'\n    );\n\n    return new LightboxControls(win, el, measureMutateElement);\n  }\n\n  /**\n   * @param {!Window} win\n   * @param {!Element} element\n   * @param {function(function(), function())} measureMutateElement\n   */\n  constructor(win, element, measureMutateElement) {\n    /** @private @const */\n    this.win_ = win;\n\n    /** @private @const */\n    this.element_ = element;\n\n    /** @protected @const */\n    this.measureMutateElement_ = measureMutateElement;\n\n    this.element_.addEventListener('click', (event) => {\n      this.handleClick_(event);\n    });\n  }\n\n  /**\n   * @return {!Element} The controls container.\n   */\n  getElement() {\n    return this.element_;\n  }\n\n  /**\n   * @param {!Event} event\n   * @private\n   */\n  handleClick_(event) {\n    const action = event.target.getAttribute('data-action');\n\n    if (!action) {\n      return;\n    }\n\n    this.element_.dispatchEvent(\n      createCustomEvent(\n        this.win_,\n        'action',\n        dict({\n          'action': action,\n        })\n      )\n    );\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {Services} from './services';\n\n/** @const {function()} */\nconst NOOP_CALLBACK_ = function () {};\n\n/** @const {number} */\nconst MIN_VELOCITY_ = 0.02;\n\n/** @const {number} */\nconst FRAME_CONST_ = 16.67;\n\n/** @const {number} */\nconst EXP_FRAME_CONST_ = Math.round(-FRAME_CONST_ / Math.log(0.95));\n\n/**\n * Depreciation factor of 1/100 of a millisecond. This is how much previous\n * velocity is depreciated when calculating the new velocity.\n * @const {number}\n */\nconst VELOCITY_DEPR_FACTOR_ = FRAME_CONST_ * 2;\n\n/**\n * Calculates velocity for an object traveling the distance deltaV in the\n * time deltaTime given the previous velocity prevVelocity. The calculation\n * assumes a basic informational depreciation of previous velocity.\n * @param {number} deltaV\n * @param {time} deltaTime\n * @param {number} prevVelocity\n * @return {number}\n */\nexport function calcVelocity(deltaV, deltaTime, prevVelocity) {\n  if (deltaTime < 1) {\n    deltaTime = 1;\n  }\n\n  // Calculate speed and speed depreciation.\n  const speed = deltaV / deltaTime;\n\n  // Depreciation is simply an informational quality. It basically means:\n  // we can't ignore the velocity we knew recently, but we'd only consider\n  // it proportionally to how long ago we've seen it. Currently, this\n  // depreciation factor is 1/100 of a millisecond. New average velocity is\n  // calculated by weighing toward the new velocity and away from old\n  // velocity based on the depreciation.\n  const depr = 0.5 + Math.min(deltaTime / VELOCITY_DEPR_FACTOR_, 0.5);\n  return speed * depr + prevVelocity * (1 - depr);\n}\n\n/**\n * Returns a motion process that will yield when the velocity has run down to\n * zerp. For each iteration, the velocity is depreciated and the coordinates\n * are advanced from start X/Y to the destination according to velocity\n * vectors. For each such iteration the callback is called with the new x and y.\n * @param {!Node} contextNode\n * @param {number} startX Start X coordinate.\n * @param {number} startY Start Y coordinate.\n * @param {number} veloX Starting X velocity.\n * @param {number} veloY Starting Y velocity.\n * @param {function(number, number):boolean} callback The callback for each\n *   step of the deceleration motion.\n * @param {!./service/vsync-impl.Vsync=} opt_vsync Mostly for testing only.\n * @return {!Motion}\n */\nexport function continueMotion(\n  contextNode,\n  startX,\n  startY,\n  veloX,\n  veloY,\n  callback,\n  opt_vsync\n) {\n  return new Motion(\n    contextNode,\n    startX,\n    startY,\n    veloX,\n    veloY,\n    callback,\n    opt_vsync\n  ).start();\n}\n\n/**\n * Motion process that allows tracking and monitoring of the running motion.\n * Most importantly it exposes methods \"then\" and \"thenAlways\" that have the\n * semantics of a Promise and signal when the motion has completed or failed.\n * Additionally, it exposes the method \"halt\" which allows to stop/reset the\n * motion.\n * @implements {IThenable}\n */\nexport class Motion {\n  /**\n   * @param {!Node} contextNode Context node.\n   * @param {number} startX Start X coordinate.\n   * @param {number} startY Start Y coordinate.\n   * @param {number} veloX Starting X velocity.\n   * @param {number} veloY Starting Y velocity.\n   * @param {function(number, number):boolean} callback The callback for each\n   *   step of the deceleration motion.\n   * @param {!./service/vsync-impl.Vsync=} opt_vsync\n   */\n  constructor(contextNode, startX, startY, veloX, veloY, callback, opt_vsync) {\n    /** @private @const {!./service/vsync-impl.Vsync} */\n    this.vsync_ = opt_vsync || Services.vsyncFor(self);\n\n    /** @private @const {!Node} */\n    this.contextNode_ = contextNode;\n\n    /** @private @const */\n    this.callback_ = callback;\n\n    /** @private {number} */\n    this.lastX_ = startX;\n\n    /** @private {number} */\n    this.lastY_ = startY;\n\n    /** @private {number} */\n    this.maxVelocityX_ = veloX;\n\n    /** @private {number} */\n    this.maxVelocityY_ = veloY;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n\n    /** @private {number} */\n    this.velocityY_ = 0;\n\n    const deferred = new Deferred();\n\n    /** @private {!Promise} */\n    this.promise_ = deferred.promise;\n\n    /** @private {!Function} */\n    this.resolve_ = deferred.resolve;\n\n    /** @private {!Function} */\n    this.reject_ = deferred.reject;\n\n    /** @private {boolean} */\n    this.continuing_ = false;\n  }\n\n  /** */\n  start() {\n    this.continuing_ = true;\n    if (\n      Math.abs(this.maxVelocityX_) <= MIN_VELOCITY_ &&\n      Math.abs(this.maxVelocityY_) <= MIN_VELOCITY_\n    ) {\n      this.fireMove_();\n      this.completeContinue_(true);\n    } else {\n      this.runContinuing_();\n    }\n    return this;\n  }\n\n  /**\n   * Halts the motion. The motion promise will be rejected since the motion\n   * has been interrupted.\n   */\n  halt() {\n    if (this.continuing_) {\n      this.completeContinue_(false);\n    }\n  }\n\n  /**\n   * Chains to the motion's promise that will resolve when the motion has\n   * completed or will reject if motion has failed or was interrupted.\n   * @override\n   */\n  then(opt_resolve, opt_reject) {\n    if (!opt_resolve && !opt_reject) {\n      return this.promise_;\n    }\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n\n  /**\n   * Callback for regardless whether the motion succeeds or fails.\n   * @param {function()=} opt_callback\n   * @return {!Promise}\n   */\n  thenAlways(opt_callback) {\n    const callback = opt_callback || NOOP_CALLBACK_;\n    return /** @type {!Promise} */ (this.then(callback, callback));\n  }\n\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  runContinuing_() {\n    this.velocityX_ = this.maxVelocityX_;\n    this.velocityY_ = this.maxVelocityY_;\n    const boundStep = this.stepContinue_.bind(this);\n    const boundComplete = this.completeContinue_.bind(this, true);\n    return this.vsync_\n      .runAnimMutateSeries(this.contextNode_, boundStep, 5000)\n      .then(boundComplete, boundComplete);\n  }\n\n  /**\n   * Returns \"true\" to continue and \"false\" to stop motion process.\n   * @param {time} timeSinceStart\n   * @param {time} timeSincePrev\n   * @return {boolean}\n   * @private\n   */\n  stepContinue_(timeSinceStart, timeSincePrev) {\n    if (!this.continuing_) {\n      return false;\n    }\n\n    this.lastX_ += timeSincePrev * this.velocityX_;\n    this.lastY_ += timeSincePrev * this.velocityY_;\n    if (!this.fireMove_()) {\n      return false;\n    }\n\n    const decel = Math.exp(-timeSinceStart / EXP_FRAME_CONST_);\n    this.velocityX_ = this.maxVelocityX_ * decel;\n    this.velocityY_ = this.maxVelocityY_ * decel;\n    return (\n      Math.abs(this.velocityX_) > MIN_VELOCITY_ ||\n      Math.abs(this.velocityY_) > MIN_VELOCITY_\n    );\n  }\n\n  /**\n   * @param {boolean} success\n   * @private\n   */\n  completeContinue_(success) {\n    if (!this.continuing_) {\n      return;\n    }\n    this.continuing_ = false;\n    this.fireMove_();\n    if (success) {\n      this.resolve_();\n    } else {\n      this.reject_();\n    }\n  }\n\n  /** @private */\n  fireMove_() {\n    return this.callback_(this.lastX_, this.lastY_);\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {GestureRecognizer} from './gesture';\nimport {calcVelocity} from './motion';\n\nconst DOUBLETAP_DELAY = 200;\n\n/**\n * A \"tap\" gesture.\n * @typedef {{\n *   clientX: number,\n *   clientY: number\n * }}\n */\nexport let TapDef;\n\n/**\n * Recognizes \"tap\" gestures.\n * @extends {GestureRecognizer<TapDef>}\n */\nexport class TapRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('tap', manager);\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {?EventTarget} */\n    this.target_ = null;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    const {touches} = e;\n    this.target_ = e.target;\n    if (touches && touches.length == 1) {\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const touches = e.changedTouches || e.touches;\n    if (touches && touches.length == 1) {\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      const dx = Math.abs(this.lastX_ - this.startX_) >= 8;\n      const dy = Math.abs(this.lastY_ - this.startY_) >= 8;\n      if (dx || dy) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @override */\n  onTouchEnd(unusedE) {\n    this.signalReady(0);\n  }\n\n  /** @override */\n  acceptStart() {\n    this.signalEmit(\n      {\n        clientX: this.lastX_,\n        clientY: this.lastY_,\n        target: this.target_,\n      },\n      null\n    );\n    this.signalEnd();\n  }\n}\n\n/**\n * A \"doubletap\" gesture.\n * @typedef {{\n *   clientX: number,\n *   clientY: number\n * }}\n */\nexport let DoubletapDef;\n\n/**\n * Recognizes a \"doubletap\" gesture. This gesture will block a single \"tap\"\n * for about 200ms while it's expecting the second \"tap\".\n * @extends {GestureRecognizer<DoubletapDef>}\n */\nexport class DoubletapRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('doubletap', manager);\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {number} */\n    this.tapCount_ = 0;\n\n    /** @private {?Event} */\n    this.event_ = null;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    if (this.tapCount_ > 1) {\n      return false;\n    }\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      const dx = Math.abs(this.lastX_ - this.startX_) >= 8;\n      const dy = Math.abs(this.lastY_ - this.startY_) >= 8;\n      if (dx || dy) {\n        this.acceptCancel();\n        return false;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    this.tapCount_++;\n    if (this.tapCount_ < 2) {\n      this.signalPending(DOUBLETAP_DELAY);\n    } else {\n      this.event_ = e;\n      this.signalReady(0);\n    }\n  }\n\n  /** @override */\n  acceptStart() {\n    this.tapCount_ = 0;\n    this.signalEmit({clientX: this.lastX_, clientY: this.lastY_}, this.event_);\n    this.signalEnd();\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.tapCount_ = 0;\n  }\n}\n\n/**\n * A \"swipe-xy\", \"swipe-x\" or \"swipe-y\" gesture. A number of these gestures\n * may be emitted for a single touch series.\n * @typedef {{\n *   first: boolean,\n *   last: boolean,\n *   deltaX: number,\n *   deltaY: number,\n *   velocityX: number,\n *   velocityY: number\n * }}\n */\nexport let SwipeDef;\n\n/**\n * Recognizes swipe gestures. This gesture will yield about 10ms to other\n * gestures.\n * @extends {GestureRecognizer<SwipeDef>}\n */\nclass SwipeRecognizer extends GestureRecognizer {\n  /**\n   * @param {string} type\n   * @param {!./gesture.Gestures} manager\n   * @param {boolean} horiz\n   * @param {boolean} vert\n   */\n  constructor(type, manager, horiz, vert) {\n    super(type, manager);\n\n    /** @private {boolean} */\n    this.horiz_ = horiz;\n\n    /** @private {boolean} */\n    this.vert_ = vert;\n\n    /** @private {boolean} */\n    this.eventing_ = false;\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {number} */\n    this.prevX_ = 0;\n\n    /** @private {number} */\n    this.prevY_ = 0;\n\n    /** @private {time} */\n    this.startTime_ = 0;\n\n    /** @private {time} */\n    this.lastTime_ = 0;\n\n    /** @private {time} */\n    this.prevTime_ = 0;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n\n    /** @private {number} */\n    this.velocityY_ = 0;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    const {touches} = e;\n    // If already eventing, ignore additional touches\n    if (this.eventing_ && touches && touches.length > 1) {\n      return true;\n    }\n    if (touches && touches.length == 1) {\n      this.startTime_ = Date.now();\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (touches && touches.length >= 1) {\n      const {clientX: x, clientY: y} = touches[0];\n      this.lastX_ = x;\n      this.lastY_ = y;\n      if (this.eventing_) {\n        // If already eventing, always emit new coordinates\n        this.emit_(false, false, e);\n      } else {\n        // Figure out whether or not we should start eventing\n        const dx = Math.abs(x - this.startX_);\n        const dy = Math.abs(y - this.startY_);\n        // Swipe is penalized slightly since it's one of the least demanding\n        // gesture, thus -10 in signalReady.\n        if (this.horiz_ && this.vert_) {\n          if (dx >= 8 || dy >= 8) {\n            this.signalReady(-10);\n          }\n        } else if (this.horiz_) {\n          if (dx >= 8 && dx > dy) {\n            this.signalReady(-10);\n          } else if (dy >= 8) {\n            return false;\n          }\n        } else if (this.vert_) {\n          if (dy >= 8 && dy > dx) {\n            this.signalReady(-10);\n          } else if (dx >= 8) {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    const {touches} = e;\n    // Number of current touches on the page\n    if (touches && touches.length == 0) {\n      this.end_(e);\n    }\n  }\n\n  /** @override */\n  acceptStart() {\n    this.eventing_ = true;\n    // Reset start coordinates to where the gesture began to avoid visible\n    // jump, but preserve them as \"prev\" coordinates to calculate the right\n    // velocity.\n    this.prevX_ = this.startX_;\n    this.prevY_ = this.startY_;\n    this.prevTime_ = this.startTime_;\n    this.startX_ = this.lastX_;\n    this.startY_ = this.lastY_;\n    this.emit_(true, false, null);\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.eventing_ = false;\n  }\n\n  /**\n   * @param {boolean} first\n   * @param {boolean} last\n   * @param {?Event} event\n   * @private\n   */\n  emit_(first, last, event) {\n    this.lastTime_ = Date.now();\n    const deltaTime = this.lastTime_ - this.prevTime_;\n    // It's often that `touchend` arrives on the next frame. These should\n    // be ignored to avoid a significant velocity downgrade.\n    if ((!last && deltaTime > 4) || (last && deltaTime > 16)) {\n      const velocityX = calcVelocity(\n        this.lastX_ - this.prevX_,\n        deltaTime,\n        this.velocityX_\n      );\n      const velocityY = calcVelocity(\n        this.lastY_ - this.prevY_,\n        deltaTime,\n        this.velocityY_\n      );\n\n      // On iOS, the touchend will always have the same x/y position as the\n      // last touchmove, so we want to make sure we do not remove the velocity.\n      // The touchend event with zero velocity can occur within a couple of\n      // frames of the last touchmove.\n      if (!last || deltaTime > 32 || velocityX != 0 || velocityY != 0) {\n        this.velocityX_ = Math.abs(velocityX) > 1e-4 ? velocityX : 0;\n        this.velocityY_ = Math.abs(velocityY) > 1e-4 ? velocityY : 0;\n      }\n\n      this.prevX_ = this.lastX_;\n      this.prevY_ = this.lastY_;\n      this.prevTime_ = this.lastTime_;\n    }\n\n    this.signalEmit(\n      {\n        first,\n        last,\n        time: this.lastTime_,\n        deltaX: this.lastX_ - this.startX_,\n        deltaY: this.lastY_ - this.startY_,\n        startX: this.startX_,\n        startY: this.startY_,\n        lastX: this.lastX_,\n        lastY: this.lastY_,\n        velocityX: this.velocityX_,\n        velocityY: this.velocityY_,\n      },\n      event\n    );\n  }\n\n  /**\n   * @param {?Event} event\n   * @private\n   */\n  end_(event) {\n    if (this.eventing_) {\n      this.eventing_ = false;\n      this.emit_(false, true, event);\n      this.signalEnd();\n    }\n  }\n}\n\n/**\n * Recognizes \"swipe-xy\" gesture. Yields about 10ms to other gestures.\n */\nexport class SwipeXYRecognizer extends SwipeRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('swipe-xy', manager, true, true);\n  }\n}\n\n/**\n * Recognizes \"swipe-x\" gesture. Yields about 10ms to other gestures.\n */\nexport class SwipeXRecognizer extends SwipeRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('swipe-x', manager, true, false);\n  }\n}\n\n/**\n * Recognizes \"swipe-y\" gesture. Yields about 10ms to other gestures.\n */\nexport class SwipeYRecognizer extends SwipeRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('swipe-y', manager, false, true);\n  }\n}\n\n/**\n * A \"tapzoom\" gesture. It has a center, delta off the center center and\n * the velocity of moving away from the center.\n * @typedef {{\n *   first: boolean,\n *   last: boolean,\n *   centerClientX: number,\n *   centerClientY: number,\n *   deltaX: number,\n *   deltaY: number,\n *   velocityX: number,\n *   velocityY: number\n * }}\n */\nlet TapzoomDef;\n\n/**\n * Recognizes a \"tapzoom\" gesture. This gesture will block other gestures\n * for about 400ms after first \"tap\" while it's expecting swipe.\n * @extends {GestureRecognizer<TapzoomDef>}\n */\nexport class TapzoomRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('tapzoom', manager);\n\n    /** @private {boolean} */\n    this.eventing_ = false;\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {number} */\n    this.tapCount_ = 0;\n\n    /** @private {number} */\n    this.prevX_ = 0;\n\n    /** @private {number} */\n    this.prevY_ = 0;\n\n    /** @private {time} */\n    this.lastTime_ = 0;\n\n    /** @private {time} */\n    this.prevTime_ = 0;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n\n    /** @private {number} */\n    this.velocityY_ = 0;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    if (this.eventing_) {\n      return false;\n    }\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      if (this.eventing_) {\n        this.emit_(false, false, e);\n      } else {\n        const dx = Math.abs(this.lastX_ - this.startX_) >= 8;\n        const dy = Math.abs(this.lastY_ - this.startY_) >= 8;\n        if (dx || dy) {\n          if (this.tapCount_ == 0) {\n            this.acceptCancel();\n            return false;\n          } else {\n            this.signalReady(0);\n          }\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    if (this.eventing_) {\n      this.end_(e);\n      return;\n    }\n\n    this.tapCount_++;\n    if (this.tapCount_ == 1) {\n      this.signalPending(400);\n      return;\n    }\n\n    this.acceptCancel();\n  }\n\n  /** @override */\n  acceptStart() {\n    this.tapCount_ = 0;\n    this.eventing_ = true;\n    this.emit_(true, false, null);\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.tapCount_ = 0;\n    this.eventing_ = false;\n  }\n\n  /**\n   * @param {boolean} first\n   * @param {boolean} last\n   * @param {?Event} event\n   * @private\n   */\n  emit_(first, last, event) {\n    this.lastTime_ = Date.now();\n    if (first) {\n      this.velocityX_ = this.velocityY_ = 0;\n    } else if (this.lastTime_ - this.prevTime_ > 2) {\n      this.velocityX_ = calcVelocity(\n        this.lastX_ - this.prevX_,\n        this.lastTime_ - this.prevTime_,\n        this.velocityX_\n      );\n      this.velocityY_ = calcVelocity(\n        this.lastY_ - this.prevY_,\n        this.lastTime_ - this.prevTime_,\n        this.velocityY_\n      );\n    }\n    this.prevX_ = this.lastX_;\n    this.prevY_ = this.lastY_;\n    this.prevTime_ = this.lastTime_;\n\n    this.signalEmit(\n      {\n        first,\n        last,\n        centerClientX: this.startX_,\n        centerClientY: this.startY_,\n        deltaX: this.lastX_ - this.startX_,\n        deltaY: this.lastY_ - this.startY_,\n        velocityX: this.velocityX_,\n        velocityY: this.velocityY_,\n      },\n      event\n    );\n  }\n\n  /**\n   * @param {?Event} event\n   * @private\n   */\n  end_(event) {\n    if (this.eventing_) {\n      this.eventing_ = false;\n      this.emit_(false, true, event);\n      this.signalEnd();\n    }\n  }\n}\n\n/**\n * A \"pinch\" gesture. It has a center, delta off the center center and\n * the velocity of moving away from the center. \"dir\" component of `1`\n * indicates that it's a expand motion and `-1` indicates pinch motion.\n * @typedef {{\n *   first: boolean,\n *   last: boolean,\n *   centerClientX: number,\n *   centerClientY: number,\n *   dir: number,\n *   deltaX: number,\n *   deltaY: number,\n *   velocityX: number,\n *   velocityY: number\n * }}\n */\nexport let PinchDef;\n\n/**\n * Threshold in pixels for how much two touches move away from\n * each other before we recognize the gesture as a pinch.\n */\nconst PINCH_ACCEPT_THRESHOLD = 4;\n\n/**\n * Threshold in pixels for how much two touches move in the same\n * direction before we reject the gesture as a pinch.\n */\nconst PINCH_REJECT_THRESHOLD = 10;\n\n/**\n * Recognizes a \"pinch\" gesture.\n * @extends {GestureRecognizer<PinchDef>}\n */\nexport class PinchRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('pinch', manager);\n\n    /** @private {boolean} */\n    this.eventing_ = false;\n\n    /** @private {number} */\n    this.startX1_ = 0;\n    /** @private {number} */\n    this.startY1_ = 0;\n\n    /** @private {number} */\n    this.startX2_ = 0;\n    /** @private {number} */\n    this.startY2_ = 0;\n\n    /** @private {number} */\n    this.lastX1_ = 0;\n    /** @private {number} */\n    this.lastY1_ = 0;\n\n    /** @private {number} */\n    this.lastX2_ = 0;\n    /** @private {number} */\n    this.lastY2_ = 0;\n\n    /** @private {number} */\n    this.prevDeltaX_ = 0;\n    /** @private {number} */\n    this.prevDeltaY_ = 0;\n\n    /** @private {number} */\n    this.centerClientX_ = 0;\n    /** @private {number} */\n    this.centerClientY_ = 0;\n\n    /** @private {time} */\n    this.startTime_ = 0;\n    /** @private {time} */\n    this.lastTime_ = 0;\n    /** @private {time} */\n    this.prevTime_ = 0;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n    /** @private {number} */\n    this.velocityY_ = 0;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    const {touches} = e;\n    if (!touches) {\n      return false;\n    }\n    // Pinch touches are not always simultaneous, continue to listen\n    // for second touch.\n    if (touches.length == 1) {\n      return true;\n    }\n    // If already in the middle of a pinch event, ignore additional touches.\n    if (this.eventing_ && touches.length > 2) {\n      return true;\n    }\n    if (touches.length == 2) {\n      this.startTime_ = Date.now();\n      this.startX1_ = touches[0].clientX;\n      this.startY1_ = touches[0].clientY;\n      this.startX2_ = touches[1].clientX;\n      this.startY2_ = touches[1].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (!touches || touches.length == 0) {\n      return false;\n    }\n    // Pinch touches are not always simultaneous, continue to listen\n    // for second touch.\n    if (touches.length == 1) {\n      return true;\n    }\n\n    // Have 2+ touches\n    this.lastX1_ = touches[0].clientX;\n    this.lastY1_ = touches[0].clientY;\n    this.lastX2_ = touches[1].clientX;\n    this.lastY2_ = touches[1].clientY;\n\n    // If eventing, always emit gesture with new coordinates\n    if (this.eventing_) {\n      this.emit_(false, false, e);\n      return true;\n    }\n\n    // Gesture is 2+ touch but direction indicates not a pinch\n    if (this.isPinchRejected_()) {\n      return false;\n    }\n\n    if (this.isPinchReady_()) {\n      this.signalReady(0);\n    }\n    // Pinch gesture detected but threshold not reached, continue listening\n    return true;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isPinchReady_() {\n    const dx1 = this.lastX1_ - this.startX1_;\n    const dy1 = this.lastY1_ - this.startY1_;\n    const dx2 = this.lastX2_ - this.startX2_;\n    const dy2 = this.lastY2_ - this.startY2_;\n\n    const pinchDirectionCorrect = dx1 * dx2 <= 0 && dy1 * dy2 <= 0;\n    const xPinchRecognized = Math.abs(dx1 - dx2) >= PINCH_ACCEPT_THRESHOLD;\n    const yPinchRecognized = Math.abs(dy1 - dy2) >= PINCH_ACCEPT_THRESHOLD;\n    return pinchDirectionCorrect && (xPinchRecognized || yPinchRecognized);\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isPinchRejected_() {\n    const dx1 = this.lastX1_ - this.startX1_;\n    const dy1 = this.lastY1_ - this.startY1_;\n    const dx2 = this.lastX2_ - this.startX2_;\n    const dy2 = this.lastY2_ - this.startY2_;\n\n    const pinchDirectionIncorrect = dx1 * dx2 > 0 || dy1 * dy2 > 0;\n    const xPinchRejected = Math.abs(dx1 + dx2) >= PINCH_REJECT_THRESHOLD;\n    const yPinchRejected = Math.abs(dy1 + dy2) >= PINCH_REJECT_THRESHOLD;\n    return pinchDirectionIncorrect && (xPinchRejected || yPinchRejected);\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    // Pinch requires at least two touches on the page\n    const {touches} = e;\n    if (touches && touches.length < 2) {\n      this.end_(e);\n    }\n  }\n\n  /** @override */\n  acceptStart() {\n    this.eventing_ = true;\n    this.prevTime_ = this.startTime_;\n    this.prevDeltaX_ = 0;\n    this.prevDeltaY_ = 0;\n    this.centerClientX_ = (this.startX1_ + this.startX2_) * 0.5;\n    this.centerClientY_ = (this.startY1_ + this.startY2_) * 0.5;\n    this.emit_(true, false, null);\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.eventing_ = false;\n  }\n\n  /**\n   * @param {boolean} first\n   * @param {boolean} last\n   * @param {?Event} event\n   * @private\n   */\n  emit_(first, last, event) {\n    this.lastTime_ = Date.now();\n    const deltaTime = this.lastTime_ - this.prevTime_;\n    const deltaX = this.deltaX_();\n    const deltaY = this.deltaY_();\n    // It's often that `touchend` arrives on the next frame. These should\n    // be ignored to avoid a significant velocity downgrade.\n    if ((!last && deltaTime > 4) || (last && deltaTime > 16)) {\n      this.velocityX_ = calcVelocity(\n        deltaX - this.prevDeltaX_,\n        deltaTime,\n        this.velocityX_\n      );\n      this.velocityY_ = calcVelocity(\n        deltaY - this.prevDeltaY_,\n        deltaTime,\n        this.velocityY_\n      );\n      this.velocityX_ = Math.abs(this.velocityX_) > 1e-4 ? this.velocityX_ : 0;\n      this.velocityY_ = Math.abs(this.velocityY_) > 1e-4 ? this.velocityY_ : 0;\n      this.prevDeltaX_ = deltaX;\n      this.prevDeltaY_ = deltaY;\n      this.prevTime_ = this.lastTime_;\n    }\n\n    const startSq = this.sqDist_(\n      this.startX1_,\n      this.startX2_,\n      this.startY1_,\n      this.startY2_\n    );\n    const lastSq = this.sqDist_(\n      this.lastX1_,\n      this.lastX2_,\n      this.lastY1_,\n      this.lastY2_\n    );\n    this.signalEmit(\n      {\n        first,\n        last,\n        time: this.lastTime_,\n        centerClientX: this.centerClientX_,\n        centerClientY: this.centerClientY_,\n        dir: Math.sign(lastSq - startSq),\n        deltaX: deltaX * 0.5,\n        deltaY: deltaY * 0.5,\n        velocityX: this.velocityX_ * 0.5,\n        velocityY: this.velocityY_ * 0.5,\n      },\n      event\n    );\n  }\n\n  /**\n   * @param {?Event} event\n   * @private\n   */\n  end_(event) {\n    if (this.eventing_) {\n      this.eventing_ = false;\n      this.emit_(false, true, event);\n      this.signalEnd();\n    }\n  }\n\n  /**\n   * @param {number} x1\n   * @param {number} x2\n   * @param {number} y1\n   * @param {number} y2\n   * @return {number}\n   * @private\n   */\n  sqDist_(x1, x2, y1, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  deltaX_() {\n    return Math.abs(\n      this.lastX1_ - this.startX1_ - (this.lastX2_ - this.startX2_)\n    );\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  deltaY_() {\n    return Math.abs(\n      this.lastY1_ - this.startY1_ - (this.lastY2_ - this.startY2_)\n    );\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Description of this file.\n */\nimport {Services} from '../../../src/services';\nimport {padStart} from '../../../src/core/types/string';\n/**\n * Runs a delay after deferring to the event loop. This is useful to call from\n * within an animation frame, as you can be sure that at least duration\n * milliseconds has elapsed after the animation has started. Simply waiting\n * for the desired duration may result in running code before an animation has\n * completed.\n * @param {!Window} win A Window object.\n * @param {number} duration How long to wait for.\n * @return {!Promise} A Promise that resolves after the specified duration.\n */\nexport function delayAfterDeferringToEventLoop(win, duration) {\n  const timer = Services.timerFor(win);\n  // Timer.promise does not defer to event loop for 0.\n  const eventLoopDelay = 1;\n  // First, defer to the JavaScript execution loop. If we are in a\n  // requestAnimationFrame, this will place us after render. Second, wait\n  // for duration to elapse.\n  return timer.promise(eventLoopDelay).then(() => timer.promise(duration));\n}\n\n/**\n * Converts seconds to a timestamp formatted string.\n * @param {number} seconds\n * @return {string}\n * @package\n */\nexport function secondsToTimestampString(seconds) {\n  const h = Math.floor(seconds / 3600);\n  const m = Math.floor(seconds / 60);\n  const s = Math.floor(seconds % 60);\n  const hh = padStart(h.toString(), 2, '0');\n  const mm = padStart(m.toString(), 2, '0');\n  const ss = padStart(s.toString(), 2, '0');\n  return hh + ':' + mm + ':' + ss;\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {SwipeDef} from '../../../src/gesture-recognizers';\nimport {delayAfterDeferringToEventLoop} from './utils';\nimport {dev} from '../../../src/log';\nimport {listen} from '../../../src/event-helper';\nimport {setStyle, setStyles} from '../../../src/style';\n\n/**\n * The number of pixels of movement to go from the darkest to lightest overlay\n * while doing a swipe to close gesture.\n */\nconst SWIPE_TO_CLOSE_DISTANCE = 200;\n/**\n * The number of pixels needed to close when doing a swipe to close gesture.\n */\nconst SWIPE_TO_CLOSE_DISTANCE_THRESHOLD = SWIPE_TO_CLOSE_DISTANCE / 4;\n/**\n * The number of pixels needed to completely fade out the controls when doing a\n * swipe to close gesture.\n */\nconst SWIPE_TO_HIDE_OVERLAY_DISTANCE = SWIPE_TO_CLOSE_DISTANCE / 4;\n/**\n * The velocity at which to close light box from a swipe, regardless of distance\n * travelled.\n */\nconst SWIPE_TO_CLOSE_VELOCITY_THRESHOLD = 0.65;\n/**\n * The lowest opacity for the background and controls when doing swipe to close\n * gesture.\n */\nconst SWIPE_TO_CLOSE_MIN_OPACITY = 0.2;\n/** The smallest scale possible when doing swipe to close gesture. */\nconst SWIPE_TO_CLOSE_MIN_SCALE = 0.85;\n/**\n * How much distance to cover, based on the velocity, when a user releases a\n * swipe to close gesture.\n */\nconst SWIPE_TO_CLOSE_VELOCITY_TO_DISTANCE_FACTOR = 22.5;\n/**\n * How much time to spend, based on the distance to travel, when moving to the\n * final location of a swipe (after the user has released).\n */\nconst SWIPE_TO_CLOSE_DISTANCE_TO_TIME_FACTOR = 1;\n/**\n * How much time to spend, based on the distance to travel, when snapping back\n * after an cancelled swipe to close gesture.\n */\nconst SWIPE_TO_CLOSE_SNAP_BACK_TIME_FACTOR = 5;\n/**\n * The timing function to use when carrying momentum after releasing a swipe to\n * close gesture. This closely approximates an expontential decay of velocity.\n */\nconst SWIPE_TO_CLOSE_MOMENTUM_TIMING = 'cubic-bezier(0.15, .55, .3, 0.95)';\n\n/**\n * Calculates the distance between two points in two dimensions.\n * TODO(#21104) Refactor.\n * @param {number} x1 The x coordinate of the first point.\n * @param {number} y1 The y coordinate of the first point.\n * @param {number} x2 The x coordinate of the second point.\n * @param {number} y2 The y coordinate of the second point.\n * @return {number} The distance.\n */\nfunction calculateDistance(x1, y1, x2, y2) {\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n}\n\n/**\n * A linear interpolation.\n * TODO(#21104) Refactor.\n * @param {number} start\n * @param {number} end\n * @param {number} percentage\n * @return {number} The value percentage of the way between start and end.\n */\nfunction lerp(start, end, percentage) {\n  return start + (end - start) * percentage;\n}\n\n/**\n * Maintains state and updates the UI for a swipe to dismiss gesture.\n */\nexport class SwipeToDismiss {\n  /**\n   * @param {!Window} win\n   * @param {!Element} element\n   * @param {function(function())} mutateElement\n   * @param {function()} onclose\n   */\n  constructor(win, element, mutateElement, onclose) {\n    /** @private @const */\n    this.win_ = win;\n\n    /** @private @const */\n    this.element_ = element;\n\n    /** @private @const */\n    this.mutateElement_ = mutateElement;\n\n    /** @private @const */\n    this.onclose_ = onclose;\n\n    /**\n     * The element that is moving with the swipe to dismiss.\n     * @private {?Element}\n     */\n    this.swipeElement_ = null;\n\n    /**\n     * The element to hide while doing the swipe.\n     * @private {?Element}\n     */\n    this.hiddenElement_ = null;\n\n    /**\n     * A background mask element behind the swipe element.\n     * @private {?Element}\n     */\n    this.mask_ = null;\n\n    /**\n     * A container that is overlaying the swipe element.\n     * @private {?Element}\n     */\n    this.overlay_ = null;\n\n    /**\n     * A listener is set up to prevent scrolling on the swipe element  when\n     * doing  a swipe to dismiss gesture. This is used to clean up the listener\n     * when no longer needed.\n     * @private {?function()}\n     */\n    this.preventScrollUnlistener_ = null;\n\n    /**\n     * @private {boolean}\n     */\n    this.isSwiping_ = false;\n  }\n\n  /**\n   * Handles the start of a swipe.\n   * @param {{\n   *   swipeElement: !Element,\n   *   hiddenElement: !Element,\n   *   mask: !Element,\n   *   overlay: !Element,\n   * }} config\n   */\n  startSwipe(config) {\n    const {hiddenElement, mask, overlay, swipeElement} = config;\n    this.swipeElement_ = swipeElement;\n    this.hiddenElement_ = hiddenElement;\n    this.mask_ = mask;\n    this.overlay_ = overlay;\n    this.isSwiping_ = true;\n\n    this.mutateElement_(() => {\n      this.startSwipeToDismiss_();\n    });\n  }\n\n  /**\n   * Carries momentum for the swipe forwards to a final destination, with the\n   * duration depending on the velocity.\n   * @param {number} scale The current scale.\n   * @param {number} deltaX How far in the x direction we should keep moving.\n   * @param {number} deltaY How far in the y direction we should keep moving.\n   * @param {number} velocity The current velocity.\n   * @return {Promise} A Promise that resolves once the momentum based movement\n   *    based movement has ended.\n   * @private\n   */\n  carrySwipeMomentum_(scale, deltaX, deltaY, velocity) {\n    const duration = velocity * SWIPE_TO_CLOSE_DISTANCE_TO_TIME_FACTOR;\n\n    setStyles(dev().assertElement(this.swipeElement_), {\n      transform: `scale(${scale}) translate(${deltaX}px, ${deltaY}px)`,\n      transition: `${duration}ms transform ${SWIPE_TO_CLOSE_MOMENTUM_TIMING}`,\n    });\n\n    return delayAfterDeferringToEventLoop(this.win_, duration);\n  }\n\n  /**\n   * Snaps back to the starting point, with the duration based on the distance\n   * that needs to be travelled.\n   * @param {number} finalDistance\n   * @return {Promise} A Promise that resolves once the snapping has completed.\n   * @private\n   */\n  snapBackFromSwipe_(finalDistance) {\n    const duration = finalDistance * SWIPE_TO_CLOSE_SNAP_BACK_TIME_FACTOR;\n\n    return this.mutateElement_(() => {\n      setStyles(dev().assertElement(this.swipeElement_), {\n        transform: '',\n        transition: `${duration}ms transform ease-out`,\n      });\n      setStyles(dev().assertElement(this.mask_), {\n        opacity: '',\n        transition: `${duration}ms opacity ease-out`,\n      });\n      setStyles(dev().assertElement(this.overlay_), {\n        opacity: '',\n        transition: `${duration}ms opacity ease-out`,\n      });\n    }).then(() => {\n      return delayAfterDeferringToEventLoop(this.win_, duration);\n    });\n  }\n\n  /**\n   * Adjusts the UI elements for the current swipe position in a swipe to\n   * dismiss gesture. This should be called in a mutate context.\n   * @param {string} swipeElementTransform How to transform the swiping\n   *    element.\n   * @param {number|string} maskOpacity The opacity for the mask element.\n   * @param {number|string} overlayOpacity The opacity for the controls\n   *    container.\n   * @private\n   */\n  adjustForSwipePosition_(\n    swipeElementTransform = '',\n    maskOpacity = '',\n    overlayOpacity = ''\n  ) {\n    setStyles(dev().assertElement(this.swipeElement_), {\n      transform: swipeElementTransform,\n      transition: '',\n    });\n    setStyles(dev().assertElement(this.mask_), {\n      opacity: maskOpacity,\n      transition: '',\n    });\n    setStyles(dev().assertElement(this.overlay_), {\n      opacity: overlayOpacity,\n      transition: '',\n    });\n  }\n\n  /**\n   * Releases the user's swipe to dismiss gesture. This carries the momentum\n   * forwards and either closes the lightbox or snaps back based on the speed\n   * and distance. This should be called in a mutate context.\n   * @param {number} scale The scale when releasing the swipe. We do not change\n   *    the scale as we carry forward any momentum.\n   * @param {number} velocityX The X velocity when the swipe was released.\n   * @param {number} velocityY The Y velocity when the swipe was released.\n   * @param {number} deltaX The x distance when the swipe was released.\n   * @param {number} deltaY The y distance when the swipe was released.\n   * @return {!Promise} A Promise that resolves once the release is completed,\n   *    either snapping back to the start or closing the carousel.\n   * @private\n   */\n  releaseSwipe_(scale, velocityX, velocityY, deltaX, deltaY) {\n    const velocity = calculateDistance(0, 0, velocityX, velocityY);\n    const distanceX = velocityX * SWIPE_TO_CLOSE_VELOCITY_TO_DISTANCE_FACTOR;\n    const distanceY = velocityY * SWIPE_TO_CLOSE_VELOCITY_TO_DISTANCE_FACTOR;\n    const finalDeltaX = distanceX + deltaX;\n    const finalDeltaY = distanceY + deltaY;\n    // We want to figure out the final distance we will rest at if the user\n    // flicked the lightbox and use that to determine we should animate to. We\n    // will then use that resting position to determine if we should snap back\n    // or close.\n    const finalDistance = calculateDistance(0, 0, finalDeltaX, finalDeltaY);\n\n    // We always want to carry momentum from the swipe forward, and then use\n    // the resting point to decide if we should snap back or close.\n    return this.carrySwipeMomentum_(\n      scale,\n      finalDeltaX,\n      finalDeltaY,\n      velocity\n    ).then(() => {\n      if (\n        finalDistance < SWIPE_TO_CLOSE_DISTANCE_THRESHOLD &&\n        velocity < SWIPE_TO_CLOSE_VELOCITY_THRESHOLD\n      ) {\n        return this.snapBackFromSwipe_(finalDistance);\n      }\n\n      return this.onclose_();\n    });\n  }\n\n  /**\n   * Handles the start of a swipe to dimiss gesture:\n   *  - Prevents a scroll event from the carousel during the swipe.\n   *  - Hides the source element on the page.\n   * This should be called in a mutate context.\n   * @private\n   */\n  startSwipeToDismiss_() {\n    this.hiddenElement_.classList.add('i-amphtml-ghost');\n    // We do not want the user dragging around to make the carousel think that\n    // a scroll happened.\n    this.preventScrollUnlistener_ = listen(\n      dev().assertElement(this.swipeElement_),\n      'scroll',\n      (event) => {\n        event.stopPropagation();\n      },\n      {\n        capture: true,\n      }\n    );\n    // TODO(sparhami) #19259 Tracks a more generic way to do this. Remove once\n    // we have something better.\n    this.element_.setAttribute('i-amphtml-scale-animation', '');\n    // Need to clear this so that we can control the opacity as the user drags.\n    setStyle(this.overlay_, 'animationFillMode', 'none');\n  }\n\n  /**\n   * Ends a drag swipe, cleaning up the effects from `startSwipeToDismiss_`.\n   * This should be called in a mutate context.\n   * @private\n   */\n  endSwipeToDismiss_() {\n    this.hiddenElement_.classList.remove('i-amphtml-ghost');\n    this.preventScrollUnlistener_();\n    this.element_.removeAttribute('i-amphtml-scale-animation');\n    setStyle(this.overlay_, 'animationFillMode', '');\n  }\n\n  /**\n   * @param {!SwipeDef} data The data for the swipe.\n   */\n  swipeMove(data) {\n    const {deltaX, deltaY, last, velocityX, velocityY} = data;\n    const wasSwiping = this.isSwiping_;\n    if (last) {\n      this.isSwiping_ = false;\n    }\n\n    // Need to capture these as they will no longer be available after closing.\n    const distance = calculateDistance(0, 0, deltaX, deltaY);\n    const releasePercentage = Math.min(distance / SWIPE_TO_CLOSE_DISTANCE, 1);\n    const hideOverlayPercentage = Math.min(\n      distance / SWIPE_TO_HIDE_OVERLAY_DISTANCE,\n      1\n    );\n    const scale = lerp(1, SWIPE_TO_CLOSE_MIN_SCALE, releasePercentage);\n    const maskOpacity = lerp(1, SWIPE_TO_CLOSE_MIN_OPACITY, releasePercentage);\n    const overlayOpacity = lerp(1, 0, hideOverlayPercentage);\n\n    this.mutateElement_(() => {\n      if (data.last && wasSwiping) {\n        this.releaseSwipe_(scale, velocityX, velocityY, deltaX, deltaY).then(\n          () => {\n            // TODO(sparhami) These should be called in a `mutateElement`,\n            // but we are already in an animationFrame, and waiting for the\n            // next one will cause the UI to flicker.\n            this.adjustForSwipePosition_();\n            this.endSwipeToDismiss_();\n          }\n        );\n        return;\n      }\n\n      if (this.isSwiping_) {\n        this.adjustForSwipePosition_(\n          `scale(${scale}) translate(${deltaX}px, ${deltaY}px)`,\n          maskOpacity,\n          overlayOpacity\n        );\n      }\n    });\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\n\n/**\n * Maps a value in a first range to its equivalent in a second range\n * Ex.: 5 in the range [0,10] gives 60 in the range[40,80]\n *\n * NOTE: lower/upper bounds on the source range are detected automatically,\n * however the bounds on the target range are not altered (thus the target\n * range could be decreasing).\n * Ex1: 8 in the range [0, 10] gives 2 in the range [10, 0]\n * Ex2: also, 8 in the range [10, 0] gives 2 in the range [10, 0]\n *\n * NOTE: Input value is enforced to be bounded inside the source range\n * Ex1: -2 in the range [0, 10] is interpreted as 0 and thus gives 40 in [40,80]\n * Ex2: 19 in the range [0, 5] is interpreted as 5 and thus gives 80 in [40,80]\n *\n * @param {number} val the value in the source range\n * @param {number} min1 the lower bound of the source range\n * @param {number} max1 the upper bound of the source range\n * @param {number} min2 the lower bound of the target range\n * @param {number} max2 the upper bound of the target range\n * @return {number} the equivalent value in the target range\n */\nexport function mapRange(val, min1, max1, min2, max2) {\n  let max1Bound = max1;\n  let min1Bound = min1;\n  if (min1 > max1) {\n    max1Bound = min1;\n    min1Bound = max1;\n  }\n\n  if (val < min1Bound) {\n    val = min1Bound;\n  } else if (val > max1Bound) {\n    val = max1Bound;\n  }\n\n  return ((val - min1) * (max2 - min2)) / (max1 - min1) + min2;\n}\n\n/**\n * Computes the modulus of values `a` and `b`.\n *\n * This is needed because the % operator in JavaScript doesn't implement\n * modulus behavior as can be seen by the spec here:\n * http://www.ecma-international.org/ecma-262/5.1/#sec-11.5.3.\n * It instead is used to obtain the remainder of a division.\n * This function uses the remainder (%) operator to determine the modulus.\n * Derived from here:\n * https://stackoverflow.com/questions/25726760/javascript-modular-arithmetic/47354356#47354356\n *\n * @param {number} a\n * @param {number} b\n * @return {number} returns the modulus of the two numbers.\n * @example\n *\n * _.min(10, 5);\n * // => 0\n *\n * _.mod(-1, 5);\n * // => 4\n */\nexport function mod(a, b) {\n  return a > 0 && b > 0 ? a % b : ((a % b) + b) % b;\n}\n\n/**\n * Restricts a number to be in the given min/max range. The minimum value must\n * be less than or equal to the maximum value.\n *\n * Examples:\n * clamp(0.5, 0, 1) -> 0.5\n * clamp(1.5, 0, 1) -> 1\n * clamp(-0.5, 0, 1) -> 0\n *\n * @param {number} val the value to clamp.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound.\n * @return {number} the clamped value.\n */\nexport function clamp(val, min, max) {\n  devAssert(min <= max, 'Minimum value is greater than the maximum.');\n  return Math.min(Math.max(val, min), max);\n}\n\n/**\n * Returns value bound to min and max values +/- extent. The lower bound must\n * be less than or equal to the upper bound.\n * @param {number} val the value to bound.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound\n * @param {number} extent the allowed extent beyond the bounds.\n * @return {number} the bounded value.\n */\nexport function boundValue(val, min, max, extent) {\n  devAssert(min <= max, 'Lower bound is greater than the upper bound.');\n  return clamp(val, min - extent, max + extent);\n}\n\n/**\n * Returns the length of a vector given in X- and Y-coordinates.\n * @param {number} deltaX distance in the X direction.\n * @param {number} deltaY distance in the Y direction.\n * @return {number} the magnitude of the vector.\n */\nexport function magnitude(deltaX, deltaY) {\n  return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\n/**\n * Returns the distance between two points.\n * @param {number} x1 X-coordinate of the first point.\n * @param {number} y1 Y-coordinate of the first point.\n * @param {number} x2 X-coordinate of the second point.\n * @param {number} y2 Y-coordinate of the second point.\n * @return {number} the distance between the two points.\n */\nexport function distance(x1, y1, x2, y2) {\n  return magnitude(x2 - x1, y2 - y1);\n}\n\n/**\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} angleInDegrees\n * @return {{\n *  x: number,\n *  y: number,\n * }}\n */\nexport function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  };\n}\n\n/**\n * Sums up the values of the given array and returns the result\n * @param {Array<number>} values\n * @return {number}\n */\nexport function sum(values) {\n  return values.reduce(function (a, b) {\n    return a + b;\n  });\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from '../log';\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service';\nimport {hasOwn, map} from '../core/types/object';\nimport {isArray} from '../core/types';\nimport {parseQueryString} from '../core/types/string/url';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "function t(t,e,n){return(t=t.width/t.height)>e.width/e.height!==n?{width:e.height*t,height:e.height}:{width:e.width,height:e.width/t}}function e(e,n,i=getComputedStyle(e).getPropertyValue(\"object-fit\")){switch(e={width:e.naturalWidth,height:e.naturalHeight},i){case\"cover\":return t(e,n,!1);case\"contain\":return t(e,n,!0);case\"fill\":return n;case\"none\":return e;case\"scale-down\":return n=t(e,n,!0),{width:Math.min(e.width,n.width),height:Math.min(e.height,n.height)};case\"\":case null:return n;default:throw Error(`object-fit: ${i} not supported`)}}function n(t,e){return t=(t.match(new RegExp(\"-?\\\\s*\\\\d+\"+e))||[\"0\"])[0].replace(\" \",\"\"),parseFloat(t)}function i(t,e,i){var r=t||\"50% 50%\",a=0===r.lastIndexOf(\"calc\",0)?r.indexOf(\")\")+1:r.indexOf(\" \");t=r.slice(0,a)||\"\",r=r.slice(a)||\"\",a=n(t,\"px\");let o=n(r,\"px\");return t=n(t,\"%\")/100,{top:n(r,\"%\")/100*(e.height-i.height)+o,left:t*(e.width-i.width)+a}}function r(t){return`cubic-bezier(${t.x1},${t.y1},${t.x2},${t.y2})`}function a(t,e,n){let i=n*n,r=i*n;return 3*(n-2*i+r)*t+3*(i-r)*e+r}function o({m:t,i:e,f:n,g:i,curve:r,styles:o,a:l,b:s}){let c=`${l}-crop`;l=`${l}-counterScale`,i={x:i.width/n.width,y:i.height/n.height};let m={x:1,y:1};return n=s?i:m,s=s?m:i,Object.assign(t.style,o,{willChange:\"transform\",transformOrigin:\"top left\",animationName:c,animationTimingFunction:\"linear\",animationFillMode:\"forwards\"}),Object.assign(e.style,o,{willChange:\"transform\",transformOrigin:\"top left\",animationName:l,animationTimingFunction:\"linear\",animationFillMode:\"forwards\"}),function({I:t,w:e,curve:n,F:i,u:r}){let o=\"\",l=\"\";for(let i=0;20>=i;i++){var s=.05*i,c=a(n.y1,n.y2,s);s=100*a(n.x1,n.x2,s);var m=t.x;m+=c*(e.x-m);var f=t.y;o+=`${s}% {transform: scale(${m},${c=f+c*(e.y-f)});}`,l+=`${s}% {transform: scale(${f=1/m},${1/c});}`}return`@keyframes ${i} {${o}}@keyframes ${r} {${l}}`}({I:n,w:s,curve:r,F:c,u:l})}let l={x1:.42,y1:0,x2:.58,y2:1},s=0;function c(t,n,i){var r=getComputedStyle(t);let a=r.getPropertyValue(\"object-fit\");return{objectFit:a,objectPosition:r=r.getPropertyValue(\"object-position\"),rect:n,c:i,j:t,h:e(t,n,a),s:n.width*n.height}}export function prepareImageAnimation({transitionContainer:t=document.body,styleContainer:n=document.head,srcImg:a,targetImg:m,srcImgRect:f=a.getBoundingClientRect(),srcCropRect:h=f,targetImgRect:u=m.getBoundingClientRect(),targetCropRect:p=u,curve:d=l,styles:g,keyframesNamespace:y=\"img-transform\"}){a=c(a,f,h),u=(m=(p=c(m,u,p)).s>a.s)?a:p,p=m?p:a,a=function(t){return s+=1,`${t}-${s}-`}(y);let{J:$,m:x,i:w,v:b,A:v,j:C}=function(t,n=t.getBoundingClientRect(),r=n,a=getComputedStyle(t).getPropertyValue(\"object-position\"),o=e(t,n)){n=i(a,n,o),a=document.createElement(\"div\");let l=document.createElement(\"div\"),s=document.createElement(\"div\"),c=document.createElement(\"div\"),m=document.createElement(\"div\");return(t=t.cloneNode(!0)).className=\"\",t.style.cssText=\"\",m.appendChild(t),c.appendChild(m),s.appendChild(c),l.appendChild(s),a.appendChild(l),Object.assign(l.style,{overflow:\"hidden\",width:`${r.width}px`,height:`${r.height}px`}),Object.assign(m.style,{transform:`translate(${n.left}px,${n.top}px)`}),Object.assign(t.style,{display:\"block\",width:`${o.width}px`,height:`${o.height}px`}),{J:a,m:l,i:s,v:c,A:m,j:t}}(p.j,p.rect,p.c,p.objectPosition,p.h);f=function t(e){var{position:n}=getComputedStyle(e);return\"static\"!=n?e:(n=e.offsetParent||e.parentElement)?t(n):e}(t).getBoundingClientRect(),y=o({m:x,i:w,f:p.c,g:u.c,curve:d,styles:g,a:a,b:m}),f=function({element:t,D:e,f:n,g:i,curve:a,styles:o,a:l,b:s}){l=`${l}-translation`;var c=s?i:n;return n=s?n:i,i=c.left-n.left,c=c.top-n.top,Object.assign(t.style,o,{position:\"absolute\",top:`${n.top-e.top}px`,left:`${n.left-e.left}px`,willChange:\"transform\",animationName:l,animationTimingFunction:r(a),animationFillMode:\"forwards\"}),`@keyframes ${l} {from {transform: translate(${i}px,${c}px);}to {transform: translate(0,0);}}`}({element:$,D:f,f:p.c,g:u.c,curve:d,styles:g,a:a,b:m}),h=function({element:t,f:e,g:n,l:a,o:o,C:l,H:s,curve:c,styles:m,a:f,b:h}){return c=r(c),f=`${f}-object-position`,e=i(l,e,a),o=i(s,n,o),n=h?o:e,h=h?e:o,Object.assign(t.style,m,{willChange:\"transform\",animationName:f,animationTimingFunction:c,animationFillMode:\"forwards\"}),`@keyframes ${f} {from {transform: translate(${n.left}px,${n.top}px);}to {transform: translate(${h.left}px,${h.top}px);}}`}({element:v,f:p.rect,g:u.rect,l:p.h,o:u.h,C:p.objectPosition,H:u.objectPosition,curve:d,styles:g,a:a,b:m});let j=function({element:t,f:e,B:n,g:i,G:a,curve:o,styles:l,a:s,b:c}){return s=`${s}-crop-position`,e={top:e.top-n.top,left:e.left-n.left},a={top:i.top-a.top,left:i.left-a.left},i=c?a:e,c=c?e:a,Object.assign(t.style,l,{willChange:\"transform\",animationName:s,animationTimingFunction:r(o),animationFillMode:\"forwards\"}),`@keyframes ${s} {from {transform: translate(${i.left}px,${i.top}px);}to {transform: translate(${c.left}px,${c.top}px);}}`}({element:b,f:p.rect,B:p.c,g:u.rect,G:u.c,curve:d,styles:g,a:a,b:m});d=function({element:t,l:e,o:n,curve:i,styles:a,a:o,b:l}){o=`${o}-scale`;let s={x:1,y:1};return n={x:n.width/e.width,y:n.height/e.height},e=l?n:s,l=l?s:n,Object.assign(t.style,a,{willChange:\"transform\",transformOrigin:\"top left\",animationName:o,animationTimingFunction:r(i),animationFillMode:\"forwards\"}),`@keyframes ${o} {from {transform: scale(${e.x},${e.y});}to {transform: scale(${l.x},${l.y});}}`}({element:C,l:p.h,o:u.h,curve:d,styles:g,a:a,b:m});let F=document.createElement(\"style\");return F.textContent=y+f+h+j+d,{applyAnimation:function(){n.appendChild(F),t.appendChild($)},cleanupAnimation:function(){t.removeChild($),n.removeChild(F)}}}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(function()): number} Function that when invoked will\n *     call the passed in function. On every invocation the next\n *     invocation of the passed in function will be exponentially\n *     later. Returned function returns timeout id.\n */\nexport function exponentialBackoff(opt_base) {\n  const getTimeout = exponentialBackoffClock(opt_base);\n  return (work) => {\n    return setTimeout(work, getTimeout());\n  };\n}\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(): number} Function that when invoked will return\n *    a number that exponentially grows per invocation.\n */\nexport function exponentialBackoffClock(opt_base) {\n  const base = opt_base || 2;\n  let count = 0;\n  return () => {\n    let wait = Math.pow(base, count++);\n    wait += getJitter(wait);\n    return wait * 1000;\n  };\n}\n\n/**\n * Add jitter to avoid the thundering herd. This can e.g. happen when\n * we poll a backend and it fails for everyone at the same time.\n * We add up to 30% (default) longer or shorter than the given time.\n *\n * @param {number} wait the amount if base milliseconds\n * @param {number=} opt_perc the min/max percentage to add or sutract\n * @return {number}\n */\nexport function getJitter(wait, opt_perc) {\n  opt_perc = opt_perc || 0.3;\n  let jitter = wait * opt_perc * Math.random();\n  if (Math.random() > 0.5) {\n    jitter *= -1;\n  }\n  return jitter;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './core/data-structures/lru-cache';\nimport {dict, hasOwn} from './core/types/object';\nimport {endsWith} from './core/types/string';\nimport {getMode} from './mode';\nimport {isArray} from './core/types';\nimport {parseQueryString} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {?} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {dict} from './core/types/object';\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject} vars A map of vars and their values.\n * @param {boolean} enableDataVars A boolean to indicate if data-vars-*\n * attribute value from target element should be included.\n */\nexport function triggerAnalyticsEvent(\n  target,\n  eventType,\n  vars = dict(),\n  enableDataVars = true\n) {\n  Services.analyticsForDocOrNull(target).then((analytics) => {\n    if (!analytics) {\n      return;\n    }\n    analytics.triggerEventForTarget(target, eventType, vars, enableDataVars);\n  });\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from './core/constants/amp-events';\nimport {Services} from './services';\nimport {\n  USER_ERROR_SENTINEL,\n  dev,\n  isUserErrorEmbed,\n  isUserErrorMessage,\n} from './log';\nimport {dict} from './core/types/object';\nimport {duplicateErrorIfNecessary} from './core/error';\nimport {experimentTogglesOrNull, getBinaryType, isCanary} from './experiments';\nimport {exponentialBackoff} from './core/types/function/exponential-backoff';\nimport {findIndex} from './core/types/array';\nimport {getMode} from './mode';\nimport {isLoadErrorMessage} from './event-helper';\nimport {isProxyOrigin} from './url';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport {triggerAnalyticsEvent} from './analytics';\nimport {urls} from './config';\n\n/**\n * @const {string}\n */\nconst CANCELLED = 'CANCELLED';\n\n/**\n * @const {string}\n */\nconst BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n\n/**\n * @const {string}\n */\nconst ABORTED = 'AbortError';\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n\n/**\n * Chance to post to the new error reporting endpoint.\n * @const {number}\n */\nconst BETA_ERROR_REPORT_URL_FREQ = 0.1;\n\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\nlet accumulatedErrorMessages = self.__AMP_ERRORS || [];\n// Use a true global, to avoid multi-module inclusion issues.\nself.__AMP_ERRORS = accumulatedErrorMessages;\n\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n  array.push(element);\n}\n\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\nlet reportingBackoff = function (work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  reportingBackoff = exponentialBackoff(1.5);\n  return reportingBackoff(work);\n};\n\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(/** @type {!JsonObject} */ (value));\n  } catch (e) {\n    return String(value);\n  }\n}\n\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\nexport function reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n  if (\n    error &&\n    !!win &&\n    isUserErrorMessage(error.message) &&\n    !isUserErrorEmbed(error.message)\n  ) {\n    reportErrorToAnalytics(/** @type {!Error} */ (error), win);\n  }\n}\n\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\nexport function reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    let isValidError;\n    if (error) {\n      if (error.message !== undefined) {\n        error = duplicateErrorIfNecessary(/** @type {!Error} */ (error));\n        isValidError = true;\n      } else {\n        const origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    }\n    // Report if error is not an expected type.\n    if (!isValidError && getMode().localDev && !getMode().test) {\n      setTimeout(function () {\n        const rethrow = new Error(\n          '_reported_ Error reported incorrectly: ' + error\n        );\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return /** @type {!Error} */ (error);\n    }\n    error.reported = true;\n\n    // `associatedElement` is used to add the i-amphtml-error class; in\n    // `#development=1` mode, it also adds `i-amphtml-element-error` to the\n    // element and sets the `error-message` attribute.\n    if (error.messageArray) {\n      const elIndex = findIndex(error.messageArray, (item) => item?.tagName);\n      if (elIndex > -1) {\n        error.associatedElement = error.messageArray[elIndex];\n      }\n    }\n    // Update element.\n    const element = opt_associatedElement || error.associatedElement;\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n      if (getMode().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    }\n\n    // Report to console.\n    if (\n      self.console &&\n      (isUserErrorMessage(error.message) ||\n        !error.expected ||\n        getMode().localDev)\n    ) {\n      const output = console.error || console.log;\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!getMode().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(AmpEvents.ERROR, error.message);\n    }\n\n    // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n    onError['call'](self, undefined, undefined, undefined, undefined, error);\n  } catch (errorReportingError) {\n    setTimeout(function () {\n      throw errorReportingError;\n    });\n  }\n  return /** @type {!Error} */ (error);\n}\n\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\nexport function cancellation() {\n  return new Error(CANCELLED);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(CANCELLED);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(CANCELLED);\n  }\n  return false;\n}\n\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\nexport function blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(BLOCK_BY_CONSENT);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(BLOCK_BY_CONSENT);\n  }\n  return false;\n}\n\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\nexport function installErrorReporting(win) {\n  win.onerror = /** @type {!Function} */ (onError);\n  win.addEventListener('unhandledrejection', (event) => {\n    if (\n      event.reason &&\n      (event.reason.message === CANCELLED ||\n        event.reason.message === BLOCK_BY_CONSENT ||\n        event.reason.message === ABORTED)\n    ) {\n      event.preventDefault();\n      return;\n    }\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\nfunction onError(message, filename, line, col, error) {\n  // Make an attempt to unhide the body but don't if the error is actually expected.\n  // eslint-disable-next-line local/no-invalid-this\n  if (this && this.document && (!error || !error.expected)) {\n    // eslint-disable-next-line local/no-invalid-this\n    makeBodyVisibleRecovery(this.document);\n  }\n  if (getMode().localDev || getMode().development || getMode().test) {\n    return;\n  }\n  let hasNonAmpJs = false;\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {\n    // Ignore errors during error report generation.\n  }\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n  const data = getErrorReportData(\n    message,\n    filename,\n    line,\n    col,\n    error,\n    hasNonAmpJs\n  );\n  if (data) {\n    reportingBackoff(() => {\n      try {\n        return reportErrorToServerOrViewer(\n          // eslint-disable-next-line local/no-invalid-this\n          this,\n          /** @type {!JsonObject} */\n          (data)\n        ).catch(() => {\n          // catch async errors to avoid recursive errors.\n        });\n      } catch (e) {\n        // catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n\n/**\n * Determines the error reporting endpoint which should be used.\n * If changing this URL, keep `docs/spec/amp-errors.md` in sync.\n * @return {string} error reporting endpoint URL.\n */\nfunction chooseReportingUrl_() {\n  return Math.random() < BETA_ERROR_REPORT_URL_FREQ\n    ? urls.betaErrorReporting\n    : urls.errorReporting;\n}\n\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\nexport function reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n\n  // Throttle reports from Stable by 90%.\n  if (data['pt'] && Math.random() < 0.9) {\n    return Promise.resolve();\n  }\n\n  return maybeReportErrorToViewer(win, data).then((reportedErrorToViewer) => {\n    if (!reportedErrorToViewer) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', chooseReportingUrl_(), true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\nexport function maybeReportErrorToViewer(win, data) {\n  const ampdocService = Services.ampdocServiceFor(win);\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n  const ampdocSingle = ampdocService.getSingleDoc();\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n  return viewer.isTrustedViewer().then((viewerTrusted) => {\n    if (!viewerTrusted) {\n      return false;\n    }\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\nexport function errorReportingDataForViewer(errorReportData) {\n  return dict({\n    'm': errorReportData['m'], // message\n    'a': errorReportData['a'], // isUserError\n    's': errorReportData['s'], // error stack\n    'el': errorReportData['el'], // tagName\n    'ex': errorReportData['ex'], // expected error?\n    'v': errorReportData['v'], // runtime\n    'pt': errorReportData['pt'], // is pre-throttled\n  });\n}\n\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\nexport function getErrorReportData(\n  message,\n  filename,\n  line,\n  col,\n  error,\n  hasNonAmpJs\n) {\n  message = buildErrorMessage_(message, error);\n  // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n  let expected = !!(error && error.expected);\n  if (/_reported_/.test(message)) {\n    return;\n  }\n  if (message == CANCELLED) {\n    return;\n  }\n\n  const detachedWindow = !(self && self.window);\n  const throttleBase = Math.random();\n\n  // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n  if (\n    isLoadErrorMessage(message) ||\n    // See https://github.com/ampproject/amphtml/issues/7353\n    // for context.\n    message == 'Script error.' ||\n    // Window has become detached, really anything can happen\n    // at this point.\n    detachedWindow\n  ) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  const isUserError = isUserErrorMessage(message);\n\n  // Only report a subset of user errors.\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  }\n\n  // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n  const data = /** @type {!JsonObject} */ (Object.create(null));\n  data['v'] = getMode().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0';\n\n  // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n\n  let runtime = '1p';\n  if (IS_SXG) {\n    runtime = 'sxg';\n    data['sxg'] = '1';\n  } else if (IS_ESM) {\n    runtime = 'esm';\n    data['esm'] = '1';\n  } else if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if (getMode().runtime) {\n    runtime = getMode().runtime;\n  }\n\n  data['rt'] = runtime;\n\n  // Add our a4a id if we are inabox\n  if (runtime === 'inabox') {\n    data['adid'] = getMode().a4aId;\n  }\n\n  // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n  data['ca'] = isCanary(self) ? '1' : '0';\n\n  // Pass binary type.\n  data['bt'] = getBinaryType(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  }\n  // Is embedded?\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    const resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    const messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  const exps = [];\n  const experiments = experimentTogglesOrNull(self);\n  for (const exp in experiments) {\n    const on = experiments[exp];\n    exps.push(`${exp}=${on ? '1' : '0'}`);\n  }\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    data['el'] = error.associatedElement?.tagName || 'u'; // Unknown\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    }\n\n    // TODO(jridgewell, #18574); Make sure error is always an object.\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location['originalHash'] || self.location.hash;\n\n  // TODO(https://github.com/ampproject/error-tracker/issues/129): Remove once\n  // all clients are serving a version with pre-throttling.\n  if (data['bt'] === 'production') {\n    // Setting this field allows the error reporting service to know that this\n    // error has already been pre-throttled for Stable, so it doesn't need to\n    // throttle again.\n    data['pt'] = '1';\n  }\n\n  pushLimit(accumulatedErrorMessages, message, 25);\n\n  return data;\n}\n\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n  const scripts = win.document.querySelectorAll('script[src]');\n  for (let i = 0; i < scripts.length; i++) {\n    if (!isProxyOrigin(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resets accumulated error messages for testing\n */\nexport function resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\nexport function reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (Services.ampdocServiceFor(win).isSingleDoc()) {\n    const vars = dict({\n      'errorName': error.name,\n      'errorMessage': error.message,\n    });\n    triggerAnalyticsEvent(\n      getRootElement_(win),\n      'user-error',\n      vars,\n      /** enableDataVars */ false\n    );\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\nfunction getRootElement_(win) {\n  const root = Services.ampdocServiceFor(win).getSingleDoc().getRootNode();\n  return dev().assertElement(root.documentElement || root.body || root);\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CSS} from '../../../build/amp-lightbox-gallery-0.1.css';\nimport {CommonSignals} from '../../../src/core/constants/common-signals';\nimport {\n  ELIGIBLE_TAP_TAGS,\n  LightboxManager,\n  LightboxThumbnailDataDef,\n  VIDEO_TAGS,\n} from './service/lightbox-manager-impl';\nimport {Gestures} from '../../../src/gesture';\nimport {Keys} from '../../../src/core/constants/key-codes';\nimport {LightboxCaption, OverflowState} from './lightbox-caption';\nimport {LightboxControls, LightboxControlsAction} from './lightbox-controls';\nimport {Services} from '../../../src/services';\nimport {SwipeDef, SwipeYRecognizer} from '../../../src/gesture-recognizers';\nimport {SwipeToDismiss} from './swipe-to-dismiss';\nimport {\n  childElementByTag,\n  closest,\n  closestAncestorElementBySelector,\n  elementByTag,\n  scopedQuerySelectorAll,\n} from '../../../src/core/dom/query';\nimport {clamp} from '../../../src/core/math';\nimport {\n  delayAfterDeferringToEventLoop,\n  secondsToTimestampString,\n} from './utils';\nimport {dev, devAssert, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {escapeCssSelectorIdent} from '../../../src/core/dom/css-selectors';\nimport {getData, getDetail, isLoaded, listen} from '../../../src/event-helper';\nimport {getElementServiceForDoc} from '../../../src/element-service';\nimport {getVerticalScrollbarWidth, toggleAttribute} from '../../../src/dom';\nimport {htmlFor} from '../../../src/static-template';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {prepareImageAnimation} from '@ampproject/animations';\nimport {reportError} from '../../../src/error-reporting';\nimport {setStyle, setStyles, toggle} from '../../../src/style';\nimport {toArray} from '../../../src/core/types/array';\nimport {triggerAnalyticsEvent} from '../../../src/analytics';\n\n/** @const */\nconst TAG = 'amp-lightbox-gallery';\nconst AMP_CAROUSEL_TAG = 'amp-carousel';\nconst DEFAULT_GALLERY_ID = 'amp-lightbox-gallery';\nconst SLIDE_ITEM_SELECTOR =\n  '.i-amphtml-slide-item, .i-amphtml-carousel-slotted';\n\n/**\n * Set of namespaces that indicate the lightbox controls mode.\n * Lightbox controls include top bar, description box\n *\n * @enum {number}\n */\nconst LightboxControlsModes = {\n  CONTROLS_DISPLAYED: 1,\n  CONTROLS_HIDDEN: 0,\n};\n\n// Use S Curves for entry and exit animations\nconst TRANSITION_CURVE = {x1: 0.8, y1: 0, x2: 0.2, y2: 1};\n\n// Keep in sync with [i-amphtml-lbg-fade]'s animation duration\nconst FADE_DURATION = 400; // ms;\nconst MAX_TRANSITION_DURATION = 700; // ms\nconst MIN_TRANSITION_DURATION = 500; // ms\nconst MAX_DISTANCE_APPROXIMATION = 250; // px\nconst MOTION_DURATION_RATIO = 0.8; // fraction of animation\n\n/**\n * The structure that represents the metadata of a lightbox element\n *\n * @typedef {{\n *   descriptionText: string,\n *   tagName: string,\n *   imageViewer: ?Element,\n *   sourceElement: !Element,\n *   element: !Element\n * }}\n */\nlet LightboxElementMetadataDef;\n\n/**\n * @private visible for testing.\n */\nexport class AmpLightboxGallery extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {!Document} */\n    this.doc_ = this.win.document;\n\n    /** @private {boolean} */\n    this.isActive_ = false;\n\n    /** @private {number} */\n    this.historyId_ = -1;\n\n    /** @private {number} */\n    this.currentElemId_ = -1;\n\n    /** @private {function(!Event)} */\n    this.boundOnKeyDown_ = this.onKeyDown_.bind(this);\n\n    /** @private {function(!Event)} */\n    this.boundSlideChangeHandler_ = this.slideChangeHandler_.bind(this);\n\n    /**\n     * @private {?./service/lightbox-manager-impl.LightboxManager}\n     */\n    this.manager_ = null;\n\n    /** @private {?../../../src/service/history-impl.History}*/\n    this.history_ = null;\n\n    /** @private {?../../../src/service/action-impl.ActionService} */\n    this.action_ = null;\n\n    /** @private {!Object<string,!Array<!LightboxElementMetadataDef>>} */\n    this.elementsMetadata_ = {\n      default: [],\n    };\n\n    /** @private {?Element} */\n    this.container_ = null;\n\n    /** @private {?Element} */\n    this.carouselContainer_ = null;\n\n    /** @private {?Element} */\n    this.overlay_ = null;\n\n    /** @private {?Element} */\n    this.mask_ = null;\n\n    /** @protected {?Element} */\n    this.navControls_ = null;\n\n    /** @private {?Element} */\n    this.carousel_ = null;\n\n    /** @private {?LightboxCaption} */\n    this.lightboxCaption_ = null;\n\n    /** @private {?LightboxControls} */\n    this.lightboxControls_ = null;\n\n    /** @private  {?Element} */\n    this.gallery_ = null;\n\n    /** @protected  {?Element} */\n    this.topBar_ = null;\n\n    /** @private {!LightboxControlsModes} */\n    this.controlsMode_ = LightboxControlsModes.CONTROLS_DISPLAYED;\n\n    /** @private {?UnlistenDef} */\n    this.unlistenClick_ = null;\n\n    /** @private {string} */\n    this.currentLightboxGroupId_ = 'default';\n\n    /**\n     * @private {boolean}\n     */\n    this.hasVerticalScrollbarWidth_ = false;\n\n    /** @private @const */\n    this.boundMeasureMutate_ = this.measureMutateElement.bind(this);\n\n    /** @private @const */\n    this.swipeToDismiss_ = new SwipeToDismiss(\n      this.win,\n      this.element,\n      (cb) => this.mutateElement(cb),\n      () => this.close_()\n    );\n  }\n\n  /** @override */\n  renderOutsideViewport() {\n    return true;\n  }\n\n  /** @override */\n  buildCallback() {\n    return lightboxManagerForDoc(this.element)\n      .then((manager) => {\n        this.manager_ = manager;\n        this.history_ = Services.historyForDoc(this.getAmpDoc());\n        this.action_ = Services.actionServiceForDoc(this.element);\n        return this.getAmpDoc().whenFirstVisible();\n      })\n      .then(() => {\n        this.container_ = htmlFor(/** @type {!Document} */ (this.doc_))`\n        <div class=\"i-amphtml-lbg\">\n          <div class=\"i-amphtml-lbg-mask\"></div>\n        </div>`;\n        this.mask_ = this.container_.querySelector('.i-amphtml-lbg-mask');\n        this.element.appendChild(this.container_);\n        this.manager_.maybeInit();\n        this.registerDefaultAction(\n          (invocation) => this.openAction_(invocation),\n          'open'\n        );\n      });\n  }\n\n  /** @override */\n  layoutCallback() {\n    // DO NOT ADD CODE HERE\n    // layoutCallback for lightbox-viewer is meaningless, lightbox-viewer\n    // doesn't have children, it just manages elements elsewhere in the page in\n    // `open_` `close_` and `updateViewer_` methods.\n    return Promise.resolve();\n  }\n\n  /**\n   * Builds all controls (top bar and description) and appends them to the\n   * lightbox container\n   * @private\n   */\n  buildOverlay_() {\n    this.overlay_ = htmlFor(this.doc_)`\n      <div class=\"i-amphtml-lbg-overlay\"></div>`;\n    const descriptionBoxElement = this.buildDescriptionBox_();\n    const controlsElement = this.buildControls_();\n    this.mutateElement(() => {\n      this.overlay_.appendChild(descriptionBoxElement);\n      this.overlay_.appendChild(controlsElement);\n      this.container_.appendChild(this.overlay_);\n    });\n  }\n\n  /**\n   * @param {string} lightboxGroupId\n   * @return {!Promise}\n   * @private\n   */\n  findOrInitializeLightbox_(lightboxGroupId) {\n    if (!this.carouselContainer_) {\n      this.carouselContainer_ = this.doc_.createElement('div');\n      this.container_.appendChild(this.carouselContainer_);\n    }\n\n    if (!this.overlay_) {\n      this.buildOverlay_();\n    }\n    return this.findOrBuildCarousel_(lightboxGroupId);\n  }\n\n  /**\n   * Return a cleaned clone of the given element for building\n   * carousel slides with.\n   * @param {!Element} element\n   * @return {!Node}\n   * @private\n   */\n  cloneLightboxableElement_(element) {\n    const fallback = element.getFallback();\n    const shouldCloneFallback =\n      element.classList.contains('amp-notsupported') && !!fallback;\n    if (shouldCloneFallback) {\n      element = fallback;\n    }\n    const deepClone = !element.classList.contains('i-amphtml-element');\n    const clonedNode = element.cloneNode(deepClone);\n    clonedNode.removeAttribute('on');\n    clonedNode.removeAttribute('id');\n    clonedNode.removeAttribute('i-amphtml-layout');\n    clonedNode.removeAttribute('fallback');\n    return clonedNode;\n  }\n  /**\n   * Given a list of lightboxable elements, build the internal carousel slides\n   * @param {!Array<!Element>} lightboxableElements\n   * @private\n   */\n  buildCarouselSlides_(lightboxableElements) {\n    let index = 0;\n    this.elementsMetadata_[this.currentLightboxGroupId_] = [];\n    lightboxableElements.forEach((element) => {\n      element.lightboxItemId = index++;\n      const clonedNode = this.cloneLightboxableElement_(element);\n      const descText = this.manager_.getDescription(element);\n      const metadata = {\n        descriptionText: descText,\n        tagName: /** @type {string} */ (clonedNode.tagName),\n        sourceElement: element,\n        element: dev().assertElement(clonedNode),\n      };\n      let slide = clonedNode;\n      if (ELIGIBLE_TAP_TAGS[clonedNode.tagName]) {\n        const container = this.doc_.createElement('div');\n        const imageViewer = htmlFor(this.doc_)`\n          <amp-image-viewer layout=\"fill\"></amp-image-viewer>`;\n        // Copy any data attributes from the cloneNode to the new slide\n        // container. For example. when cloning carousel slides, we want to\n        // carry over data-slide-id.\n        for (const name in clonedNode.dataset) {\n          container.dataset[name] = clonedNode.dataset[name];\n        }\n        clonedNode.removeAttribute('class');\n        imageViewer.appendChild(clonedNode);\n        container.appendChild(imageViewer);\n        slide = container;\n        metadata.imageViewer = imageViewer;\n      }\n      this.carousel_.appendChild(slide);\n      this.elementsMetadata_[this.currentLightboxGroupId_].push(metadata);\n    });\n  }\n\n  /**\n   * Returns the existing carousel corresponding to the group id\n   * or builds a new one.\n   * @param {string} lightboxGroupId\n   * @return {!Promise}\n   * @private\n   */\n  findOrBuildCarousel_(lightboxGroupId) {\n    devAssert(this.container_);\n    const existingCarousel = this.element.querySelector(\n      `amp-carousel[amp-lightbox-group=${escapeCssSelectorIdent(\n        lightboxGroupId\n      )}]`\n    );\n    if (existingCarousel) {\n      this.carousel_ = existingCarousel;\n      return this.showCarousel_(lightboxGroupId);\n    } else {\n      return this.buildCarousel_(lightboxGroupId);\n    }\n  }\n\n  /**\n   * Show an existing carousel. Ensure it's been unlayed out before displaying again.\n   * @param {string} lightboxGroupId\n   * @return {!Promise}\n   * @private\n   */\n  showCarousel_(lightboxGroupId) {\n    return this.mutateElement(() => {\n      const {length} = this.elementsMetadata_[lightboxGroupId];\n      this.maybeEnableMultipleItemControls_(length);\n      this.carousel_.getImpl().then((implementation) => {\n        implementation.unlayoutCallback();\n        toggle(this.carousel_, true);\n      });\n    });\n  }\n\n  /**\n   * Builds the carousel and appends it to the container.\n   * @param {string} lightboxGroupId\n   * @return {!Promise}\n   * @private\n   */\n  buildCarousel_(lightboxGroupId) {\n    const extensionVersion =\n      this.getAmpDoc().getExtensionVersion(AMP_CAROUSEL_TAG);\n    const experimentVersion = isExperimentOn(\n      this.win,\n      'amp-lightbox-gallery-carousel-0-2'\n    )\n      ? '0.2'\n      : '0.1';\n    const carouselVersion = extensionVersion ?? experimentVersion;\n\n    return Promise.all([\n      Services.extensionsFor(this.win).installExtensionForDoc(\n        this.getAmpDoc(),\n        AMP_CAROUSEL_TAG,\n        carouselVersion\n      ),\n      Services.extensionsFor(this.win).installExtensionForDoc(\n        this.getAmpDoc(),\n        'amp-image-viewer'\n      ),\n    ])\n      .then(() => {\n        return this.manager_.getElementsForLightboxGroup(lightboxGroupId);\n      })\n      .then((list) => {\n        this.carousel_ = htmlFor(this.doc_)`\n          <amp-carousel type=\"slides\" layout=\"fill\" loop=\"true\"></amp-carousel>\n        `;\n        this.carousel_.setAttribute('amp-lightbox-group', lightboxGroupId);\n        this.buildCarouselSlides_(list);\n        return this.mutateElement(() => {\n          this.carouselContainer_.appendChild(this.carousel_);\n          this.maybeEnableMultipleItemControls_(list.length);\n        });\n      });\n  }\n\n  /**\n   * @param {number} itemLength\n   * @private\n   */\n  maybeEnableMultipleItemControls_(itemLength) {\n    toggleAttribute(this.element, 'i-amphtml-lbg-single-item', itemLength <= 1);\n  }\n\n  /**\n   * Handles slide change.\n   * @param {!Event} event\n   * @private\n   */\n  slideChangeHandler_(event) {\n    const index = getData(event)['index'];\n\n    // Avoid updating the description box unless the slide actually changed.\n    // That would collapse it if we opened it with an expanded state.\n    if (index == this.currentElemId_) {\n      return;\n    }\n\n    this.currentElemId_ = index;\n    this.updateDescriptionBox_();\n  }\n\n  /**\n   * Builds the description box, containing the current slide's caption, if\n   * any.\n   * @return {!Element} The description box element.\n   * @private\n   */\n  buildDescriptionBox_() {\n    this.lightboxCaption_ = LightboxCaption.build(\n      this.doc_,\n      this.boundMeasureMutate_\n    );\n    const el = this.lightboxCaption_.getElement();\n    el.addEventListener('click', (event) => {\n      triggerAnalyticsEvent(\n        this.element,\n        'descriptionOverflowToggled',\n        dict({})\n      );\n      this.lightboxCaption_.toggleOverflow();\n      event.stopPropagation();\n      event.preventDefault();\n    });\n    return el;\n  }\n\n  /**\n   * Builds the overlay controls including the close, gallery toggle and next/\n   * prev slide buttons.\n   * @return {!Element} The container for the controls.\n   * @private\n   */\n  buildControls_() {\n    this.lightboxControls_ = LightboxControls.build(\n      this.win,\n      this.doc_,\n      this.boundMeasureMutate_\n    );\n    const el = this.lightboxControls_.getElement();\n    el.addEventListener('action', (event) => {\n      switch (getDetail(event)['action']) {\n        case LightboxControlsAction.CLOSE:\n          this.close_();\n          break;\n        case LightboxControlsAction.GALLERY:\n          this.openGallery_();\n          break;\n        case LightboxControlsAction.SLIDES:\n          this.closeGallery_();\n          break;\n        case LightboxControlsAction.NEXT:\n          this.nextSlide_();\n          break;\n        case LightboxControlsAction.PREV:\n          this.prevSlide_();\n          break;\n        default:\n          break;\n      }\n    });\n    return el;\n  }\n\n  /**\n   * Update description box text.\n   * @param {boolean=} expandDescription Whether the description should be\n   *    expanded.\n   * @private\n   */\n  updateDescriptionBox_(expandDescription = false) {\n    const descText = this.getCurrentElement_().descriptionText;\n\n    this.mutateElement(() => {\n      this.lightboxCaption_.setContent(descText);\n      // Set the caption to clip immediately, this is less jarring when the\n      // caption overflows initiially.\n      this.lightboxCaption_.setOverflowState(OverflowState.CLIP);\n      this.lightboxCaption_.toggleOverflow(expandDescription);\n    });\n  }\n\n  /**\n   * @private\n   */\n  nextSlide_() {\n    devAssert(this.carousel_)\n      .getImpl()\n      .then((carousel) => {\n        carousel.interactionNext();\n      });\n  }\n\n  /**\n   * @private\n   */\n  prevSlide_() {\n    devAssert(this.carousel_)\n      .getImpl()\n      .then((carousel) => {\n        carousel.interactionPrev();\n      });\n  }\n\n  /**\n   * We should not try to toggle controls or otherwise handle a click on\n   * the lightbox if the click has already been handled by a link, a button,\n   * or an existing tap action handler.\n   * @param {!Event} e\n   * @return {boolean}\n   */\n  shouldHandleClick_(e) {\n    const target = dev().assertElement(e.target);\n    const consumingElement = closest(\n      target,\n      (element) => {\n        return (\n          element.tagName == 'BUTTON' ||\n          element.tagName == 'A' ||\n          element.getAttribute('role') == 'button'\n        );\n      },\n      this.container_\n    );\n\n    const clickConsumed = consumingElement !== null;\n    const hasTap = this.action_.hasAction(\n      target,\n      'tap',\n      dev().assertElement(this.container_)\n    );\n    return !(clickConsumed || hasTap);\n  }\n\n  /**\n   * Toggle lightbox overlay (description and controls).\n   * @param {!Event} e\n   * @private\n   */\n  onToggleOverlay_(e) {\n    if (this.shouldHandleClick_(e)) {\n      if (this.controlsMode_ == LightboxControlsModes.CONTROLS_HIDDEN) {\n        this.showOverlay_();\n      } else if (!this.container_.hasAttribute('gallery-view')) {\n        this.hideControls_();\n      }\n    }\n    triggerAnalyticsEvent(this.element, 'controlsToggled', dict({}));\n  }\n\n  /**\n   * Show the lightbox overlay (description and controls).\n   * @private\n   */\n  showOverlay_() {\n    this.overlay_.setAttribute('i-amphtml-lbg-fade', 'in');\n    this.controlsMode_ = LightboxControlsModes.CONTROLS_DISPLAYED;\n  }\n\n  /**\n   * Hide the lightbox overlay (description and controls).\n   * @private\n   */\n  hideControls_() {\n    this.overlay_.setAttribute('i-amphtml-lbg-fade', 'out');\n    this.controlsMode_ = LightboxControlsModes.CONTROLS_HIDDEN;\n  }\n\n  /**\n   * Set up event listeners.\n   * @private\n   */\n  setupEventListeners_() {\n    devAssert(this.container_);\n    const onToggleControls = this.onToggleOverlay_.bind(this);\n    this.unlistenClick_ = listen(\n      dev().assertElement(this.container_),\n      'click',\n      onToggleControls\n    );\n  }\n\n  /**\n   * Clean up event listeners.\n   * @private\n   */\n  cleanupEventListeners_() {\n    if (this.unlistenClick_) {\n      this.unlistenClick_();\n      this.unlistenClick_ = null;\n    }\n  }\n\n  /**\n   * Set up gestures\n   * @private\n   */\n  setupGestures_() {\n    const gestures = Gestures.get(dev().assertElement(this.carousel_));\n    gestures.onGesture(SwipeYRecognizer, (e) => {\n      const {data} = e;\n      this.swipeGesture_(data);\n    });\n  }\n\n  /**\n   * Handles a swipe gesture, updating the current swipe to dismiss state.\n   * @param {!SwipeDef} data\n   */\n  swipeGesture_(data) {\n    if (data.first) {\n      const {sourceElement} = this.getCurrentElement_();\n      const parentCarousel =\n        this.getSourceElementParentCarousel_(sourceElement);\n\n      this.swipeToDismiss_.startSwipe({\n        swipeElement: dev().assertElement(this.carousel_),\n        hiddenElement: parentCarousel || sourceElement,\n        mask: dev().assertElement(this.mask_),\n        overlay: dev().assertElement(this.overlay_),\n      });\n      return;\n    }\n\n    this.swipeToDismiss_.swipeMove(data);\n  }\n\n  /**\n   * Pauses lightbox childred.\n   */\n  pauseLightboxChildren_() {\n    const lbgId = this.currentLightboxGroupId_;\n    const slides = this.elementsMetadata_[lbgId].map(\n      (elemMetadata) => elemMetadata.element\n    );\n    Services.ownersForDoc(this.element).schedulePause(this.element, slides);\n  }\n\n  /**\n   * @return {!LightboxElementMetadataDef}\n   * @private\n   */\n  getCurrentElement_() {\n    const lbgId = this.currentLightboxGroupId_;\n    const currentElement = devAssert(\n      this.elementsMetadata_[lbgId][this.currentElemId_]\n    );\n    return currentElement;\n  }\n\n  /**\n   * @param {!Element} element The element to open a lightbox for.\n   * @param {boolean=} expandDescription Whether or not the description should\n   *    be initially expanded. Defaults to collapsed.\n   * @return {!Promise<undefined>} A Promise that resolves once the open has\n   *    completed.\n   */\n  open(element, expandDescription = false) {\n    return this.openLightboxGallery_(\n      dev().assertElement(element),\n      expandDescription\n    )\n      .then(() => {\n        return this.history_.push(this.close_.bind(this));\n      })\n      .then((historyId) => {\n        this.historyId_ = historyId;\n      });\n  }\n\n  /**\n   * Opens the lightbox-gallery with either the invocation source or\n   * the element referenced by the `id` argument.\n   * Examples:\n   *  // Opens the element tapped.\n   *  on=\"tap:myLightboxGallery'\n   *\n   *  // Opens the element referenced by elementId\n   *  on=\"tap:myLightboxGallery.open(id='<elementId>')\n   * @param {!../../../src/service/action-impl.ActionInvocation} invocation\n   * @private\n   */\n  openAction_(invocation) {\n    const args = invocation.args || {};\n    const id = args['id'];\n    const expandDescription = args['expandDescription'];\n    const target = id ? this.getAmpDoc().getElementById(id) : invocation.caller;\n    userAssert(\n      target,\n      'amp-lightbox-gallery.open: element with id: %s not found',\n      id\n    );\n    this.open(dev().assertElement(target), expandDescription);\n  }\n\n  /**\n   * Opens the lightbox-gallery and displays the given element inside.\n   * @param {!Element} element Element to lightbox.\n   * @param {boolean=} expandDescription Whether or not the description should\n   *    be initially expanded.\n   * @return {!Promise}\n   * @private\n   */\n  openLightboxGallery_(element, expandDescription) {\n    const lightboxGroupId = element.getAttribute('lightbox') || 'default';\n    this.currentLightboxGroupId_ = lightboxGroupId;\n    this.hasVerticalScrollbarWidth_ = getVerticalScrollbarWidth(this.win) > 0;\n    return this.findOrInitializeLightbox_(lightboxGroupId)\n      .then(() => {\n        return this.getViewport().enterLightboxMode();\n      })\n      .then(() => {\n        return this.mutateElement(() => {\n          toggle(this.element, true);\n          setStyle(this.element, 'opacity', 0);\n          this.overlay_.removeAttribute('i-amphtml-lbg-fade');\n        });\n      })\n      .then(() => {\n        this.isActive_ = true;\n\n        const owners = Services.ownersForDoc(this.element);\n        owners.scheduleLayout(\n          this.element,\n          dev().assertElement(this.container_)\n        );\n\n        this.doc_.documentElement.addEventListener(\n          'keydown',\n          this.boundOnKeyDown_\n        );\n\n        this.carousel_.addEventListener(\n          'slideChange',\n          this.boundSlideChangeHandler_\n        );\n\n        this.setupGestures_();\n        this.setupEventListeners_();\n\n        return this.carousel_.signals().whenSignal(CommonSignals.LOAD_END);\n      })\n      .then(() => this.openLightboxForElement_(element, expandDescription))\n      .then(() => {\n        setStyle(this.element, 'opacity', '');\n        this.showOverlay_();\n        triggerAnalyticsEvent(this.element, 'lightboxOpened', dict({}));\n      });\n  }\n\n  /**\n   * Given a lightbox element index, opens the internal carousel slide\n   * associated with said index, updates the description, and initializes\n   * the image viewer if the element is an amp-img.\n   * @param {!Element} element\n   * @param {boolean=} expandDescription Whether or not the description should\n   *    be initially expanded.\n   * @return {!Promise}\n   * @private\n   */\n  openLightboxForElement_(element, expandDescription) {\n    this.currentElemId_ = element.lightboxItemId;\n    devAssert(this.carousel_)\n      .getImpl()\n      .then((carousel) => carousel.goToSlide(this.currentElemId_));\n    this.updateDescriptionBox_(expandDescription);\n    return this.enter_();\n  }\n\n  /**\n   * Returns true if the element is loaded and contains an img.\n   * @param {!Element} element\n   * @return {boolean}\n   * @private\n   */\n  elementTypeCanBeAnimated_(element) {\n    if (!element || !isLoaded(element)) {\n      return false;\n    }\n    if (!ELIGIBLE_TAP_TAGS[element.tagName]) {\n      return false;\n    }\n    const img = elementByTag(dev().assertElement(element), 'img');\n    if (!img) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * It's possible for the current lightbox to be displaying an image that\n   * is not visible in the viewport. We should not transition those images.\n   * This function checks if the currently lightboxed image is the source image\n   * that we transitioned on (in which case it is guaranteed to be in viewport)\n   * or if it belongs to a carousel, in which case we sync the carousel.\n   * @return {boolean}\n   * @private\n   */\n  shouldAnimateOut_() {\n    const target = this.getCurrentElement_().sourceElement;\n    return this.elementTypeCanBeAnimated_(target);\n  }\n\n  /**\n   * Transitions the sourceElement into the lightbox or the lightbox to the\n   * sourceElement.\n   * @param {!Element} sourceElement The element that is the source of what is\n   *    rendered in the lightbox.\n   * @param {boolean} enter Whether this is an enter or exit transition.\n   * @return {!Promise} A Promise that resolves once the transition is complete.\n   * @private\n   */\n  transitionImg_(sourceElement, enter) {\n    return this.getCurrentElement_()\n      .imageViewer.getImpl()\n      .then((imageViewer) => {\n        const {height, width} = imageViewer.getImageBoxWithOffset() || {};\n\n        // Check if our imageBox has a width or height. We may be in the\n        // gallery view if not, and we do not want to animate.\n        if (!width || !height) {\n          return this.fade_(/*fadeIn*/ enter);\n        }\n\n        const lightboxImg = imageViewer.getImage();\n        const sourceImg = childElementByTag(sourceElement, 'img');\n        return this.runImgTransition_(\n          enter ? sourceImg : lightboxImg,\n          enter ? lightboxImg : sourceImg,\n          enter\n        );\n      });\n  }\n\n  /**\n   * Gets the duration for how long to animate the transition, based on the\n   * distance and size of the viewport.\n   * @param {!Element} srcImg The img to transition from.\n   * @param {!Element} targetImg The img to transition to.\n   * @return {number} How long to animate for, in milliseconds.\n   * @private\n   */\n  getTransitionDurationFromElements_(srcImg, targetImg) {\n    const srcRect = srcImg./*OK*/ getBoundingClientRect();\n    const destRect = targetImg./*OK*/ getBoundingClientRect();\n    const viewportHeight = this.getViewport().getSize().height;\n    const dy = Math.abs(destRect.top - srcRect.top);\n\n    return this.getTransitionDuration_(Math.abs(dy), viewportHeight);\n  }\n\n  /**\n   * Runs an img transition, both transitioning the `<img>` itself as well as\n   * the lightbox background.\n   * @param {!HTMLImageElement} srcImg The img to transition from.\n   * @param {!HTMLImageElement} targetImg The img to transition to.\n   * @param {boolean} enter Whether this is an enter or exxit transition.\n   * @return {Promise} A Promise that resolves once the transition is complete.\n   * @private\n   */\n  runImgTransition_(srcImg, targetImg, enter) {\n    const carousel = dev().assertElement(this.carousel_);\n    const container = dev().assertElement(this.container_);\n\n    let duration;\n    let motionDuration;\n    let imageAnimation;\n\n    const measure = () => {\n      const srcCropEl =\n        closestAncestorElementBySelector(srcImg, 'amp-img') || srcImg;\n      const targetCropEl =\n        closestAncestorElementBySelector(targetImg, 'amp-img') || targetImg;\n\n      duration = this.getTransitionDurationFromElements_(srcImg, targetImg);\n      motionDuration = MOTION_DURATION_RATIO * duration;\n      // Prepare the actual image animation.\n      try {\n        imageAnimation = prepareImageAnimation({\n          styleContainer: this.getAmpDoc().getHeadNode(),\n          transitionContainer: this.getAmpDoc().getBody(),\n          srcImg,\n          srcCropRect: srcCropEl./*OK*/ getBoundingClientRect(),\n          targetImg,\n          targetCropRect: targetCropEl./*OK*/ getBoundingClientRect(),\n          styles: {\n            'animationDuration': `${motionDuration}ms`,\n            // Matches z-index for `.i-amphtml-lbg`.\n            'zIndex': 2147483642,\n          },\n          keyframesNamespace: undefined,\n          curve: TRANSITION_CURVE,\n        });\n      } catch (e) {\n        reportError(e);\n      }\n    };\n\n    const mutate = () => {\n      toggle(carousel, enter);\n      // Undo opacity 0 from `openLightboxGallery_`\n      setStyle(this.element, 'opacity', '');\n      // Fade in/out the background in sync with the motion.\n      setStyles(container, {\n        animationName: enter ? 'fadeIn' : 'fadeOut',\n        animationTimingFunction: 'cubic-bezier(0.8, 0, 0.2, 1)',\n        animationDuration: `${motionDuration}ms`,\n        animationFillMode: 'forwards',\n      });\n      // Fade in the carousel at the end of the movement.\n      setStyles(carousel, {\n        animationName: 'fadeIn',\n        animationDelay: `${motionDuration - 0.01}ms`,\n        animationDuration: '0.01ms',\n        animationFillMode: 'forwards',\n      });\n      srcImg.classList.add('i-amphtml-ghost');\n      targetImg.classList.add('i-amphtml-ghost');\n      // Apply the image animation prepared in the measure step.\n      if (imageAnimation) {\n        imageAnimation.applyAnimation();\n      }\n    };\n\n    const cleanup = () => {\n      toggle(this.element, enter);\n      setStyle(container, 'animationName', '');\n      setStyle(carousel, 'animationName', '');\n      srcImg.classList.remove('i-amphtml-ghost');\n      targetImg.classList.remove('i-amphtml-ghost');\n      if (imageAnimation) {\n        imageAnimation.cleanupAnimation();\n      }\n    };\n\n    return this.measureMutateElement(measure, mutate)\n      .then(() => delayAfterDeferringToEventLoop(this.win, duration))\n      .then(() => this.mutateElement(cleanup));\n  }\n\n  /**\n   * Animates an image from its current location to its target location in the\n   * lightbox.\n   * @param {!Element} sourceElement\n   * @return {!Promise}\n   * @private\n   */\n  transitionImgIn_(sourceElement) {\n    return this.transitionImg_(sourceElement, true);\n  }\n\n  /**\n   * Animate the lightbox image back to its original position in the page..\n   * @param {!Element} sourceElement\n   * @return {!Promise}\n   * @private\n   */\n  transitionImgOut_(sourceElement) {\n    return this.transitionImg_(sourceElement, false);\n  }\n\n  /**\n   * If no transition image is applicable, fade the lightbox in and out.\n   * @param {boolean} fadeIn Whether the lighbox is fading in or out.\n   * @return {!Promise}\n   * @private\n   */\n  fade_(fadeIn) {\n    return this.mutateElement(() => {\n      if (fadeIn) {\n        toggle(dev().assertElement(this.carousel_), true);\n        toggle(this.element, true);\n      }\n\n      this.element.setAttribute('i-amphtml-lbg-fade', fadeIn ? 'in' : 'out');\n    })\n      .then(() => delayAfterDeferringToEventLoop(this.win, FADE_DURATION))\n      .then(() => {\n        this.element.removeAttribute('i-amphtml-lbg-fade');\n\n        if (!fadeIn) {\n          toggle(dev().assertElement(this.carousel_), false);\n          toggle(this.element, false);\n        }\n      });\n  }\n\n  /**\n   * Entry animation to transition in a lightboxable image\n   * @return {!Promise}\n   * @private\n   */\n  enter_() {\n    // TODO (cathyxz): make this generalizable to more than just images\n    const {sourceElement} = this.getCurrentElement_();\n    if (!this.elementTypeCanBeAnimated_(sourceElement)) {\n      return this.fade_(/*fadeIn*/ true);\n    }\n\n    return this.getCurrentElement_()\n      .imageViewer.signals()\n      .whenSignal(CommonSignals.LOAD_END)\n      .then(() => this.transitionImgIn_(sourceElement));\n  }\n\n  /**\n   * Animation for closing lightbox\n   * @return {!Promise}\n   * @private\n   */\n  exit_() {\n    const {sourceElement} = this.getCurrentElement_();\n    if (!this.shouldAnimateOut_()) {\n      return this.fade_(/*fadeIn*/ false);\n    }\n\n    return this.transitionImgOut_(sourceElement);\n  }\n\n  /**\n   * Calculates transition duration from vertical distance traveled\n   * @param {number} dy\n   * @param {number=} maxY\n   * @param {number=} minDur\n   * @param {number=} maxDur\n   * @return {number}\n   * @private\n   */\n  getTransitionDuration_(\n    dy,\n    maxY = MAX_DISTANCE_APPROXIMATION,\n    minDur = MIN_TRANSITION_DURATION,\n    maxDur = MAX_TRANSITION_DURATION\n  ) {\n    const distanceAdjustedDuration = (Math.abs(dy) / maxY) * maxDur;\n    return clamp(distanceAdjustedDuration, minDur, maxDur);\n  }\n\n  /**\n   * @param {!Element} sourceElement The source elemen to check.\n   * @return {?Element} The parent carousel of the sourceElement, if one\n   *    exists.\n   */\n  getSourceElementParentCarousel_(sourceElement) {\n    // TODO(#13011): change to a tag selector after `<amp-carousel>`\n    // type='carousel' starts supporting goToSlide.\n    return closestAncestorElementBySelector(\n      sourceElement,\n      'amp-carousel[type=\"slides\"], amp-base-carousel'\n    );\n  }\n\n  /**\n   * If the currently lightbox-ed element is bound to a carousel, then sync\n   *  the carousel so that it is showing the currently lightbox-ed element.\n   * @private\n   */\n  maybeSyncSourceCarousel_() {\n    const target = this.getCurrentElement_().sourceElement;\n    const parentCarousel = this.getSourceElementParentCarousel_(target);\n    if (parentCarousel) {\n      const allSlides = toArray(\n        scopedQuerySelectorAll(parentCarousel, SLIDE_ITEM_SELECTOR)\n      );\n      const targetSlide = dev().assertElement(\n        closestAncestorElementBySelector(target, SLIDE_ITEM_SELECTOR)\n      );\n      const targetSlideIndex = allSlides.indexOf(targetSlide);\n      devAssert(parentCarousel)\n        .getImpl()\n        .then((carousel) => carousel.goToSlide(targetSlideIndex));\n    }\n  }\n\n  /**\n   * Closes the lightbox-gallery\n   * @return {!Promise}\n   * @private\n   */\n  close_() {\n    if (!this.isActive_) {\n      return Promise.resolve();\n    }\n\n    this.maybeSyncSourceCarousel_();\n\n    this.isActive_ = false;\n\n    this.cleanupEventListeners_();\n\n    this.doc_.documentElement.removeEventListener(\n      'keydown',\n      this.boundOnKeyDown_\n    );\n\n    this.carousel_.removeEventListener(\n      'slideChange',\n      this.boundSlideChangeHandler_\n    );\n\n    const gestures = Gestures.get(dev().assertElement(this.carousel_));\n    gestures.cleanup();\n\n    this.lightboxCaption_.toggleOverflow(false);\n    return this.mutateElement(() => {\n      // If we do not have a vertical scrollbar taking width, immediately\n      // leave lightbox mode so that the user can scroll the page. This makes\n      // things feel much more responsive. When we have a vertical scrollbar,\n      // taking width we do not leave lightbox mode here as it will cause jank\n      // at the start of the animation. On browsers with non-overlaying\n      // scrollbars, this is still consistent, as they cannot scroll during\n      // the animation if it has  a width, or if it does not (i.e. there is no\n      // overflow to scroll).\n      if (!this.hasVerticalScrollbarWidth_) {\n        this.getViewport().leaveLightboxMode();\n      }\n      // If there's gallery, set gallery to display none\n      this.container_.removeAttribute('gallery-view');\n\n      if (this.gallery_) {\n        this.gallery_.classList.add('i-amphtml-ghost');\n        this.gallery_ = null;\n      }\n    })\n      .then(() => this.exit_())\n      .then(() => {\n        // Leave lightbox mode now that it will not affect the animation.\n        if (this.hasVerticalScrollbarWidth_) {\n          this.getViewport().leaveLightboxMode();\n        }\n        Services.ownersForDoc(this.element).schedulePause(\n          this.element,\n          dev().assertElement(this.container_)\n        );\n        this.pauseLightboxChildren_();\n        this.carousel_ = null;\n        if (this.historyId_ != -1) {\n          this.history_.pop(this.historyId_);\n        }\n      });\n  }\n\n  /**\n   * Handles keyboard events for the lightbox.\n   *  -Esc will close the lightbox.\n   * @param {!Event} event\n   * @private\n   */\n  onKeyDown_(event) {\n    if (!this.isActive_) {\n      return;\n    }\n    const {key} = event;\n    switch (key) {\n      case Keys.ESCAPE:\n        this.close_();\n        break;\n      case Keys.LEFT_ARROW:\n        this.maybeSlideCarousel_(/*direction*/ -1);\n        break;\n      case Keys.RIGHT_ARROW:\n        this.maybeSlideCarousel_(/*direction*/ 1);\n        break;\n      default:\n      // Key not registered. Do nothing.\n    }\n  }\n\n  /**\n   * @param {number} direction 1 for forward or -1 for backwards.\n   * @private\n   */\n  maybeSlideCarousel_(direction) {\n    const isGalleryView = this.container_.hasAttribute('gallery-view');\n    if (isGalleryView) {\n      return;\n    }\n    devAssert(this.carousel_)\n      .getImpl()\n      .then((carousel) => {\n        carousel.goCallback(\n          direction,\n          /* animate */ true,\n          /* autoplay */ false\n        );\n      });\n  }\n\n  /**\n   * Display gallery view to show thumbnails of lightboxed elements\n   * @private\n   */\n  openGallery_() {\n    // Build gallery div for the first time\n    if (!this.gallery_) {\n      this.findOrBuildGallery_();\n    }\n    this.lightboxCaption_.toggleOverflow(false);\n    this.mutateElement(() => {\n      this.container_.setAttribute('gallery-view', '');\n      toggle(dev().assertElement(this.carousel_), false);\n    });\n    triggerAnalyticsEvent(this.element, 'thumbnailsViewToggled', dict({}));\n  }\n\n  /**\n   * Close gallery view\n   * @return {!Promise}\n   * @private\n   */\n  closeGallery_() {\n    return this.mutateElement(() => {\n      this.container_.removeAttribute('gallery-view');\n      toggle(dev().assertElement(this.carousel_), true);\n      this.updateDescriptionBox_();\n    });\n  }\n\n  /**\n   * @private\n   */\n  findOrBuildGallery_() {\n    const group = this.currentLightboxGroupId_;\n    this.gallery_ = this.element.querySelector(\n      `.i-amphtml-lbg-gallery[amp-lightbox-group=${escapeCssSelectorIdent(\n        group\n      )}]`\n    );\n    if (this.gallery_) {\n      this.gallery_.classList.remove('i-amphtml-ghost');\n      this.updateVideoThumbnails_();\n    } else {\n      // Build gallery\n      this.gallery_ = htmlFor(/** @type {!Document} */ (this.doc_))`\n      <div class=\"i-amphtml-lbg-gallery\"></div>`;\n      this.gallery_.setAttribute(\n        'amp-lightbox-group',\n        this.currentLightboxGroupId_\n      );\n\n      this.initializeThumbnails_();\n\n      this.mutateElement(() => {\n        this.container_.appendChild(this.gallery_);\n      });\n    }\n  }\n\n  /**\n   * Update timestamps for all videos in gallery thumbnails.\n   * @private\n   */\n  updateVideoThumbnails_() {\n    const thumbnails = this.manager_\n      .getThumbnails(this.currentLightboxGroupId_)\n      .map((thumbnail, index) => ({index, ...thumbnail}))\n      .filter((thumbnail) => VIDEO_TAGS[thumbnail.element.tagName]);\n\n    this.mutateElement(() => {\n      thumbnails.forEach((thumbnail) => {\n        thumbnail.timestampPromise.then((ts) => {\n          // Many video players (e.g. amp-youtube) that don't support this API\n          // will often return 1. So sometimes we will erroneously show a\n          // timestamp of 1 second instead of no timestamp.\n          if (!ts || isNaN(ts)) {\n            return;\n          }\n          const timestamp = secondsToTimestampString(ts);\n          const thumbnailContainer = dev().assertElement(\n            this.gallery_.childNodes[thumbnail.index]\n          );\n          const timestampDiv = childElementByTag(thumbnailContainer, 'div');\n          if (timestampDiv.childNodes.length > 1) {\n            timestampDiv.removeChild(timestampDiv.childNodes[1]);\n          }\n          timestampDiv.appendChild(this.doc_.createTextNode(timestamp));\n          timestampDiv.classList.add('i-amphtml-lbg-has-timestamp');\n        });\n      });\n    });\n  }\n\n  /**\n   * Create thumbnails displayed in lightbox gallery.\n   * This function only supports initialization now.\n   * @private\n   */\n  initializeThumbnails_() {\n    const thumbnails = [];\n    this.manager_\n      .getThumbnails(this.currentLightboxGroupId_)\n      .forEach((thumbnail) => {\n        // Don't include thumbnails for ads, this may be subject to\n        // change pending user feedback or ux experiments after launch\n        if (thumbnail.element.tagName == 'AMP-AD') {\n          return;\n        }\n        const thumbnailElement = this.createThumbnailElement_(thumbnail);\n        thumbnails.push(thumbnailElement);\n      });\n    this.mutateElement(() => {\n      thumbnails.forEach((thumbnailElement) => {\n        this.gallery_.appendChild(thumbnailElement);\n      });\n    });\n  }\n\n  /**\n   * @param {Event} event\n   * @param {number} id\n   * @private\n   */\n  handleThumbnailClick_(event, id) {\n    event.stopPropagation();\n    Promise.all([\n      this.closeGallery_(),\n      devAssert(this.carousel_).getImpl(),\n    ]).then((values) => {\n      this.currentElemId_ = id;\n      values[1].goToSlide(this.currentElemId_);\n      this.updateDescriptionBox_();\n    });\n  }\n\n  /**\n   * Create an element inside gallery from the thumbnail info from manager.\n   * @param {!LightboxThumbnailDataDef} thumbnailObj\n   * @return {!Element}\n   * @private\n   */\n  createThumbnailElement_(thumbnailObj) {\n    const element = htmlFor(/** @type {!Document} */ (this.doc_))`\n    <div class=\"i-amphtml-lbg-gallery-thumbnail\">\n      <img class=\"i-amphtml-lbg-gallery-thumbnail-img\"></img>\n    </div>`;\n    const imgElement = childElementByTag(element, 'img');\n\n    if (thumbnailObj.srcset) {\n      imgElement.setAttribute('srcset', thumbnailObj.srcset.stringify());\n    } else {\n      imgElement.setAttribute('src', thumbnailObj.placeholderSrc);\n    }\n    element.appendChild(imgElement);\n\n    if (VIDEO_TAGS[thumbnailObj.element.tagName]) {\n      const timestampDiv = htmlFor(/** @type {!Document} */ (this.doc_))`\n      <div class=\"i-amphtml-lbg-thumbnail-timestamp-container\">\n        <span class=\"i-amphtml-lbg-thumbnail-play-icon\"></span>\n      <div>`;\n\n      thumbnailObj.timestampPromise.then((ts) => {\n        // Many video players (e.g. amp-youtube) that don't support this API\n        // will often return 1. This will sometimes result in erroneous values\n        // of 1 second for video players that don't support getDuration.\n        if (!ts || isNaN(ts)) {\n          return;\n        }\n        const timestamp = secondsToTimestampString(ts);\n        timestampDiv.appendChild(this.doc_.createTextNode(timestamp));\n        timestampDiv.classList.add('i-amphtml-lbg-has-timestamp');\n      });\n      element.appendChild(timestampDiv);\n    }\n\n    element.addEventListener('click', (e) => {\n      this.handleThumbnailClick_(e, thumbnailObj.element.lightboxItemId);\n    });\n    return element;\n  }\n}\n\n/**\n * Tries to find an existing amp-lightbox-gallery, if there is none, it adds a\n * default one.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @return {!Promise<undefined>}\n */\nexport function installLightboxGallery(ampdoc) {\n  // Make sure to wait for the ampdoc to finish loading, see:\n  // https://github.com/ampproject/amphtml/issues/19728#issuecomment-446033966\n  return ampdoc\n    .whenReady()\n    .then(() => ampdoc.getBody())\n    .then((body) => {\n      const existingGallery = elementByTag(ampdoc.getRootNode(), TAG);\n      if (!existingGallery) {\n        const gallery = ampdoc.win.document.createElement(TAG);\n        gallery.setAttribute('layout', 'nodisplay');\n        gallery.setAttribute('id', DEFAULT_GALLERY_ID);\n        body.appendChild(gallery);\n      }\n    });\n}\n\n/**\n * Returns a promise for the LightboxManager.\n * @param {!Element} element\n * @return {!Promise<?LightboxManager>}\n */\nfunction lightboxManagerForDoc(element) {\n  return /** @type {!Promise<?LightboxManager>} */ (\n    getElementServiceForDoc(\n      element,\n      'amp-lightbox-manager',\n      'amp-lightbox-gallery'\n    )\n  );\n}\n\nAMP.extension(TAG, '0.1', (AMP) => {\n  AMP.registerElement(TAG, AmpLightboxGallery, CSS);\n  AMP.registerServiceForDoc('amp-lightbox-manager', LightboxManager);\n  Services.extensionsFor(AMP.win).addDocFactory(installLightboxGallery);\n});\n"],
  "mappings": ";;;;;;;;;AAgBA,MAAI;AASG,6BAA2B;AAChC,QAAI,UAAU;AACZ,aAAO;;AAMT,eAAW,QAAQ,QAAQ;AAC3B,WAAO;;AAwBT,MAAa,WAEX,qBAAc;AAAA,QAAA,QAAA;AAAA,oBAAA,MAAA;AAEZ,SAAK,UAAU,IAAW,QAAQ,SAAC,KAAK,KAAQ;AAE9C,YAAK,UAAU;AAEf,YAAK,SAAS;;;;;AClEb,MAAM,OAAM;;;;ACoBZ,MAAM,gBAAgB;IAI3B,kBAAkB;IAKlB,UAAU;IAKV,OAAO;IAKP,SAAS;IAMT,YAAY;IAaZ,cAAc;IAOd,UAAU;IAaV,UAAU;IAKV,QAAQ;;;;AC/DH,MAAM,YAAY;IACvB,YAAY;IACZ,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IAGnB,UAAU;IACV,SAAS;IACT,YAAY;IACZ,UAAU;IACV,OAAO;IACP,cAAc;IACd,QAAQ;;;;ACXH,mBAAiB,WAAW;AACjC,WAAO,YAAY,MAAM,UAAU,MAAM,KAAK,aAAa;;AAQtD,MAAO,UAAW,MAAX;AAkDP,kBAAgB,OAAO,cAAc;AAC1C,QAAM,UAAU;AAChB,QAAI,QAAQ;AACZ,aAAS,KAAI,GAAG,KAAI,MAAM,QAAQ,MAAK;AACrC,UAAM,OAAO,MAAM;AACnB,UAAI,aAAa,MAAM,IAAG,QAAQ;AAChC,gBAAQ,KAAK;aACR;AACL,YAAI,QAAQ,IAAG;AACb,gBAAM,SAAS;;AAEjB;;;AAGJ,QAAI,QAAQ,MAAM,QAAQ;AACxB,YAAM,SAAS;;AAEjB,WAAO;;AAYF,qBAAmB,OAAO,WAAW;AAC1C,aAAS,KAAI,GAAG,KAAI,MAAM,QAAQ,MAAK;AACrC,UAAI,UAAU,MAAM,KAAI,IAAG,QAAQ;AACjC,eAAO;;;AAGX,WAAO;;AA2CF,sBAAoB,OAAO,MAAM;AACtC,QAAM,QAAQ,MAAM,QAAQ;AAC5B,QAAI,SAAS,IAAI;AACf,aAAO;;AAET,UAAM,OAAO,OAAO;AACpB,WAAO;;;;ACvFF,oBAAkB,QAAQ,WAAW,OAAO;AACjD,QAAI,OAAO,UAAU,UAAU;AAC7B,cAAQ;;AAEV,QAAI,QAAQ,UAAU,SAAS,OAAO,QAAQ;AAC5C,aAAO;;AAET,WAAO,OAAO,QAAQ,WAAW,WAAW;;AAoHvC,oBAAkB,IAAG,cAAc,WAAW;AACnD,QAAI,GAAE,UAAU,cAAc;AAC5B,aAAO;;AAET,mBAAe,eAAe,GAAE;AAChC,QAAI,UAAU;AACd,WAAO,eAAe,QAAQ,QAAQ;AACpC,iBAAW;;AAEb,WAAO,QAAQ,MAAM,GAAG,gBAAgB;;;;ACjM1C,MAAA,oBAAuD,OAAO;AAA9D,MAAuB,UAAvB,kBAAO;AAAP,MAA0C,YAA1C,kBAAgC;AAmBzB,eAAa,aAAa;AAC/B,QAAM,MAAM,OAAO,OAAO;AAC1B,QAAI,aAAa;AACf,aAAO,OAAO,KAAK;;AAErB,WAAO;;AAcF,gBAAc,aAAa;AAGhC,WAAmC,eAAe;;;;AC/B7C,qBAAmB,OAAO;AAC/B,WAAO,UAAK,OAAL,SAAA,MAAO,aAAoC;;;;ACD7C,MAAM,sBAAsB;AAQ5B,mCAAiC,KAAK;AAE3C,QAAI,UAAU,MAAM;AAClB,YAA8B;AAC9B,aAAO,IAAI,QAAQ,gBAAiB,KAAI,KAAJ,MAAa,IAAI,KAAO;;AAE9D,WAAO;;AAQF,8BAA4B,SAAS;AAC1C,WAAO,QAAQ,QAAQ,wBAAwB;;;;ACA1C,kBACL,UACA,gBACA,aACA,UACA;AAAA,QAFA,gBAEA,QAAA;AAFA,oBAAc;;AAGd,QAAI,gBAAgB;AAClB,aAAO;;AAIT,QAAI,YAAY,CAAC,SAAS,aAAa,WAAW;AAChD,qBAAe;;AAMjB,QAAI,KAAI;AAGR,QAAM,eAAe,YAAY,MAAM;AACvC,QAAI,UAAU,aAAa;AAC3B,QAAM,eAAe,CAAC;AAEtB,WAAO,aAAa,QAAQ;AAC1B,UAAM,WAAW,UAAU;AAC3B,UAAM,eAAe,aAAa;AAElC,iBAAW,wBAAwB,YAAY;AAC/C,mBAAa,KAAK,UAAU,aAAa;;AAG3C,QAAM,QAAQ,IAAI,MAAM;AACxB,UAAM,eAAe,OAAO,cAAc,SAAC,GAAD;AAAA,aAAO,MAAM;;AAIvD,SAAK,sBAAL,OAAA,SAAA,KAAK,mBAAqB;AAC1B,UAAM;;;;ACpED,qCAAmC,OAAO;AAC/C,QAAM,kBAAkB,OAAO,yBAAyB,OAAO;AAC/D,QAAI,mBAAJ,QAAI,gBAAiB,UAAU;AAC7B,aAAO;;AAGT,QAAO,UAAkB,MAAlB,SAAS,QAAS,MAAT;AAChB,QAAM,KAAI,IAAI,MAAM;AAEpB,aAAW,QAAQ,OAAO;AACxB,SAAE,QAAQ,MAAM;;AAGlB,OAAE,QAAQ;AACV,WAAO;;;;ACVF,oCAAkC;AACvC,WAAO;;;;ACRT,MAAM,qBAAqB;AAUpB,iCAA+B,WAAW,UAAe;AAAA,QAAf,aAAe,QAAA;AAAf,iBAAW;;AAC1D,QAAI;AACF,aAAO,mBAAmB;aACnB,IAAP;AACA,aAAO;;;AAWJ,4BAA0B,aAAa;AAC5C,QAAM,SAAS;AACf,QAAI,CAAC,aAAa;AAChB,aAAO;;AAGT,QAAI;AACJ,WAAQ,QAAQ,mBAAmB,KAAK,cAAe;AACrD,UAAM,OAAO,sBAAsB,MAAM,IAAI,MAAM;AACnD,UAAM,QAAQ,MAAM,KAChB,sBAAsB,MAAM,GAAG,QAAQ,OAAO,MAAM,MAAM,MAC1D;AACJ,aAAO,QAAQ;;AAEjB,WAAO;;;;AChBT,MAAI,aAAa;AAOV,mBAAiB,SAAS;AAC/B,QAAM,MAAM,WAAW;AACvB,QAAI,IAAI,YAAY;AAClB,aAAO,IAAI;;AAEb,WAAQ,IAAI,aAAa,SAAS;;AAQpC,oBAAkB,KAAK;AAErB,QAAM,aAAa,KAAK,cAAc;AAMtC,QAAM,gBAAgB;AACtB,QAAM,eAAc;AAEpB,QAAM,eACJ,iBAAiB,CAAC,CAAE,YAAW,QAAQ,IAAI,cAAc,IAAI;AAC/D,QAAM,aAAa,iBAAkB,EAAC,CAAC,WAAW,YAAY;AAC9D,QAAM,YAAY,iBAGhB,IAAI,SAAS,mBAAmB,IAAI,SAAS;AAG/C,QAAI,CAAC,YAAY;AACf,mBAAa,cAAc;;AAO7B,WAAO;MACL,UAAU;MACV,aAAa,kBAAkB;MAC/B,UAAU,UAAU,kBAAkB;MACtC,KAAG;MAEH,aAAa,UAAU;MACvB,UAAU;MACV,MAAM;MACN,KAAK,UAAU;MACf,SAAS;MACT;;;AAWJ,yBAAuB,KAAK;AAC1B,QAAI,IAAI,cAAc,IAAI,WAAW,GAAG;AACtC,aAAO,IAAI,WAAW;;AAQxB,WAAA,OAAY;;AAUP,6BAA2B,KAAK;AACrC,QAAM,YAAY,iBAChB,IAAI,SAAS,mBAAmB,IAAI,SAAS;AAE/C,WAAO,CAAC,CACN,EAAC,KAAK,WAAW,OAAO,WAAW,aAAa,SAC9C,UAAU,mBACP,IAAI;;;;ACnHb,MAAM,MAAM,KAAK,cAAc;AAE/B,MAAM,uBACH,QAAO,IAAI,2BAA2B,WACnC,IAAI,OAAO,IAAI,2BACf,IAAI,4BAA4B;AAEtC,MAAM,gBACH,QAAO,IAAI,oBAAoB,WAC5B,IAAI,OAAO,IAAI,oBACf,IAAI,qBACR;AAYF,sBAAoB,MAAM;AAExB,QAAI,CAAC,KAAK,YAAY,CAAC,KAAK,SAAS,MAAM;AACzC,aAAO;;AAIT,QAAI,KAAK,YAAY,cAAc,KAAK,KAAK,SAAS,SAAS;AAC7D,aAAO;;AAGT,QAAM,SAAS,KAAK,SAAS,KAAY,cAA1B,gBACC,OADD;AAGf,WAAQ,UAAU,OAAO,aAAa,cAAe;;AAkBhD,MAAM,OAAO;IAClB,YAAY,IAAI,oBAAoB;IACpC,qBAAqB,IAAI,0BAA0B;IACnD;IACA,KACE,IAAI,aAAa,WAAW,mBAAmB;IAIjD;IACA,gBAAgB;IAChB,gBACE,IAAI,wBACJ;IACF,oBACE,IAAI,4BACJ;IACF,UAAU,IAAI,eAAe;IAU7B,oBAAoB,CAClB,qDACA;IAGF,QAAQ,IAAI,gBAAgB,WAAW;;;;ACrElC,MAAM,4BAA4B;AAalC,MAAM,WAAW;IACtB,KAAK;IACL,OAAO;IACP,MAAM;IACN,MAAM;IACN,MAAM;;AA8eR,OAAK,YAAY,KAAK,aAAa;IACjC,MAAM;IACN,KAAK;IACL,cAAc;;AAGhB,MAAM,OAAO,KAAK;AAQlB,MAAI,iBAAiB;AAsCd,gBAAc,aAAa;AAChC,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,cAAc;;AAE5B,QAAI,CAAC,YAAY,KAAK,KAAK,KAAK,cAAc;AAC5C,aAAO,KAAK;WACP;AACL,UAAI,KAAK,cAAc;AACrB,eAAO,KAAK;;AAEd,aAAQ,KAAK,eAAe,cAAc;;;AAS9C,yBAAuB,QAAQ;AAC7B,QAAI,CAAC,gBAAgB;AACnB,YAAM,IAAI,MAAM;;AAElB,WAAO,IAAI,eACT,MACA,SAAC,QAAQ,aAAgB;AACvB,UAAI,eAAe,UAAU,GAAG;AAC9B,eAAO,SAAS;;AAElB,aAAO,SAAS;OAElB;;AAgBG,iBAAe;AACpB,QAAI,KAAK,KAAK;AACZ,aAAO,KAAK;;AAEd,QAAI,CAAC,gBAAgB;AACnB,YAAM,IAAI,MAAM;;AAElB,WAAQ,KAAK,MAAM,IAAI,eAAe,MAAM,SAAC,QAAW;AACtD,UAAI,UAAU,GAAG;AACf,eAAO,SAAS;;AAElB,UAAI,UAAU,GAAG;AACf,eAAO,SAAS;;AAElB,aAAO,SAAS;;;AASb,uBAAqB,KAAK,aAAa;AAC5C,QAAI,CAAC,aAAa;AAChB,aAAO;;AAET,WAAO,YAAY,cAAc,eAAe;;AAgC3C,qBACL,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;AACA,QAAI,UAAU,UAAU;AACtB,aAAO;;AAET,QAAI,KAAK,uBAAuB;AAK9B,cACG,IAAI;;AAGT,WAAO,MAAoB,OACzB,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;;AAiCG,sBACL,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;AACA,WAAO,OAAqB,OAC1B,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;;;;AC1wBG,iBAAe,WAAW;AAC/B,WAA+B;;;;AC4H1B,sBAAoB,KAAK,IAAI;AAClC,UAAM,aAAa;AACnB,WAAO,mBAAmB,KAAK;;AAW1B,gCAA8B,KAAK,IAAI;AAC5C,WAAO,mBAAmB,KAAK;;AAa1B,6BAA2B,KAAK,IAAI;AACzC,WAAO,0BAA0B,KAAK;;AASjC,oCAAkC,KAAK,IAAI;AAChD,UAAM,aAAa;AACnB,QAAI,oBAAoB,KAAK,KAAK;AAChC,aAAO,mBAAmB,KAAK;WAC1B;AACL,aAAO;;;AAUJ,mCAAiC,KAAK,IAAI;AAC/C,WAAO,gCAAgC,KAAK;;AAWvC,4BAA0B,iBAAiB,IAAI;AACpD,QAAM,SAAS,UAAU;AACzB,QAAM,SAAS,uBAAuB;AACtC,WAAO,mBAAmB,QAAQ;;AAU7B,kCAAgC,iBAAiB,IAAI;AAC1D,QAAM,SAAS,UAAU;AACzB,QAAM,SAAS,uBAAuB;AACtC,QAAI,oBAAoB,QAAQ,KAAK;AACnC,aAAO,mBAAmB,QAAQ;WAC7B;AACL,aAAO;;;AAYJ,mCAAiC,iBAAiB,IAAI;AAC3D,WAAO,0BAA0B,uBAAuB,kBAAkB;;AAUrE,yCAAuC,iBAAiB,IAAI;AACjE,WAAO,gCACL,uBAAuB,kBACvB;;AA6BG,wBAAsB,KAAK;AAChC,WAAO,IAAI,aAAc,KAAI,YAAY;;AA0BpC,qBAAmB,WAAW;AACnC,QAAI,UAAU,UAAU;AACtB,UAAM,MAAM,MACgB,WAAU,iBAAiB,WAClD;AAEL,aAAO,iBAAiB,KAAK,UAAgC;;AAE/D,WAAqD;;AAOvD,kCAAgC,WAAW;AACzC,QAAM,SAAS,UAAU;AACzB,WAAO,OAAO,gBAAgB,OAAO,MAAM;;AAS7C,4BAA0B,KAAK;AAC7B,WACE,WAAW,KAAK;;AAWpB,8BAA4B,QAAQ,IAAI;AACtC,cACE,oBAAoB,QAAQ,KADrB,sBAEa,KAFb;AAIT,QAAM,WAAW,YAAY;AAC7B,QAAM,KAAI,SAAS;AACnB,QAAI,CAAC,GAAE,KAAK;AACV,gBAAU,GAAE,MAAH,aAAoB,KAApB;AACT,gBAAU,GAAE,SAAH,aAAuB,KAAvB;AACT,SAAE,MAAM,IAAI,GAAE,KAAK,GAAE;AACrB,gBAAU,GAAE,KAAH,aAAmB,KAAnB;AACT,SAAE,UAAU;AAGZ,UAAI,GAAE,SAAS;AACb,WAAE,QAAQ,GAAE;;;AAGhB,WAAO,GAAE;;AAwDX,qCAAmC,QAAQ,IAAI;AAC7C,QAAM,SAAS,gCAAgC,QAAQ;AACvD,QAAI,QAAQ;AACV,aAAO;;AAMT,QAAM,WAAW,YAAY;AAC7B,aAAS,MAAM;AACf,WAAyC,SAAS,IAAI;;AA6BxD,2CAAyC,QAAQ,IAAI;AACnD,QAAM,WAAW,YAAY;AAC7B,QAAM,KAAI,SAAS;AACnB,QAAI,IAAG;AACL,UAAI,GAAE,SAAS;AACb,eAAO,GAAE;aACJ;AAEL,2BAAmB,QAAQ;AAC3B,eAAQ,GAAE,UAAU,QAAQ,QAAgC,GAAE;;;AAGlE,WAAO;;AAQT,uBAAqB,QAAQ;AAC3B,QAAI,WAAW,OAAO;AACtB,QAAI,CAAC,UAAU;AACb,iBAAW,OAAO,iBAAiB;;AAErC,WAAO;;AAqJT,+BAA6B,QAAQ,IAAI;AACvC,QAAM,UAAU,OAAO,kBAAkB,OAAO,eAAe;AAE/D,WAAO,CAAC,CAAE,YAAW,QAAQ;;AAI/B,2CAAyC;AACvC,QAAM,WAAW,IAAI;AACrB,QAAO,UAA4B,SAA5B,SAAS,SAAmB,SAAnB,QAAQ,UAAW,SAAX;AACxB,YAAQ,MAAM,WAAM;;AACpB,WAAO;MACL,KAAK;MACL;MACA;MACA;MACA,SAAS;MACT,MAAM;;;;;ACnoBV,MAAM,cAAc;AAMb,4BAA0B;AAC/B,WAAO;;;;ACKT,+BAA6B;AAC3B,QAAI,KAAK,uBAAuB;AAC9B,cACG,IAAI;;;AAuBJ,sBACL,gBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;AACA,QAAI,kBAAkB;AACpB,aAAO;;AAET;AAEA,WAAO,AAAW,OAChB,IACA,gBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;;;;AC5BG,uBACL,gBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;AACA,WAAO,AAAW,OAChB,qBACA,gBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;;;;ACnFJ,AAoBA,MAAI,QAAQ;AAEZ,mBAAiB,OAAO,KAAK,MAAM,WAAW,OAAO;AAEnD,QAAI,OAAO;AACT,aAAO;;AAGT,QAAI,KAAK;AACP,aAAO;;AAKT,QAAI,WAAW;AACb,aAAO,MAAM,MAAM,GAAG,MAAM,OAAO,MAAM,MAAM,IAAI,WAAW,GAAG,SAAS,MAAM;;AAIlF,WAAO,OAAO;;AAQT,qBAAmB,OAAO;AAC/B,WAAO,OAAO,OAAO,QAAQ,OAAO;;;;AC1BtC,MAAI;AAeG,oCAAkC,IAAI;AAC3C,QAAI,2BAA2B,QAAW;AACxC,aAAO;;AAGT,WAAQ,yBAAyB,kBAAkB;;AAQrD,6BAA2B,IAAI;AAC7B,QAAI;AACF,UAAM,MAAM,GAAG;AACf,UAAM,cAAc,IAAI,cAAc;AACtC,UAAM,YAAY,IAAI,cAAc;AACpC,kBAAY,YAAY;AAGxB,aAAO,YAAmB,cAAc,kBAAkB;aACnD,IAAP;AACA,aAAO;;;AAsBJ,gCAA8B,UAAU,YAAY;AACzD,WAAO,SAAS,QAAQ,QAAjB,OAA8B,aAA9B;;AAYF,kCAAgC,OAAO;AAG5C,QAAA,OAAY;AACV,aAAO,IAAI,OAAO;;AAEpB,WAAO,UAAU;;;;AC1EnB,wBAAsB,MAAM;AAC1B,eACE,WAAW,KAAK,OADT,eAEM,OAFN;;AAgBX,wCAAsC,MAAM,UAAU;AACpD,QAAM,SAAS;AACf,SAAK,UAAU,IAAI;AACnB,QAAM,iBAAiB,qBAAqB,UAAD,MAAe;AAC1D,QAAM,WAAW,KAAY,iBAAiB;AAC9C,SAAK,UAAU,OAAO;AACtB,WAAO;;AAYF,+BAA6B,MAAM,UAAU;AAClD,QAAc,yBAAyB,OAAO;AAC5C,aAAO,KAAY,cAAc,qBAAqB,UAAU;;AAIlE,QAAM,iBAAiB,6BAA6B,MAAM;AAC1D,WAAO,eAAe,OAAO,SAAY,OAAO,eAAe;;AAY1D,kCAAgC,MAAM,UAAU;AACrD,QAAc,yBAAyB,OAAO;AAC5C,aAAO,KAAY,iBACjB,qBAAqB,UAAU;;AAKnC,WAAO,6BAA6B,MAAM;;AASrC,mBAAiB,IAAI,UAAU;AACpC,QAAM,UACJ,GAAG,WACH,GAAG,yBACH,GAAG,sBACH,GAAG,qBACH,GAAG;AACL,QAAI,SAAS;AACX,aAAO,QAAQ,KAAK,IAAI;;AAE1B,WAAO;;AAWF,mBAAiB,SAAS,UAAU,YAAY;AACrD,aAAS,KAAK,SAAS,MAAM,OAAO,YAAY,KAAK,GAAG,eAAe;AACrE,UAAI,SAAS,KAAK;AAChB,eAAO;;;AAGX,WAAO;;AA0BF,4CAA0C,SAAS,UAAU;AAClE,WAAO,QAAQ,UACX,QAAQ,QAAQ,YAChB,QAAQ,SAAS,SAAC,IAAD;AAAA,aAAQ,QAAQ,IAAI;;;AA2CpC,wBAAsB,QAAQ,UAAU;AAC7C,aACM,QAAQ,OAAO,mBACnB,OACA,QAAQ,MAAM,oBACd;AACA,UAAI,SAAS,QAAQ;AACnB,eAAO;;;AAGX,WAAO;;AAiEF,8BAA4B,QAAQ,MAAM;AAC/C,iBAAa;AACb,WAAc,oBAAoB,QAAD,QAAe,OAAf;;AAiC5B,6BAA2B,QAAQ,SAAS;AACjD,iBAAa;AACb,WAAc,oBAAoB,QAAD,OAAc;;AAoB1C,wBAAsB,SAAS,SAAS;AAC7C,iBAAa;AACb,WAAO,QAAe,cAAc;;;;ACjR/B,wBAAsB,QAAQ,WAAW,UAAU;AACxD,QAAI,UAAU,SAAS;AACrB;AACA;;AAGF,QAAM,MAAM,MAAM,OAAO,cAAc;AACvC,QAAc,IAAI,kBAAkB;AAElC,UAAM,WAAW,IAAI,IAAI,iBAAiB,WAAM;AAC9C,YAAI,UAAU,SAAS;AACrB,mBAAS;AACT;;;AAGJ,eAAS,QAAQ,QAAQ;QAAC,WAAW;;WAChC;AAEL,UAAM,WAAW,IAAI,YAAY,WAAM;AACrC,YAAI,UAAU,SAAS;AACrB,cAAI,cAAc;AAClB;;SAEkB;;;AAsBnB,2BAAyB,KAAK,UAAU;AAC7C,iBAAa,IAAI,iBAAiB,WAAA;AAAA,aAAM,CAAC,CAAC,IAAI;OAAM;;AAQ/C,kCAAgC,KAAK;AAC1C,WAAO,IAAI,QAAQ,SAAC,SAAD;AAAA,aAAa,gBAAgB,KAAK;;;AAsOhD,yBAAuB,UAAU,IAAI;AAC1C,QAAO,SAAU,SAAV;AACP,aAAS,KAAI,GAAG,KAAI,QAAQ,MAAK;AAC/B,SAAG,SAAS,KAAI;;;AA6Mb,2BAAyB,SAAS,MAAM,QAAQ;AACrD,QAAM,eAAe,QAAQ,aAAa;AAC1C,QAAM,UAAU,WAAW,SAAY,SAAS,CAAC;AAEjD,QAAI,YAAY,cAAc;AAC5B,UAAI,SAAS;AACX,gBAAQ,aAAa,MAAM;aACtB;AACL,gBAAQ,gBAAgB;;;AAI5B,WAAO;;AAsBF,qCAAmC,KAAK;AAC7C,QAAO,kBAAmB,IAAI,SAAvB;AACP,QAAM,cAAc,IAAW;AAC/B,QAAM,gBAAgB,gBAAuB;AAC7C,WAAO,cAAc;;;;AC9ehB,6BAA2B,WAAW;AAC3C,QAAI,CAAC,WAAW;AACd,aAAO;;AAGT,QAAM,WAAU,UAAU,MACxB;AAEF,QAAM,cAAc,WAAU,SAAQ,KAAK;AAC3C,QAAM,mBAAmB,WAAU,SAAQ,KAAK;AAChD,QAAI,CAAC,eAAe,CAAC,kBAAkB;AACrC,aAAO;;AAET,WAAO;MAAC;MAAa;;;AA2GhB,kCAAgC,MAAM;AAE3C,QAAI,CAAC,MAAM;AACT,aAAO;;AAIT,QAAM,OAAO,KAAK,iBAChB;AAEF,QAAM,UAAU;AAChB,aAAS,KAAI,GAAG,KAAI,KAAK,QAAQ,MAAK;AACpC,UAAM,SAAS,KAAK;AACpB,UAAM,cACJ,OAAO,aAAa,qBACpB,OAAO,aAAa;AACtB,UAAM,WAAW,kBAAkB,OAAO;AAC1C,UAAI,eAAe,UAAU;AAC3B,gBAAQ,KAAK;UAAC;UAAa,kBAAkB,SAAS;;;;AAG1D,WAAO;;AAWF,iCAA+B,KAAK,IAAI,SAAS;AACtD,WAAO,uBAAuB,IAAI,SAAS,MAAM,KAC/C,SAAA,MAAA;AAAA,UAAE,cAAF,KAAE,aAAa,mBAAf,KAAe;AAAf,aACE,MAAM,eAAe,WAAW;;;;;ACjN/B,wCACL,KACA,IACA,WACA,SACA,aACA;AACA,QAAM,KAAI,wBAAwB,KAAK;AACvC,QAAI,IAAG;AACL,aAAyC;;AAE3C,WAAO,+BACL,KACA,IACA,WACA,SACA;;AAkBG,mCAAiC,SAAS,IAAI,WAAW,aAAa;AAC3E,WAAO,mCACL,SACA,IACA,WACA,aACA,KAAK,SAAC,SAAD;AAAA,aAAa,cAAc,SAAS,IAAI;;;AAc1C,8CACL,SACA,IACA,WACA,aACA;AACA,QAAM,KAAI,8BAA8B,SAAS;AACjD,QAAI,IAAG;AACL,aAAyC;;AAE3C,QAAM,SAAS,UAAU;AACzB,WAAO,OACJ,sBACA,KAAK,WAAM;AACV,UAAM,UAAU,OAAO,oBAAoB;AAC3C,UAAI,CAAC,SAAS;AACZ,eAAO;;AAET,UAAM,aAAa,WAAW,OAAO,KAAK;AAC1C,aAAO,WAAW,iBAAiB,WAAW;OAE/C,KAAK,SAAC,KAAQ;AACb,UAAI,CAAC,KAAK;AACR,eAAO;;AAIT,UAAI,aAAa;AACf,eAAO,8BAA8B,SAAS;;AAEhD,aAAO,wBAAwB,SAAS;;;AAevC,0DACL,SACA,IACA,WACA;AACA,QAAM,KAAI,uBAAuB,SAAS;AAC1C,QAAI,IAAG;AACL,aAAyC,QAAQ,QAAQ;;AAE3D,WAAO,mCAAmC,SAAS,IAAI;;AAYzD,yBAAuB,SAAS,IAAI,WAAW;AAC7C,WACE,WACE,SACA,mKAGA,IACA,WACA,WACA;;AAgBN,0CACE,KACA,IACA,WACA,SACA,aACA;AACA,WAAO,AACJ,uBAAuB,IAAI,UAC3B,KAAK,WAAM;AAMV,UAAM,aAAa,WAAW,KAAK;AAInC,UAAI,CAAC,sBAAsB,WAAW,KAAK,WAAW,UAAU;AAC9D,eAAO;;AAET,aAAO,WAAW,iBAAiB,WAAW;OAE/C,KAAK,SAAC,KAAQ;AACb,UAAI,CAAC,KAAK;AACR,eAAO;;AAIT,UAAI,aAAa;AACf,eAAO,wBAAwB,KAAK;;AAEtC,aAAO,kBAAkB,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzLpC,MAAa,WAAb,2BAAA;AAAA,yBAAA;AAAA,uBAAA,MAAA;;AAAA,iBAAA,WAAA,MAAA,CAAA;MAAA,KAAA;MAAA,OAWE,6BAA2B,SAAS;AAClC,eACE,wBAAwB,SAAS,UAAU;;OAbjD;MAAA,KAAA;MAAA,OAuBE,mCAAiC,SAAS;AACxC,eACE,mCAAmC,SAAS,UAAU;;OAzB5D;MAAA,KAAA;MAAA,OAkCE,oCAAkC,SAAS;AACzC,eACE,wBAAwB,SAAS,iBAAiB;;OApCxD;MAAA,KAAA;MAAA,OA6CE,0CAAwC,SAAS;AAC/C,eACE,mCACE,SACA,iBACA;;OAlDR;MAAA,KAAA;MAAA,OA2DE,6BAA2B,SAAS;AAClC,eACE,uBAAuB,SAAS;;OA7DtC;MAAA,KAAA;MAAA,OAqEE,+BAA6B,SAAS;AACpC,eACE,uBAAuB,SAAS;;OAvEtC;MAAA,KAAA;MAAA,OA+EE,wBAAsB,SAAS;AAC7B,eACE,wBAAwB,SAAS,YAAY;;OAjFnD;MAAA,KAAA;MAAA,OA4FE,0BAAwB,QAAQ;AAC9B,eACE,WAAW,QAAQ;;OA9FzB;MAAA,KAAA;MAAA,OAuGE,gBAAc,cAAc;AAC1B,eAAO,UAAU;;OAxGrB;MAAA,KAAA;MAAA,OAgHE,yBAAuB,SAAS,eAAuB;AAAA,YAAvB,kBAAuB,QAAA;AAAvB,0BAAgB;;AAC9C,YAAI,eAAe;AAEjB,cAAM,SAAS,UAAU;AACzB,oBAAS,cAAc,OAAO,KAAY,uBACxC,QACA;;AAGJ,eACE,wBACE,SACA,iCACA;;OA7HR;MAAA,KAAA;MAAA,OAsIE,+BAA6B,SAAS;AACpC,eACE,mCACE,SACA,iCACA;;OA3IR;MAAA,KAAA;MAAA,OAoJE,uBAAqB,QAAQ;AAC3B,eACE,WAAW,QAAQ;;OAtJzB;MAAA,KAAA;MAAA,OA8JE,0BAAwB,SAAS;AAC/B,eACE,+CACE,SACA,QACA;;OAnKR;MAAA,KAAA;MAAA,OA4KE,4BAA0B,SAAS;AACjC,eACE,+CACE,SACA,cACA;;OAjLR;MAAA,KAAA;MAAA,OA0LE,mBAAiB,iBAAiB;AAChC,eACE,wBAAwB,iBAAiB;;OA5L/C;MAAA,KAAA;MAAA,OAoME,0BAAwB,iBAAiB;AACvC,eACE,iBAAiB,iBAAiB;;OAtMxC;MAAA,KAAA;MAAA,OA8ME,6BAA2B,SAAS;AAClC,eACE,wBAAwB,SAAS,UAAU;;OAhNjD;MAAA,KAAA;MAAA,OAwNE,iCAA+B,SAAS;AACtC,eACE,wBAAwB,SAAS,cAAc;;OA1NrD;MAAA,KAAA;MAAA,OAkOE,mBAAiB,QAAQ;AACvB,eACE,WAAW,QAAQ;;OApOzB;MAAA,KAAA;MAAA,OA4OE,4BAA0B,iBAAiB;AACzC,eACE,iBAAiB,iBAAiB,gBAClC;;OA/ON;MAAA,KAAA;MAAA,OAsPE,uBAAqB,QAAQ;AAC3B,eACE,WAAW,QAAQ;;OAxPzB;MAAA,KAAA;MAAA,OAkQE,0BAAwB,iBAAiB;AACvC,eACE,wBAAwB,iBAAiB;;OApQ/C;MAAA,KAAA;MAAA,OA6QE,8BAA4B,SAAS;AACnC,eACE,uBAAuB,SAAS;;OA/QtC;MAAA,KAAA;MAAA,OAwRE,uBAAqB,iBAAiB;AACpC,eACE,iBAAiB,iBAAiB;;OA1RxC;MAAA,KAAA;MAAA,OAkSE,kBAAgB,KAAK;AACnB,eAAO,WAAW,KAAK;;OAnS3B;MAAA,KAAA;MAAA,OA2SE,sCAAoC,SAAS;AAC3C,eACE,mCAAmC,SAAS,aAAa;;OA7S/D;MAAA,KAAA;MAAA,OAqTE,gCAA8B,iBAAiB;AAC7C,eACE,uBAAuB,iBAAiB;;OAvT9C;MAAA,KAAA;MAAA,OA+TE,+BAA6B,iBAAiB;AAC5C,eACE,iBAAiB,iBAAiB;;OAjUxC;MAAA,KAAA;MAAA,OAyUE,uBAAqB,iBAAiB;AACpC,eACE,iBAAiB,iBAAiB;;OA3UxC;MAAA,KAAA;MAAA,OAmVE,sBAAoB,iBAAiB;AACnC,eACE,iBAAiB,iBAAiB;;OArVxC;MAAA,KAAA;MAAA,OA6VE,wBAAsB,QAAQ;AAC5B,eACE,WAAW,QAAQ;;OA/VzB;MAAA,KAAA;MAAA,OAuWE,8BAA4B,QAAQ;AAClC,eACE,yBAAyB,QAAQ;;OAzWvC;MAAA,KAAA;MAAA,OAiXE,qBAAmB,QAAQ;AACzB,eACE,WAAW,QAAQ;;OAnXzB;MAAA,KAAA;MAAA,OA6XE,gCAA8B,SAAS;AACrC,eACE,iBAAiB,SAAS;;OA/XhC;MAAA,KAAA;MAAA,OAuYE,uBAAqB,QAAQ;AAC3B,eAAO,WAAW,QAAQ;;OAxY9B;MAAA,KAAA;MAAA,OA+YE,yBAAuB,iBAAiB;AACtC,eACE,iBAAiB,iBAAiB;;OAjZxC;MAAA,KAAA;MAAA,OAyZE,gCAA8B,iBAAiB;AAC7C,eACE,wBAAwB,iBAAiB;;OA3Z/C;MAAA,KAAA;MAAA,OAmaE,uCAAqC,KAAK;AACxC,eAEG,6BAA6B,KAAK,kBAAkB,aAAa;;OAtaxE;MAAA,KAAA;MAAA,OA8aE,8BAA4B,KAAK;AAC/B,eAEG,yBAAyB,KAAK;;OAjbrC;MAAA,KAAA;MAAA,OA2bE,oCAAkC,KAAK;AACrC,eAEG,6BAA6B,KAAK,eAAe,aAAa;;OA9brE;MAAA,KAAA;MAAA,OAscE,2BAAyB,KAAK;AAC5B,eAEG,yBAAyB,KAAK;;OAzcrC;MAAA,KAAA;MAAA,OAidE,gCAA8B,KAAK;AACjC,eAEG,yBAAyB,KAAK;;OApdrC;MAAA,KAAA;MAAA,OA6dE,sCAAoC,KAAK;AACvC,eAEG,6BAA6B,KAAK,iBAAiB,aAAa;;OAhevE;MAAA,KAAA;MAAA,OAweE,6BAA2B,KAAK;AAC9B,eAEG,yBAAyB,KAAK;;OA3erC;MAAA,KAAA;MAAA,OAmfE,wCAAsC,KAAK;AACzC,eAEG,yBAAyB,KAAK;;OAtfrC;MAAA,KAAA;MAAA,OA8fE,sCAAoC,IAAI;AACtC,eACE,wBAAwB,IAAI;;OAhgBlC;MAAA,KAAA;MAAA,OAwgBE,4BAA0B,SAAS;AACjC,eACE,uBAAuB,SAAS;;OA1gBtC;MAAA,KAAA;MAAA,OAmhBE,wCAAsC,KAAK;AACzC,eAGI,6BACE,KACA,mBACA,aACA,OACA;;OA5hBV;MAAA,KAAA;MAAA,OAsiBE,+BAA6B,KAAK;AAChC,eAEG,yBAAyB,KAAK;;OAziBrC;MAAA,KAAA;MAAA,OAijBE,gCAA8B,SAAS;AACrC,eAEG,wBAAwB,SAAS,iBAAiB;;OApjBzD;MAAA,KAAA;MAAA,OA4jBE,8BAA4B,iBAAiB;AAC3C,eACE,wBAAwB,iBAAiB;;OA9jB/C;MAAA,KAAA;MAAA,OAskBE,uBAAqB,iBAAiB;AACpC,eACE,wBAAwB,iBAAiB;;OAxkB/C;MAAA,KAAA;MAAA,OAilBE,+BAA6B,iBAAiB;AAC5C,YAAM,aAAa,UAAS,OAAO;AACnC,YAAM,gBAAgB,UAAS,iBAAiB,WAAW;AAC3D,YAAM,YAAY,cAAc,gBAC5B,cAAc,iBACd;AAGJ,YAAM,SACJ,aAAa,UAAU,OAAO,WAAW,MAAM,YAAY;AAC7D,eACE,wBAAwB,QAAQ;;OA5lBtC;MAAA,KAAA;MAAA,OAomBE,yBAAuB,iBAAiB;AACtC,eACE,iBAAiB,iBAAiB;;OAtmBxC;MAAA,KAAA;MAAA,OA8mBE,kBAAgB,QAAQ;AAEtB,eACE,qBAAqB,QAAQ;;OAjnBnC;MAAA,KAAA;MAAA,OAynBE,+BAA6B,SAAS;AACpC,eACE,uBAAuB,SAAS;;OA3nBtC;MAAA,KAAA;MAAA,OAmoBE,uCAAqC,SAAS;AAC5C,eAGI,wBACE,SACA,2BACA;;OA1oBV;MAAA,KAAA;MAAA,OAspBE,0CAAwC,SAAS;AAC/C,eAGI,mCACE,SACA,wBACA;;OA7pBV;MAAA,KAAA;MAAA,OAyqBE,yBAAuB,SAAS;AAC9B,eACE,mCAAmC,SAAS,OAAO,WAAW;;OA3qBpE;MAAA,KAAA;MAAA,OAqrBE,mBAAiB,SAAS;AACxB,eACE,uBAAuB,SAAS;;OAvrBtC;MAAA,KAAA;MAAA,OAisBE,8BAA4B,SAAS;AACnC,eACE,mCACE,SACA,WACA,kBACA;;OAvsBR;MAAA,KAAA;MAAA,OAgtBE,4BAA0B,iBAAiB;AACzC,eACE,iBAAiB,iBAAiB;;OAltBxC;MAAA,KAAA;MAAA,OA0tBE,sBAAoB,iBAAiB;AACnC,eACE,iBAAiB,iBAAiB;;OA5tBxC;MAAA,KAAA;MAAA,OAuuBE,6BAA2B,iBAAiB;AAC1C,eACE,wBAAwB,iBAAiB;;OAzuB/C;MAAA,KAAA;MAAA,OAivBE,kBAAgB,QAAQ;AACtB,eACE,WAAW,QAAQ;;OAnvBzB;MAAA,KAAA;MAAA,OA2vBE,wBAAsB,iBAAiB;AACrC,eACE,iBAAiB,iBAAiB;;OA7vBxC;MAAA,KAAA;MAAA,OAqwBE,gBAAc,QAAQ;AACpB,eAA+C,WAAW,QAAQ;;OAtwBtE;MAAA,KAAA;MAAA,OA6wBE,oCAAkC,iBAAiB;AACjD,eACE,iBAAiB,iBAAiB;;OA/wBxC;MAAA,KAAA;MAAA,OAuxBE,qCAAmC,iBAAiB;AAClD,eACE,iBAAiB,iBAAiB;;OAzxBxC;MAAA,KAAA;MAAA,OAiyBE,sCAAoC,iBAAiB;AACnD,eACE,wBAAwB,iBAAiB;;;AAnyB/C,WAAA;;;;ACdA,MAAI;AAMJ,MAAI;AA0BG,wCACL,SACA,WACA,UACA,qBACA;AACA,QAAI,eAAe;AACnB,QAAI,gBAAgB;AAEpB,QAAI,UAAU,kBAAC,OAAU;AACvB,UAAI;AACF,eAAO,cAAc;eACd,IAAP;AAEA,aAAK,sBAAL,OAAA,SAAA,KAAK,mBAAqB;AAC1B,cAAM;;;AAGV,QAAM,iBAAgB;AACtB,QAAM,UAAU,CAAC,CAAC,wBAAD,QAAC,oBAAqB;AAEvC,iBAAa,iBACX,WACA,SACA,iBAAgB,sBAAsB;AAExC,WAAO,WAAM;AAAA,UAAA;AACX,MAAA,iBAAA,iBAAY,OAAZ,SAAA,cAAc,oBACZ,WACA,SACA,iBAAgB,sBAAsB;AAGxC,sBAAgB;AAChB,qBAAe;AACf,gBAAU;;;AAUP,0CAAwC;AAE7C,QAAI,kBAAkB,QAAW;AAC/B,aAAO;;AAGT,oBAAgB;AAChB,QAAI;AAEF,UAAM,UAAU;YACV,UAAU;AACZ,0BAAgB;;;AAGpB,WAAK,iBAAiB,gBAAgB,MAAM;AAC5C,WAAK,oBAAoB,gBAAgB,MAAM;aACxC,KAAP;;AAGF,WAAO;;AAgBF,wCAAsC,KAAK;AAChD,QAAI,qBAAqB,QAAW;AAClC,aAAO;;AAGT,uBAAmB;AACnB,QAAI;AACF,UAAM,UAAU;YACV,UAAU;AAGZ,6BAAmB;AACnB,iBAAO;;;AAIX,UAAI,iBAAiB,gBAAgB,MAAM;AAC3C,UAAI,oBAAoB,gBAAgB,MAAM;aACvC,KAAP;;AAGF,WAAO;;;;ACrIT,MAAM,sBAAsB;AAarB,6BAA2B,KAAK,MAAM,QAAQ,eAAe;AAClE,QAAM,YAA6C;MAAC;;AACpD,WAAO,OAAO,WAAW;AAGzB,QAAc,OAAO,IAAI,eAAe,YAAY;AAClD,aAAO,IAAI,IAAI,YAAY,MAAM;WAC5B;AAEL,UAAM,KAAI,IAAI,SAAS,YAAY;AACnC,SAAE,gBACA,MACA,CAAC,CAAC,UAAU,SACZ,CAAC,CAAC,UAAU,YACZ;AAEF,aAAO;;;AAYJ,kBAAgB,SAAS,WAAW,UAAU,qBAAqB;AACxE,WAAO,6BACL,SACA,WACA,UACA;;AASG,mBAAiB,OAAO;AAC7B,WAAoD,MAAM;;AAQrD,qBAAmB,OAAO;AAC/B,WAAoD,MAAM;;AAgErD,oBAAkB,aAAa;AACpC,WAAO,CAAC,CACN,aAAY,YACZ,YAAY,cAAc,cACzB,mBAAmB,gBAAgB,YAAY,aAAa,KAG5D,YAAY,YAAY,YAAY,SAAS,cAAc;;AAqGhE,8BAA4B,aAAa;AACvC,WAAO,YAAY,YAAY,WAAW,YAAY,YAAY;;AAQ7D,8BAA4B,SAAS;AAC1C,WAAO,QAAQ,QAAQ,wBAAwB;;;;ACvPjD,MAAI;AAGJ,MAAM,iBAAiB,CAAC,UAAU,UAAU,OAAO,OAAO,MAAM,KAAK;AAW9D,gCAA8B,WAAW;AAC9C,WAAO,UAAU,OAAO,GAAG,gBAAgB,UAAU,MAAM;;AAW7D,oCAAkC,OAAO,WAAW;AAClD,aAAS,KAAI,GAAG,KAAI,eAAe,QAAQ,MAAK;AAC9C,UAAM,eAAe,eAAe,MAAK;AACzC,UAAI,MAAM,kBAAkB,QAAW;AACrC,eAAO;;;AAGX,WAAO;;AAaF,mCAAiC,OAAO,WAAW,iBAAiB;AACzE,QAAI,MAAM,YAAY;AAEpB,aAAO;;AAET,QAAI,CAAC,mBAAmB;AACtB,0BAAoB;;AAEtB,QAAI,eAAe,kBAAkB;AACrC,QAAI,CAAC,gBAAgB,iBAAiB;AACpC,qBAAe;AACf,UAAI,MAAM,eAAe,QAAW;AAClC,YAAM,YAAY,qBAAqB;AACvC,YAAM,uBAAuB,yBAAyB,OAAO;AAE7D,YAAI,MAAM,0BAA0B,QAAW;AAC7C,yBAAe;;;AAGnB,UAAI,CAAC,iBAAiB;AACpB,0BAAkB,aAAa;;;AAGnC,WAAO;;AA4BF,oBAAkB,SAAS,UAAU,OAAO,WAAW,iBAAiB;AAC7E,QAAM,eAAe,wBACnB,QAAQ,OACR,UACA;AAEF,QAAI,CAAC,cAAc;AACjB;;AAEF,QAAM,aACJ,YAAY,QAAQ,YAAY;AAElC,QAAI,MAAM,eAAe;AACvB,cAAQ,MAAM,YAAY,cAAc;WACnC;AACL,cAAQ,MAAM,gBAAgB;;;AAgC3B,qBAAmB,SAAS,QAAQ;AACzC,aAAW,KAAK,QAAQ;AACtB,eAAS,SAAS,GAAG,OAAO;;;AAyEzB,kBAAgB,SAAS,aAAa;AAC3C,QAAI,gBAAgB,QAAW;AAC7B,oBAAc,QAAQ,aAAa;;AAErC,QAAI,aAAa;AACf,cAAQ,gBAAgB;WACnB;AACL,cAAQ,aAAa,UAAU;;;AAmInC,iBAAe,UAAU;AACvB,WAAO,SAAS,WAAW;;;;AChM7B,MAAI,kBAAkB;AAsDf,mCAAiC,KAAK;AAC3C,cAAU,IAAI,aAAa;AAC3B,QAAI,iBAAiB;AACnB;;AAEF,sBAAkB;AAClB,yBAAqB;;AAOvB,gCAA8B,KAAK;AACjC,cAAU,MAAM,cAAc,IAAI,OAAO;MACvC,SAAS;MACT,YAAY;MACZ,aAAa;;;;;ACnOjB,MAAI,cAAc,eAAe,KAAK,KAAK,SAAS;AAMpD,MAAM,YAAW;;;ACdV,MAAM,qBAAqB;IAGhC,WAAW;;AAyCN,6BAA2B,SAAS;AACzC,QAAI,QAAQ,QAAQ,iBAAiB,OAAO,QAAQ,aAAa,SAAS;AACxE,aAAO;;AAET,QAAI,QAAQ,cAAc,YAAY;AACpC,aAAO;;AAET,QAAM,SAAS,SAAS,oBAAoB;AAC5C,QAAM,eAAe,OAAO,oBAC1B,SACA,OACA,MAAM,cAAc,QAAQ;AAE9B,QAAI,cAAc;AAChB,aAAO;;AAET,QAAM,cAAc,QAAQ,iBAAiB;AAC7C,aAAS,KAAI,GAAG,KAAI,YAAY,QAAQ,MAAK;AAC3C,UAAM,aAAa,YAAY;AAC/B,UAAM,gBAAe,OAAO,oBAC1B,YACA,OACA,MAAM,cAAc,WAAW;AAEjC,UAAI,eAAc;AAChB,eAAO;;;AAGX,WAAO;;;;AChFF,MAAM,6BACX;AACK,MAAM,wBACX;AAGK,MAAM,2BACX;;;;;;;;;;;;;;;;;;;;;;;;;ACaF,MAAM,cAAc;AAOb,6BAA2B,SAAS;AACzC,QAAM,aAAa,QAAQ,aAAa;AACxC,QAAI,YAAY;AACd,aAAO,YAAY;;AAKrB,QAAM,UAAU,YACd,QAAQ,aAAa,QACrB,sEACA;AAEF,WAAO,cAAc;;AAQhB,yBAAuB,KAAK;AACjC,WAAO,IAAI,OAAO,CAAC;MAAC,KAAK;MAAK,OAAO;MAAW,KAAK;;;AAUhD,uBAAqB,IAAG;AAC7B,QAAM,UAAU;AAChB,QAAI;AACJ,WAAQ,QAAQ,YAAY,KAAK,KAAK;AACpC,UAAM,MAAM,MAAM;AAClB,UAAI,QAAK,QAAE,MAAG;AACd,UAAI,MAAM,IAAI;AACZ,YAAM,OAAO,MAAM,GAAG;AACtB,YAAI,QAAQ,KAAK;AACf,kBAAQ,SAAS,MAAM,IAAI;mBAClB,QAAQ,KAAK;AACtB,gBAAM,WAAW,MAAM;eAClB;AACL;;aAEG;AAEL,cAAM;;AAER,cAAQ,KAAK;QAAC;QAAK;QAAO;;;AAE5B,WAAO,IAAI,OAAO;;AAcpB,MAAa,SAAb,2BAAA;AAIE,qBAAY,SAAS;AAAA,uBAAA,MAAA;AACnB,kBAAW,QAAQ,SAAS,GAAG;AAE/B,WAAK,WAAW;AAGhB,UAAI,WAAW;AACf,UAAI,SAAS;AACb,eAAS,KAAI,GAAG,KAAI,QAAQ,QAAQ,MAAK;AACvC,YAAM,SAAS,QAAQ;AACvB,mBAAW,YAAY,CAAC,CAAC,OAAO;AAChC,iBAAS,UAAU,CAAC,CAAC,OAAO;;AAE9B,kBACE,CAAC,CAAE,YAAW,SACd;AAIF,cAAQ,KAAK,WAAW,cAAc;AAGtC,WAAK,cAAc;;AA1BvB,kBAAA,SAAA,CAAA;MAAA,KAAA;MAAA,OAyDE,gBAAO,OAAO,KAAK;AACjB,mBAAU,OAAO,YAAY;AAC7B,mBAAU,KAAK,UAAU;AACzB,YAAI,QAAQ;AACZ,YAAI,KAAK,aAAa;AACpB,kBAAQ,KAAK,eAAe,QAAQ;eAC/B;AACL,kBAAQ,KAAK,aAAa;;AAE5B,eAAO,KAAK,SAAS,OAAO;;OAlEhC;MAAA,KAAA;MAAA,OA0EE,wBAAe,OAAO;AACpB,YAAM,UAAU,KAAK;AACrB,YAAI,WAAW;AACf,YAAI,WAAW;AACf,YAAI,WAAW;AAEf,iBAAS,KAAI,GAAG,KAAI,QAAQ,QAAQ,MAAK;AACvC,cAAM,SAAS,QAAQ,IAAG;AAC1B,cAAM,QAAQ,KAAK,IAAI,SAAS;AAKhC,cAAI,SAAS,WAAW,OAAO,QAAQ,WAAW,KAAK;AACrD,uBAAW;AACX,uBAAW;AACX,uBAAW;iBACN;AACL;;;AAGJ,eAAO;;OA/FX;MAAA,KAAA;MAAA,OAuGE,sBAAa,KAAK;AAChB,YAAM,UAAU,KAAK;AACrB,YAAI,WAAW;AACf,YAAI,WAAW;AAEf,iBAAS,KAAI,GAAG,KAAI,QAAQ,QAAQ,MAAK;AACvC,cAAM,QAAQ,KAAK,IAAI,QAAQ,IAAG,MAAM;AACxC,cAAI,SAAS,UAAU;AACrB,uBAAW;AACX,uBAAW;iBACN;AACL;;;AAGJ,eAAO;;OArHX;MAAA,KAAA;MAAA,OA4HE,mBAAU;AACR,eAAO,KAAK,SAAS,IAAI,SAAC,IAAD;AAAA,iBAAO,GAAE;;;OA7HtC;MAAA,KAAA;MAAA,OAqIE,mBAAU,YAAY;AACpB,YAAM,MAAM;AACZ,YAAM,UAAU,KAAK;AACrB,iBAAS,KAAI,GAAG,KAAI,QAAQ,QAAQ,MAAK;AACvC,cAAM,SAAS,QAAQ;AACvB,cAAI,MAAM,OAAO;AACjB,cAAI,YAAY;AACd,kBAAM,WAAW;;AAEnB,cAAI,KAAK,aAAa;AACpB,mBAAG,MAAQ,OAAO,QAAf;iBACE;AACL,mBAAG,MAAQ,OAAO,MAAf;;AAEL,cAAI,KAAK;;AAEX,eAAO,IAAI,KAAK;;;AArJpB,WAAA;;AAgKA,uBAAqB,IAAI,IAAI;AAC3B,gBAAW,GAAG,SAAS,GAAG,OAAO,uBAAuB,GAAG;AAC3D,WAAO,GAAG,QAAQ,GAAG;;AAUvB,qBAAmB,IAAI,IAAI;AACzB,gBAAW,GAAG,OAAO,GAAG,KAAK,qBAAqB,GAAG;AACrD,WAAO,GAAG,MAAM,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;AC/OrB,MAAM,yBAAyB;IAC7B,WAAW;;AAGN,MAAM,oBAAoB;IAC/B,WAAW;;AAGN,MAAM,aAAa;IACxB,eAAe;IACf,aAAa;;AAGf,MAAM,cAAc;AACpB,MAAM,gBAAgB,CAAC,gBAAgB;AACvC,MAAM,aAAa;AACnB,MAAM,iBAAiB;AAMvB,kCAAgC,OAAO;AACrC,QAAM,UAAU,MAAM,QAAQ;AAC9B,QAAI,WAAW,aAAa,WAAW,UAAU;AAC/C,aAAO;;AAET,QAAM,SAAS,MAAM,cAAc;AACnC,QAAI,QAAQ;AACV,aAAO;;AAET,QAAM,YAAY,MAAM,iBAAiB;AACzC,eACE,UAAU,UAAU,GACpB;AAEF,WAAO,MAAM,cAAc,UAAU;;AAoBvC,MAAa,kBAAb,2BAAA;AAIE,8BAAY,QAAQ;AAAA,uBAAA,MAAA;AAElB,WAAK,UAAU;AAMf,WAAK,eAAe;AAMpB,WAAK,kBAAkB,IAAI;QACzB,SAAS;;AAOX,WAAK,WAAW;AAQhB,WAAK,QAAQ;;AAlCjB,kBAAA,kBAAA,CAAA;MAAA,KAAA;MAAA,OAyCE,qBAAY;AAAA,YAAA,QAAA;AACV,YAAI,KAAK,cAAc;AACrB,iBAAO,KAAK;;AAGd,aAAK,eAAe,KAAK;AAEzB,YAAM,OAAO,KAAK,QAAQ;AAG1B,aAAK,iBAAiB,UAAU,YAAY,WAAM;AAChD,gBAAK,eAAe,MAAK;;AAI3B,aAAK,iBAAiB,mBAAmB,WAAW,SAAC,IAAM;AACzD,cAAO,SAAU,GAAV;AACP,gBAAK,wBAAwB,MAAM,cAAc;;AAGnD,eAAO,KAAK;;OA7DhB;MAAA,KAAA;MAAA,OAsEE,8BAAqB;AAAA,YAAA,SAAA;AACnB,eAAO,KAAK,QAAQ,YAAY,KAAK,WAAM;AACzC,cAAM,WAAU,OAAK,QAAQ,cAAc,iBAAiB;AAC5D,cAAM,yBAAyB,OAAK,wBAAwB,KAAK;AACjE,wBAAc,UAAS;;;OA1E7B;MAAA,KAAA;MAAA,OAoFE,iCAAwB,SAAS;AAC/B,eAAO,uBAAuB,QAAQ;;OArF1C;MAAA,KAAA;MAAA,OA8FE,kCAAyB,UAAU;AAAA,YAAA,SAAA;AACjC,YAAM,kBACJ,SAAS,aAAa,eAAtB,aACW,UAAS,aAAa,SAAS,KAAK;AAEjD,aAAK,uBAAuB,UAAU,KAAK,SAAC,QAAW;AACrD,iBAAO,QAAQ,SAAC,OAAU;AACxB,gBAAM,qBACJ,MAAM,aAAa,uBAClB,MAAM,aAAa,eAClB,MAAM,aAAa,gBAAgB;AACvC,gBAAI,oBAAoB;AACtB;;AAEF,gBAAM,cAAc,uBAAuB;AAC3C,gBAAI,OAAK,MAAM,SAAS,cAAc;AACpC;;AAEF,wBAAY,aAAa,YAAY;AACrC,mBAAK,MAAM,KAAK;AAChB,mBAAK,4BAA4B,aAAa;;;;OAlHtD;MAAA,KAAA;MAAA,OA2HE,iCAAwB,SAAS;AAC/B,YAAI,KAAK,MAAM,SAAS,UAAU;AAChC;;AAEF,aAAK,MAAM,KAAK;AAChB,YAAI,cAAc,SAAS,QAAQ,UAAU;AAC3C,eAAK,yBAAyB;eACzB;AACL,cAAM,kBAAkB,QAAQ,aAAa,eAAe;AAC5D,eAAK,4BAA4B,SAAS;;;OApIhD;MAAA,KAAA;MAAA,OA+IE,iCAAwB,QAAQ,iBAAiB;AAG/C,YAAM,UAAU,aACd,QACA,SAAC,OAAD;AAAA,iBAAW,MAAM,YAAY;;AAE/B,YAAM,iBAAiB,QAAQ,UAAU,SACvC;AAIF,YAAM,mBAAmB,iBACrB,eAAe,aACf;AAEJ,YAAI,kBAAkB;AACpB,2BAAiB,aAAa,YAAY;;AAE5C,eAAO;;OAlKX;MAAA,KAAA;MAAA,OA2KE,qCAA4B,SAAS,iBAAiB;AACpD,YAAI,QAAQ,WAAW,YAAY;AACjC,cAAM,yBAAyB,KAAK,wBAClC,SACA;AAEF,cAAI,CAAC,wBAAwB;AAC3B;;AAEF,oBAAU;;AAGZ,mBACE,KAAK,wBAAwB,UAC7B,mDACA,QAAQ;AAGV,YAAI,CAAC,KAAK,gBAAgB,kBAAkB;AAC1C,eAAK,gBAAgB,mBAAmB;;AAG1C,aAAK,gBAAgB,iBAAiB,KAAK,MAAM,cAAc;AAC/D,YAAI,kBAAkB,UAAU;AAC9B;;AAEF,YAAM,UAAU,aAAa,KAAK,QAAQ,eAAe;AACzD,YAAM,UAAU,SAAS,oBAAoB;AAC7C,gBAAQ,WAAW,SAAnB,SAAmC,QAAQ,KAA3C;;OAvMJ;MAAA,KAAA;MAAA,OA+ME,gCAAuB,SAAS;AAC9B,eAAO,QACJ,UACA,WAAW,cAAc,UACzB,KAAK,WAAM;AACV,iBAAO,QAAQ,QAAe,iBAAiB;;;OApNvD;MAAA,KAAA;MAAA,OA6NE,qCAA4B,iBAAiB;AAAA,YAAA,SAAA;AAC3C,eAAO,KAAK,YAAY,KAAK,WAAA;AAAA,iBAC3B,UAAU,OAAK,gBAAgB;;;OA/NrC;MAAA,KAAA;MAAA,OAwOE,wBAAe,SAAS;AAGtB,YAAM,eAAe,iCAAiC,SAAS;AAC/D,YAAI,cAAc;AAChB,cAAM,aAAa,aAAa,cAAc;AAC9C,cAAI,YAAY;AACd,mBAAO,WAAkB;;;AAG7B,YAAM,kBAAkB,QAAQ,aAAa;AAC7C,YAAI,iBAAiB;AACnB,cAAM,qBAAqB,KAAK,QAAQ,eAAe;AACvD,cAAI,oBAAoB;AACtB,mBAAO,mBAA0B;;;AAGrC,eAAO;;OAzPX;MAAA,KAAA;MAAA,OAkQE,4BAAmB,SAAS;AAC1B,eAAO,WAAW,QAAQ,WACtB,QAAQ,UAAU,KAAK,SAAC,aAAD;AAAA,iBAAiB,YAAY;aACpD;;OArQR;MAAA,KAAA;MAAA,OA8QE,uBAAc,iBAAiB;AAAA,YAAA,SAAA;AAC7B,eAAO,KAAK,gBAAgB,iBAAiB,IAAI,SAAC,SAAD;AAAA,iBAAc;YAC7D,QAAQ,OAAK,oBAAoB,MAAM,cAAc;YACrD,gBAAgB,OAAK,8BAA8B;YACnD;YACA,kBAAkB,OAAK,mBAAmB;;;;OAnRhD;MAAA,KAAA;MAAA,OA6RE,uCAA8B,SAAS;AAErC,YAAM,OAAO,QAAQ;AACrB,gBAAQ;eACD;AACH,mBAAO;eAGJ;eACA;AACH,mBAAO;;AAEP,mBAAO;;;OAzSf;MAAA,KAAA;MAAA,OAmTE,6BAAoB,SAAS;AAC3B,YAAI,QAAQ,aAAa,0BAA0B;AACjD,cAAM,cAAc,QAAQ,aAAa;AACzC,cAAM,iBAAiB,KAAK,QAAQ,eAAe;AACnD,cAAI,kBAAkB,eAAe,WAAW,WAAW;AACzD,mBAAO,kBAAkB;;;AAG7B,eAAO,KAAK,0BAA0B;;OA3T1C;MAAA,KAAA;MAAA,OAoUE,mCAA0B,SAAS;AACjC,YAAI,QAAQ,WAAW,WAAW;AAChC,iBAAO,kBAAkB;;AAE3B,YAAI,QAAQ,WAAW,aAAa;AAClC,iBAAO,KAAK,4BAA4B;;AAG1C,YAAM,cAAc,mBAAmB,SAAS;AAChD,YAAI,aAAa;AACf,iBAAO,KAAK,0BAA0B;;AAExC,eAAO;;OAhVX;MAAA,KAAA;MAAA,OAwVE,qCAA4B,UAAU;AACpC,YAAM,SAAS,SAAS,aAAa;AACrC,eAAO,SAAS,cAAc,UAAU;;;AA1V5C,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA,MAAa,aAAb,2BAAA;AAIE,2BAAc;AAAA,uBAAA,MAAA;AAEZ,WAAK,YAAY;;AANrB,kBAAA,aAAA,CAAA;MAAA,KAAA;MAAA,OAcE,aAAI,SAAS;AAAA,YAAA,QAAA;AACX,YAAI,CAAC,KAAK,WAAW;AACnB,eAAK,YAAY;;AAEnB,aAAK,UAAU,KAAK;AACpB,eAAO,WAAM;AACX,gBAAK,OAAO;;;OApBlB;MAAA,KAAA;MAAA,OA4BE,iBAAO,SAAS;AACd,YAAI,CAAC,KAAK,WAAW;AACnB;;AAEF,mBAAW,KAAK,WAAW;;OAhC/B;MAAA,KAAA;MAAA,OAsCE,qBAAY;AACV,YAAI,CAAC,KAAK,WAAW;AACnB;;AAEF,aAAK,UAAU,SAAS;;OA1C5B;MAAA,KAAA;MAAA,OAiDE,cAAK,WAAW;AACd,YAAI,CAAC,KAAK,WAAW;AACnB;;AAEF,iBAAA,YAAA,gCAAsB,KAAK,YAA3B,OAAA,CAAA,SAAA,aAAA,QAAsC;AAAA,cAA3B,UAA2B,MAAA;AACpC,kBAAQ;;;OAtDd;MAAA,KAAA;MAAA,OA8DE,2BAAkB;AAAA,YAAA,uBAAA;AAChB,eAAA,yBAAA,mBAAO,KAAK,cAAZ,OAAA,SAAO,gBAAgB,WAAvB,OAAA,wBAAiC;;;AA/DrC,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,MAAa,OAAb,2BAAA;AAQE,mBAAY,KAAK,SAAS,kBAAkB;AAAA,UAAA,QAAA;AAAA,uBAAA,MAAA;AAC1C,WAAK,SAAS,SAAS,SAAS;AAGhC,WAAK,WAAW;AAGhB,WAAK,gBAAgB,oBAAoB;AAGzC,WAAK,aAAa;AAGlB,WAAK,YAAY;AAGjB,WAAK,WAAW;AAMhB,WAAK,aAAa,WAAM;AACtB,cAAK;;;AA/BX,kBAAA,OAAA,CAAA;MAAA,KAAA;MAAA,OAuCE,qBAAY;AACV,eAAO,KAAK,cAAc;;OAxC9B;MAAA,KAAA;MAAA,OAwDE,kBAAS,WAAW;AAClB,YAAI,QAAQ,aAAa,KAAK;AAC9B,YAAI,KAAK,YAAY,QAAQ,IAAI;AAG/B,kBAAQ;;AAGV,YAAM,WAAW,KAAK,QAAQ;AAG9B,YAAI,CAAC,KAAK,eAAe,WAAW,KAAK,YAAY,KAAK;AACxD,eAAK;AACL,eAAK,YAAY;AACjB,eAAK,aAAa,KAAK,OAAO,MAAM,KAAK,YAAY;AAErD,iBAAO;;AAGT,eAAO;;OA3EX;MAAA,KAAA;MAAA,OAiFE,iBAAQ;AACN,aAAK,aAAa;AAClB,aAAK,YAAY;AACjB,aAAK,WAAW;AAChB,aAAK;AACL,aAAK,WAAW;;OAtFpB;MAAA,KAAA;MAAA,OA4FE,kBAAS;AACP,YAAI,KAAK,aAAa;AACpB,eAAK,OAAO,OAAO,KAAK;AACxB,eAAK,aAAa;;;;AA/FxB,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,MAAM,QAAQ;AAUd,MAAa,UAQX,kBAAY,MAAM,MAAM,MAAM,OAAO;AAAA,qBAAA,MAAA;AAEnC,SAAK,OAAO;AAEZ,SAAK,OAAO;AAEZ,SAAK,OAAO;AAEZ,SAAK,QAAQ;;AAWjB,MAAa,WAAb,2BAAA;AA+BE,uBAAY,SAAS,yBAAyB,uBAAuB;AAAA,uBAAA,MAAA;AAEnE,WAAK,WAAW;AAGhB,WAAK,eAAe;AAGpB,WAAK,YAAY;AAGjB,WAAK,SAAS;AAGd,WAAK,WAAW;AAGhB,WAAK,YAAY;AAGjB,WAAK,2BAA2B;AAGhC,WAAK,yBAAyB;AAO9B,WAAK,eAAe;AAGpB,WAAK,QAAQ,IAAI,KACf,MAAM,QAAQ,cAAc,cAC5B,KAAK,QAAQ,KAAK;AAIpB,WAAK,yBAAyB,IAAI;AAMlC,WAAK,eAAe,OAAO,OAAO;AAGlC,WAAK,qBAAqB,KAAK,cAAc,KAAK;AAElD,WAAK,mBAAmB,KAAK,YAAY,KAAK;AAE9C,WAAK,oBAAoB,KAAK,aAAa,KAAK;AAEhD,WAAK,sBAAsB,KAAK,eAAe,KAAK;AAEpD,UAAM,MAAM,QAAQ,cAAc;AAClC,UAAM,oBAAmB,6BAA6B,MAAM;AAC5D,WAAK,SAAS,iBACZ,cACA,KAAK,oBACL,oBAAmB;QAAC,SAAS;UAAQ;AAEvC,WAAK,SAAS,iBAAiB,YAAY,KAAK;AAChD,WAAK,SAAS,iBACZ,aACA,KAAK,mBACL,oBAAmB;QAAC,SAAS;UAAQ;AAEvC,WAAK,SAAS,iBAAiB,eAAe,KAAK;AAGnD,WAAK,kBAAkB;;AAvG3B,kBAAA,WAAA,CAAA;MAAA,KAAA;MAAA,OA6GE,mBAAU;AACR,aAAK,SAAS,oBAAoB,cAAc,KAAK;AACrD,aAAK,SAAS,oBAAoB,YAAY,KAAK;AACnD,aAAK,SAAS,oBAAoB,aAAa,KAAK;AACpD,aAAK,SAAS,oBAAoB,eAAe,KAAK;AACtD,eAAO,KAAK,SAAS;AACrB,aAAK,MAAM;;OAnHf;MAAA,KAAA;MAAA,OAgIE,mBAAU,kBAAkB,SAAS;AACnC,YAAM,aAAa,IAAI,iBAAiB;AACxC,YAAM,OAAO,WAAW;AACxB,YAAI,aAAa,KAAK,aAAa;AACnC,YAAI,CAAC,YAAY;AACf,eAAK,aAAa,KAAK;AACvB,uBAAa,IAAI;AACjB,eAAK,aAAa,QAAQ;;AAE5B,eAAO,WAAW,IAAI;;OAzI1B;MAAA,KAAA;MAAA,OAoJE,uBAAc,kBAAkB;AAC9B,YAAM,OAAO,IAAI,iBAAiB,MAAM;AACxC,YAAM,aAAa,KAAK,aAAa;AACrC,YAAI,YAAY;AACd,qBAAW;AACX,cAAM,QAAQ,UAAU,KAAK,cAAc,SAAC,IAAD;AAAA,mBAAO,GAAE,aAAa;;AACjE,cAAI,QAAQ,GAAG;AACb,mBAAO;;AAGT,eAAK,aAAa,OAAO,OAAO;AAChC,eAAK,OAAO,OAAO,OAAO;AAC1B,eAAK,SAAS,OAAO,OAAO;AAC5B,eAAK,UAAU,OAAO,OAAO;AAC7B,iBAAO,KAAK,aAAa;AACzB,iBAAO;eACF;AACL,iBAAO;;;OArKb;MAAA,KAAA;MAAA,OA8KE,uBAAc,SAAS;AACrB,eAAO,KAAK,uBAAuB,IAAI;;OA/K3C;MAAA,KAAA;MAAA,OAwLE,uBAAc,OAAO;AACnB,YAAM,MAAM,KAAK;AACjB,aAAK,eAAe;AAEpB,aAAK,uBAAuB,KAAK;AAEjC,iBAAS,KAAI,GAAG,KAAI,KAAK,aAAa,QAAQ,MAAK;AACjD,cAAI,KAAK,OAAO,KAAI;AAGlB;;AAEF,cAAI,KAAK,SAAS,OAAM,KAAK,SAAS,MAAK,KAAK;AAE9C,iBAAK,cAAc;;AAErB,cAAI,KAAK,aAAa,IAAG,aAAa,QAAQ;AAM5C,iBAAK,eAAe;;;AAIxB,aAAK,YAAY;;OAlNrB;MAAA,KAAA;MAAA,OA2NE,sBAAa,OAAO;AAClB,YAAM,MAAM,KAAK;AAEjB,iBAAS,KAAI,GAAG,KAAI,KAAK,aAAa,QAAQ,MAAK;AACjD,cAAI,CAAC,KAAK,UAAU,KAAI;AAEtB;;AAEF,cAAI,KAAK,SAAS,OAAM,KAAK,SAAS,MAAK,KAAK;AAE9C,iBAAK,cAAc;AACnB;;AAEF,cAAI,CAAC,KAAK,aAAa,IAAG,YAAY,QAAQ;AAE5C,iBAAK,cAAc;;;AAIvB,aAAK,YAAY;;OA9OrB;MAAA,KAAA;MAAA,OAuPE,qBAAY,OAAO;AACjB,YAAM,MAAM,KAAK;AAEjB,iBAAS,KAAI,GAAG,KAAI,KAAK,aAAa,QAAQ,MAAK;AACjD,cAAI,CAAC,KAAK,UAAU,KAAI;AAEtB;;AAEF,cAAI,KAAK,SAAS,OAAM,KAAK,SAAS,MAAK,KAAK;AAE9C,iBAAK,cAAc;AACnB;;AAGF,eAAK,aAAa,IAAG,WAAW;AAEhC,cAAM,UAAU,CAAC,KAAK,SAAS;AAC/B,cAAM,YAAY,KAAK,SAAS,MAAK;AACrC,cAAM,aAAa,KAAK,aAAa,KAAK,aAAa;AAEvD,cAAI,CAAC,cAAe,YAAW,YAAY;AACzC,iBAAK,cAAc;;;AAIvB,aAAK,YAAY;;OAhRrB;MAAA,KAAA;MAAA,OAyRE,wBAAe,OAAO;AACpB,iBAAS,KAAI,GAAG,KAAI,KAAK,aAAa,QAAQ,MAAK;AACjD,eAAK,gBAAgB;;AAEvB,aAAK,YAAY;;OA7RrB;MAAA,KAAA;MAAA,OA0SE,sBAAa,YAAY,QAAQ;AAE/B,YAAI,KAAK,WAAW;AAClB,qBAAW;AACX;;AAKF,YAAM,MAAM,KAAK;AACjB,iBAAS,KAAI,GAAG,KAAI,KAAK,aAAa,QAAQ,MAAK;AACjD,cAAI,KAAK,aAAa,OAAM,YAAY;AACtC,iBAAK,OAAO,MAAK,MAAM;AACvB,iBAAK,SAAS,MAAK;;;AAGvB,aAAK,kBAAkB;;OA1T3B;MAAA,KAAA;MAAA,OAwUE,wBAAe,YAAY,UAAU;AAEnC,YAAI,KAAK,WAAW;AAClB,qBAAW;AACX;;AAGF,YAAM,MAAM,KAAK;AACjB,iBAAS,KAAI,GAAG,KAAI,KAAK,aAAa,QAAQ,MAAK;AACjD,cAAI,KAAK,aAAa,OAAM,YAAY;AACtC,iBAAK,SAAS,MAAK,MAAM;;;;OAlVjC;MAAA,KAAA;MAAA,OA+VE,oBAAW,YAAY;AACrB,YAAI,KAAK,aAAa,YAAY;AAChC,eAAK,YAAY;AACjB,eAAK,eAAe;;;OAlW1B;MAAA,KAAA;MAAA,OAgXE,qBAAY,YAAY,MAAM,OAAO;AACnC,kBACE,KAAK,aAAa,YAClB,2CACA,WAAW;AAEb,YAAM,aAAa,KAAK,aAAa,WAAW;AAChD,YAAI,YAAY;AACd,qBAAW,KACT,IAAI,QAAQ,WAAW,WAAW,MAAM,KAAK,OAAO;;;OAzX5D;MAAA,KAAA;MAAA,OAkYE,qBAAY,OAAO;AACjB,YAAI,cAAc,CAAC,CAAC,KAAK,aAAa,KAAK;AAC3C,aAAK,eAAe;AACpB,YAAI,CAAC,aAAa;AAChB,cAAM,MAAM,KAAK;AACjB,mBAAS,KAAI,GAAG,KAAI,KAAK,aAAa,QAAQ,MAAK;AACjD,gBAAI,KAAK,OAAO,OAAO,KAAK,SAAS,OAAM,KAAK,SAAS,OAAM,KAAM;AACnE,4BAAc;AACd;;;;AAIN,YAAI,aAAa;AACf,gBAAM;AACN,cAAI,CAAC,KAAK,0BAA0B;AAClC,kBAAM;;mBAEC,KAAK,wBAAwB;AACtC,gBAAM;;AAER,YAAI,KAAK,iBAAiB;AACxB,eAAK,kBAAkB;AACvB,eAAK;;;OAxZX;MAAA,KAAA;MAAA,OAiaE,mBAAU;AACR,YAAM,MAAM,KAAK;AAIjB,YAAI,aAAa;AACjB,iBAAS,KAAI,GAAG,KAAI,KAAK,aAAa,QAAQ,MAAK;AACjD,cAAI,CAAC,KAAK,OAAO,KAAI;AACnB,gBAAI,KAAK,SAAS,OAAM,KAAK,SAAS,MAAK,KAAK;AAE9C,mBAAK,cAAc;;AAErB;;AAEF,cAAI,cAAc,MAAM,KAAK,OAAO,MAAK,KAAK,OAAO,aAAa;AAChE,yBAAa;;;AAIjB,YAAI,cAAc,IAAI;AAEpB;;AAIF,YAAI,WAAW;AACf,iBAAS,KAAI,GAAG,KAAI,KAAK,aAAa,QAAQ,MAAK;AACjD,cAAI,KAAK,OAAO,OAAM,CAAC,KAAK,UAAU,KAAI;AACxC;;AAEF,qBAAW,KAAK,IAAI,UAAU,KAAK,SAAS,MAAK;;AAGnD,YAAI,WAAW,GAAG;AAEhB,eAAK,eAAe;AACpB;;AAIF,aAAK,MAAM,SAAS;;OAzcxB;MAAA,KAAA;MAAA,OAidE,wBAAe,OAAO;AACpB,YAAM,aAAa,KAAK,aAAa;AACrC,iBAAS,KAAI,GAAG,KAAI,KAAK,aAAa,QAAQ,MAAK;AACjD,cAAI,MAAK,OAAO;AACd,iBAAK,gBAAgB;;;AAGzB,aAAK,OAAO,SAAS;AACrB,aAAK,SAAS,SAAS;AACvB,aAAK,YAAY;AACjB,mBAAW;;OA3df;MAAA,KAAA;MAAA,OAkeE,wBAAe,OAAO;AACpB,aAAK,UAAU,SAAS;AACxB,aAAK,SAAS,SAAS;;OApe3B;MAAA,KAAA;MAAA,OA2eE,uBAAc,OAAO;AACnB,aAAK,UAAU,SAAS;AACxB,aAAK,SAAS,SAAS;AACvB,YAAI,CAAC,KAAK,OAAO,QAAQ;AACvB,eAAK,aAAa,OAAO;;;OA/e/B;MAAA,KAAA;MAAA,OAufE,yBAAgB,OAAO;AACrB,aAAK,OAAO,SAAS;AACrB,aAAK,cAAc;;QAzfvB,CAAA;MAAA,KAAA;MAAA,OASE,aACE,SACA,6BACA,2BACA;AAAA,YAFA,gCAEA,QAAA;AAFA,wCAA8B;;AAE9B,YADA,8BACA,QAAA;AADA,sCAA4B;;AAE5B,YAAI,MAAM,QAAQ;AAClB,YAAI,CAAC,KAAK;AACR,gBAAM,IAAI,UACR,SACA,6BACA;AAEF,kBAAQ,SAAS;;AAEnB,eAAO;;;AAvBX,WAAA;;AAwhBA,MAAa,oBAAb,2BAAA;AAKE,gCAAY,MAAM,SAAS;AAAA,uBAAA,MAAA;AAEzB,WAAK,QAAQ;AAGb,WAAK,WAAW;;AAVpB,kBAAA,oBAAA,CAAA;MAAA,KAAA;MAAA,OAkBE,mBAAU;AACR,eAAO,KAAK;;OAnBhB;MAAA,KAAA;MAAA,OA8BE,qBAAY,QAAQ;AAClB,aAAK,SAAS,aAAa,MAAM;;OA/BrC;MAAA,KAAA;MAAA,OA0CE,uBAAc,UAAU;AACtB,aAAK,SAAS,eAAe,MAAM;;OA3CvC;MAAA,KAAA;MAAA,OAoDE,qBAAY;AACV,aAAK,SAAS,WAAW;;OArD7B;MAAA,KAAA;MAAA,OA+DE,oBAAW,MAAM,OAAO;AACtB,aAAK,SAAS,YAAY,MAAM,MAAM;;OAhE1C;MAAA,KAAA;MAAA,OAyEE,uBAAc;;OAzEhB;MAAA,KAAA;MAAA,OA+EE,wBAAe;;OA/EjB;MAAA,KAAA;MAAA,OAwFE,sBAAa,aAAa;AACxB,eAAO;;OAzFX;MAAA,KAAA;MAAA,OAmGE,qBAAY,aAAa;AACvB,eAAO;;OApGX;MAAA,KAAA;MAAA,OA8GE,oBAAW,aAAa;;;AA9G1B,WAAA;;;;ACpjBO,MAAM,OAAO;IAClB,OAAO;IACP,QAAQ;IACR,OAAO;IACP,YAAY;IACZ,UAAU;IACV,aAAa;IACb,YAAY;IACZ,KAAK;IACL,WAAW;IACX,MAAM;IACN,KAAK;;;;ACxBP,MAAI;AASG,mBAAiB,WAAW;AACjC,QAAM,MAAM,UAAU,iBAAiB;AACvC,QAAI,CAAC,iBAAiB,cAAc,kBAAkB,KAAK;AACzD,sBAAgB,IAAI,cAAc;;AAGpC,WAAO;;AAkDT,gBAAc,SAAS;AACrB,WAAO,WAAW,eAAe;;AASnC,sBAAoB,WAAW,SAAS;AACtC,cAAU,QAAQ,WAAW,GAAG;AAChC,cAAiB,YAAY,QAAQ;AAErC,QAAM,KAAK,UAAU;AACrB,cAAU,IAAI;AACd,cAAU,CAAC,GAAG,oBAAoB;AAGlC,cAAU,YAAY;AAEtB,WAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFF,MAAM,gBAAgB;IAC3B,MAAM;IACN,MAAM;IACN,QAAQ;;AAMV,MAAa,kBAAb,2BAAA;AA8BE,8BACE,SACA,iBACA,eACA,cACA,sBACA;AAAA,uBAAA,MAAA;AAEA,WAAK,WAAW;AAGhB,WAAK,mBAAmB;AAGxB,WAAK,iBAAiB;AAGtB,WAAK,gBAAgB;AAGrB,WAAK,wBAAwB;;AAlDjC,kBAAA,kBAAA,CAAA;MAAA,KAAA;MAAA,OAwDE,sBAAa;AACX,eAAO,KAAK;;OAzDhB;MAAA,KAAA;MAAA,OA+DE,oBAAW,SAAS;AAClB,aAAK,eAAsB,YAAY;;OAhE3C;MAAA,KAAA;MAAA,OAsEE,0BAAiB,OAAO;AACtB,aAAK,iBAAiB,aAAa,+BAA+B;;OAvEtE;MAAA,KAAA;MAAA,OA6EE,4BAAmB;AACjB,eACE,KAAK,iBAAiB,aAAa;;OA/EzC;MAAA,KAAA;MAAA,OA4FE,4BAAmB,eAAe,WAAW,kBAAkB;AAC7D,YAAM,aAAa,iBAAiB,cAAc;AAClD,YAAM,SACJ,qBAAqB,SAAY,mBAAmB,CAAC;AAGvD,YAAM,cAAc,cAAc;AAElC,YAAI,CAAC,aAAa;AAChB,iBAAO,cAAc;;AAGvB,eAAO,SAAS,cAAc,SAAS,cAAc;;OAxGzD;MAAA,KAAA;MAAA,OAiHE,wBAAe,kBAAkB;AAAA,YAAA,QAAA;AAC/B,YAAO,gBAAmC,KAAnC,eAAe,mBAAoB,KAApB;AACtB,YAAI;AAEJ,YAAM,uBAAuB,iCAAM;AAKjC,iCACE,iBAAwB,eACtB,iBAAwB,gBAC1B,cAAqB;;AAGzB,YAAM,sBAAsB,gCAAM;AAChC,cAAM,gBAAgB,MAAK;AAC3B,cAAM,WAAW,MAAK,mBACpB,eACA,sBACA;AAGF,gBAAK,iBAAiB;AACtB,cAAI,YAAY,cAAc,QAAQ;AACpC,6BAAwB,YAAY;;;AAIxC,aAAK,sBAAsB,sBAAsB;;QA9IrD,CAAA;MAAA,KAAA;MAAA,OAME,eAAa,KAAK,sBAAsB;AACtC,YAAM,KAAK,QAAQ,KAAX,mBAAA,mBAAA,4BAAA,CAAA;AAOR,eAAO,IAAI,iBACT,IACA,MAAM,cAAc,GAAG,cAAc,mCACrC,MAAM,cAAc,GAAG,cAAc,mCACrC,MAAM,cAAc,GAAG,cAAc,iCACrC;;;AAnBN,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLO,MAAM,yBAAyB;IACpC,OAAO;IACP,SAAS;IACT,QAAQ;IACR,MAAM;IACN,MAAM;;AAMR,MAAa,mBAAb,2BAAA;AAkEE,+BAAY,KAAK,SAAS,sBAAsB;AAAA,UAAA,QAAA;AAAA,uBAAA,MAAA;AAE9C,WAAK,OAAO;AAGZ,WAAK,WAAW;AAGhB,WAAK,wBAAwB;AAE7B,WAAK,SAAS,iBAAiB,SAAS,SAAC,OAAU;AACjD,cAAK,aAAa;;;AA7ExB,kBAAA,mBAAA,CAAA;MAAA,KAAA;MAAA,OAoFE,sBAAa;AACX,eAAO,KAAK;;OArFhB;MAAA,KAAA;MAAA,OA4FE,sBAAa,OAAO;AAClB,YAAM,SAAS,MAAM,OAAO,aAAa;AAEzC,YAAI,CAAC,QAAQ;AACX;;AAGF,aAAK,SAAS,cACZ,kBACE,KAAK,MACL,UACA,KAAK;UACH,UAAU;;AAIhB,cAAM;AACN,cAAM;;QA7GV,CAAA;MAAA,KAAA;MAAA,OAOE,eAAa,KAAK,KAAK,sBAAsB;AAE3C,YAAM,KAAK,QAAQ,KAAX,oBAAA,oBAAA,6BAAA,CAAA;AA+BR,YAAM,QAAQ,SAAS,SAAS;AAChC,YAAI,CAAC,MAAM,mBAAmB;AAC5B,aAAG,cAAc,wBAAwB,UAAU,IACjD;AAEF,aAAG,cAAc,wBAAwB,UAAU,IACjD;;AAIJ,YAAM,gBAAgB,OAAO,OAAO;AACpC,kBACE,QAAQ,GAAG,iBAAiB,kBACzB,IAAI,SAAC,KAAD;AAAA,iBAAS,IAAI,aAAa;WAC9B,MAAM,SAAC,QAAD;AAAA,iBAAY,cAAc,SAAS;YAC5C;AAGF,eAAO,IAAI,kBAAiB,KAAK,IAAI;;;AA1DzC,WAAA;;;;ACXA,MAAM,eAAe;AAGrB,MAAM,mBAAmB,KAAK,MAAM,CAAC,eAAe,KAAK,IAAI;AAO7D,MAAM,wBAAwB,eAAe;AAWtC,wBAAsB,QAAQ,WAAW,cAAc;AAC5D,QAAI,YAAY,GAAG;AACjB,kBAAY;;AAId,QAAM,QAAQ,SAAS;AAQvB,QAAM,OAAO,MAAM,KAAK,IAAI,YAAY,uBAAuB;AAC/D,WAAO,QAAQ,OAAO,eAAgB,KAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCgKtC,kBAAA,yBAAA,qBAAA;;;AAOJ,8BAAY,MAAM,SAAS,OAAO,MAAM;AAAA,UAAA;AAAA,wBAAA,MAAA;AACtC,eAAA,QAAA,KAAA,MAAM,MAAM;AAGZ,aAAK,SAAS;AAGd,aAAK,QAAQ;AAGb,aAAK,YAAY;AAGjB,aAAK,UAAU;AAGf,aAAK,UAAU;AAGf,aAAK,SAAS;AAGd,aAAK,SAAS;AAGd,aAAK,SAAS;AAGd,aAAK,SAAS;AAGd,aAAK,aAAa;AAGlB,aAAK,YAAY;AAGjB,aAAK,YAAY;AAGjB,aAAK,aAAa;AAGlB,aAAK,aAAa;AA3CoB,aAAA;;;;aA+CxC,sBAAa,IAAG;AACd,YAAO,UAAW,GAAX;AAEP,YAAI,KAAK,aAAa,WAAW,QAAQ,SAAS,GAAG;AACnD,iBAAO;;AAET,YAAI,WAAW,QAAQ,UAAU,GAAG;AAClC,eAAK,aAAa,KAAK;AACvB,eAAK,UAAU,QAAQ,GAAG;AAC1B,eAAK,UAAU,QAAQ,GAAG;AAC1B,iBAAO;eACF;AACL,iBAAO;;;;;aAKX,qBAAY,IAAG;AACb,YAAO,UAAW,GAAX;AACP,YAAI,WAAW,QAAQ,UAAU,GAAG;AAClC,cAAA,YAAiC,QAAQ,IAAzB,IAAhB,UAAO,SAAqB,IAA5B,UAAmB;AACnB,eAAK,SAAS;AACd,eAAK,SAAS;AACd,cAAI,KAAK,WAAW;AAElB,iBAAK,MAAM,OAAO,OAAO;iBACpB;AAEL,gBAAM,KAAK,KAAK,IAAI,IAAI,KAAK;AAC7B,gBAAM,KAAK,KAAK,IAAI,IAAI,KAAK;AAG7B,gBAAI,KAAK,UAAU,KAAK,OAAO;AAC7B,kBAAI,MAAM,KAAK,MAAM,GAAG;AACtB,qBAAK,YAAY;;uBAEV,KAAK,QAAQ;AACtB,kBAAI,MAAM,KAAK,KAAK,IAAI;AACtB,qBAAK,YAAY;yBACR,MAAM,GAAG;AAClB,uBAAO;;uBAEA,KAAK,OAAO;AACrB,kBAAI,MAAM,KAAK,KAAK,IAAI;AACtB,qBAAK,YAAY;yBACR,MAAM,GAAG;AAClB,uBAAO;;mBAEJ;AACL,qBAAO;;;AAGX,iBAAO;eACF;AACL,iBAAO;;;;;aAKX,oBAAW,IAAG;AACZ,YAAO,UAAW,GAAX;AAEP,YAAI,WAAW,QAAQ,UAAU,GAAG;AAClC,eAAK,KAAK;;;;;aAKd,uBAAc;AACZ,aAAK,YAAY;AAIjB,aAAK,SAAS,KAAK;AACnB,aAAK,SAAS,KAAK;AACnB,aAAK,YAAY,KAAK;AACtB,aAAK,UAAU,KAAK;AACpB,aAAK,UAAU,KAAK;AACpB,aAAK,MAAM,MAAM,OAAO;;;;aAI1B,wBAAe;AACb,aAAK,YAAY;;;;aASnB,eAAM,OAAO,MAAM,OAAO;AACxB,aAAK,YAAY,KAAK;AACtB,YAAM,YAAY,KAAK,YAAY,KAAK;AAGxC,YAAK,CAAC,QAAQ,YAAY,KAAO,QAAQ,YAAY,IAAK;AACxD,cAAM,YAAY,aAChB,KAAK,SAAS,KAAK,QACnB,WACA,KAAK;AAEP,cAAM,YAAY,aAChB,KAAK,SAAS,KAAK,QACnB,WACA,KAAK;AAOP,cAAI,CAAC,QAAQ,YAAY,MAAM,aAAa,KAAK,aAAa,GAAG;AAC/D,iBAAK,aAAa,KAAK,IAAI,aAAa,OAAO,YAAY;AAC3D,iBAAK,aAAa,KAAK,IAAI,aAAa,OAAO,YAAY;;AAG7D,eAAK,SAAS,KAAK;AACnB,eAAK,SAAS,KAAK;AACnB,eAAK,YAAY,KAAK;;AAGxB,aAAK,WACH;UACE;UACA;UACA,MAAM,KAAK;UACX,QAAQ,KAAK,SAAS,KAAK;UAC3B,QAAQ,KAAK,SAAS,KAAK;UAC3B,QAAQ,KAAK;UACb,QAAQ,KAAK;UACb,OAAO,KAAK;UACZ,OAAO,KAAK;UACZ,WAAW,KAAK;UAChB,WAAW,KAAK;WAElB;;;;aAQJ,cAAK,OAAO;AACV,YAAI,KAAK,WAAW;AAClB,eAAK,YAAY;AACjB,eAAK,MAAM,OAAO,MAAM;AACxB,eAAK;;;;;IA3MmB;AA2O9B,MAAa,mBAAb,yBAAA,mBAAA;AAAA,cAAA,mBAAA;AAAA,QAAA,UAAA,aAAA;AAIE,+BAAY,SAAS;AAAA,wBAAA,MAAA;AAAA,aAAA,QAAA,KAAA,MACb,WAAW,SAAS,OAAO;;AALrC,WAAA;IAAsC;;;AC3a/B,0CAAwC,KAAK,UAAU;AAC5D,QAAM,QAAQ,SAAS,SAAS;AAEhC,QAAM,iBAAiB;AAIvB,WAAO,MAAM,QAAQ,gBAAgB,KAAK,WAAA;AAAA,aAAM,MAAM,QAAQ;;;AASzD,oCAAkC,SAAS;AAChD,QAAM,IAAI,KAAK,MAAM,UAAU;AAC/B,QAAM,IAAI,KAAK,MAAM,UAAU;AAC/B,QAAM,KAAI,KAAK,MAAM,UAAU;AAC/B,QAAM,KAAK,SAAS,EAAE,YAAY,GAAG;AACrC,QAAM,KAAK,SAAS,EAAE,YAAY,GAAG;AACrC,QAAM,KAAK,SAAS,GAAE,YAAY,GAAG;AACrC,WAAO,KAAK,MAAM,KAAK,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;AC3B/B,MAAM,0BAA0B;AAIhC,MAAM,oCAAoC,0BAA0B;AAKpE,MAAM,iCAAiC,0BAA0B;AAKjE,MAAM,oCAAoC;AAK1C,MAAM,6BAA6B;AAEnC,MAAM,2BAA2B;AAKjC,MAAM,6CAA6C;AAKnD,MAAM,yCAAyC;AAK/C,MAAM,uCAAuC;AAK7C,MAAM,iCAAiC;AAWvC,6BAA2B,IAAI,IAAI,IAAI,IAAI;AACzC,WAAO,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI;;AAW5D,gBAAc,OAAO,KAAK,YAAY;AACpC,WAAO,QAAS,OAAM,SAAS;;AAMjC,MAAa,iBAAb,2BAAA;AAOE,6BAAY,KAAK,SAAS,eAAe,SAAS;AAAA,wBAAA,MAAA;AAEhD,WAAK,OAAO;AAGZ,WAAK,WAAW;AAGhB,WAAK,iBAAiB;AAGtB,WAAK,WAAW;AAMhB,WAAK,gBAAgB;AAMrB,WAAK,iBAAiB;AAMtB,WAAK,QAAQ;AAMb,WAAK,WAAW;AAQhB,WAAK,2BAA2B;AAKhC,WAAK,aAAa;;AAvDtB,mBAAA,iBAAA,CAAA;MAAA,KAAA;MAAA,OAmEE,oBAAW,QAAQ;AAAA,YAAA,QAAA;AACjB,YAAO,gBAA8C,OAA9C,eAAe,OAA+B,OAA/B,MAAM,UAAyB,OAAzB,SAAS,eAAgB,OAAhB;AACrC,aAAK,gBAAgB;AACrB,aAAK,iBAAiB;AACtB,aAAK,QAAQ;AACb,aAAK,WAAW;AAChB,aAAK,aAAa;AAElB,aAAK,eAAe,WAAM;AACxB,gBAAK;;;OA5EX;MAAA,KAAA;MAAA,OA2FE,6BAAoB,OAAO,QAAQ,QAAQ,UAAU;AACnD,YAAM,WAAW,WAAW;AAE5B,kBAAU,MAAM,cAAc,KAAK,gBAAgB;UACjD,WAAS,WAAW,QAAX,iBAA+B,SAA/B,SAA4C,SAA5C;UACT,YAAe,WAAL,kBAA6B;;AAGzC,eAAO,+BAA+B,KAAK,MAAM;;OAnGrD;MAAA,KAAA;MAAA,OA6GE,4BAAmB,eAAe;AAAA,YAAA,SAAA;AAChC,YAAM,WAAW,gBAAgB;AAEjC,eAAO,KAAK,eAAe,WAAM;AAC/B,oBAAU,MAAM,cAAc,OAAK,gBAAgB;YACjD,WAAW;YACX,YAAe,WAAL;;AAEZ,oBAAU,MAAM,cAAc,OAAK,QAAQ;YACzC,SAAS;YACT,YAAe,WAAL;;AAEZ,oBAAU,MAAM,cAAc,OAAK,WAAW;YAC5C,SAAS;YACT,YAAe,WAAL;;WAEX,KAAK,WAAM;AACZ,iBAAO,+BAA+B,OAAK,MAAM;;;OA9HvD;MAAA,KAAA;MAAA,OA4IE,iCACE,uBACA,aACA,gBACA;AAAA,YAHA,0BAGA,QAAA;AAHA,kCAAwB;;AAGxB,YAFA,gBAEA,QAAA;AAFA,wBAAc;;AAEd,YADA,mBACA,QAAA;AADA,2BAAiB;;AAEjB,kBAAU,MAAM,cAAc,KAAK,gBAAgB;UACjD,WAAW;UACX,YAAY;;AAEd,kBAAU,MAAM,cAAc,KAAK,QAAQ;UACzC,SAAS;UACT,YAAY;;AAEd,kBAAU,MAAM,cAAc,KAAK,WAAW;UAC5C,SAAS;UACT,YAAY;;;OA3JlB;MAAA,KAAA;MAAA,OA6KE,uBAAc,OAAO,WAAW,WAAW,QAAQ,QAAQ;AAAA,YAAA,SAAA;AACzD,YAAM,WAAW,kBAAkB,GAAG,GAAG,WAAW;AACpD,YAAM,YAAY,YAAY;AAC9B,YAAM,YAAY,YAAY;AAC9B,YAAM,cAAc,YAAY;AAChC,YAAM,cAAc,YAAY;AAKhC,YAAM,gBAAgB,kBAAkB,GAAG,GAAG,aAAa;AAI3D,eAAO,KAAK,oBACV,OACA,aACA,aACA,UACA,KAAK,WAAM;AACX,cACE,gBAAgB,qCAChB,WAAW,mCACX;AACA,mBAAO,OAAK,mBAAmB;;AAGjC,iBAAO,OAAK;;;OAxMlB;MAAA,KAAA;MAAA,OAmNE,gCAAuB;AACrB,aAAK,eAAe,UAAU,IAAI;AAGlC,aAAK,2BAA2B,OAC9B,MAAM,cAAc,KAAK,gBACzB,UACA,SAAC,OAAU;AACT,gBAAM;WAER;UACE,SAAS;;AAKb,aAAK,SAAS,aAAa,6BAA6B;AAExD,iBAAS,KAAK,UAAU,qBAAqB;;OArOjD;MAAA,KAAA;MAAA,OA6OE,8BAAqB;AACnB,aAAK,eAAe,UAAU,OAAO;AACrC,aAAK;AACL,aAAK,SAAS,gBAAgB;AAC9B,iBAAS,KAAK,UAAU,qBAAqB;;OAjPjD;MAAA,KAAA;MAAA,OAuPE,mBAAU,MAAM;AAAA,YAAA,SAAA;AACd,YAAO,SAA8C,KAA9C,QAAQ,SAAsC,KAAtC,QAAQ,OAA8B,KAA9B,MAAM,YAAwB,KAAxB,WAAW,YAAa,KAAb;AACxC,YAAM,aAAa,KAAK;AACxB,YAAI,MAAM;AACR,eAAK,aAAa;;AAIpB,YAAM,WAAW,kBAAkB,GAAG,GAAG,QAAQ;AACjD,YAAM,oBAAoB,KAAK,IAAI,WAAW,yBAAyB;AACvE,YAAM,wBAAwB,KAAK,IACjC,WAAW,gCACX;AAEF,YAAM,QAAQ,KAAK,GAAG,0BAA0B;AAChD,YAAM,cAAc,KAAK,GAAG,4BAA4B;AACxD,YAAM,iBAAiB,KAAK,GAAG,GAAG;AAElC,aAAK,eAAe,WAAM;AACxB,cAAI,KAAK,QAAQ,YAAY;AAC3B,mBAAK,cAAc,OAAO,WAAW,WAAW,QAAQ,QAAQ,KAC9D,WAAM;AAIJ,qBAAK;AACL,qBAAK;;AAGT;;AAGF,cAAI,OAAK,YAAY;AACnB,mBAAK,wBAAL,WACW,QADX,iBAC+B,SAD/B,SAC4C,SAD5C,OAEE,aACA;;;;;AA3RV,WAAA;;;;ACDO,iBAAe,KAAK,KAAK,KAAK;AACnC,eAAU,OAAO,KAAK;AACtB,WAAO,KAAK,IAAI,KAAK,IAAI,KAAK,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEtC,MAAM,MAAM;AAGZ,MAAM,oBAAoB;AAG1B,MAAM,0BAA0B;AAOzB,oBAAkB,KAAK;AAAA,QAAA;AAC5B,WAAO,CAAC,CAAA,oBAAC,IAAI,eAAL,QAAC,gBAAgB;;AAQpB,yBAAuB,KAAK;AAAA,QAAA;AACjC,WAAO,qBAAA,IAAI,eAAJ,OAAA,SAAA,iBAAgB,SAAQ;;AAS1B,0BAAwB,KAAK,cAAc;AAChD,QAAM,UAAU,kBAAkB;AAClC,WAAO,CAAC,CAAC,QAAQ;;AAoDZ,6BAA2B,KAAK;AAAA,QAAA,kBAAA;AACrC,QAAI,IAAI,0BAA0B;AAChC,aAAO,IAAI;;AAEb,QAAI,2BAA2B;AAC/B,QAAM,UAAU,IAAI;AAGpB,QAAI,IAAI,YAAY;AAClB,eAAW,gBAAgB,IAAI,YAAY;AACzC,YAAM,YAAY,IAAI,WAAW;AACjC,YAAI,OAAO,cAAc,YAAY,aAAa,KAAK,aAAa,GAAG;AACrE,kBAAQ,gBAAgB,KAAK,WAAW;;;;AAK9C,QAAM,kBAAe,oBAAG,IAAI,eAAP,OAAA,SAAG,iBAAiB;AACzC,QAAI,QAAQ,oBAAoB,gBAAgB,QAAQ;AACtD,UAAM,OAAO,IAAI,SAAS,KAAK,cAC7B;AAEF,UAAI,MAAM;AACR,YAAM,qBAAqB,KAAK,aAAa,WAAW,MAAM;AAC9D,iBAAA,YAAA,iCAAyB,qBAAzB,OAAA,CAAA,SAAA,aAAA,QAA6C;AAAA,cAAlC,aAAkC,MAAA;AAC3C,cAAI,MAAM,YAAY,iBAAiB,SAAS,aAAa;AAC3D,oBAAQ,cAAc;;;;;AAM9B,WAAO,OAAO,SAAS,qBAAqB;AAE5C,QAAM,kBAAe,oBAAG,IAAI,eAAP,OAAA,SAAG,iBAAiB;AACzC,QAAI,QAAQ,oBAAoB,gBAAgB,QAAQ;AACtD,UAAM,OAAO,IAAI,SAAS,mBAAmB,IAAI,SAAS;AAC1D,UAAM,SAAS,iBAAiB;AAChC,eAAA,aAAA,iCAAyB,kBAAzB,QAAA,CAAA,UAAA,cAAA,QAA0C;AAAA,YAA/B,cAA+B,OAAA;AACxC,YAAM,QAAQ,OAAM,OAAM;AAC1B,YAAI,SAAS,KAAK;AAChB,kBAAQ,eAAc;;AAExB,YAAI,SAAS,KAAK;AAChB,kBAAQ,eAAc;;;;AAI5B,WAAO;;AASF,mCAAiC,KAAK;AAC3C,WAAO,IAAI,4BAA4B;;AAQzC,gCAA8B,KAAK;AAAA,QAAA;AACjC,QAAI,oBAAoB;AACxB,QAAI;AACF,UAAI,kBAAkB,KAAK;AACzB,4BAAoB,IAAI,aAAa,QAAQ;;aAE/C,SAAA;AACA,YAAM,KAAK,KAAK;;AAElB,QAAM,SAAS,uBAAA,sBAAiB,OAAjB,SAAA,mBAAmB,MAAM,gBAAe;AAEvD,QAAM,UAAU;AAChB,aAAA,aAAA,iCAAoB,SAApB,QAAA,CAAA,UAAA,cAAA,QAA4B;AAAA,UAAjB,QAAiB,OAAA;AAC1B,UAAI,CAAC,OAAO;AACV;;AAEF,UAAI,MAAM,MAAM,KAAK;AACnB,gBAAQ,MAAM,OAAO,MAAM;aACtB;AACL,gBAAQ,SAAS;;;AAGrB,WAAO;;;;AChNT,aAAW,IAAE,IAAE,IAAE;AAAC,WAAO,MAAE,GAAE,QAAM,GAAE,UAAQ,GAAE,QAAM,GAAE,WAAS,KAAE;MAAC,OAAM,GAAE,SAAO;MAAE,QAAO,GAAE;QAAQ;MAAC,OAAM,GAAE;MAAM,QAAO,GAAE,QAAM;;;AAAG,aAAW,IAAE,IAAE,IAAqD;AAAA,QAArD,OAAqD,QAAA;AAArD,WAAE,iBAAiB,IAAG,iBAAiB;;AAAe,YAAO,KAAE;MAAC,OAAM,GAAE;MAAa,QAAO,GAAE;OAAe;WAAO;AAAQ,eAAO,EAAE,IAAE,IAAE;WAAQ;AAAU,eAAO,EAAE,IAAE,IAAE;WAAQ;AAAO,eAAO;WAAM;AAAO,eAAO;WAAM;AAAa,eAAO,KAAE,EAAE,IAAE,IAAE,OAAI;UAAC,OAAM,KAAK,IAAI,GAAE,OAAM,GAAE;UAAO,QAAO,KAAK,IAAI,GAAE,QAAO,GAAE;;WAAa;WAAQ;AAAK,eAAO;;AAAU,cAAM,MAAK,iBAAgB,KAAhB;;;AAAoC,aAAW,IAAE,IAAE;AAAC,WAAO,KAAG,IAAE,MAAM,IAAI,OAAO,eAAa,QAAK,CAAC,MAAM,GAAG,QAAQ,KAAI,KAAI,WAAW;;AAAG,aAAW,IAAE,IAAE,IAAE;AAAC,QAAI,KAAE,MAAG,WAAU,KAAE,AAAI,GAAE,YAAY,QAAO,OAAzB,IAA4B,GAAE,QAAQ,OAAK,IAAE,GAAE,QAAQ;AAAK,SAAE,GAAE,MAAM,GAAE,OAAI,IAAG,KAAE,GAAE,MAAM,OAAI,IAAG,KAAE,EAAE,IAAE;AAAM,QAAI,KAAE,EAAE,IAAE;AAAM,WAAO,KAAE,EAAE,IAAE,OAAK,KAAI;MAAC,KAAI,EAAE,IAAE,OAAK,MAAK,IAAE,SAAO,GAAE,UAAQ;MAAE,MAAK,KAAG,IAAE,QAAM,GAAE,SAAO;;;AAAG,aAAW,IAAE;AAAC,WAAA,kBAAsB,GAAE,KAAxB,MAA8B,GAAE,KAAhC,MAAsC,GAAE,KAAxC,MAA8C,GAAE,KAAhD;;AAAsD,aAAW,IAAE,IAAE,IAAE;AAAC,QAAI,KAAE,KAAE,IAAE,KAAE,KAAE;AAAE,WAAO,IAAG,MAAE,IAAE,KAAE,MAAG,KAAE,IAAG,MAAE,MAAG,KAAE;;AAAE,aAAA,MAAsD;AAAA,QAAxC,KAAwC,KAA1C,GAAM,KAAoC,KAAtC,GAAM,KAAgC,KAAlC,GAAM,KAA4B,KAA9B,GAAU,KAAoB,KAA1B,OAAe,KAAW,KAAlB,QAAW,KAAO,KAAT,GAAM,KAAG,KAAL;AAAM,QAAI,KAAK,KAAJ;AAAa,SAAK,KAAJ,iBAAqB,KAAE;MAAC,GAAE,GAAE,QAAM,GAAE;MAAM,GAAE,GAAE,SAAO,GAAE;;AAAQ,QAAI,IAAE;MAAC,GAAE;MAAE,GAAE;;AAAG,WAAO,KAAE,KAAE,KAAE,GAAE,KAAE,KAAE,IAAE,IAAE,OAAO,OAAO,GAAE,OAAM,IAAE;MAAC,YAAW;MAAY,iBAAgB;MAAW,eAAc;MAAE,yBAAwB;MAAS,mBAAkB;QAAa,OAAO,OAAO,GAAE,OAAM,IAAE;MAAC,YAAW;MAAY,iBAAgB;MAAW,eAAc;MAAE,yBAAwB;MAAS,mBAAkB;QAAa,SAAA,OAAmC;AAAA,UAAvB,KAAuB,MAAzB,GAAM,KAAmB,MAArB,GAAU,KAAW,MAAjB,OAAU,KAAO,MAAT,GAAM,KAAG,MAAL;AAAM,UAAI,KAAE,IAAG,KAAE;AAAG,eAAQ,KAAE,GAAE,MAAI,IAAE,MAAI;AAAC,YAAI,KAAE,OAAI,IAAE,KAAE,EAAE,GAAE,IAAG,GAAE,IAAG;AAAG,aAAE,MAAI,EAAE,GAAE,IAAG,GAAE,IAAG;AAAG,YAAI,KAAE,GAAE;AAAE,cAAG,KAAG,IAAE,IAAE;AAAG,YAAI,IAAE,GAAE;AAAE,cAAM,KAAL,yBAA6B,KAA7B,MAAkC,MAAE,IAAE,KAAG,IAAE,IAAE,MAA7C,OAAqD,MAAM,KAAL,yBAA6B,KAAE,IAAE,MAAjC,MAAsC,IAAE,KAAxC;;AAA+C,aAAA,gBAAoB,KAApB,OAA0B,KAA1B,iBAA0C,KAA1C,OAAgD,KAAhD;MAAsD;MAAC,GAAE;MAAE,GAAE;MAAE,OAAM;MAAE,GAAE;MAAE,GAAE;;;AAAI,MAAI,IAAE;IAAC,IAAG;IAAI,IAAG;IAAE,IAAG;IAAI,IAAG;;AAA7B,MAAgC,IAAE;AAAE,aAAW,IAAE,IAAE,IAAE;AAAC,QAAI,KAAE,iBAAiB;AAAG,QAAI,KAAE,GAAE,iBAAiB;AAAc,WAAM;MAAC,WAAU;MAAE,gBAAe,KAAE,GAAE,iBAAiB;MAAmB,MAAK;MAAE,GAAE;MAAE,GAAE;MAAE,GAAE,EAAE,IAAE,IAAE;MAAG,GAAE,GAAE,QAAM,GAAE;;;AAAe,iCAAA,OAAqS;AAAA,QAAA,wBAAA,MAArQ,qBAAoB,KAAiP,0BAAA,SAA/O,SAAS,OAAsO,uBAAA,uBAAA,MAAjO,gBAAe,KAAkN,yBAAA,SAAhN,SAAS,OAAuM,sBAA3L,KAA2L,MAAlM,QAAmB,IAA+K,MAAzL,WAAyL,mBAAA,MAA7K,YAAW,IAAkK,qBAAA,SAAhK,GAAE,0BAA8J,kBAAA,oBAAA,MAAtI,aAAY,IAA0H,sBAAA,SAAxH,IAAwH,mBAAA,sBAAA,MAAtH,eAAc,IAAwG,wBAAA,SAAtG,EAAE,0BAAoG,qBAAA,uBAAA,MAA5E,gBAAe,IAA6D,yBAAA,SAA3D,IAA2D,sBAAA,cAAA,MAAzD,OAAM,IAAmD,gBAAA,SAAjD,IAAiD,aAAxC,IAAwC,MAA/C,QAA+C,wBAAA,MAAtC,oBAAmB,IAAmB,0BAAA,SAAjB,kBAAiB;AAAC,SAAE,EAAE,IAAE,GAAE,IAAG,IAAG,KAAG,KAAE,EAAE,GAAE,GAAE,IAAI,IAAE,GAAE,KAAG,KAAE,GAAE,IAAE,IAAE,IAAE,IAAE,KAAE,SAAS,IAAE;AAAC,aAAO,KAAG,GAAK,KAAR,MAAa,IAAb;MAAmB;AAAG,QAAA,QAA6B,SAAS,IAAE,IAA4B,IAAI,IAA0D,IAAS;AAAA,UAAnG,OAAmG,QAAA;AAAnG,aAAE,GAAE;;AAA+F,UAAvE,OAAuE,QAAA;AAAvE,aAAE;;AAAqE,UAAnE,OAAmE,QAAA;AAAnE,aAAE,iBAAiB,IAAG,iBAAiB;;AAA4B,UAAT,OAAS,QAAA;AAAT,aAAE,EAAE,IAAE;;AAAI,WAAE,EAAE,IAAE,IAAE,KAAG,KAAE,SAAS,cAAc;AAAO,UAAI,KAAE,SAAS,cAAc,QAAO,KAAE,SAAS,cAAc,QAAO,KAAE,SAAS,cAAc,QAAO,KAAE,SAAS,cAAc;AAAO,aAAO,MAAE,GAAE,UAAU,OAAK,YAAU,IAAG,GAAE,MAAM,UAAQ,IAAG,GAAE,YAAY,KAAG,GAAE,YAAY,KAAG,GAAE,YAAY,KAAG,GAAE,YAAY,KAAG,GAAE,YAAY,KAAG,OAAO,OAAO,GAAE,OAAM;QAAC,UAAS;QAAS,OAAS,GAAE,QAAN;QAAgB,QAAU,GAAE,SAAN;UAAmB,OAAO,OAAO,GAAE,OAAM;QAAC,WAAS,eAAc,GAAE,OAAhB,QAA0B,GAAE,MAA5B;UAAuC,OAAO,OAAO,GAAE,OAAM;QAAC,SAAQ;QAAQ,OAAS,GAAE,QAAN;QAAgB,QAAU,GAAE,SAAN;UAAmB;QAAC,GAAE;QAAE,GAAE;QAAE,GAAE;QAAE,GAAE;QAAE,GAAE;QAAE,GAAE;;MAAI,EAAE,GAAE,EAAE,MAAK,EAAE,GAAE,EAAE,gBAAe,EAAE,IAApvB,IAAN,MAAI,GAAM,IAAV,MAAQ,GAAM,IAAd,MAAY,GAAM,IAAlB,MAAgB,GAAM,IAAtB,MAAoB,GAAM,IAA1B,MAAwB;AAAquB,QAAE,YAAW,IAAE;AAAC,UAAA,oBAAgB,iBAAiB,KAApB,KAAb,kBAAI;AAAgC,aAAM,AAAU,MAAV,WAAY,KAAG,MAAE,GAAE,gBAAc,GAAE,iBAAe,GAAE,MAAG;MAAG,IAAG,yBAAwB,IAAE,EAAE;MAAC,GAAE;MAAE,GAAE;MAAE,GAAE,EAAE;MAAE,GAAE,EAAE;MAAE,OAAM;MAAE,QAAO;MAAE,GAAE;MAAE,GAAE;QAAI,IAAE,SAAA,OAA0D;AAAA,UAAxC,KAAwC,MAAhD,SAAY,KAAoC,MAAtC,GAAM,KAAgC,MAAlC,GAAM,KAA4B,MAA9B,GAAU,KAAoB,MAA1B,OAAe,KAAW,MAAlB,QAAW,KAAO,MAAT,GAAM,KAAG,MAAL;AAAM,WAAK,KAAJ;AAAoB,UAAI,KAAE,KAAE,KAAE;AAAE,aAAO,KAAE,KAAE,KAAE,IAAE,KAAE,GAAE,OAAK,GAAE,MAAK,KAAE,GAAE,MAAI,GAAE,KAAI,OAAO,OAAO,GAAE,OAAM,IAAE;QAAC,UAAS;QAAW,KAAO,GAAE,MAAI,GAAE,MAAZ;QAAoB,MAAQ,GAAE,OAAK,GAAE,OAAb;QAAsB,YAAW;QAAY,eAAc;QAAE,yBAAwB,EAAE;QAAG,mBAAkB;UAA1N,gBAAqP,KAArP,kCAAsR,KAAtR,QAA6R,KAA7R;MAAuU;MAAC,SAAQ;MAAE,GAAE;MAAE,GAAE,EAAE;MAAE,GAAE,EAAE;MAAE,OAAM;MAAE,QAAO;MAAE,GAAE;MAAE,GAAE;QAAI,IAAE,SAAA,OAAsE;AAAA,UAApD,KAAoD,MAA5D,SAAY,KAAgD,MAAlD,GAAM,KAA4C,MAA9C,GAAM,KAAwC,MAA1C,GAAM,KAAoC,MAAtC,GAAM,KAAgC,MAAlC,GAAM,KAA4B,MAA9B,GAAU,KAAoB,MAA1B,OAAe,KAAW,MAAlB,QAAW,KAAO,MAAT,GAAM,KAAG,MAAL;AAAM,aAAO,KAAE,EAAE,KAAG,KAAK,KAAJ,oBAAwB,KAAE,EAAE,IAAE,IAAE,KAAG,KAAE,EAAE,IAAE,IAAE,KAAG,KAAE,KAAE,KAAE,IAAE,KAAE,KAAE,KAAE,IAAE,OAAO,OAAO,GAAE,OAAM,IAAE;QAAC,YAAW;QAAY,eAAc;QAAE,yBAAwB;QAAE,mBAAkB;UAAlL,gBAA6M,KAA7M,kCAA8O,GAAE,OAAhP,QAA0P,GAAE,MAA5P,mCAAgS,GAAE,OAAlS,QAA4S,GAAE,MAA9S;MAA2T;MAAC,SAAQ;MAAE,GAAE,EAAE;MAAK,GAAE,EAAE;MAAK,GAAE,EAAE;MAAE,GAAE,EAAE;MAAE,GAAE,EAAE;MAAe,GAAE,EAAE;MAAe,OAAM;MAAE,QAAO;MAAE,GAAE;MAAE,GAAE;;AAAI,QAAI,IAAE,SAAA,OAA8D;AAAA,UAA5C,KAA4C,MAApD,SAAY,KAAwC,MAA1C,GAAM,KAAoC,MAAtC,GAAM,KAAgC,MAAlC,GAAM,KAA4B,MAA9B,GAAU,KAAoB,MAA1B,OAAe,KAAW,MAAlB,QAAW,KAAO,MAAT,GAAM,KAAG,MAAL;AAAM,aAAO,KAAK,KAAJ,kBAAsB,KAAE;QAAC,KAAI,GAAE,MAAI,GAAE;QAAI,MAAK,GAAE,OAAK,GAAE;SAAM,KAAE;QAAC,KAAI,GAAE,MAAI,GAAE;QAAI,MAAK,GAAE,OAAK,GAAE;SAAM,KAAE,KAAE,KAAE,IAAE,KAAE,KAAE,KAAE,IAAE,OAAO,OAAO,GAAE,OAAM,IAAE;QAAC,YAAW;QAAY,eAAc;QAAE,yBAAwB,EAAE;QAAG,mBAAkB;UAApO,gBAA+P,KAA/P,kCAAgS,GAAE,OAAlS,QAA4S,GAAE,MAA9S,mCAAkV,GAAE,OAApV,QAA8V,GAAE,MAAhW;MAA6W;MAAC,SAAQ;MAAE,GAAE,EAAE;MAAK,GAAE,EAAE;MAAE,GAAE,EAAE;MAAK,GAAE,EAAE;MAAE,OAAM;MAAE,QAAO;MAAE,GAAE;MAAE,GAAE;;AAAI,QAAE,SAAA,OAAsD;AAAA,UAApC,KAAoC,MAA5C,SAAY,KAAgC,MAAlC,GAAM,KAA4B,MAA9B,GAAU,KAAoB,MAA1B,OAAe,KAAW,MAAlB,QAAW,KAAO,MAAT,GAAM,KAAG,MAAL;AAAM,WAAK,KAAJ;AAAc,UAAI,KAAE;QAAC,GAAE;QAAE,GAAE;;AAAG,aAAO,KAAE;QAAC,GAAE,GAAE,QAAM,GAAE;QAAM,GAAE,GAAE,SAAO,GAAE;SAAQ,KAAE,KAAE,KAAE,IAAE,KAAE,KAAE,KAAE,IAAE,OAAO,OAAO,GAAE,OAAM,IAAE;QAAC,YAAW;QAAY,iBAAgB;QAAW,eAAc;QAAE,yBAAwB,EAAE;QAAG,mBAAkB;UAApM,gBAA+N,KAA/N,8BAA4P,GAAE,IAA9P,MAAmQ,GAAE,IAArQ,6BAAiS,GAAE,IAAnS,MAAwS,GAAE,IAA1S;MAAmT;MAAC,SAAQ;MAAE,GAAE,EAAE;MAAE,GAAE,EAAE;MAAE,OAAM;MAAE,QAAO;MAAE,GAAE;MAAE,GAAE;;AAAI,QAAI,IAAE,SAAS,cAAc;AAAS,WAAO,EAAE,cAAY,IAAE,IAAE,IAAE,IAAE,GAAE;MAAC,gBAAe,0BAAU;AAAC,WAAE,YAAY,IAAG,GAAE,YAAY;;MAAI,kBAAiB,4BAAU;AAAC,WAAE,YAAY,IAAG,GAAE,YAAY;;;;;;ACuB78K,8BAA4B,UAAU;AAC3C,QAAM,aAAa,wBAAwB;AAC3C,WAAO,SAAC,MAAS;AACf,aAAO,WAAW,MAAM;;;AASrB,mCAAiC,UAAU;AAChD,QAAM,OAAO,YAAY;AACzB,QAAI,QAAQ;AACZ,WAAO,WAAM;AACX,UAAI,OAAO,KAAK,IAAI,MAAM;AAC1B,cAAQ,UAAU;AAClB,aAAO,OAAO;;;AAaX,qBAAmB,MAAM,UAAU;AACxC,eAAW,YAAY;AACvB,QAAI,SAAS,OAAO,WAAW,KAAK;AACpC,QAAI,KAAK,WAAW,KAAK;AACvB,gBAAU;;AAEZ,WAAO;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCT,MAAa,WAAb,2BAAA;AAIE,uBAAY,UAAU;AAAA,wBAAA,MAAA;AAEpB,WAAK,YAAY;AAGjB,WAAK,QAAQ;AAMb,WAAK,UAAU;AAGf,WAAK,SAAS;;AAlBlB,mBAAA,WAAA,CAAA;MAAA,KAAA;MAAA,OA2BE,aAAI,KAAK;AACP,eAAO,CAAC,CAAC,KAAK,OAAO;;OA5BzB;MAAA,KAAA;MAAA,OAmCE,aAAI,KAAK;AACP,YAAM,YAAY,KAAK,OAAO;AAC9B,YAAI,WAAW;AACb,oBAAU,SAAS,EAAE,KAAK;AAC1B,iBAAO,UAAU;;AAEnB,eAAO;;OAzCX;MAAA,KAAA;MAAA,OAgDE,aAAI,KAAK,SAAS;AAChB,YAAI,CAAC,KAAK,IAAI,MAAM;AAClB,eAAK;;AAEP,aAAK,OAAO,OAAO;UAAC;UAAS,QAAQ,KAAK;;AAC1C,aAAK;;OArDT;MAAA,KAAA;MAAA,OA2DE,kBAAS;AACP,YAAI,KAAK,SAAS,KAAK,WAAW;AAChC;;AAGF,YAAM,SAAQ,KAAK;AACnB,YAAI,SAAS,KAAK,UAAU;AAC5B,YAAI;AACJ,iBAAW,OAAO,QAAO;AACvB,cAAO,SAAU,OAAM,KAAhB;AACP,cAAI,SAAS,QAAQ;AACnB,qBAAS;AACT,wBAAY;;;AAIhB,YAAI,cAAc,QAAW;AAC3B,iBAAO,OAAM;AACb,eAAK;;;;AA7EX,WAAA;;;;ACOA,MAAM,sBAAsB,KAAK;IAE/B,KAAK;IAEL,KAAK;IAEL,KAAK;IAEL,MAAM;;AAOR,MAAI;AAQJ,MAAI;AA6CG,8BAA4B,KAAK,aAAa;AACnD,QAAI,CAAC,IAAG;AACN,WAAuC,KAAK,SAAS,cAAc;AACnE,cAAQ,QACJ,OACA,KAAK,mBAAoB,MAAK,kBAAkB,IAAI,SAAS;;AAGnE,WAAO,cAAc,IAAG,KAAK,AAAU,cAAc,OAAO;;AAevD,yBAAuB,IAAG,KAAK,WAAW;AAC/C,QAAA,OAAY;AACV,SAAE,OAAO;AACT,aAAyB,IAAI,IAAI,KAAK,GAAE;;AAG1C,QAAI,aAAa,UAAU,IAAI,MAAM;AACnC,aAAO,UAAU,IAAI;;AAGvB,OAAE,OAAO;AAIT,QAAI,CAAC,GAAE,UAAU;AACf,SAAE,OAAO,GAAE;;AAGb,QAAM,OAAiC;MACrC,MAAM,GAAE;MACR,UAAU,GAAE;MACZ,MAAM,GAAE;MACR,UAAU,GAAE;MACZ,MAAM,GAAE,QAAQ,MAAM,KAAK,GAAE;MAC7B,UAAU,GAAE;MACZ,QAAQ,GAAE;MACV,MAAM,GAAE;MACR,QAAQ;;AAKV,QAAI,KAAK,SAAS,OAAO,KAAK;AAC5B,WAAK,WAAW,MAAM,KAAK;;AAK7B,QACG,KAAK,YAAY,WAAW,KAAK,QAAQ,MACzC,KAAK,YAAY,YAAY,KAAK,QAAQ,KAC3C;AACA,WAAK,OAAO;AACZ,WAAK,OAAO,KAAK;;AAKnB,QAAI;AACJ,QAAI,GAAE,UAAU,GAAE,UAAU,QAAQ;AAClC,eAAS,GAAE;eACF,KAAK,YAAY,WAAW,CAAC,KAAK,MAAM;AACjD,eAAS,KAAK;WACT;AACL,eAAS,KAAK,WAAW,OAAO,KAAK;;AAEvC,SAAK,SAAS;AAGd,QAAM,SAAS,UAAU,QAAQ,OAAO,SAAS,OAAO,OAAO,QAAQ;AAEvE,QAAI,WAAW;AACb,gBAAU,IAAI,KAAK;;AAGrB,WAAO;;AA0MF,yBAAuB,KAAK;AACjC,QAAI,OAAO,OAAO,UAAU;AAC1B,YAAM,mBAAmB;;AAE3B,WAAO,KAAK,cAAc,KAAK,IAAI;;;;AC1W9B,iCACL,QACA,WACA,MACA,gBACA;AAAA,QAFA,SAEA,QAAA;AAFA,aAAO;;AAEP,QADA,mBACA,QAAA;AADA,uBAAiB;;AAEjB,aAAS,sBAAsB,QAAQ,KAAK,SAAC,WAAc;AACzD,UAAI,CAAC,WAAW;AACd;;AAEF,gBAAU,sBAAsB,QAAQ,WAAW,MAAM;;;;;ACC7D,MAAM,YAAY;AAiBlB,MAAM,0CAA0C;AAOhD,MAAM,gCAAgC;AAMtC,MAAM,6BAA6B;AAMnC,MAAI,2BAA2B,KAAK,gBAAgB;AAEpD,OAAK,eAAe;AAUpB,qBAAmB,OAAO,SAAS,OAAO;AACxC,QAAI,MAAM,UAAU,OAAO;AACzB,YAAM,OAAO,GAAG,MAAM,SAAS,QAAQ;;AAEzC,UAAM,KAAK;;AASb,MAAI,oBAAmB,0BAAU,MAAM;AAErC,wBAAmB,mBAAmB;AACtC,WAAO,kBAAiB;;AAQ1B,4BAA0B,OAAO;AAC/B,QAAI;AAEF,aAAO,KAAK,UAAsC;aAC3C,IAAP;AACA,aAAO,OAAO;;;AAgCX,uBAAqB,OAAO,uBAAuB;AACxD,QAAI;AAEF,UAAI;AACJ,UAAI,OAAO;AACT,YAAI,MAAM,YAAY,QAAW;AAC/B,kBAAQ,0BAAiD;AACzD,yBAAe;eACV;AACL,cAAM,YAAY;AAClB,kBAAQ,IAAI,MAAM,iBAAiB;AACnC,gBAAM,YAAY;;aAEf;AACL,gBAAQ,IAAI,MAAM;;AAGpB,UAAI,CAAC,gBAAgB,UAAU,YAAY,CAAC,UAAU,MAAM;AAC1D,mBAAW,WAAY;AACrB,cAAM,UAAU,IAAI,MAClB,4CAA4C;AAE9C,gBAAM;;;AAIV,UAAI,MAAM,UAAU;AAClB,eAA8B;;AAEhC,YAAM,WAAW;AAKjB,UAAI,MAAM,cAAc;AACtB,YAAM,UAAU,UAAU,MAAM,cAAc,SAAC,MAAD;AAAA,iBAAU,QAAV,OAAA,SAAU,KAAM;;AAC9D,YAAI,UAAU,IAAI;AAChB,gBAAM,oBAAoB,MAAM,aAAa;;;AAIjD,UAAM,UAAU,yBAAyB,MAAM;AAC/C,UAAI,WAAW,QAAQ,WAAW;AAChC,gBAAQ,UAAU,IAAI;AACtB,YAAI,UAAU,aAAa;AACzB,kBAAQ,UAAU,IAAI;AACtB,kBAAQ,aAAa,iBAAiB,MAAM;;;AAKhD,UACE,KAAK,WACJ,oBAAmB,MAAM,YACxB,CAAC,MAAM,YACP,UAAU,WACZ;AACA,YAAM,SAAS,QAAQ,SAAS,QAAQ;AACxC,YAAI,MAAM,cAAc;AACtB,iBAAO,MAAM,SAAS,MAAM;eACvB;AACL,cAAI,SAAS;AACX,mBAAO,KAAK,SAAS,MAAM,SAAS;qBAC3B,CAAC,UAAU,UAAU;AAC9B,mBAAO,KAAK,SAAS,MAAM;iBACtB;AACL,mBAAO,KAAK,SAAS,MAAM;;;;AAIjC,UAAI,WAAW,QAAQ,+BAA+B;AACpD,gBAAQ,8BAA8B,UAAU,OAAO,MAAM;;AAK/D,cAAQ,QAAQ,MAAM,QAAW,QAAW,QAAW,QAAW;aAC3D,qBAAP;AACA,iBAAW,WAAY;AACrB,cAAM;;;AAGV,WAA8B;;AAkFhC,mBAAiB,SAAS,UAAU,MAAM,KAAK,OAAO;AAAA,QAAA,QAAA;AAGpD,QAAI,QAAQ,KAAK,YAAa,EAAC,SAAS,CAAC,MAAM,WAAW;AAExD,8BAAwB,KAAK;;AAE/B,QAAI,UAAU,YAAY,UAAU,eAAe,UAAU,MAAM;AACjE;;AAEF,QAAI,cAAc;AAClB,QAAI;AACF,oBAAc,eAAe;aACtB,QAAP;;AAGF,QAAI,eAAe,KAAK,WAAW,MAAM;AAIvC;;AAEF,QAAM,OAAO,mBACX,SACA,UACA,MACA,KACA,OACA;AAEF,QAAI,MAAM;AACR,wBAAiB,WAAM;AACrB,YAAI;AACF,iBAAO,4BAEL,OAEC,MACD,MAAM,WAAM;;iBAGP,IAAP;;;;;AAYR,iCAA+B;AAC7B,WAAO,KAAK,WAAW,6BACnB,KAAK,qBACL,KAAK;;AASJ,uCAAqC,KAAK,MAAM;AAMrD,QAAI,KAAK,SAAS,KAAK,WAAW,KAAK;AACrC,aAAO;;AAGT,WAAO,yBAAyB,KAAK,MAAM,KAAK,SAAC,uBAA0B;AACzE,UAAI,CAAC,uBAAuB;AAC1B,YAAM,MAAM,IAAI;AAChB,YAAI,KAAK,QAAQ,uBAAuB;AACxC,YAAI,KAAK,KAAK,UAAU;;;;AAmBvB,oCAAkC,KAAK,MAAM;AAClD,QAAM,gBAAgB,SAAS,iBAAiB;AAChD,QAAI,CAAC,cAAc,eAAe;AAChC,aAAO,QAAQ,QAAQ;;AAEzB,QAAM,eAAe,cAAc;AACnC,QAAM,cAAc,aAAa,cAAc;AAC/C,QAAM,aAAa,YAAY,aAAa;AAC5C,QAAI,CAAC,YAAY;AACf,aAAO,QAAQ,QAAQ;;AAEzB,QAAM,SAAS,SAAS,aAAa;AACrC,QAAI,CAAC,OAAO,cAAc,kBAAkB;AAC1C,aAAO,QAAQ,QAAQ;;AAEzB,WAAO,OAAO,kBAAkB,KAAK,SAAC,eAAkB;AACtD,UAAI,CAAC,eAAe;AAClB,eAAO;;AAET,aAAO,YAAY,SAAS,4BAA4B;AACxD,aAAO;;;AAWJ,uCAAqC,iBAAiB;AAC3D,WAAO,KAAK;MACV,KAAK,gBAAgB;MACrB,KAAK,gBAAgB;MACrB,KAAK,gBAAgB;MACrB,MAAM,gBAAgB;MACtB,MAAM,gBAAgB;MACtB,KAAK,gBAAgB;MACrB,MAAM,gBAAgB;;;AAS1B,8BAA4B,SAAS,OAAO;AAC1C,QAAI,OAAO;AACT,UAAI,MAAM,SAAS;AACjB,kBAAU,MAAM;aACX;AAEL,kBAAU,OAAO;;;AAGrB,QAAI,CAAC,SAAS;AACZ,gBAAU;;AAGZ,WAAO;;AAcF,8BACL,SACA,UACA,MACA,KACA,OACA,aACA;AACA,cAAU,mBAAmB,SAAS;AAOtC,QAAI,WAAW,CAAC,CAAE,UAAS,MAAM;AACjC,QAAI,aAAa,KAAK,UAAU;AAC9B;;AAEF,QAAI,WAAW,WAAW;AACxB;;AAGF,QAAM,iBAAiB,CAAE,SAAQ,KAAK;AACtC,QAAM,eAAe,KAAK;AAI1B,QACE,mBAAmB,YAGnB,WAAW,mBAGX,gBACA;AACA,iBAAW;AAEX,UAAI,eAAe,yCAAyC;AAC1D;;;AAIJ,QAAM,cAAc,mBAAmB;AAGvC,QAAI,eAAe,eAAe,+BAA+B;AAC/D;;AAOF,QAAM,OAAmC,OAAO,OAAO;AACvD,SAAK,OAAO,UAAU;AACtB,SAAK,WAAW,cAAc,MAAM;AACpC,SAAK,OAAO,QAAQ,QAAQ,qBAAqB;AACjD,SAAK,OAAO,cAAc,MAAM;AAIhC,SAAK,QAAQ,WAAW,MAAM;AAC9B,SAAK,QAAQ,iBAAiB,MAAM;AAEpC,QAAI,UAAU;AACd,QAAA,OAAY;AACV,gBAAU;AACV,WAAK,SAAS;eACT,OAAY;AACjB,gBAAU;AACV,WAAK,SAAS;eACL,KAAK,WAAW,KAAK,QAAQ,UAAU;AAChD,WAAK,QAAQ;AACb,gBAAU;eACD,UAAU,SAAS;AAC5B,gBAAU,UAAU;;AAGtB,SAAK,QAAQ;AAGb,QAAI,YAAY,UAAU;AACxB,WAAK,UAAU,UAAU;;AAK3B,SAAK,QAAQ,SAAS,QAAQ,MAAM;AAGpC,SAAK,QAAQ,cAAc;AAE3B,QAAI,KAAK,SAAS,mBAAmB,KAAK,SAAS,gBAAgB,IAAI;AACrE,WAAK,QAAQ,KAAK,SAAS,gBAAgB;;AAE7C,QAAI,KAAK,aAAa;AACpB,WAAK,QAAQ,KAAK;;AAGpB,QAAI,KAAK,UAAU,KAAK,UAAU,MAAM;AACtC,WAAK,SAAS;;AAGhB,QAAI,KAAK,OAAO,KAAK,IAAI,QAAQ;AAC/B,UAAM,oBAAoB,KAAK,IAAI,OAAO;AAC1C,UAAM,kBAAkB,KAAK,IAAI,OAAO;AACxC,UAAI,mBAAmB;AACrB,aAAK,SAAS;;AAEhB,UAAI,iBAAiB;AACnB,aAAK,SAAS;;;AAIlB,QAAM,OAAO;AACb,QAAM,cAAc,wBAAwB;AAC5C,aAAW,OAAO,aAAa;AAC7B,UAAM,KAAK,YAAY;AACvB,WAAK,KAAQ,MAAb,MAAoB,MAAK,MAAM;;AAEjC,SAAK,UAAU,KAAK,KAAK;AAEzB,QAAI,OAAO;AAAA,UAAA;AACT,WAAK,QAAQ,0BAAA,MAAM,sBAAN,OAAA,SAAA,sBAAyB,YAAW;AAEjD,UAAI,MAAM,MAAM;AACd,aAAK,UAAU,KAAK,UAAU,MAAM;;AAGtC,UAAI,CAAC,eAAe,CAAC,MAAM,eAAe,MAAM,OAAO;AACrD,aAAK,OAAO,MAAM;;AAIpB,UAAI,MAAM,SAAS;AACjB,cAAM,WAAW;;WAEd;AACL,WAAK,OAAO,YAAY;AACxB,WAAK,OAAO,QAAQ;AACpB,WAAK,OAAO,OAAO;;AAErB,SAAK,OAAO,KAAK,WAAW,KAAK,SAAS,WAAW;AACrD,SAAK,QAAQ,yBAAyB,KAAK;AAC3C,SAAK,QAAQ,KAAK,SAAS,mBAAmB,KAAK,SAAS;AAI5D,QAAI,KAAK,UAAU,cAAc;AAI/B,WAAK,QAAQ;;AAGf,cAAU,0BAA0B,SAAS;AAE7C,WAAO;;AAUF,0BAAwB,KAAK;AAClC,QAAI,CAAC,IAAI,UAAU;AACjB,aAAO;;AAET,QAAM,UAAU,IAAI,SAAS,iBAAiB;AAC9C,aAAS,KAAI,GAAG,KAAI,QAAQ,QAAQ,MAAK;AACvC,UAAI,CAAC,cAAc,QAAQ,IAAG,IAAI,gBAAgB;AAChD,eAAO;;;AAGX,WAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9lBT,MAAM,OAAM;AACZ,MAAM,mBAAmB;AACzB,MAAM,qBAAqB;AAC3B,MAAM,sBACJ;AAQF,MAAM,wBAAwB;IAC5B,oBAAoB;IACpB,iBAAiB;;AAInB,MAAM,mBAAmB;IAAC,IAAI;IAAK,IAAI;IAAG,IAAI;IAAK,IAAI;;AAGvD,MAAM,gBAAgB;AACtB,MAAM,0BAA0B;AAChC,MAAM,0BAA0B;AAChC,MAAM,6BAA6B;AACnC,MAAM,wBAAwB;AAkB9B,MAAa,qBAAb,yBAAA,kBAAA;AAAA,eAAA,qBAAA;AAAA,QAAA,SAAA,cAAA;AAEE,iCAAY,SAAS;AAAA,UAAA;AAAA,wBAAA,MAAA;AACnB,cAAA,OAAA,KAAA,MAAM;AAGN,YAAK,OAAO,MAAK,IAAI;AAGrB,YAAK,YAAY;AAGjB,YAAK,aAAa;AAGlB,YAAK,iBAAiB;AAGtB,YAAK,kBAAkB,MAAK,WAAW,KAAhB,wBAAA;AAGvB,YAAK,2BAA2B,MAAK,oBAAoB,KAAzB,wBAAA;AAKhC,YAAK,WAAW;AAGhB,YAAK,WAAW;AAGhB,YAAK,UAAU;AAGf,YAAK,oBAAoB;QACvB,SAAS;;AAIX,YAAK,aAAa;AAGlB,YAAK,qBAAqB;AAG1B,YAAK,WAAW;AAGhB,YAAK,QAAQ;AAGb,YAAK,eAAe;AAGpB,YAAK,YAAY;AAGjB,YAAK,mBAAmB;AAGxB,YAAK,oBAAoB;AAGzB,YAAK,WAAW;AAGhB,YAAK,UAAU;AAGf,YAAK,gBAAgB,sBAAsB;AAG3C,YAAK,iBAAiB;AAGtB,YAAK,0BAA0B;AAK/B,YAAK,6BAA6B;AAGlC,YAAK,sBAAsB,MAAK,qBAAqB,KAA1B,wBAAA;AAG3B,YAAK,kBAAkB,IAAI,eACzB,MAAK,KACL,MAAK,SACL,SAAC,IAAD;AAAA,eAAQ,MAAK,cAAc;SAC3B,WAAA;AAAA,eAAM,MAAK;;AAzFM,aAAA;;AAFvB,mBAAA,qBAAA,CAAA;MAAA,KAAA;MAAA,OAgGE,iCAAwB;AACtB,eAAO;;OAjGX;MAAA,KAAA;MAAA,OAqGE,yBAAgB;AAAA,YAAA,SAAA;AACd,eAAO,sBAAsB,KAAK,SAC/B,KAAK,SAAC,SAAY;AACjB,iBAAK,WAAW;AAChB,iBAAK,WAAW,SAAS,cAAc,OAAK;AAC5C,iBAAK,UAAU,SAAS,oBAAoB,OAAK;AACjD,iBAAO,OAAK,YAAY;WAEzB,KAAK,WAAM;AACV,iBAAK,aAAa,QAAkC,OAAK,MAAzD,oBAAA,oBAAA,6BAAA,CAAA;AAIA,iBAAK,QAAQ,OAAK,WAAW,cAAc;AAC3C,iBAAK,QAAQ,YAAY,OAAK;AAC9B,iBAAK,SAAS;AACd,iBAAK,sBACH,SAAC,YAAD;AAAA,mBAAgB,OAAK,YAAY;aACjC;;;OAvHV;MAAA,KAAA;MAAA,OA6HE,0BAAiB;AAKf,eAAO;;OAlIX;MAAA,KAAA;MAAA,OA0IE,yBAAgB;AAAA,YAAA,SAAA;AACd,aAAK,WAAW,QAAQ,KAAK,MAA7B,qBAAA,qBAAA,6BAAA,CAAA;AAEA,YAAM,wBAAwB,KAAK;AACnC,YAAM,kBAAkB,KAAK;AAC7B,aAAK,cAAc,WAAM;AACvB,iBAAK,SAAS,YAAY;AAC1B,iBAAK,SAAS,YAAY;AAC1B,iBAAK,WAAW,YAAY,OAAK;;;OAlJvC;MAAA,KAAA;MAAA,OA2JE,mCAA0B,iBAAiB;AACzC,YAAI,CAAC,KAAK,oBAAoB;AAC5B,eAAK,qBAAqB,KAAK,KAAK,cAAc;AAClD,eAAK,WAAW,YAAY,KAAK;;AAGnC,YAAI,CAAC,KAAK,UAAU;AAClB,eAAK;;AAEP,eAAO,KAAK,qBAAqB;;OApKrC;MAAA,KAAA;MAAA,OA8KE,mCAA0B,SAAS;AACjC,YAAM,WAAW,QAAQ;AACzB,YAAM,sBACJ,QAAQ,UAAU,SAAS,uBAAuB,CAAC,CAAC;AACtD,YAAI,qBAAqB;AACvB,oBAAU;;AAEZ,YAAM,YAAY,CAAC,QAAQ,UAAU,SAAS;AAC9C,YAAM,aAAa,QAAQ,UAAU;AACrC,mBAAW,gBAAgB;AAC3B,mBAAW,gBAAgB;AAC3B,mBAAW,gBAAgB;AAC3B,mBAAW,gBAAgB;AAC3B,eAAO;;OA3LX;MAAA,KAAA;MAAA,OAkME,8BAAqB,sBAAsB;AAAA,YAAA,SAAA;AACzC,YAAI,QAAQ;AACZ,aAAK,kBAAkB,KAAK,2BAA2B;AACvD,6BAAqB,QAAQ,SAAC,SAAY;AACxC,kBAAQ,iBAAiB;AACzB,cAAM,aAAa,OAAK,0BAA0B;AAClD,cAAM,WAAW,OAAK,SAAS,eAAe;AAC9C,cAAM,WAAW;YACf,iBAAiB;YACjB,SAAgC,WAAW;YAC3C,eAAe;YACf,SAAS,MAAM,cAAc;;AAE/B,cAAI,QAAQ;AACZ,cAAI,kBAAkB,WAAW,UAAU;AACzC,gBAAM,YAAY,OAAK,KAAK,cAAc;AAC1C,gBAAM,cAAc,QAAQ,OAAK,MAAhB,qBAAA,qBAAA,6BAAA,CAAA;AAKjB,qBAAW,QAAQ,WAAW,SAAS;AACrC,wBAAU,QAAQ,QAAQ,WAAW,QAAQ;;AAE/C,uBAAW,gBAAgB;AAC3B,wBAAY,YAAY;AACxB,sBAAU,YAAY;AACtB,oBAAQ;AACR,qBAAS,cAAc;;AAEzB,iBAAK,UAAU,YAAY;AAC3B,iBAAK,kBAAkB,OAAK,yBAAyB,KAAK;;;OAjOhE;MAAA,KAAA;MAAA,OA4OE,8BAAqB,iBAAiB;AACpC,kBAAU,KAAK;AACf,YAAM,mBAAmB,KAAK,QAAQ,cAAb,qCACY,uBACjC,mBAFqB;AAKzB,YAAI,kBAAkB;AACpB,eAAK,YAAY;AACjB,iBAAO,KAAK,cAAc;eACrB;AACL,iBAAO,KAAK,eAAe;;;OAvPjC;MAAA,KAAA;MAAA,OAiQE,uBAAc,iBAAiB;AAAA,YAAA,SAAA;AAC7B,eAAO,KAAK,cAAc,WAAM;AAC9B,cAAO,SAAU,OAAK,kBAAkB,iBAAjC;AACP,iBAAK,iCAAiC;AACtC,iBAAK,UAAU,UAAU,KAAK,SAAC,gBAAmB;AAChD,2BAAe;AACf,mBAAO,OAAK,WAAW;;;;OAvQ/B;MAAA,KAAA;MAAA,OAkRE,wBAAe,iBAAiB;AAAA,YAAA,SAAA;AAC9B,YAAM,mBACJ,KAAK,YAAY,oBAAoB;AACvC,YAAM,oBAAoB,eACxB,KAAK,KACL,uCAEE,QACA;AACJ,YAAM,kBAAkB,oBAAH,OAAG,mBAAoB;AAE5C,eAAO,QAAQ,IAAI,CACjB,SAAS,cAAc,KAAK,KAAK,uBAC/B,KAAK,aACL,kBACA,kBAEF,SAAS,cAAc,KAAK,KAAK,uBAC/B,KAAK,aACL,sBAGD,KAAK,WAAM;AACV,iBAAO,OAAK,SAAS,4BAA4B;WAElD,KAAK,SAAC,MAAS;AACd,iBAAK,YAAY,QAAQ,OAAK,MAA9B,oBAAA,oBAAA,6BAAA,CAAA;AAGA,iBAAK,UAAU,aAAa,sBAAsB;AAClD,iBAAK,qBAAqB;AAC1B,iBAAO,OAAK,cAAc,WAAM;AAC9B,mBAAK,mBAAmB,YAAY,OAAK;AACzC,mBAAK,iCAAiC,KAAK;;;;OAnTrD;MAAA,KAAA;MAAA,OA4TE,0CAAiC,YAAY;AAC3C,wBAAgB,KAAK,SAAS,6BAA6B,cAAc;;OA7T7E;MAAA,KAAA;MAAA,OAqUE,6BAAoB,OAAO;AACzB,YAAM,QAAQ,QAAQ,OAAO;AAI7B,YAAI,SAAS,KAAK,gBAAgB;AAChC;;AAGF,aAAK,iBAAiB;AACtB,aAAK;;OA/UT;MAAA,KAAA;MAAA,OAwVE,gCAAuB;AAAA,YAAA,SAAA;AACrB,aAAK,mBAAmB,gBAAgB,MACtC,KAAK,MACL,KAAK;AAEP,YAAM,KAAK,KAAK,iBAAiB;AACjC,WAAG,iBAAiB,SAAS,SAAC,OAAU;AACtC,gCACE,OAAK,SACL,8BACA,KAAK;AAEP,iBAAK,iBAAiB;AACtB,gBAAM;AACN,gBAAM;;AAER,eAAO;;OAxWX;MAAA,KAAA;MAAA,OAiXE,0BAAiB;AAAA,YAAA,SAAA;AACf,aAAK,oBAAoB,iBAAiB,MACxC,KAAK,KACL,KAAK,MACL,KAAK;AAEP,YAAM,KAAK,KAAK,kBAAkB;AAClC,WAAG,iBAAiB,UAAU,SAAC,OAAU;AACvC,kBAAQ,UAAU,OAAO;iBAClB,uBAAuB;AAC1B,qBAAK;AACL;iBACG,uBAAuB;AAC1B,qBAAK;AACL;iBACG,uBAAuB;AAC1B,qBAAK;AACL;iBACG,uBAAuB;AAC1B,qBAAK;AACL;iBACG,uBAAuB;AAC1B,qBAAK;AACL;;AAEA;;;AAGN,eAAO;;OA7YX;MAAA,KAAA;MAAA,OAsZE,+BAAsB,mBAA2B;AAAA,YAAA,SAAA;AAAA,YAA3B,sBAA2B,QAAA;AAA3B,8BAAoB;;AACxC,YAAM,WAAW,KAAK,qBAAqB;AAE3C,aAAK,cAAc,WAAM;AACvB,iBAAK,iBAAiB,WAAW;AAGjC,iBAAK,iBAAiB,iBAAiB,cAAc;AACrD,iBAAK,iBAAiB,eAAe;;;OA9Z3C;MAAA,KAAA;MAAA,OAqaE,sBAAa;AACX,kBAAU,KAAK,WACZ,UACA,KAAK,SAAC,UAAa;AAClB,mBAAS;;;OAzajB;MAAA,KAAA;MAAA,OAgbE,sBAAa;AACX,kBAAU,KAAK,WACZ,UACA,KAAK,SAAC,UAAa;AAClB,mBAAS;;;OApbjB;MAAA,KAAA;MAAA,OA+bE,4BAAmB,IAAG;AACpB,YAAM,SAAS,MAAM,cAAc,GAAE;AACrC,YAAM,mBAAmB,QACvB,QACA,SAAC,SAAY;AACX,iBACE,QAAQ,WAAW,YACnB,QAAQ,WAAW,OACnB,QAAQ,aAAa,WAAW;WAGpC,KAAK;AAGP,YAAM,gBAAgB,qBAAqB;AAC3C,YAAM,SAAS,KAAK,QAAQ,UAC1B,QACA,OACA,MAAM,cAAc,KAAK;AAE3B,eAAO,CAAE,kBAAiB;;OAnd9B;MAAA,KAAA;MAAA,OA2dE,0BAAiB,IAAG;AAClB,YAAI,KAAK,mBAAmB,KAAI;AAC9B,cAAI,KAAK,iBAAiB,sBAAsB,iBAAiB;AAC/D,iBAAK;qBACI,CAAC,KAAK,WAAW,aAAa,iBAAiB;AACxD,iBAAK;;;AAGT,8BAAsB,KAAK,SAAS,mBAAmB,KAAK;;OAnehE;MAAA,KAAA;MAAA,OA0eE,wBAAe;AACb,aAAK,SAAS,aAAa,sBAAsB;AACjD,aAAK,gBAAgB,sBAAsB;;OA5e/C;MAAA,KAAA;MAAA,OAmfE,yBAAgB;AACd,aAAK,SAAS,aAAa,sBAAsB;AACjD,aAAK,gBAAgB,sBAAsB;;OArf/C;MAAA,KAAA;MAAA,OA4fE,gCAAuB;AACrB,kBAAU,KAAK;AACf,YAAM,mBAAmB,KAAK,iBAAiB,KAAK;AACpD,aAAK,iBAAiB,OACpB,MAAM,cAAc,KAAK,aACzB,SACA;;OAlgBN;MAAA,KAAA;MAAA,OA0gBE,kCAAyB;AACvB,YAAI,KAAK,gBAAgB;AACvB,eAAK;AACL,eAAK,iBAAiB;;;OA7gB5B;MAAA,KAAA;MAAA,OAqhBE,0BAAiB;AAAA,YAAA,UAAA;AACf,YAAM,WAAW,SAAS,IAAI,MAAM,cAAc,KAAK;AACvD,iBAAS,UAAU,kBAAkB,SAAC,IAAM;AAC1C,cAAO,OAAQ,GAAR;AACP,kBAAK,cAAc;;;OAzhBzB;MAAA,KAAA;MAAA,OAiiBE,uBAAc,MAAM;AAClB,YAAI,KAAK,OAAO;AACd,cAAA,wBAAwB,KAAK,sBAAtB,gBAAP,sBAAO;AACP,cAAM,iBACJ,KAAK,gCAAgC;AAEvC,eAAK,gBAAgB,WAAW;YAC9B,cAAc,MAAM,cAAc,KAAK;YACvC,eAAe,kBAAkB;YACjC,MAAM,MAAM,cAAc,KAAK;YAC/B,SAAS,MAAM,cAAc,KAAK;;AAEpC;;AAGF,aAAK,gBAAgB,UAAU;;OAhjBnC;MAAA,KAAA;MAAA,OAsjBE,kCAAyB;AACvB,YAAM,QAAQ,KAAK;AACnB,YAAM,SAAS,KAAK,kBAAkB,OAAO,IAC3C,SAAC,cAAD;AAAA,iBAAkB,aAAa;;AAEjC,iBAAS,aAAa,KAAK,SAAS,cAAc,KAAK,SAAS;;OA3jBpE;MAAA,KAAA;MAAA,OAkkBE,8BAAqB;AACnB,YAAM,QAAQ,KAAK;AACnB,YAAM,iBAAiB,UACrB,KAAK,kBAAkB,OAAO,KAAK;AAErC,eAAO;;OAvkBX;MAAA,KAAA;MAAA,OAilBE,cAAK,SAAS,mBAA2B;AAAA,YAAA,UAAA;AAAA,YAA3B,sBAA2B,QAAA;AAA3B,8BAAoB;;AAChC,eAAO,KAAK,qBACV,MAAM,cAAc,UACpB,mBAEC,KAAK,WAAM;AACV,iBAAO,QAAK,SAAS,KAAK,QAAK,OAAO,KAAK;WAE5C,KAAK,SAAC,WAAc;AACnB,kBAAK,aAAa;;;OA1lB1B;MAAA,KAAA;MAAA,OA0mBE,qBAAY,YAAY;AACtB,YAAM,OAAO,WAAW,QAAQ;AAChC,YAAM,KAAK,KAAK;AAChB,YAAM,oBAAoB,KAAK;AAC/B,YAAM,SAAS,KAAK,KAAK,YAAY,eAAe,MAAM,WAAW;AACrE,mBACE,QACA,4DACA;AAEF,aAAK,KAAK,MAAM,cAAc,SAAS;;OApnB3C;MAAA,KAAA;MAAA,OA+nBE,8BAAqB,SAAS,mBAAmB;AAAA,YAAA,UAAA;AAC/C,YAAM,kBAAkB,QAAQ,aAAa,eAAe;AAC5D,aAAK,0BAA0B;AAC/B,aAAK,6BAA6B,0BAA0B,KAAK,OAAO;AACxE,eAAO,KAAK,0BAA0B,iBACnC,KAAK,WAAM;AACV,iBAAO,QAAK,cAAc;WAE3B,KAAK,WAAM;AACV,iBAAO,QAAK,cAAc,WAAM;AAC9B,mBAAO,QAAK,SAAS;AACrB,qBAAS,QAAK,SAAS,WAAW;AAClC,oBAAK,SAAS,gBAAgB;;WAGjC,KAAK,WAAM;AACV,kBAAK,YAAY;AAEjB,cAAM,SAAS,SAAS,aAAa,QAAK;AAC1C,iBAAO,eACL,QAAK,SACL,MAAM,cAAc,QAAK;AAG3B,kBAAK,KAAK,gBAAgB,iBACxB,WACA,QAAK;AAGP,kBAAK,UAAU,iBACb,eACA,QAAK;AAGP,kBAAK;AACL,kBAAK;AAEL,iBAAO,QAAK,UAAU,UAAU,WAAW,cAAc;WAE1D,KAAK,WAAA;AAAA,iBAAM,QAAK,wBAAwB,SAAS;WACjD,KAAK,WAAM;AACV,mBAAS,QAAK,SAAS,WAAW;AAClC,kBAAK;AACL,gCAAsB,QAAK,SAAS,kBAAkB,KAAK;;;OA1qBnE;MAAA,KAAA;MAAA,OAwrBE,iCAAwB,SAAS,mBAAmB;AAAA,YAAA,UAAA;AAClD,aAAK,iBAAiB,QAAQ;AAC9B,kBAAU,KAAK,WACZ,UACA,KAAK,SAAC,UAAD;AAAA,iBAAc,SAAS,UAAU,QAAK;;AAC9C,aAAK,sBAAsB;AAC3B,eAAO,KAAK;;OA9rBhB;MAAA,KAAA;MAAA,OAusBE,mCAA0B,SAAS;AACjC,YAAI,CAAC,WAAW,CAAC,SAAS,UAAU;AAClC,iBAAO;;AAET,YAAI,CAAC,kBAAkB,QAAQ,UAAU;AACvC,iBAAO;;AAET,YAAM,MAAM,aAAa,MAAM,cAAc,UAAU;AACvD,YAAI,CAAC,KAAK;AACR,iBAAO;;AAET,eAAO;;OAltBX;MAAA,KAAA;MAAA,OA8tBE,6BAAoB;AAClB,YAAM,SAAS,KAAK,qBAAqB;AACzC,eAAO,KAAK,0BAA0B;;OAhuB1C;MAAA,KAAA;MAAA,OA4uBE,wBAAe,eAAe,OAAO;AAAA,YAAA,UAAA;AACnC,eAAO,KAAK,qBACT,YAAY,UACZ,KAAK,SAAC,aAAgB;AACrB,cAAA,OAAwB,YAAY,2BAA2B,IAAxD,SAAP,KAAO,QAAQ,QAAf,KAAe;AAIf,cAAI,CAAC,SAAS,CAAC,QAAQ;AACrB,mBAAO,QAAK,MAAiB;;AAG/B,cAAM,cAAc,YAAY;AAChC,cAAM,YAAY,kBAAkB,eAAe;AACnD,iBAAO,QAAK,kBACV,QAAQ,YAAY,aACpB,QAAQ,cAAc,WACtB;;;OA7vBV;MAAA,KAAA;MAAA,OA0wBE,4CAAmC,QAAQ,WAAW;AACpD,YAAM,UAAU,OAAc;AAC9B,YAAM,WAAW,UAAiB;AAClC,YAAM,iBAAiB,KAAK,cAAc,UAAU;AACpD,YAAM,KAAK,KAAK,IAAI,SAAS,MAAM,QAAQ;AAE3C,eAAO,KAAK,uBAAuB,KAAK,IAAI,KAAK;;OAhxBrD;MAAA,KAAA;MAAA,OA4xBE,2BAAkB,QAAQ,WAAW,OAAO;AAAA,YAAA,UAAA;AAC1C,YAAM,WAAW,MAAM,cAAc,KAAK;AAC1C,YAAM,YAAY,MAAM,cAAc,KAAK;AAE3C,YAAI;AACJ,YAAI;AACJ,YAAI;AAEJ,YAAM,UAAU,oBAAM;AACpB,cAAM,YACJ,iCAAiC,QAAQ,cAAc;AACzD,cAAM,eACJ,iCAAiC,WAAW,cAAc;AAE5D,qBAAW,QAAK,mCAAmC,QAAQ;AAC3D,2BAAiB,wBAAwB;AAEzC,cAAI;AACF,6BAAiB,sBAAsB;cACrC,gBAAgB,QAAK,YAAY;cACjC,qBAAqB,QAAK,YAAY;cACtC;cACA,aAAa,UAAiB;cAC9B;cACA,gBAAgB,aAAoB;cACpC,QAAQ;gBACN,qBAAwB,iBAAxB;gBAEA,UAAU;;cAEZ,oBAAoB;cACpB,OAAO;;mBAEF,IAAP;AACA,wBAAY;;;AAIhB,YAAM,SAAS,mBAAM;AACnB,iBAAO,UAAU;AAEjB,mBAAS,QAAK,SAAS,WAAW;AAElC,oBAAU,WAAW;YACnB,eAAe,QAAQ,WAAW;YAClC,yBAAyB;YACzB,mBAAsB,iBAAL;YACjB,mBAAmB;;AAGrB,oBAAU,UAAU;YAClB,eAAe;YACf,gBAAmB,iBAAiB,OAAtB;YACd,mBAAmB;YACnB,mBAAmB;;AAErB,iBAAO,UAAU,IAAI;AACrB,oBAAU,UAAU,IAAI;AAExB,cAAI,gBAAgB;AAClB,2BAAe;;;AAInB,YAAM,UAAU,oBAAM;AACpB,iBAAO,QAAK,SAAS;AACrB,mBAAS,WAAW,iBAAiB;AACrC,mBAAS,UAAU,iBAAiB;AACpC,iBAAO,UAAU,OAAO;AACxB,oBAAU,UAAU,OAAO;AAC3B,cAAI,gBAAgB;AAClB,2BAAe;;;AAInB,eAAO,KAAK,qBAAqB,SAAS,QACvC,KAAK,WAAA;AAAA,iBAAM,+BAA+B,QAAK,KAAK;WACpD,KAAK,WAAA;AAAA,iBAAM,QAAK,cAAc;;;OAz2BrC;MAAA,KAAA;MAAA,OAm3BE,0BAAiB,eAAe;AAC9B,eAAO,KAAK,eAAe,eAAe;;OAp3B9C;MAAA,KAAA;MAAA,OA63BE,2BAAkB,eAAe;AAC/B,eAAO,KAAK,eAAe,eAAe;;OA93B9C;MAAA,KAAA;MAAA,OAu4BE,eAAM,QAAQ;AAAA,YAAA,UAAA;AACZ,eAAO,KAAK,cAAc,WAAM;AAC9B,cAAI,QAAQ;AACV,mBAAO,MAAM,cAAc,QAAK,YAAY;AAC5C,mBAAO,QAAK,SAAS;;AAGvB,kBAAK,QAAQ,aAAa,sBAAsB,SAAS,OAAO;WAE/D,KAAK,WAAA;AAAA,iBAAM,+BAA+B,QAAK,KAAK;WACpD,KAAK,WAAM;AACV,kBAAK,QAAQ,gBAAgB;AAE7B,cAAI,CAAC,QAAQ;AACX,mBAAO,MAAM,cAAc,QAAK,YAAY;AAC5C,mBAAO,QAAK,SAAS;;;;OAt5B/B;MAAA,KAAA;MAAA,OAg6BE,kBAAS;AAAA,YAAA,UAAA;AAEP,YAAA,yBAAwB,KAAK,sBAAtB,gBAAP,uBAAO;AACP,YAAI,CAAC,KAAK,0BAA0B,gBAAgB;AAClD,iBAAO,KAAK,MAAiB;;AAG/B,eAAO,KAAK,qBACT,YAAY,UACZ,WAAW,cAAc,UACzB,KAAK,WAAA;AAAA,iBAAM,QAAK,iBAAiB;;;OA16BxC;MAAA,KAAA;MAAA,OAk7BE,iBAAQ;AACN,YAAA,yBAAwB,KAAK,sBAAtB,gBAAP,uBAAO;AACP,YAAI,CAAC,KAAK,qBAAqB;AAC7B,iBAAO,KAAK,MAAiB;;AAG/B,eAAO,KAAK,kBAAkB;;OAx7BlC;MAAA,KAAA;MAAA,OAo8BE,gCACE,IACA,MACA,QACA,QACA;AAAA,YAHA,SAGA,QAAA;AAHA,iBAAO;;AAGP,YAFA,WAEA,QAAA;AAFA,mBAAS;;AAET,YADA,WACA,QAAA;AADA,mBAAS;;AAET,YAAM,2BAA4B,KAAK,IAAI,MAAM,OAAQ;AACzD,eAAO,MAAM,0BAA0B,QAAQ;;OA38BnD;MAAA,KAAA;MAAA,OAm9BE,yCAAgC,eAAe;AAG7C,eAAO,iCACL,eACA;;OAx9BN;MAAA,KAAA;MAAA,OAi+BE,oCAA2B;AACzB,YAAM,SAAS,KAAK,qBAAqB;AACzC,YAAM,iBAAiB,KAAK,gCAAgC;AAC5D,YAAI,gBAAgB;AAClB,cAAM,YAAY,QAChB,uBAAuB,gBAAgB;AAEzC,cAAM,cAAc,MAAM,cACxB,iCAAiC,QAAQ;AAE3C,cAAM,mBAAmB,UAAU,QAAQ;AAC3C,oBAAU,gBACP,UACA,KAAK,SAAC,UAAD;AAAA,mBAAc,SAAS,UAAU;;;;OA9+B/C;MAAA,KAAA;MAAA,OAu/BE,kBAAS;AAAA,YAAA,UAAA;AACP,YAAI,CAAC,KAAK,WAAW;AACnB,iBAAO;;AAGT,aAAK;AAEL,aAAK,YAAY;AAEjB,aAAK;AAEL,aAAK,KAAK,gBAAgB,oBACxB,WACA,KAAK;AAGP,aAAK,UAAU,oBACb,eACA,KAAK;AAGP,YAAM,WAAW,SAAS,IAAI,MAAM,cAAc,KAAK;AACvD,iBAAS;AAET,aAAK,iBAAiB,eAAe;AACrC,eAAO,KAAK,cAAc,WAAM;AAS9B,cAAI,CAAC,QAAK,4BAA4B;AACpC,oBAAK,cAAc;;AAGrB,kBAAK,WAAW,gBAAgB;AAEhC,cAAI,QAAK,UAAU;AACjB,oBAAK,SAAS,UAAU,IAAI;AAC5B,oBAAK,WAAW;;WAGjB,KAAK,WAAA;AAAA,iBAAM,QAAK;WAChB,KAAK,WAAM;AAEV,cAAI,QAAK,4BAA4B;AACnC,oBAAK,cAAc;;AAErB,mBAAS,aAAa,QAAK,SAAS,cAClC,QAAK,SACL,MAAM,cAAc,QAAK;AAE3B,kBAAK;AACL,kBAAK,YAAY;AACjB,cAAI,QAAK,cAAc,IAAI;AACzB,oBAAK,SAAS,IAAI,QAAK;;;;OAjjCjC;MAAA,KAAA;MAAA,OA4jCE,oBAAW,OAAO;AAChB,YAAI,CAAC,KAAK,WAAW;AACnB;;AAEF,YAAO,MAAO,MAAP;AACP,gBAAQ;eACD,KAAK;AACR,iBAAK;AACL;eACG,KAAK;AACR,iBAAK,oBAAkC;AACvC;eACG,KAAK;AACR,iBAAK,oBAAkC;AACvC;;;;OA1kCR;MAAA,KAAA;MAAA,OAolCE,6BAAoB,WAAW;AAC7B,YAAM,gBAAgB,KAAK,WAAW,aAAa;AACnD,YAAI,eAAe;AACjB;;AAEF,kBAAU,KAAK,WACZ,UACA,KAAK,SAAC,UAAa;AAClB,mBAAS,WACP,WACc,MACC;;;OA/lCzB;MAAA,KAAA;MAAA,OAwmCE,wBAAe;AAAA,YAAA,UAAA;AAEb,YAAI,CAAC,KAAK,UAAU;AAClB,eAAK;;AAEP,aAAK,iBAAiB,eAAe;AACrC,aAAK,cAAc,WAAM;AACvB,kBAAK,WAAW,aAAa,gBAAgB;AAC7C,iBAAO,MAAM,cAAc,QAAK,YAAY;;AAE9C,8BAAsB,KAAK,SAAS,yBAAyB,KAAK;;OAlnCtE;MAAA,KAAA;MAAA,OA0nCE,yBAAgB;AAAA,YAAA,UAAA;AACd,eAAO,KAAK,cAAc,WAAM;AAC9B,kBAAK,WAAW,gBAAgB;AAChC,iBAAO,MAAM,cAAc,QAAK,YAAY;AAC5C,kBAAK;;;OA9nCX;MAAA,KAAA;MAAA,OAqoCE,+BAAsB;AAAA,YAAA,UAAA;AACpB,YAAM,QAAQ,KAAK;AACnB,aAAK,WAAW,KAAK,QAAQ,cAAb,+CAC+B,uBAC3C,SAFY;AAKhB,YAAI,KAAK,UAAU;AACjB,eAAK,SAAS,UAAU,OAAO;AAC/B,eAAK;eACA;AAEL,eAAK,WAAW,QAAkC,KAAK,MAAvD,oBAAA,oBAAA,6BAAA,CAAA;AAEA,eAAK,SAAS,aACZ,sBACA,KAAK;AAGP,eAAK;AAEL,eAAK,cAAc,WAAM;AACvB,oBAAK,WAAW,YAAY,QAAK;;;;OA3pCzC;MAAA,KAAA;MAAA,OAoqCE,kCAAyB;AAAA,YAAA,UAAA;AACvB,YAAM,aAAa,KAAK,SACrB,cAAc,KAAK,yBACnB,IAAI,SAAC,WAAW,OAAZ;AAAA,iBAAA,SAAA;YAAwB;aAAU;WACtC,OAAO,SAAC,WAAD;AAAA,iBAAe,WAAW,UAAU,QAAQ;;AAEtD,aAAK,cAAc,WAAM;AACvB,qBAAW,QAAQ,SAAC,WAAc;AAChC,sBAAU,iBAAiB,KAAK,SAAC,IAAO;AAItC,kBAAI,CAAC,MAAM,MAAM,KAAK;AACpB;;AAEF,kBAAM,YAAY,yBAAyB;AAC3C,kBAAM,qBAAqB,MAAM,cAC/B,QAAK,SAAS,WAAW,UAAU;AAErC,kBAAM,eAAe,kBAAkB,oBAAoB;AAC3D,kBAAI,aAAa,WAAW,SAAS,GAAG;AACtC,6BAAa,YAAY,aAAa,WAAW;;AAEnD,2BAAa,YAAY,QAAK,KAAK,eAAe;AAClD,2BAAa,UAAU,IAAI;;;;;OA5rCrC;MAAA,KAAA;MAAA,OAusCE,iCAAwB;AAAA,YAAA,UAAA;AACtB,YAAM,aAAa;AACnB,aAAK,SACF,cAAc,KAAK,yBACnB,QAAQ,SAAC,WAAc;AAGtB,cAAI,UAAU,QAAQ,WAAW,UAAU;AACzC;;AAEF,cAAM,mBAAmB,QAAK,wBAAwB;AACtD,qBAAW,KAAK;;AAEpB,aAAK,cAAc,WAAM;AACvB,qBAAW,QAAQ,SAAC,kBAAqB;AACvC,oBAAK,SAAS,YAAY;;;;OAttClC;MAAA,KAAA;MAAA,OAguCE,+BAAsB,OAAO,IAAI;AAAA,YAAA,UAAA;AAC/B,cAAM;AACN,gBAAQ,IAAI,CACV,KAAK,iBACL,UAAU,KAAK,WAAW,YACzB,KAAK,SAAC,QAAW;AAClB,kBAAK,iBAAiB;AACtB,iBAAO,GAAG,UAAU,QAAK;AACzB,kBAAK;;;OAxuCX;MAAA,KAAA;MAAA,OAkvCE,iCAAwB,cAAc;AAAA,YAAA,UAAA;AACpC,YAAM,UAAU,QAAkC,KAAK,MAA1C,oBAAA,oBAAA,6BAAA,CAAA;AAIb,YAAM,aAAa,kBAAkB,SAAS;AAE9C,YAAI,aAAa,QAAQ;AACvB,qBAAW,aAAa,UAAU,aAAa,OAAO;eACjD;AACL,qBAAW,aAAa,OAAO,aAAa;;AAE9C,gBAAQ,YAAY;AAEpB,YAAI,WAAW,aAAa,QAAQ,UAAU;AAC5C,cAAM,eAAe,QAAkC,KAAK,MAA1C,oBAAA,oBAAA,6BAAA,CAAA;AAKlB,uBAAa,iBAAiB,KAAK,SAAC,IAAO;AAIzC,gBAAI,CAAC,MAAM,MAAM,KAAK;AACpB;;AAEF,gBAAM,YAAY,yBAAyB;AAC3C,yBAAa,YAAY,QAAK,KAAK,eAAe;AAClD,yBAAa,UAAU,IAAI;;AAE7B,kBAAQ,YAAY;;AAGtB,gBAAQ,iBAAiB,SAAS,SAAC,IAAM;AACvC,kBAAK,sBAAsB,IAAG,aAAa,QAAQ;;AAErD,eAAO;;;AAvxCX,WAAA;IAAwC,IAAI;AAiyCrC,kCAAgC,QAAQ;AAG7C,WAAO,OACJ,YACA,KAAK,WAAA;AAAA,aAAM,OAAO;OAClB,KAAK,SAAC,MAAS;AACd,UAAM,kBAAkB,aAAa,OAAO,eAAe;AAC3D,UAAI,CAAC,iBAAiB;AACpB,YAAM,UAAU,OAAO,IAAI,SAAS,cAAc;AAClD,gBAAQ,aAAa,UAAU;AAC/B,gBAAQ,aAAa,MAAM;AAC3B,aAAK,YAAY;;;;AAUzB,iCAA+B,SAAS;AACtC,WACE,wBACE,SACA,wBACA;;AAKN,MAAI,UAAU,MAAK,OAAO,SAAC,MAAQ;AACjC,SAAI,gBAAgB,MAAK,oBAAoB;AAC7C,SAAI,sBAAsB,wBAAwB;AAClD,aAAS,cAAc,KAAI,KAAK,cAAc;;",
  "names": []
}
