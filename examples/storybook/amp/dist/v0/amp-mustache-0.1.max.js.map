{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../src/core/types/array.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/config.js", "../../src/log.js", "../../src/core/window/index.js", "../../src/service.js", "../../src/core/minified-mode.js", "../../src/core/assert/dev.js", "../../src/core/assert/user.js", "../../third_party/css-escape/css-escape.js", "../../src/dom.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../src/base-template.js", "../../src/format.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../src/core/dom/srcset.js", "../../src/url-rewrite.js", "../../src/purifier/sanitation.js", "../../third_party/caja/html-sanitizer.js", "../../src/sanitizer.js", "../../third_party/mustache/mustache.js", "../../extensions/amp-mustache/0.1/amp-mustache.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Magic constant that is replaced by babel.\n// IS_MINIFIED is always replaced with true when closure compiler is used\nconst IS_MINIFIED = false;\n\n/**\n * Returns true whenever closure compiler is used.\n * @return {boolean}\n */\nexport function isMinifiedMode() {\n  return IS_MINIFIED;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {isMinifiedMode} from '../minified-mode';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (isMinifiedMode()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {USER_ERROR_SENTINEL} from '../error/message-helpers';\n\n/**\n * @fileoverview This file provides the entrypoint for user assertions. It's\n * designed so all functions are pure function calls to improve inlining.\n */\n\n/**\n * Throws a user error if the first argument isn't trueish. Mirrors userAssert\n * in src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {UserError} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return assertions.assert(\n    USER_ERROR_SENTINEL,\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertElement(shouldBeElement, opt_message) {\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertString(shouldBeString, opt_message) {\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertNumber(shouldBeNumber, opt_message) {\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertArray(shouldBeArray, opt_message) {\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssertBoolean(shouldBeBoolean, opt_message) {\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (userAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {dev} from './log';\nimport {isElement} from './core/types';\n\n/**\n * The interface that is implemented by all templates.\n * @abstract\n */\nexport class BaseTemplate {\n  /**\n   * @param {!Element} element\n   * @param {!Window} win\n   */\n  constructor(element, win) {\n    /** @public @const */\n    this.element = element;\n\n    /** @public @const {!Window} */\n    this.win = element.ownerDocument.defaultView || win;\n\n    /** @private @const */\n    this.viewer_ = Services.viewerForDoc(this.element);\n\n    this.compileCallback();\n  }\n\n  /**\n   * Override in subclass if the element needs to compile the template.\n   * @protected\n   */\n  compileCallback() {\n    // Subclasses may override.\n  }\n\n  /**\n   * Bypasses template rendering and directly sets HTML. Should only be used\n   * for server-side rendering case. To be implemented by subclasses.\n   * @param {string} unusedData\n   * @return {!Element|!Array<Element>}\n   * @abstract\n   */\n  setHtml(unusedData) {}\n\n  /**\n   * To be implemented by subclasses.\n   * @param {!JsonObject|string} unusedData\n   * @return {!Element}\n   * @abstract\n   */\n  render(unusedData) {}\n\n  /**\n   * To be implemented by subclasses.\n   * @param {!JsonObject|string} unusedData\n   * @return {string}\n   * @abstract\n   */\n  renderAsString(unusedData) {}\n\n  /**\n   * Iterate through the child nodes of the given root, applying the\n   * given callback to non-empty text nodes and elements.\n   * @param {!Element} root\n   * @param {function((!Element|string))} callback\n   */\n  visitChildren_(root, callback) {\n    for (let n = root.firstChild; n != null; n = n.nextSibling) {\n      if (n.nodeType == /* TEXT */ 3) {\n        const text = n.textContent.trim();\n        if (text) {\n          callback(text);\n        }\n      } else if (n.nodeType == /* COMMENT */ 8) {\n        // Ignore comments.\n      } else if (isElement(n)) {\n        callback(dev().assertElement(n));\n      }\n    }\n  }\n\n  /**\n   * Unwraps the root element. If root has a single element child,\n   * returns the child. Otherwise, returns root.\n   * @param {!Element} root\n   * @return {!Element}\n   * @protected @final\n   */\n  tryUnwrap(root) {\n    let onlyChild;\n    this.visitChildren_(root, (c) => {\n      if (onlyChild === undefined && c.nodeType) {\n        onlyChild = c;\n      } else {\n        onlyChild = null;\n      }\n    });\n    return onlyChild || root;\n  }\n\n  /**\n   * Unwraps the root element and returns any children in an array.\n   * Text node children are normalized inside a <div>.\n   * @param {!Element} root\n   * @return {!Array<!Element>}\n   * @protected @final\n   */\n  unwrapChildren(root) {\n    const children = [];\n    this.visitChildren_(root, (c) => {\n      if (typeof c == 'string') {\n        const element = this.win.document.createElement('div');\n        element.textContent = c;\n        children.push(element);\n      } else {\n        children.push(c);\n      }\n    });\n    return children;\n  }\n\n  /**\n   * @protected @final\n   * @return {boolean}\n   */\n  viewerCanRenderTemplates() {\n    return this.viewer_.hasCapability('viewerRenderTemplate');\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks that the document is of an AMP format type.\n * @param {!Array<string>} formats\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isAmpFormatType(formats, doc) {\n  const html = doc.documentElement;\n  const isFormatType = formats.some((format) => html.hasAttribute(format));\n  return isFormatType;\n}\n\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isAmp4Email(doc) {\n  return isAmpFormatType(['\u26A14email', 'amp4email'], doc);\n}\n\n/**\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isAmphtml(doc) {\n  return isAmpFormatType(['\u26A1', 'amp'], doc);\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './core/data-structures/lru-cache';\nimport {dict, hasOwn} from './core/types/object';\nimport {endsWith} from './core/types/string';\nimport {getMode} from './mode';\nimport {isArray} from './core/types';\nimport {parseQueryString} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {?} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert, userAssert} from '../assert';\n\n/**\n * A single source within a srcset. Only one: width or DPR can be specified at\n * a time.\n * @typedef {{\n *   url: string,\n *   width: (number|undefined),\n *   dpr: (number|undefined)\n * }}\n */\nlet SrcsetSourceDef;\n\n/**\n * General grammar: (URL [NUM[w|x]],)*\n * Example 1: \"image1.png 100w, image2.png 50w\"\n * Example 2: \"image1.png 2x, image2.png\"\n * Example 3: \"image1,100w.png 100w, image2.png 50w\"\n */\nconst srcsetRegex = /(\\S+)(?:\\s+(?:(-?\\d+(?:\\.\\d+)?)([a-zA-Z]*)))?\\s*(?:,|$)/g;\n\n/**\n * Extracts `srcset` and fallbacks to `src` if not available.\n * @param {!Element} element\n * @return {!Srcset}\n */\nexport function srcsetFromElement(element) {\n  const srcsetAttr = element.getAttribute('srcset');\n  if (srcsetAttr) {\n    return parseSrcset(srcsetAttr);\n  }\n  // We can't push `src` via `parseSrcset` because URLs in `src` are not always\n  // RFC compliant and can't be easily parsed as an `srcset`. For instance,\n  // they sometimes contain space characters.\n  const srcAttr = userAssert(\n    element.getAttribute('src'),\n    'Either non-empty \"srcset\" or \"src\" attribute must be specified: %s',\n    element\n  );\n  return srcsetFromSrc(srcAttr);\n}\n\n/**\n * Creates a Srcset from a `src` attribute value.\n * @param {string} src\n * @return {!Srcset}\n */\nexport function srcsetFromSrc(src) {\n  return new Srcset([{url: src, width: undefined, dpr: 1}]);\n}\n\n/**\n * Parses the text representation of srcset into Srcset object.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes.\n * See http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n * @param {string} s\n * @return {!Srcset}\n */\nexport function parseSrcset(s) {\n  const sources = [];\n  let match;\n  while ((match = srcsetRegex.exec(s))) {\n    const url = match[1];\n    let width, dpr;\n    if (match[2]) {\n      const type = match[3].toLowerCase();\n      if (type == 'w') {\n        width = parseInt(match[2], 10);\n      } else if (type == 'x') {\n        dpr = parseFloat(match[2]);\n      } else {\n        continue;\n      }\n    } else {\n      // If no \"w\" or \"x\" specified, we assume it's \"1x\".\n      dpr = 1;\n    }\n    sources.push({url, width, dpr});\n  }\n  return new Srcset(sources);\n}\n\n/**\n * A srcset object contains one or more sources.\n *\n * There are two types of sources: width-based and DPR-based. Only one type\n * of sources allowed to be specified within a single srcset. Depending on a\n * usecase, the components are free to choose any source that best corresponds\n * to the required rendering quality and network and CPU conditions. See\n * \"select\" method for details on how this selection is performed.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes\n */\nexport class Srcset {\n  /**\n   * @param {!Array<!SrcsetSourceDef>} sources\n   */\n  constructor(sources) {\n    userAssert(sources.length > 0, 'Srcset must have at least one source');\n    /** @private @const {!Array<!SrcsetSourceDef>} */\n    this.sources_ = sources;\n\n    // Only one type of source specified can be used - width or DPR.\n    let hasWidth = false;\n    let hasDpr = false;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      hasWidth = hasWidth || !!source.width;\n      hasDpr = hasDpr || !!source.dpr;\n    }\n    userAssert(\n      !!(hasWidth ^ hasDpr),\n      'Srcset must have width or dpr sources, but not both'\n    );\n\n    // Source and assert duplicates.\n    sources.sort(hasWidth ? sortByWidth : sortByDpr);\n\n    /** @private @const {boolean} */\n    this.widthBased_ = hasWidth;\n  }\n\n  /**\n   * Performs selection for specified width and DPR. Here, width is the width\n   * in screen pixels and DPR is the device-pixel-ratio or pixel density of\n   * the device. Depending on the circumstances, such as low network conditions,\n   * it's possible to manipulate the result of this method by passing a lower\n   * DPR value.\n   *\n   * The source selection depends on whether this is width-based or DPR-based\n   * srcset.\n   *\n   * In a width-based source, the source's width is the physical width of a\n   * resource (e.g. an image). Depending on the provided DPR, this width is\n   * converted to the screen pixels as following:\n   *   pixelWidth = sourceWidth / DPR\n   *\n   * Then, the source closest to the requested \"width\" is selected using\n   * the \"pixelWidth\". The slight preference is given to the bigger sources to\n   * ensure the most optimal quality.\n   *\n   * In a DPR-based source, the source's DPR is used to return the source that\n   * is closest to the requested DPR.\n   *\n   * Based on\n   * http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n   * @param {number} width\n   * @param {number} dpr\n   * @return {string}\n   */\n  select(width, dpr) {\n    devAssert(width, 'width=%s', width);\n    devAssert(dpr, 'dpr=%s', dpr);\n    let index = 0;\n    if (this.widthBased_) {\n      index = this.selectByWidth_(width * dpr);\n    } else {\n      index = this.selectByDpr_(dpr);\n    }\n    return this.sources_[index].url;\n  }\n\n  /**\n   * @param {number} width\n   * @return {number}\n   * @private\n   */\n  selectByWidth_(width) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n    let minWidth = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const sWidth = sources[i].width;\n      const score = Math.abs(sWidth - width);\n\n      // Select the one that is closer with a slight preference toward larger\n      // widths. If smaller size is closer, enforce minimum ratio to ensure\n      // image isn't too distorted.\n      if (score <= minScore * 1.1 || width / minWidth > 1.2) {\n        minIndex = i;\n        minScore = score;\n        minWidth = sWidth;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * @param {number} dpr\n   * @return {number}\n   * @private\n   */\n  selectByDpr_(dpr) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const score = Math.abs(sources[i].dpr - dpr);\n      if (score <= minScore) {\n        minIndex = i;\n        minScore = score;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * Returns all URLs in the srcset.\n   * @return {!Array<string>}\n   */\n  getUrls() {\n    return this.sources_.map((s) => s.url);\n  }\n\n  /**\n   * Reconstructs the string expression for this srcset.\n   * @param {function(string):string=} opt_mapper\n   * @return {string}\n   */\n  stringify(opt_mapper) {\n    const res = [];\n    const sources = this.sources_;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      let src = source.url;\n      if (opt_mapper) {\n        src = opt_mapper(src);\n      }\n      if (this.widthBased_) {\n        src += ` ${source.width}w`;\n      } else {\n        src += ` ${source.dpr}x`;\n      }\n      res.push(src);\n    }\n    return res.join(', ');\n  }\n}\n\n/**\n * Sorts by width\n *\n * @param {!SrcsetSourceDef} s1\n * @param {!SrcsetSourceDef} s2\n * @return {number}\n */\nfunction sortByWidth(s1, s2) {\n  userAssert(s1.width != s2.width, 'Duplicate width: %s', s1.width);\n  return s1.width - s2.width;\n}\n\n/**\n * Sorts by dpr\n *\n * @param {!SrcsetSourceDef} s1\n * @param {!SrcsetSourceDef} s2\n * @return {number}\n */\nfunction sortByDpr(s1, s2) {\n  userAssert(s1.dpr != s2.dpr, 'Duplicate dpr: %s', s1.dpr);\n  return s1.dpr - s2.dpr;\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  checkCorsUrl,\n  getSourceUrl,\n  isProxyOrigin,\n  parseUrlDeprecated,\n  resolveRelativeUrl,\n} from './url';\nimport {parseSrcset} from './core/dom/srcset';\nimport {urls} from './config';\nimport {user} from './log';\n\nconst TAG = 'URL-REWRITE';\n\n/** @private @const {string} */\nconst ORIGINAL_TARGET_VALUE = '__AMP_ORIGINAL_TARGET_VALUE_';\n\n/**\n * The same as rewriteAttributeValue() but actually updates the element and\n * modifies other related attribute(s) for special cases, i.e. `target` for <a>.\n * @param {!Element} element\n * @param {string} attrName\n * @param {string} attrValue\n * @param {!Location=} opt_location\n * @param {boolean=} opt_updateProperty\n * @return {string}\n */\nexport function rewriteAttributesForElement(\n  element,\n  attrName,\n  attrValue,\n  opt_location,\n  opt_updateProperty\n) {\n  const tag = element.tagName.toLowerCase();\n  const attr = attrName.toLowerCase();\n  const rewrittenValue = rewriteAttributeValue(tag, attr, attrValue);\n  // When served from proxy (CDN), changing an <a> tag from a hash link to a\n  // non-hash link requires updating `target` attribute per cache modification\n  // rules. @see amp-cache-modifications.md#url-rewrites\n  const isProxy = isProxyOrigin(opt_location || self.location);\n  if (isProxy && tag === 'a' && attr === 'href') {\n    const oldValue = element.getAttribute(attr);\n    const newValueIsHash = rewrittenValue[0] === '#';\n    const oldValueIsHash = oldValue && oldValue[0] === '#';\n\n    if (newValueIsHash && !oldValueIsHash) {\n      // Save the original value of `target` so it can be restored (if needed).\n      if (!element[ORIGINAL_TARGET_VALUE]) {\n        element[ORIGINAL_TARGET_VALUE] = element.getAttribute('target');\n      }\n      element.removeAttribute('target');\n    } else if (oldValueIsHash && !newValueIsHash) {\n      // Restore the original value of `target` or default to `_top`.\n      element.setAttribute('target', element[ORIGINAL_TARGET_VALUE] || '_top');\n    }\n  }\n  if (opt_updateProperty) {\n    // Must be done first for <input> elements to correctly update the UI for\n    // the first change on Safari and Chrome.\n    element[attr] = rewrittenValue;\n  }\n  element.setAttribute(attr, rewrittenValue);\n  return rewrittenValue;\n}\n\n/**\n * If (tagName, attrName) is a CDN-rewritable URL attribute, returns the\n * rewritten URL value. Otherwise, returns the unchanged `attrValue`.\n * See resolveUrlAttr() for rewriting rules.\n * @param {string} tagName Lowercase tag name.\n * @param {string} attrName Lowercase attribute name.\n * @param {string} attrValue\n * @return {string}\n * @visibleForTesting\n */\nexport function rewriteAttributeValue(tagName, attrName, attrValue) {\n  if (isUrlAttribute(attrName)) {\n    return resolveUrlAttr(tagName, attrName, attrValue, self.location);\n  }\n  return attrValue;\n}\n\n/**\n * @param {string} attrName Lowercase attribute name.\n * @return {boolean}\n */\nexport function isUrlAttribute(attrName) {\n  return (\n    attrName == 'src' ||\n    attrName == 'href' ||\n    attrName == 'xlink:href' ||\n    attrName == 'srcset'\n  );\n}\n\n/**\n * Rewrites the URL attribute values. URLs are rewritten as following:\n * - If URL is absolute, it is not rewritten\n * - If URL is relative, it's rewritten as absolute against the source origin\n * - If resulting URL is a `http:` URL and it's for image, the URL is rewritten\n *   again to be served with AMP Cache (cdn.ampproject.org).\n *\n * @param {string} tagName Lowercase tag name.\n * @param {string} attrName Lowercase attribute name.\n * @param {string} attrValue\n * @param {!Location} windowLocation\n * @return {string}\n * @private\n * @visibleForTesting\n */\nexport function resolveUrlAttr(tagName, attrName, attrValue, windowLocation) {\n  checkCorsUrl(attrValue);\n  const isProxyHost = isProxyOrigin(windowLocation);\n  const baseUrl = parseUrlDeprecated(getSourceUrl(windowLocation));\n\n  if (attrName == 'href' && !attrValue.startsWith('#')) {\n    return resolveRelativeUrl(attrValue, baseUrl);\n  }\n\n  if (attrName == 'src') {\n    if (tagName == 'amp-img') {\n      return resolveImageUrlAttr(attrValue, baseUrl, isProxyHost);\n    }\n    return resolveRelativeUrl(attrValue, baseUrl);\n  }\n\n  if (attrName == 'srcset') {\n    let srcset;\n    try {\n      srcset = parseSrcset(attrValue);\n    } catch (e) {\n      // Do not fail the whole template just because one srcset is broken.\n      // An AMP element will pick it up and report properly.\n      user().error(TAG, 'Failed to parse srcset: ', e);\n      return attrValue;\n    }\n    return srcset.stringify((url) =>\n      resolveImageUrlAttr(url, baseUrl, isProxyHost)\n    );\n  }\n\n  return attrValue;\n}\n\n/**\n * Non-HTTPs image URLs are rewritten via proxy.\n * @param {string} attrValue\n * @param {!Location} baseUrl\n * @param {boolean} isProxyHost\n * @return {string}\n */\nfunction resolveImageUrlAttr(attrValue, baseUrl, isProxyHost) {\n  const src = parseUrlDeprecated(resolveRelativeUrl(attrValue, baseUrl));\n\n  // URLs such as `data:` or proxy URLs are returned as is. Unsafe protocols\n  // do not arrive here - already stripped by the sanitizer.\n  if (src.protocol == 'data:' || isProxyOrigin(src) || !isProxyHost) {\n    return src.href;\n  }\n\n  // Rewrite as a proxy URL.\n  return (\n    `${urls.cdn}/i/` +\n    (src.protocol == 'https:' ? 's/' : '') +\n    encodeURIComponent(src.host) +\n    src.pathname +\n    (src.search || '') +\n    (src.hash || '')\n  );\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dict, map} from '../core/types/object';\nimport {isAmp4Email} from '../format';\nimport {isUrlAttribute} from '../url-rewrite';\n\n/** @const {string} */\nexport const BIND_PREFIX = 'data-amp-bind-';\n\n/** @const {string} */\nexport const DIFF_KEY = 'i-amphtml-key';\n\n/** @const {string} */\nexport const DIFF_IGNORE = 'i-amphtml-ignore';\n\n/**\n * Map of AMP element tag name to attributes that, if changed, require\n * replacement of the original element.\n * @const {!Object<string, !Array<string>>}\n */\nexport const DIFFABLE_AMP_ELEMENTS = {\n  'AMP-IMG': ['src', 'srcset', 'layout', 'width', 'height'],\n};\n\n/**\n * Most AMP elements don't support ad hoc mutation and should be replaced\n * instead of DOM diff'ed. Some AMP elements can be manually diff'ed.\n *\n * Both of these cases require a special attribute to enable special handling in\n * the diffing algorithm. This function sets the appropriate attribute.\n *\n * @param {!Element} element\n * @param {function(): string} generateKey\n */\nexport function markElementForDiffing(element, generateKey) {\n  const isAmpElement = element.tagName.startsWith('AMP-');\n  // Don't DOM diff nodes with bindings because amp-bind scans newly rendered\n  // elements and discards _all_ old elements _before_ diffing, so preserving\n  // old elements would cause loss of functionality.\n  //\n  // Alternatively, we could do diffing _before_ bindings are updated and\n  // more precisely add/remove bindings from nodes that set-dom diffs, but...\n  // 1. Would result in content flashing unless we clone the old DOM tree.\n  // 2. Need to change set-dom e.g. handle changed bind attribute values.\n  const hasBinding = element.hasAttribute('i-amphtml-binding');\n\n  if (!hasBinding && DIFFABLE_AMP_ELEMENTS[element.tagName]) {\n    // Nodes marked with \"ignore\" will not be touched (old element stays).\n    // We want this to allow manual diffing afterwards.\n    element.setAttribute(DIFF_IGNORE, '');\n  } else if (hasBinding || isAmpElement) {\n    // Diff'ed node pairs with unique \"key\" will always be replaced.\n    if (!element.hasAttribute(DIFF_KEY)) {\n      element.setAttribute(DIFF_KEY, generateKey());\n    }\n  }\n}\n\n/**\n * @const {!Object<string, boolean>}\n * @see https://github.com/ampproject/amphtml/blob/main/docs/spec/amp-html-format.md\n */\nexport const DENYLISTED_TAGS = {\n  'applet': true,\n  'audio': true,\n  'base': true,\n  'embed': true,\n  'frame': true,\n  'frameset': true,\n  'iframe': true,\n  'img': true,\n  'link': true,\n  'meta': true,\n  'object': true,\n  'style': true,\n  'video': true,\n};\n\n/**\n * AMP elements allowed in AMP4EMAIL, modulo:\n * - amp-list and amp-state, which cannot be nested.\n * - amp-lightbox and amp-image-lightbox, which are deprecated.\n * @const {!Object<string, boolean>}\n * @see https://github.com/ampproject/amphtml/blob/main/docs/spec/email/amp-email-components.md\n */\nexport const EMAIL_ALLOWLISTED_AMP_TAGS = {\n  'amp-accordion': true,\n  'amp-anim': true,\n  'amp-bind-macro': true,\n  'amp-carousel': true,\n  'amp-fit-text': true,\n  'amp-img': true,\n  'amp-layout': true,\n  'amp-selector': true,\n  'amp-sidebar': true,\n  'amp-timeago': true,\n};\n\n/**\n * Allowlist of tags allowed in triple mustache e.g. {{{name}}}.\n * Very restrictive by design since the triple mustache renders unescaped HTML\n * which, unlike double mustache, won't be processed by the AMP Validator.\n * @const {!Array<string>}\n */\nexport const TRIPLE_MUSTACHE_ALLOWLISTED_TAGS = [\n  'a',\n  'amp-img',\n  'article',\n  'aside',\n  'b',\n  'blockquote',\n  'br',\n  'caption',\n  'code',\n  'col',\n  'colgroup',\n  'dd',\n  'del',\n  'details',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'figcaption',\n  'figure',\n  'footer',\n  'h1',\n  'h2',\n  'h3',\n  'header',\n  'hr',\n  'i',\n  'ins',\n  'li',\n  'main',\n  'mark',\n  'nav',\n  'ol',\n  'p',\n  'pre',\n  'q',\n  's',\n  'section',\n  'small',\n  'span',\n  'strong',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'u',\n  'ul',\n];\n\n/**\n * Tag-agnostic attribute allowlisted used by both Caja and DOMPurify.\n * @const {!Array<string>}\n */\nexport const ALLOWLISTED_ATTRS = [\n  // AMP-only attributes that don't exist in HTML.\n  'amp-fx',\n  'fallback',\n  'heights',\n  'layout',\n  'min-font-size',\n  'max-font-size',\n  'on',\n  'option',\n  'placeholder',\n  // Attributes related to amp-form.\n  'submitting',\n  'submit-success',\n  'submit-error',\n  'validation-for',\n  'verify-error',\n  'visible-when-invalid',\n  // HTML attributes that are scrubbed by Caja but we handle specially.\n  'href',\n  'style',\n  // Attributes for amp-bind that exist in \"[foo]\" form.\n  'text',\n  // Attributes for amp-subscriptions.\n  'subscriptions-action',\n  'subscriptions-actions',\n  'subscriptions-decorate',\n  'subscriptions-dialog',\n  'subscriptions-display',\n  'subscriptions-section',\n  'subscriptions-service',\n  // Attributes for amp-subscriptions-google.\n  'subscriptions-google-rtc',\n  // Attributes for amp-nested-menu.\n  'amp-nested-submenu',\n  'amp-nested-submenu-open',\n  'amp-nested-submenu-close',\n  // A global attribute used for structured data.\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemprop\n  'itemprop',\n];\n\n/**\n * Attributes that are only allowlisted for specific, non-AMP elements.\n * @const {!Object<string, !Array<string>>}\n */\nexport const ALLOWLISTED_ATTRS_BY_TAGS = {\n  'a': ['rel', 'target'],\n  'div': ['template'],\n  'form': ['action-xhr', 'verify-xhr', 'custom-validation-reporting', 'target'],\n  'input': ['mask-output'],\n  'template': ['type'],\n  'textarea': ['autoexpand'],\n};\n\n/** @const {!Array<string>} */\nexport const ALLOWLISTED_TARGETS = ['_top', '_blank'];\n\n// Extended from IS_SCRIPT_OR_DATA in https://github.com/cure53/DOMPurify/blob/master/src/regexp.js.\nconst DENYLISTED_PROTOCOLS = /^(?:\\w+script|data|blob):/i;\n\n// Same as DENYLISTED_PROTOCOLS modulo those handled by DOMPurify.\nconst EXTENDED_DENYLISTED_PROTOCOLS = /^(?:blob):/i;\n\n// From https://github.com/cure53/DOMPurify/blob/master/src/regexp.js.\nconst ATTR_WHITESPACE =\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g;\n\n/** @const {!Object<string, !Object<string, !RegExp>>} */\nconst DENYLISTED_TAG_SPECIFIC_ATTR_VALUES = Object.freeze(\n  dict({\n    'input': {\n      'type': /(?:image|button)/i,\n    },\n  })\n);\n\n/**\n * Rules in addition to DENYLISTED_TAG_SPECIFIC_ATTR_VALUES for AMP4EMAIL.\n * @const {!Object<string, !Object<string, !RegExp>>}\n */\nconst EMAIL_DENYLISTED_TAG_SPECIFIC_ATTR_VALUES = Object.freeze(\n  dict({\n    'input': {\n      'type': /(?:button|file|image|password)/i,\n    },\n  })\n);\n\n/** @const {!Array<string>} */\nconst DENYLISTED_FIELDS_ATTR = Object.freeze([\n  'form',\n  'formaction',\n  'formmethod',\n  'formtarget',\n  'formnovalidate',\n  'formenctype',\n]);\n\n/** @const {!Object<string, !Array<string>>} */\nconst DENYLISTED_TAG_SPECIFIC_ATTRS = Object.freeze(\n  dict({\n    'input': DENYLISTED_FIELDS_ATTR,\n    'textarea': DENYLISTED_FIELDS_ATTR,\n    'select': DENYLISTED_FIELDS_ATTR,\n  })\n);\n\n/**\n * Rules in addition to denylistED_TAG_SPECIFIC_ATTRS for AMP4EMAIL.\n * @const {!Object<string, !Array<string>>}\n */\nconst EMAIL_DENYLISTED_TAG_SPECIFIC_ATTRS = Object.freeze(\n  dict({\n    'amp-anim': ['controls'],\n    'form': ['name'],\n  })\n);\n\n/**\n * Test for invalid `style` attribute values.\n *\n * !important avoids overriding AMP styles, while `position:fixed|sticky` is a\n * FixedLayer limitation (it only scans the style[amp-custom] stylesheet\n * for potential fixed/sticky elements). Note that the latter can be\n * circumvented with CSS comments -- not a big deal.\n *\n * @const {!RegExp}\n */\nconst INVALID_INLINE_STYLE_REGEX =\n  /!important|position\\s*:\\s*fixed|position\\s*:\\s*sticky/i;\n\n/**\n * Whether the attribute/value is valid.\n * @param {string} tagName Lowercase tag name.\n * @param {string} attrName Lowercase attribute name.\n * @param {?string} attrValue Sometimes null when called by Caja.\n * @param {!Document} doc\n * @param {boolean} opt_purify If true, skips some attribute sanitizations\n *     that are already covered by DOMPurify.\n * @return {boolean}\n */\nexport function isValidAttr(\n  tagName,\n  attrName,\n  attrValue,\n  doc,\n  opt_purify = false\n) {\n  const attrValueWithoutWhitespace = attrValue\n    ? attrValue.replace(ATTR_WHITESPACE, '')\n    : '';\n\n  if (!opt_purify) {\n    // \"on*\" attributes are not allowed.\n    if (attrName.startsWith('on') && attrName != 'on') {\n      return false;\n    }\n\n    // No attributes with \"<script\" or \"</script\" in them.\n    const normalized = attrValueWithoutWhitespace.toLowerCase();\n    if (\n      normalized.indexOf('<script') >= 0 ||\n      normalized.indexOf('</script') >= 0\n    ) {\n      return false;\n    }\n\n    // Don't allow protocols like \"javascript:\".\n    if (DENYLISTED_PROTOCOLS.test(attrValueWithoutWhitespace)) {\n      return false;\n    }\n  }\n\n  // Don't allow certain protocols that are otherwise \"safe\".\n  // DOMPurify (opt_purify) already sanitizes javascript: etc., but\n  // allows them in special cases (data URIs in images, data-* attrs).\n  // So, just handle the other \"extended\" protocols here to avoid\n  // banning \"javascript:\" in known-safe ARIA attributes, for example.\n  if (EXTENDED_DENYLISTED_PROTOCOLS.test(attrValueWithoutWhitespace)) {\n    return false;\n  }\n\n  // Don't allow certain inline style values.\n  if (attrName == 'style') {\n    return !INVALID_INLINE_STYLE_REGEX.test(attrValue);\n  }\n\n  // Don't allow CSS class names with internal AMP prefix.\n  if (attrName == 'class' && attrValue && /(^|\\W)i-amphtml-/i.test(attrValue)) {\n    return false;\n  }\n\n  // Don't allow '__amp_source_origin' in URLs.\n  if (isUrlAttribute(attrName) && /__amp_source_origin/.test(attrValue)) {\n    return false;\n  }\n\n  const isEmail = isAmp4Email(doc);\n\n  // Remove denylisted attributes from specific tags e.g. input[formaction].\n  const attrDenylist = Object.assign(\n    map(),\n    DENYLISTED_TAG_SPECIFIC_ATTRS,\n    isEmail ? EMAIL_DENYLISTED_TAG_SPECIFIC_ATTRS : {}\n  )[tagName];\n  if (attrDenylist && attrDenylist.indexOf(attrName) != -1) {\n    return false;\n  }\n\n  // Remove denylisted values for specific attributes for specific tags\n  // e.g. input[type=image].\n  const attrValueDenylist = Object.assign(\n    map(),\n    DENYLISTED_TAG_SPECIFIC_ATTR_VALUES,\n    isEmail ? EMAIL_DENYLISTED_TAG_SPECIFIC_ATTR_VALUES : {}\n  )[tagName];\n  if (attrValueDenylist) {\n    const denylistedValuesRegex = attrValueDenylist[attrName];\n    if (\n      denylistedValuesRegex &&\n      attrValue.search(denylistedValuesRegex) != -1\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "/* Generated from CAJA Sanitizer library commit 5d856e4eaf1c12c8bda004aa55e12ed0c9cf9349 */\n\n// Copyright (C) 2010 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview\n * Implements RFC 3986 for parsing/formatting URIs.\n *\n * @author mikesamuel@gmail.com\n * \\@provides URI\n * \\@overrides window\n */\n\nvar URI = (function () {\n\n/**\n * creates a uri from the string form.  The parser is relaxed, so special\n * characters that aren't escaped but don't cause ambiguities will not cause\n * parse failures.\n *\n * @return {URI|null}\n */\nfunction parse(uriStr) {\n  var m = ('' + uriStr).match(URI_RE_);\n  if (!m) { return null; }\n  return new URI(\n      nullIfAbsent(m[1]),\n      nullIfAbsent(m[2]),\n      nullIfAbsent(m[3]),\n      nullIfAbsent(m[4]),\n      nullIfAbsent(m[5]),\n      nullIfAbsent(m[6]),\n      nullIfAbsent(m[7]));\n}\n\n\n/**\n * creates a uri from the given parts.\n *\n * @param scheme {string} an unencoded scheme such as \"http\" or null\n * @param credentials {string} unencoded user credentials or null\n * @param domain {string} an unencoded domain name or null\n * @param port {number} a port number in [1, 32768].\n *    -1 indicates no port, as does null.\n * @param path {string} an unencoded path\n * @param query {Array.<string>|string|null} a list of unencoded cgi\n *   parameters where even values are keys and odds the corresponding values\n *   or an unencoded query.\n * @param fragment {string} an unencoded fragment without the \"#\" or null.\n * @return {URI}\n */\nfunction create(scheme, credentials, domain, port, path, query, fragment) {\n  var uri = new URI(\n      encodeIfExists2(scheme, URI_DISALLOWED_IN_SCHEME_OR_CREDENTIALS_),\n      encodeIfExists2(\n          credentials, URI_DISALLOWED_IN_SCHEME_OR_CREDENTIALS_),\n      encodeIfExists(domain),\n      port > 0 ? port.toString() : null,\n      encodeIfExists2(path, URI_DISALLOWED_IN_PATH_),\n      null,\n      encodeIfExists(fragment));\n  if (query) {\n    if ('string' === typeof query) {\n      uri.setRawQuery(query.replace(/[^?&=0-9A-Za-z_\\-~.%]/g, encodeOne));\n    } else {\n      uri.setAllParameters(query);\n    }\n  }\n  return uri;\n}\nfunction encodeIfExists(unescapedPart) {\n  if ('string' == typeof unescapedPart) {\n    return encodeURIComponent(unescapedPart);\n  }\n  return null;\n};\n/**\n * if unescapedPart is non null, then escapes any characters in it that aren't\n * valid characters in a url and also escapes any special characters that\n * appear in extra.\n *\n * @param unescapedPart {string}\n * @param extra {RegExp} a character set of characters in [\\01-\\177].\n * @return {string|null} null iff unescapedPart == null.\n */\nfunction encodeIfExists2(unescapedPart, extra) {\n  if ('string' == typeof unescapedPart) {\n    return encodeURI(unescapedPart).replace(extra, encodeOne);\n  }\n  return null;\n};\n/** converts a character in [\\01-\\177] to its url encoded equivalent. */\nfunction encodeOne(ch) {\n  var n = ch.charCodeAt(0);\n  return '%' + '0123456789ABCDEF'.charAt((n >> 4) & 0xf) +\n      '0123456789ABCDEF'.charAt(n & 0xf);\n}\n\n/**\n * {@updoc\n *  $ normPath('foo/./bar')\n *  # 'foo/bar'\n *  $ normPath('./foo')\n *  # 'foo'\n *  $ normPath('foo/.')\n *  # 'foo'\n *  $ normPath('foo//bar')\n *  # 'foo/bar'\n * }\n */\nfunction normPath(path) {\n  return path.replace(/(^|\\/)\\.(?:\\/|$)/g, '$1').replace(/\\/{2,}/g, '/');\n}\n\nvar PARENT_DIRECTORY_HANDLER = new RegExp(\n    ''\n    // A path break\n    + '(/|^)'\n    // followed by a non .. path element\n    // (cannot be . because normPath is used prior to this RegExp)\n    + '(?:[^./][^/]*|\\\\.{2,}(?:[^./][^/]*)|\\\\.{3,}[^/]*)'\n    // followed by .. followed by a path break.\n    + '/\\\\.\\\\.(?:/|$)');\n\nvar PARENT_DIRECTORY_HANDLER_RE = new RegExp(PARENT_DIRECTORY_HANDLER);\n\nvar EXTRA_PARENT_PATHS_RE = /^(?:\\.\\.\\/)*(?:\\.\\.$)?/;\n\n/**\n * Normalizes its input path and collapses all . and .. sequences except for\n * .. sequences that would take it above the root of the current parent\n * directory.\n * {@updoc\n *  $ collapse_dots('foo/../bar')\n *  # 'bar'\n *  $ collapse_dots('foo/./bar')\n *  # 'foo/bar'\n *  $ collapse_dots('foo/../bar/./../../baz')\n *  # 'baz'\n *  $ collapse_dots('../foo')\n *  # '../foo'\n *  $ collapse_dots('../foo').replace(EXTRA_PARENT_PATHS_RE, '')\n *  # 'foo'\n * }\n */\nfunction collapse_dots(path) {\n  if (path === null) { return null; }\n  var p = normPath(path);\n  // Only /../ left to flatten\n  var r = PARENT_DIRECTORY_HANDLER_RE;\n  // We replace with $1 which matches a / before the .. because this\n  // guarantees that:\n  // (1) we have at most 1 / between the adjacent place,\n  // (2) always have a slash if there is a preceding path section, and\n  // (3) we never turn a relative path into an absolute path.\n  for (var q; (q = p.replace(r, '$1')) != p; p = q) {};\n  return p;\n}\n\n/**\n * resolves a relative url string to a base uri.\n * @return {URI}\n */\nfunction resolve(baseUri, relativeUri) {\n  // there are several kinds of relative urls:\n  // 1. //foo - replaces everything from the domain on.  foo is a domain name\n  // 2. foo - replaces the last part of the path, the whole query and fragment\n  // 3. /foo - replaces the the path, the query and fragment\n  // 4. ?foo - replace the query and fragment\n  // 5. #foo - replace the fragment only\n\n  var absoluteUri = baseUri.clone();\n  // we satisfy these conditions by looking for the first part of relativeUri\n  // that is not blank and applying defaults to the rest\n\n  var overridden = relativeUri.hasScheme();\n\n  if (overridden) {\n    absoluteUri.setRawScheme(relativeUri.getRawScheme());\n  } else {\n    overridden = relativeUri.hasCredentials();\n  }\n\n  if (overridden) {\n    absoluteUri.setRawCredentials(relativeUri.getRawCredentials());\n  } else {\n    overridden = relativeUri.hasDomain();\n  }\n\n  if (overridden) {\n    absoluteUri.setRawDomain(relativeUri.getRawDomain());\n  } else {\n    overridden = relativeUri.hasPort();\n  }\n\n  var rawPath = relativeUri.getRawPath();\n  var simplifiedPath = collapse_dots(rawPath);\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n    simplifiedPath = simplifiedPath\n        && simplifiedPath.replace(EXTRA_PARENT_PATHS_RE, '');\n  } else {\n    overridden = !!rawPath;\n    if (overridden) {\n      // resolve path properly\n      if (simplifiedPath.charCodeAt(0) !== 0x2f /* / */) {  // path is relative\n        var absRawPath = collapse_dots(absoluteUri.getRawPath() || '')\n            .replace(EXTRA_PARENT_PATHS_RE, '');\n        var slash = absRawPath.lastIndexOf('/') + 1;\n        simplifiedPath = collapse_dots(\n            (slash ? absRawPath.substring(0, slash) : '')\n            + collapse_dots(rawPath))\n            .replace(EXTRA_PARENT_PATHS_RE, '');\n      }\n    } else {\n      simplifiedPath = simplifiedPath\n          && simplifiedPath.replace(EXTRA_PARENT_PATHS_RE, '');\n      if (simplifiedPath !== rawPath) {\n        absoluteUri.setRawPath(simplifiedPath);\n      }\n    }\n  }\n\n  if (overridden) {\n    absoluteUri.setRawPath(simplifiedPath);\n  } else {\n    overridden = relativeUri.hasQuery();\n  }\n\n  if (overridden) {\n    absoluteUri.setRawQuery(relativeUri.getRawQuery());\n  } else {\n    overridden = relativeUri.hasFragment();\n  }\n\n  if (overridden) {\n    absoluteUri.setRawFragment(relativeUri.getRawFragment());\n  }\n\n  return absoluteUri;\n}\n\n/**\n * a mutable URI.\n *\n * This class contains setters and getters for the parts of the URI.\n * The <tt>getXYZ</tt>/<tt>setXYZ</tt> methods return the decoded part -- so\n * <code>uri.parse('/foo%20bar').getPath()</code> will return the decoded path,\n * <tt>/foo bar</tt>.\n *\n * <p>The raw versions of fields are available too.\n * <code>uri.parse('/foo%20bar').getRawPath()</code> will return the raw path,\n * <tt>/foo%20bar</tt>.  Use the raw setters with care, since\n * <code>URI::toString</code> is not guaranteed to return a valid url if a\n * raw setter was used.\n *\n * <p>All setters return <tt>this</tt> and so may be chained, a la\n * <code>uri.parse('/foo').setFragment('part').toString()</code>.\n *\n * <p>You should not use this constructor directly -- please prefer the factory\n * functions {@link uri.parse}, {@link uri.create}, {@link uri.resolve}\n * instead.</p>\n *\n * <p>The parameters are all raw (assumed to be properly escaped) parts, and\n * any (but not all) may be null.  Undefined is not allowed.</p>\n *\n * @constructor\n */\nfunction URI(\n    rawScheme,\n    rawCredentials, rawDomain, port,\n    rawPath, rawQuery, rawFragment) {\n  this.scheme_ = rawScheme;\n  this.credentials_ = rawCredentials;\n  this.domain_ = rawDomain;\n  this.port_ = port;\n  this.path_ = rawPath;\n  this.query_ = rawQuery;\n  this.fragment_ = rawFragment;\n  /**\n   * @type {Array|null}\n   */\n  this.paramCache_ = null;\n}\n\n/** returns the string form of the url. */\nURI.prototype.toString = function () {\n  var out = [];\n  if (null !== this.scheme_) { out.push(this.scheme_, ':'); }\n  if (null !== this.domain_) {\n    out.push('//');\n    if (null !== this.credentials_) { out.push(this.credentials_, '@'); }\n    out.push(this.domain_);\n    if (null !== this.port_) { out.push(':', this.port_.toString()); }\n  }\n  if (null !== this.path_) { out.push(this.path_); }\n  if (null !== this.query_) { out.push('?', this.query_); }\n  if (null !== this.fragment_) { out.push('#', this.fragment_); }\n  return out.join('');\n};\n\nURI.prototype.clone = function () {\n  return new URI(this.scheme_, this.credentials_, this.domain_, this.port_,\n                 this.path_, this.query_, this.fragment_);\n};\n\nURI.prototype.getScheme = function () {\n  // HTML5 spec does not require the scheme to be lowercased but\n  // all common browsers except Safari lowercase the scheme.\n  return this.scheme_ && decodeURIComponent(this.scheme_).toLowerCase();\n};\nURI.prototype.getRawScheme = function () {\n  return this.scheme_;\n};\nURI.prototype.setScheme = function (newScheme) {\n  this.scheme_ = encodeIfExists2(\n      newScheme, URI_DISALLOWED_IN_SCHEME_OR_CREDENTIALS_);\n  return this;\n};\nURI.prototype.setRawScheme = function (newScheme) {\n  this.scheme_ = newScheme ? newScheme : null;\n  return this;\n};\nURI.prototype.hasScheme = function () {\n  return null !== this.scheme_;\n};\n\n\nURI.prototype.getCredentials = function () {\n  return this.credentials_ && decodeURIComponent(this.credentials_);\n};\nURI.prototype.getRawCredentials = function () {\n  return this.credentials_;\n};\nURI.prototype.setCredentials = function (newCredentials) {\n  this.credentials_ = encodeIfExists2(\n      newCredentials, URI_DISALLOWED_IN_SCHEME_OR_CREDENTIALS_);\n\n  return this;\n};\nURI.prototype.setRawCredentials = function (newCredentials) {\n  this.credentials_ = newCredentials ? newCredentials : null;\n  return this;\n};\nURI.prototype.hasCredentials = function () {\n  return null !== this.credentials_;\n};\n\n\nURI.prototype.getDomain = function () {\n  return this.domain_ && decodeURIComponent(this.domain_);\n};\nURI.prototype.getRawDomain = function () {\n  return this.domain_;\n};\nURI.prototype.setDomain = function (newDomain) {\n  return this.setRawDomain(newDomain && encodeURIComponent(newDomain));\n};\nURI.prototype.setRawDomain = function (newDomain) {\n  this.domain_ = newDomain ? newDomain : null;\n  // Maintain the invariant that paths must start with a slash when the URI\n  // is not path-relative.\n  return this.setRawPath(this.path_);\n};\nURI.prototype.hasDomain = function () {\n  return null !== this.domain_;\n};\n\n\nURI.prototype.getPort = function () {\n  return this.port_ && decodeURIComponent(this.port_);\n};\nURI.prototype.setPort = function (newPort) {\n  if (newPort) {\n    newPort = Number(newPort);\n    if (newPort !== (newPort & 0xffff)) {\n      throw new Error('Bad port number ' + newPort);\n    }\n    this.port_ = '' + newPort;\n  } else {\n    this.port_ = null;\n  }\n  return this;\n};\nURI.prototype.hasPort = function () {\n  return null !== this.port_;\n};\n\n\nURI.prototype.getPath = function () {\n  return this.path_ && decodeURIComponent(this.path_);\n};\nURI.prototype.getRawPath = function () {\n  return this.path_;\n};\nURI.prototype.setPath = function (newPath) {\n  return this.setRawPath(encodeIfExists2(newPath, URI_DISALLOWED_IN_PATH_));\n};\nURI.prototype.setRawPath = function (newPath) {\n  if (newPath) {\n    newPath = String(newPath);\n    this.path_ =\n      // Paths must start with '/' unless this is a path-relative URL.\n      (!this.domain_ || /^\\//.test(newPath)) ? newPath : '/' + newPath;\n  } else {\n    this.path_ = null;\n  }\n  return this;\n};\nURI.prototype.hasPath = function () {\n  return null !== this.path_;\n};\n\n\nURI.prototype.getQuery = function () {\n  // From http://www.w3.org/Addressing/URL/4_URI_Recommentations.html\n  // Within the query string, the plus sign is reserved as shorthand notation\n  // for a space.\n  return this.query_ && decodeURIComponent(this.query_).replace(/\\+/g, ' ');\n};\nURI.prototype.getRawQuery = function () {\n  return this.query_;\n};\nURI.prototype.setQuery = function (newQuery) {\n  this.paramCache_ = null;\n  this.query_ = encodeIfExists(newQuery);\n  return this;\n};\nURI.prototype.setRawQuery = function (newQuery) {\n  this.paramCache_ = null;\n  this.query_ = newQuery ? newQuery : null;\n  return this;\n};\nURI.prototype.hasQuery = function () {\n  return null !== this.query_;\n};\n\n/**\n * sets the query given a list of strings of the form\n * [ key0, value0, key1, value1, ... ].\n *\n * <p><code>uri.setAllParameters(['a', 'b', 'c', 'd']).getQuery()</code>\n * will yield <code>'a=b&c=d'</code>.\n */\nURI.prototype.setAllParameters = function (params) {\n  if (typeof params === 'object') {\n    if (!(params instanceof Array)\n        && (params instanceof Object\n            || Object.prototype.toString.call(params) !== '[object Array]')) {\n      var newParams = [];\n      var i = -1;\n      for (var k in params) {\n        var v = params[k];\n        if ('string' === typeof v) {\n          newParams[++i] = k;\n          newParams[++i] = v;\n        }\n      }\n      params = newParams;\n    }\n  }\n  this.paramCache_ = null;\n  var queryBuf = [];\n  var separator = '';\n  for (var j = 0; j < params.length;) {\n    var k = params[j++];\n    var v = params[j++];\n    queryBuf.push(separator, encodeURIComponent(k.toString()));\n    separator = '&';\n    if (v) {\n      queryBuf.push('=', encodeURIComponent(v.toString()));\n    }\n  }\n  this.query_ = queryBuf.join('');\n  return this;\n};\nURI.prototype.checkParameterCache_ = function () {\n  if (!this.paramCache_) {\n    var q = this.query_;\n    if (!q) {\n      this.paramCache_ = [];\n    } else {\n      var cgiParams = q.split(/[&\\?]/);\n      var out = [];\n      var k = -1;\n      for (var i = 0; i < cgiParams.length; ++i) {\n        var m = cgiParams[i].match(/^([^=]*)(?:=(.*))?$/);\n        // From http://www.w3.org/Addressing/URL/4_URI_Recommentations.html\n        // Within the query string, the plus sign is reserved as shorthand\n        // notation for a space.\n        out[++k] = decodeURIComponent(m[1]).replace(/\\+/g, ' ');\n        out[++k] = decodeURIComponent(m[2] || '').replace(/\\+/g, ' ');\n      }\n      this.paramCache_ = out;\n    }\n  }\n};\n/**\n * sets the values of the named cgi parameters.\n *\n * <p>So, <code>uri.parse('foo?a=b&c=d&e=f').setParameterValues('c', ['new'])\n * </code> yields <tt>foo?a=b&c=new&e=f</tt>.</p>\n *\n * @param key {string}\n * @param values {Array.<string>} the new values.  If values is a single string\n *   then it will be treated as the sole value.\n */\nURI.prototype.setParameterValues = function (key, values) {\n  // be nice and avoid subtle bugs where [] operator on string performs charAt\n  // on some browsers and crashes on IE\n  if (typeof values === 'string') {\n    values = [ values ];\n  }\n\n  this.checkParameterCache_();\n  var newValueIndex = 0;\n  var pc = this.paramCache_;\n  var params = [];\n  for (var i = 0, k = 0; i < pc.length; i += 2) {\n    if (key === pc[i]) {\n      if (newValueIndex < values.length) {\n        params.push(key, values[newValueIndex++]);\n      }\n    } else {\n      params.push(pc[i], pc[i + 1]);\n    }\n  }\n  while (newValueIndex < values.length) {\n    params.push(key, values[newValueIndex++]);\n  }\n  this.setAllParameters(params);\n  return this;\n};\nURI.prototype.removeParameter = function (key) {\n  return this.setParameterValues(key, []);\n};\n/**\n * returns the parameters specified in the query part of the uri as a list of\n * keys and values like [ key0, value0, key1, value1, ... ].\n *\n * @return {Array.<string>}\n */\nURI.prototype.getAllParameters = function () {\n  this.checkParameterCache_();\n  return this.paramCache_.slice(0, this.paramCache_.length);\n};\n/**\n * returns the value<b>s</b> for a given cgi parameter as a list of decoded\n * query parameter values.\n * @return {Array.<string>}\n */\nURI.prototype.getParameterValues = function (paramNameUnescaped) {\n  this.checkParameterCache_();\n  var values = [];\n  for (var i = 0; i < this.paramCache_.length; i += 2) {\n    if (paramNameUnescaped === this.paramCache_[i]) {\n      values.push(this.paramCache_[i + 1]);\n    }\n  }\n  return values;\n};\n/**\n * returns a map of cgi parameter names to (non-empty) lists of values.\n * @return {Object.<string,Array.<string>>}\n */\nURI.prototype.getParameterMap = function (paramNameUnescaped) {\n  this.checkParameterCache_();\n  var paramMap = {};\n  for (var i = 0; i < this.paramCache_.length; i += 2) {\n    var key = this.paramCache_[i++],\n      value = this.paramCache_[i++];\n    if (!(key in paramMap)) {\n      paramMap[key] = [value];\n    } else {\n      paramMap[key].push(value);\n    }\n  }\n  return paramMap;\n};\n/**\n * returns the first value for a given cgi parameter or null if the given\n * parameter name does not appear in the query string.\n * If the given parameter name does appear, but has no '<tt>=</tt>' following\n * it, then the empty string will be returned.\n * @return {string|null}\n */\nURI.prototype.getParameterValue = function (paramNameUnescaped) {\n  this.checkParameterCache_();\n  for (var i = 0; i < this.paramCache_.length; i += 2) {\n    if (paramNameUnescaped === this.paramCache_[i]) {\n      return this.paramCache_[i + 1];\n    }\n  }\n  return null;\n};\n\nURI.prototype.getFragment = function () {\n  return this.fragment_ && decodeURIComponent(this.fragment_);\n};\nURI.prototype.getRawFragment = function () {\n  return this.fragment_;\n};\nURI.prototype.setFragment = function (newFragment) {\n  this.fragment_ = newFragment ? encodeURIComponent(newFragment) : null;\n  return this;\n};\nURI.prototype.setRawFragment = function (newFragment) {\n  this.fragment_ = newFragment ? newFragment : null;\n  return this;\n};\nURI.prototype.hasFragment = function () {\n  return null !== this.fragment_;\n};\n\nfunction nullIfAbsent(matchPart) {\n  return ('string' == typeof matchPart) && (matchPart.length > 0)\n         ? matchPart\n         : null;\n}\n\n\n\n\n/**\n * a regular expression for breaking a URI into its component parts.\n *\n * <p>http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234 says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * <p>The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * <p>The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * <p>msamuel: I have modified the regular expression slightly to expose the\n * credentials, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       credentials -\\\n *    $3 = www.ics.uci.edu   domain       | authority\n *    $4 = <undefined>       port        -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n */\nvar URI_RE_ = new RegExp(\n      \"^\" +\n      \"(?:\" +\n        \"([^:/?#]+)\" +         // scheme\n      \":)?\" +\n      \"(?://\" +\n        \"(?:([^/?#]*)@)?\" +    // credentials\n        \"([^/?#:@]*)\" +        // domain\n        \"(?::([0-9]+))?\" +     // port\n      \")?\" +\n      \"([^?#]+)?\" +            // path\n      \"(?:\\\\?([^#]*))?\" +      // query\n      \"(?:#(.*))?\" +           // fragment\n      \"$\"\n      );\n\nvar URI_DISALLOWED_IN_SCHEME_OR_CREDENTIALS_ = /[#\\/\\?@]/g;\nvar URI_DISALLOWED_IN_PATH_ = /[\\#\\?]/g;\n\nURI.parse = parse;\nURI.create = create;\nURI.resolve = resolve;\nURI.collapse_dots = collapse_dots;  // Visible for testing.\n\n// lightweight string-based api for loadModuleMaker\nURI.utils = {\n  mimeTypeOf: function (uri) {\n    var uriObj = parse(uri);\n    if (/\\.html$/.test(uriObj.getPath())) {\n      return 'text/html';\n    } else {\n      return 'application/javascript';\n    }\n  },\n  resolve: function (base, uri) {\n    if (base) {\n      return resolve(parse(base), parse(uri)).toString();\n    } else {\n      return '' + uri;\n    }\n  }\n};\n\n\nreturn URI;\n})();\n\n// Exports for closure compiler.\nif (typeof window !== 'undefined') {\n}\n;\n// Copyright Google Inc.\n// Licensed under the Apache Licence Version 2.0\n// Autogenerated at Fri Jan 12 11:48:14 PST 2018\n// @overrides window\n// @provides html4\nvar html4 = {};\nhtml4.atype = {\n  'NONE': 0,\n  'URI': 1,\n  'URI_FRAGMENT': 11,\n  'SCRIPT': 2,\n  'STYLE': 3,\n  'HTML': 12,\n  'ID': 4,\n  'IDREF': 5,\n  'IDREFS': 6,\n  'GLOBAL_NAME': 7,\n  'LOCAL_NAME': 8,\n  'CLASSES': 9,\n  'FRAME_TARGET': 10,\n  'MEDIA_QUERY': 13\n};\nhtml4[ 'atype' ] = html4.atype;\nhtml4.ATTRIBS = {\n  '*::class': 9,\n  '*::dir': 0,\n  '*::draggable': 0,\n  '*::hidden': 0,\n  '*::id': 4,\n  '*::inert': 0,\n  '*::itemprop': 0,\n  '*::itemref': 6,\n  '*::itemscope': 0,\n  '*::lang': 0,\n  '*::onblur': 2,\n  '*::onchange': 2,\n  '*::onclick': 2,\n  '*::ondblclick': 2,\n  '*::onerror': 2,\n  '*::onfocus': 2,\n  '*::onkeydown': 2,\n  '*::onkeypress': 2,\n  '*::onkeyup': 2,\n  '*::onload': 2,\n  '*::onmousedown': 2,\n  '*::onmousemove': 2,\n  '*::onmouseout': 2,\n  '*::onmouseover': 2,\n  '*::onmouseup': 2,\n  '*::onreset': 2,\n  '*::onscroll': 2,\n  '*::onselect': 2,\n  '*::onsubmit': 2,\n  '*::ontouchcancel': 2,\n  '*::ontouchend': 2,\n  '*::ontouchenter': 2,\n  '*::ontouchleave': 2,\n  '*::ontouchmove': 2,\n  '*::ontouchstart': 2,\n  '*::onunload': 2,\n  '*::spellcheck': 0,\n  '*::style': 3,\n  '*::tabindex': 0,\n  '*::title': 0,\n  '*::translate': 0,\n  'a::accesskey': 0,\n  'a::coords': 0,\n  'a::href': 1,\n  'a::hreflang': 0,\n  'a::name': 7,\n  'a::onblur': 2,\n  'a::onfocus': 2,\n  'a::shape': 0,\n  'a::target': 10,\n  'a::type': 0,\n  'area::accesskey': 0,\n  'area::alt': 0,\n  'area::coords': 0,\n  'area::href': 1,\n  'area::nohref': 0,\n  'area::onblur': 2,\n  'area::onfocus': 2,\n  'area::shape': 0,\n  'area::target': 10,\n  'audio::controls': 0,\n  'audio::loop': 0,\n  'audio::mediagroup': 5,\n  'audio::muted': 0,\n  'audio::preload': 0,\n  'audio::src': 1,\n  'bdo::dir': 0,\n  'blockquote::cite': 1,\n  'br::clear': 0,\n  'button::accesskey': 0,\n  'button::disabled': 0,\n  'button::name': 8,\n  'button::onblur': 2,\n  'button::onfocus': 2,\n  'button::type': 0,\n  'button::value': 0,\n  'canvas::height': 0,\n  'canvas::width': 0,\n  'caption::align': 0,\n  'col::align': 0,\n  'col::char': 0,\n  'col::charoff': 0,\n  'col::span': 0,\n  'col::valign': 0,\n  'col::width': 0,\n  'colgroup::align': 0,\n  'colgroup::char': 0,\n  'colgroup::charoff': 0,\n  'colgroup::span': 0,\n  'colgroup::valign': 0,\n  'colgroup::width': 0,\n  'command::checked': 0,\n  'command::command': 5,\n  'command::disabled': 0,\n  'command::icon': 1,\n  'command::label': 0,\n  'command::radiogroup': 0,\n  'command::type': 0,\n  'data::value': 0,\n  'del::cite': 1,\n  'del::datetime': 0,\n  'details::open': 0,\n  'dir::compact': 0,\n  'div::align': 0,\n  'dl::compact': 0,\n  'fieldset::disabled': 0,\n  'font::color': 0,\n  'font::face': 0,\n  'font::size': 0,\n  'form::accept': 0,\n  'form::action': 1,\n  'form::autocomplete': 0,\n  'form::enctype': 0,\n  'form::method': 0,\n  'form::name': 7,\n  'form::novalidate': 0,\n  'form::onreset': 2,\n  'form::onsubmit': 2,\n  'form::target': 10,\n  'h1::align': 0,\n  'h2::align': 0,\n  'h3::align': 0,\n  'h4::align': 0,\n  'h5::align': 0,\n  'h6::align': 0,\n  'hr::align': 0,\n  'hr::noshade': 0,\n  'hr::size': 0,\n  'hr::width': 0,\n  'iframe::align': 0,\n  'iframe::frameborder': 0,\n  'iframe::height': 0,\n  'iframe::marginheight': 0,\n  'iframe::marginwidth': 0,\n  'iframe::width': 0,\n  'img::align': 0,\n  'img::alt': 0,\n  'img::border': 0,\n  'img::height': 0,\n  'img::hspace': 0,\n  'img::ismap': 0,\n  'img::name': 7,\n  'img::src': 1,\n  'img::usemap': 11,\n  'img::vspace': 0,\n  'img::width': 0,\n  'input::accept': 0,\n  'input::accesskey': 0,\n  'input::align': 0,\n  'input::alt': 0,\n  'input::autocomplete': 0,\n  'input::checked': 0,\n  'input::disabled': 0,\n  'input::inputmode': 0,\n  'input::ismap': 0,\n  'input::list': 5,\n  'input::max': 0,\n  'input::maxlength': 0,\n  'input::min': 0,\n  'input::multiple': 0,\n  'input::name': 8,\n  'input::onblur': 2,\n  'input::onchange': 2,\n  'input::onfocus': 2,\n  'input::onselect': 2,\n  'input::pattern': 0,\n  'input::placeholder': 0,\n  'input::readonly': 0,\n  'input::required': 0,\n  'input::size': 0,\n  'input::src': 1,\n  'input::step': 0,\n  'input::type': 0,\n  'input::usemap': 11,\n  'input::value': 0,\n  'ins::cite': 1,\n  'ins::datetime': 0,\n  'label::accesskey': 0,\n  'label::for': 5,\n  'label::onblur': 2,\n  'label::onfocus': 2,\n  'legend::accesskey': 0,\n  'legend::align': 0,\n  'li::type': 0,\n  'li::value': 0,\n  'map::name': 7,\n  'menu::compact': 0,\n  'menu::label': 0,\n  'menu::type': 0,\n  'meter::high': 0,\n  'meter::low': 0,\n  'meter::max': 0,\n  'meter::min': 0,\n  'meter::optimum': 0,\n  'meter::value': 0,\n  'ol::compact': 0,\n  'ol::reversed': 0,\n  'ol::start': 0,\n  'ol::type': 0,\n  'optgroup::disabled': 0,\n  'optgroup::label': 0,\n  'option::disabled': 0,\n  'option::label': 0,\n  'option::selected': 0,\n  'option::value': 0,\n  'output::for': 6,\n  'output::name': 8,\n  'p::align': 0,\n  'pre::width': 0,\n  'progress::max': 0,\n  'progress::min': 0,\n  'progress::value': 0,\n  'q::cite': 1,\n  'select::autocomplete': 0,\n  'select::disabled': 0,\n  'select::multiple': 0,\n  'select::name': 8,\n  'select::onblur': 2,\n  'select::onchange': 2,\n  'select::onfocus': 2,\n  'select::required': 0,\n  'select::size': 0,\n  'source::src': 1,\n  'source::type': 0,\n  'table::align': 0,\n  'table::bgcolor': 0,\n  'table::border': 0,\n  'table::cellpadding': 0,\n  'table::cellspacing': 0,\n  'table::frame': 0,\n  'table::rules': 0,\n  'table::summary': 0,\n  'table::width': 0,\n  'tbody::align': 0,\n  'tbody::char': 0,\n  'tbody::charoff': 0,\n  'tbody::valign': 0,\n  'td::abbr': 0,\n  'td::align': 0,\n  'td::axis': 0,\n  'td::bgcolor': 0,\n  'td::char': 0,\n  'td::charoff': 0,\n  'td::colspan': 0,\n  'td::headers': 6,\n  'td::height': 0,\n  'td::nowrap': 0,\n  'td::rowspan': 0,\n  'td::scope': 0,\n  'td::valign': 0,\n  'td::width': 0,\n  'template::type': 0,\n  'textarea::accesskey': 0,\n  'textarea::autocomplete': 0,\n  'textarea::cols': 0,\n  'textarea::disabled': 0,\n  'textarea::inputmode': 0,\n  'textarea::name': 8,\n  'textarea::onblur': 2,\n  'textarea::onchange': 2,\n  'textarea::onfocus': 2,\n  'textarea::onselect': 2,\n  'textarea::placeholder': 0,\n  'textarea::readonly': 0,\n  'textarea::required': 0,\n  'textarea::rows': 0,\n  'textarea::wrap': 0,\n  'tfoot::align': 0,\n  'tfoot::char': 0,\n  'tfoot::charoff': 0,\n  'tfoot::valign': 0,\n  'th::abbr': 0,\n  'th::align': 0,\n  'th::axis': 0,\n  'th::bgcolor': 0,\n  'th::char': 0,\n  'th::charoff': 0,\n  'th::colspan': 0,\n  'th::headers': 6,\n  'th::height': 0,\n  'th::nowrap': 0,\n  'th::rowspan': 0,\n  'th::scope': 0,\n  'th::valign': 0,\n  'th::width': 0,\n  'thead::align': 0,\n  'thead::char': 0,\n  'thead::charoff': 0,\n  'thead::valign': 0,\n  'tr::align': 0,\n  'tr::bgcolor': 0,\n  'tr::char': 0,\n  'tr::charoff': 0,\n  'tr::valign': 0,\n  'track::default': 0,\n  'track::kind': 0,\n  'track::label': 0,\n  'track::srclang': 0,\n  'ul::compact': 0,\n  'ul::type': 0,\n  'video::controls': 0,\n  'video::height': 0,\n  'video::loop': 0,\n  'video::mediagroup': 5,\n  'video::muted': 0,\n  'video::poster': 1,\n  'video::preload': 0,\n  'video::src': 1,\n  'video::width': 0\n};\nhtml4[ 'ATTRIBS' ] = html4.ATTRIBS;\nhtml4.eflags = {\n  'OPTIONAL_ENDTAG': 1,\n  'EMPTY': 2,\n  'CDATA': 4,\n  'RCDATA': 8,\n  'UNSAFE': 16,\n  'FOLDABLE': 32,\n  'SCRIPT': 64,\n  'STYLE': 128,\n  'VIRTUALIZED': 256\n};\nhtml4[ 'eflags' ] = html4.eflags;\nhtml4.ELEMENTS = {\n  'a': 0,\n  'abbr': 0,\n  'acronym': 0,\n  'address': 0,\n  'applet': 272,\n  'area': 2,\n  'article': 0,\n  'aside': 0,\n  'audio': 0,\n  'b': 0,\n  'base': 274,\n  'basefont': 274,\n  'bdi': 0,\n  'bdo': 0,\n  'big': 0,\n  'blockquote': 0,\n  'body': 305,\n  'br': 2,\n  'button': 0,\n  'canvas': 0,\n  'caption': 0,\n  'center': 0,\n  'cite': 0,\n  'code': 0,\n  'col': 2,\n  'colgroup': 1,\n  'command': 2,\n  'data': 0,\n  'datalist': 0,\n  'dd': 1,\n  'del': 0,\n  'details': 0,\n  'dfn': 0,\n  'dialog': 272,\n  'dir': 0,\n  'div': 0,\n  'dl': 0,\n  'dt': 1,\n  'em': 0,\n  'fieldset': 0,\n  'figcaption': 0,\n  'figure': 0,\n  'font': 0,\n  'footer': 0,\n  'form': 0,\n  'frame': 274,\n  'frameset': 272,\n  'h1': 0,\n  'h2': 0,\n  'h3': 0,\n  'h4': 0,\n  'h5': 0,\n  'h6': 0,\n  'head': 305,\n  'header': 0,\n  'hgroup': 0,\n  'hr': 2,\n  'html': 305,\n  'i': 0,\n  'iframe': 4,\n  'img': 2,\n  'input': 2,\n  'ins': 0,\n  'isindex': 274,\n  'kbd': 0,\n  'keygen': 274,\n  'label': 0,\n  'legend': 0,\n  'li': 1,\n  'link': 274,\n  'map': 0,\n  'mark': 0,\n  'menu': 0,\n  'meta': 274,\n  'meter': 0,\n  'nav': 0,\n  'nobr': 0,\n  'noembed': 276,\n  'noframes': 276,\n  'noscript': 276,\n  'object': 272,\n  'ol': 0,\n  'optgroup': 0,\n  'option': 1,\n  'output': 0,\n  'p': 1,\n  'param': 274,\n  'pre': 0,\n  'progress': 0,\n  'q': 0,\n  's': 0,\n  'samp': 0,\n  'script': 84,\n  'section': 0,\n  'select': 0,\n  'small': 0,\n  'source': 2,\n  'span': 0,\n  'strike': 0,\n  'strong': 0,\n  'style': 148,\n  'sub': 0,\n  'summary': 0,\n  'sup': 0,\n  'table': 0,\n  'tbody': 1,\n  'td': 1,\n  'template': 4,\n  'textarea': 8,\n  'tfoot': 1,\n  'th': 1,\n  'thead': 1,\n  'time': 0,\n  'title': 280,\n  'tr': 1,\n  'track': 2,\n  'tt': 0,\n  'u': 0,\n  'ul': 0,\n  'var': 0,\n  'video': 0,\n  'wbr': 2\n};\nhtml4[ 'ELEMENTS' ] = html4.ELEMENTS;\nhtml4.ELEMENT_DOM_INTERFACES = {\n  'a': 'HTMLAnchorElement',\n  'abbr': 'HTMLElement',\n  'acronym': 'HTMLElement',\n  'address': 'HTMLElement',\n  'applet': 'HTMLAppletElement',\n  'area': 'HTMLAreaElement',\n  'article': 'HTMLElement',\n  'aside': 'HTMLElement',\n  'audio': 'HTMLAudioElement',\n  'b': 'HTMLElement',\n  'base': 'HTMLBaseElement',\n  'basefont': 'HTMLBaseFontElement',\n  'bdi': 'HTMLElement',\n  'bdo': 'HTMLElement',\n  'big': 'HTMLElement',\n  'blockquote': 'HTMLQuoteElement',\n  'body': 'HTMLBodyElement',\n  'br': 'HTMLBRElement',\n  'button': 'HTMLButtonElement',\n  'canvas': 'HTMLCanvasElement',\n  'caption': 'HTMLTableCaptionElement',\n  'center': 'HTMLElement',\n  'cite': 'HTMLElement',\n  'code': 'HTMLElement',\n  'col': 'HTMLTableColElement',\n  'colgroup': 'HTMLTableColElement',\n  'command': 'HTMLCommandElement',\n  'data': 'HTMLElement',\n  'datalist': 'HTMLDataListElement',\n  'dd': 'HTMLElement',\n  'del': 'HTMLModElement',\n  'details': 'HTMLDetailsElement',\n  'dfn': 'HTMLElement',\n  'dialog': 'HTMLDialogElement',\n  'dir': 'HTMLDirectoryElement',\n  'div': 'HTMLDivElement',\n  'dl': 'HTMLDListElement',\n  'dt': 'HTMLElement',\n  'em': 'HTMLElement',\n  'fieldset': 'HTMLFieldSetElement',\n  'figcaption': 'HTMLElement',\n  'figure': 'HTMLElement',\n  'font': 'HTMLFontElement',\n  'footer': 'HTMLElement',\n  'form': 'HTMLFormElement',\n  'frame': 'HTMLFrameElement',\n  'frameset': 'HTMLFrameSetElement',\n  'h1': 'HTMLHeadingElement',\n  'h2': 'HTMLHeadingElement',\n  'h3': 'HTMLHeadingElement',\n  'h4': 'HTMLHeadingElement',\n  'h5': 'HTMLHeadingElement',\n  'h6': 'HTMLHeadingElement',\n  'head': 'HTMLHeadElement',\n  'header': 'HTMLElement',\n  'hgroup': 'HTMLElement',\n  'hr': 'HTMLHRElement',\n  'html': 'HTMLHtmlElement',\n  'i': 'HTMLElement',\n  'iframe': 'HTMLIFrameElement',\n  'img': 'HTMLImageElement',\n  'input': 'HTMLInputElement',\n  'ins': 'HTMLModElement',\n  'isindex': 'HTMLUnknownElement',\n  'kbd': 'HTMLElement',\n  'keygen': 'HTMLKeygenElement',\n  'label': 'HTMLLabelElement',\n  'legend': 'HTMLLegendElement',\n  'li': 'HTMLLIElement',\n  'link': 'HTMLLinkElement',\n  'map': 'HTMLMapElement',\n  'mark': 'HTMLElement',\n  'menu': 'HTMLMenuElement',\n  'meta': 'HTMLMetaElement',\n  'meter': 'HTMLMeterElement',\n  'nav': 'HTMLElement',\n  'nobr': 'HTMLElement',\n  'noembed': 'HTMLElement',\n  'noframes': 'HTMLElement',\n  'noscript': 'HTMLElement',\n  'object': 'HTMLObjectElement',\n  'ol': 'HTMLOListElement',\n  'optgroup': 'HTMLOptGroupElement',\n  'option': 'HTMLOptionElement',\n  'output': 'HTMLOutputElement',\n  'p': 'HTMLParagraphElement',\n  'param': 'HTMLParamElement',\n  'pre': 'HTMLPreElement',\n  'progress': 'HTMLProgressElement',\n  'q': 'HTMLQuoteElement',\n  's': 'HTMLElement',\n  'samp': 'HTMLElement',\n  'script': 'HTMLScriptElement',\n  'section': 'HTMLElement',\n  'select': 'HTMLSelectElement',\n  'small': 'HTMLElement',\n  'source': 'HTMLSourceElement',\n  'span': 'HTMLSpanElement',\n  'strike': 'HTMLElement',\n  'strong': 'HTMLElement',\n  'style': 'HTMLStyleElement',\n  'sub': 'HTMLElement',\n  'summary': 'HTMLElement',\n  'sup': 'HTMLElement',\n  'table': 'HTMLTableElement',\n  'tbody': 'HTMLTableSectionElement',\n  'td': 'HTMLTableDataCellElement',\n  'template': 'HTMLTemplateElement',\n  'textarea': 'HTMLTextAreaElement',\n  'tfoot': 'HTMLTableSectionElement',\n  'th': 'HTMLTableHeaderCellElement',\n  'thead': 'HTMLTableSectionElement',\n  'time': 'HTMLTimeElement',\n  'title': 'HTMLTitleElement',\n  'tr': 'HTMLTableRowElement',\n  'track': 'HTMLTrackElement',\n  'tt': 'HTMLElement',\n  'u': 'HTMLElement',\n  'ul': 'HTMLUListElement',\n  'var': 'HTMLElement',\n  'video': 'HTMLVideoElement',\n  'wbr': 'HTMLElement'\n};\nhtml4[ 'ELEMENT_DOM_INTERFACES' ] = html4.ELEMENT_DOM_INTERFACES;\nhtml4.ueffects = {\n  'NOT_LOADED': 0,\n  'SAME_DOCUMENT': 1,\n  'NEW_DOCUMENT': 2\n};\nhtml4[ 'ueffects' ] = html4.ueffects;\nhtml4.URIEFFECTS = {\n  'a::href': 2,\n  'area::href': 2,\n  'audio::src': 1,\n  'blockquote::cite': 0,\n  'command::icon': 1,\n  'del::cite': 0,\n  'form::action': 2,\n  'img::src': 1,\n  'input::src': 1,\n  'ins::cite': 0,\n  'q::cite': 0,\n  'video::poster': 1,\n  'video::src': 1\n};\nhtml4[ 'URIEFFECTS' ] = html4.URIEFFECTS;\nhtml4.ltypes = {\n  'UNSANDBOXED': 2,\n  'SANDBOXED': 1,\n  'DATA': 0\n};\nhtml4[ 'ltypes' ] = html4.ltypes;\nhtml4.LOADERTYPES = {\n  'a::href': 2,\n  'area::href': 2,\n  'audio::src': 2,\n  'blockquote::cite': 2,\n  'command::icon': 1,\n  'del::cite': 2,\n  'form::action': 2,\n  'img::src': 1,\n  'input::src': 1,\n  'ins::cite': 2,\n  'q::cite': 2,\n  'video::poster': 1,\n  'video::src': 2\n};\nhtml4[ 'LOADERTYPES' ] = html4.LOADERTYPES;\n// export for Closure Compiler\nif (typeof window !== 'undefined') {\n}\n;\n// Copyright (C) 2006 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview\n * An HTML sanitizer that can satisfy a variety of security policies.\n *\n * <p>\n * The HTML sanitizer is built around a SAX parser and HTML element and\n * attributes schemas.\n *\n * If the cssparser is loaded, inline styles are sanitized using the\n * css property and value schemas.  Else they are remove during\n * sanitization.\n *\n * If it exists, uses parseCssDeclarations, sanitizeCssProperty,  cssSchema\n *\n * @author mikesamuel@gmail.com\n * @author jasvir@gmail.com\n * \\@requires html4, URI\n * \\@overrides window\n * \\@provides html, html_sanitize, defs\n */\n\n// The Turkish i seems to be a non-issue, but abort in case it is.\nif ('I'.toLowerCase() !== 'i') { throw 'I/i problem'; }\n\n// TODO(kpreid): Refactor so there is no global introduced by these type\n// definitions.\n\n/**\n * Contains types related to sanitizer policies.\n * \\@namespace\n */\nvar defs = {};\n\n/**\n * A decision about what to do with a tag.\n * @typedef {{ 'attribs': ?Array.<string>, 'tagName': ?string }}\n */\ndefs.TagPolicyDecision;\n\n/**\n * A function that takes a tag name (canonical) and an array of attributes\n * and decides what to do, returning null to indicate the tag should be dropped\n * entirely from the output.\n *\n * @typedef {function(string, Array.<string>): ?defs.TagPolicyDecision}\n */\ndefs.TagPolicy;\n\n\n/**\n * \\@namespace\n */\nvar html = (function(html4) {\n\n  // For closure compiler\n  var parseCssDeclarations, sanitizeCssProperty, cssSchema;\n  if ('undefined' !== typeof window) {\n    parseCssDeclarations = window['parseCssDeclarations'];\n    sanitizeCssProperty = window['sanitizeCssProperty'];\n    cssSchema = window['cssSchema'];\n  }\n\n  // The keys of this object must be 'quoted' or JSCompiler will mangle them!\n  // This is a partial list -- lookupEntity() uses the host browser's parser\n  // (when available) to implement full entity lookup.\n  // Note that entities are in general case-sensitive; the uppercase ones are\n  // explicitly defined by HTML5 (presumably as compatibility).\n  var ENTITIES = {\n    'lt': '<',\n    'LT': '<',\n    'gt': '>',\n    'GT': '>',\n    'amp': '&',\n    'AMP': '&',\n    'quot': '\"',\n    'apos': '\\'',\n    'nbsp': '\\u00A0'\n  };\n\n  // Patterns for types of entity/character reference names.\n  var decimalEscapeRe = /^#(\\d+)$/;\n  var hexEscapeRe = /^#x([0-9A-Fa-f]+)$/;\n  // contains every entity per http://www.w3.org/TR/2011/WD-html5-20110113/named-character-references.html\n  var safeEntityNameRe = /^[A-Za-z][A-Za-z0-9]+$/;\n  // Used as a hook to invoke the browser's entity parsing. <textarea> is used\n  // because its content is parsed for entities but not tags.\n  // TODO(kpreid): This retrieval is a kludge and leads to silent loss of\n  // functionality if the document isn't available.\n  var entityLookupElement =\n      ('undefined' !== typeof window && window['document'])\n          ? window['document'].createElement('textarea') : null;\n  /**\n   * Decodes an HTML entity.\n   *\n   * {\\@updoc\n   * $ lookupEntity('lt')\n   * # '<'\n   * $ lookupEntity('GT')\n   * # '>'\n   * $ lookupEntity('amp')\n   * # '&'\n   * $ lookupEntity('nbsp')\n   * # '\\xA0'\n   * $ lookupEntity('apos')\n   * # \"'\"\n   * $ lookupEntity('quot')\n   * # '\"'\n   * $ lookupEntity('#xa')\n   * # '\\n'\n   * $ lookupEntity('#10')\n   * # '\\n'\n   * $ lookupEntity('#x0a')\n   * # '\\n'\n   * $ lookupEntity('#010')\n   * # '\\n'\n   * $ lookupEntity('#x00A')\n   * # '\\n'\n   * $ lookupEntity('Pi')      // Known failure\n   * # '\\u03A0'\n   * $ lookupEntity('pi')      // Known failure\n   * # '\\u03C0'\n   * }\n   *\n   * @param {string} name the content between the '&' and the ';'.\n   * @return {string} a single unicode code-point as a string.\n   */\n  function lookupEntity(name) {\n    // TODO: entity lookup as specified by HTML5 actually depends on the\n    // presence of the \";\".\n    if (ENTITIES.hasOwnProperty(name)) { return ENTITIES[name]; }\n    var m = name.match(decimalEscapeRe);\n    if (m) {\n      return String.fromCharCode(parseInt(m[1], 10));\n    } else if (!!(m = name.match(hexEscapeRe))) {\n      return String.fromCharCode(parseInt(m[1], 16));\n    } else if (entityLookupElement && safeEntityNameRe.test(name)) {\n      entityLookupElement.innerHTML = '&' + name + ';';\n      var text = entityLookupElement.textContent;\n      ENTITIES[name] = text;\n      return text;\n    } else {\n      return '&' + name + ';';\n    }\n  }\n\n  function decodeOneEntity(_, name) {\n    return lookupEntity(name);\n  }\n\n  var nulRe = /\\0/g;\n  function stripNULs(s) {\n    return s.replace(nulRe, '');\n  }\n\n  var ENTITY_RE_1 = /&(#[0-9]+|#[xX][0-9A-Fa-f]+|\\w+);/g;\n  var ENTITY_RE_2 = /^(#[0-9]+|#[xX][0-9A-Fa-f]+|\\w+);/;\n  /**\n   * The plain text of a chunk of HTML CDATA which possibly containing.\n   *\n   * {\\@updoc\n   * $ unescapeEntities('')\n   * # ''\n   * $ unescapeEntities('hello World!')\n   * # 'hello World!'\n   * $ unescapeEntities('1 &lt; 2 &amp;&AMP; 4 &gt; 3&#10;')\n   * # '1 < 2 && 4 > 3\\n'\n   * $ unescapeEntities('&lt;&lt <- unfinished entity&gt;')\n   * # '<&lt <- unfinished entity>'\n   * $ unescapeEntities('/foo?bar=baz&copy=true')  // & often unescaped in URLS\n   * # '/foo?bar=baz&copy=true'\n   * $ unescapeEntities('pi=&pi;&#x3c0;, Pi=&Pi;\\u03A0') // FIXME: known failure\n   * # 'pi=\\u03C0\\u03c0, Pi=\\u03A0\\u03A0'\n   * }\n   *\n   * @param {string} s a chunk of HTML CDATA.  It must not start or end inside\n   *     an HTML entity.\n   */\n  function unescapeEntities(s) {\n    return s.replace(ENTITY_RE_1, decodeOneEntity);\n  }\n\n  var ampRe = /&/g;\n  var looseAmpRe = /&([^a-z#]|#(?:[^0-9x]|x(?:[^0-9a-f]|$)|$)|$)/gi;\n  var ltRe = /[<]/g;\n  var gtRe = />/g;\n  var quotRe = /\\\"/g;\n\n  /**\n   * Escapes HTML special characters in attribute values.\n   *\n   * {\\@updoc\n   * $ escapeAttrib('')\n   * # ''\n   * $ escapeAttrib('\"<<&==&>>\"')  // Do not just escape the first occurrence.\n   * # '&#34;&lt;&lt;&amp;&#61;&#61;&amp;&gt;&gt;&#34;'\n   * $ escapeAttrib('Hello <World>!')\n   * # 'Hello &lt;World&gt;!'\n   * }\n   */\n  function escapeAttrib(s) {\n    return ('' + s).replace(ampRe, '&amp;').replace(ltRe, '&lt;')\n        .replace(gtRe, '&gt;').replace(quotRe, '&#34;');\n  }\n\n  /**\n   * Escape entities in RCDATA that can be escaped without changing the meaning.\n   * {\\@updoc\n   * $ normalizeRCData('1 < 2 &&amp; 3 > 4 &amp;& 5 &lt; 7&8')\n   * # '1 &lt; 2 &amp;&amp; 3 &gt; 4 &amp;&amp; 5 &lt; 7&amp;8'\n   * }\n   */\n  function normalizeRCData(rcdata) {\n    return rcdata\n        .replace(looseAmpRe, '&amp;$1')\n        .replace(ltRe, '&lt;')\n        .replace(gtRe, '&gt;');\n  }\n\n  // TODO(felix8a): validate sanitizer regexs against the HTML5 grammar at\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html\n\n  // We initially split input so that potentially meaningful characters\n  // like '<' and '>' are separate tokens, using a fast dumb process that\n  // ignores quoting.  Then we walk that token stream, and when we see a\n  // '<' that's the start of a tag, we use ATTR_RE to extract tag\n  // attributes from the next token.  That token will never have a '>'\n  // character.  However, it might have an unbalanced quote character, and\n  // when we see that, we combine additional tokens to balance the quote.\n\n  var ATTR_RE = new RegExp(\n    '^\\\\s*' +\n    '(\\\\[[-.:\\\\w]+\\\\]|[-.:\\\\w]+)' +             // 1 = Attribute name\n    '(?:' + (\n      '\\\\s*(=)\\\\s*' +           // 2 = Is there a value?\n      '(' + (                   // 3 = Attribute value\n        // TODO(felix8a): maybe use backref to match quotes\n        '(\\\")[^\\\"]*(\\\"|$)' +    // 4, 5 = Double-quoted string\n        '|' +\n        '(\\')[^\\']*(\\'|$)' +    // 6, 7 = Single-quoted string\n        '|' +\n        // Positive lookahead to prevent interpretation of\n        // <foo a= b=c> as <foo a='b=c'>\n        // TODO(felix8a): might be able to drop this case\n        '(?=[a-z][-\\\\w]*\\\\s*=)' +\n        '|' +\n        // Unquoted value that isn't an attribute name\n        // (since we didn't match the positive lookahead above)\n        '[^\\\"\\'\\\\s]*' ) +\n      ')' ) +\n    ')?',\n    'i');\n\n  // false on IE<=8, true on most other browsers\n  var splitWillCapture = ('a,b'.split(/(,)/).length === 3);\n\n  // bitmask for tags with special parsing, like <script> and <textarea>\n  var EFLAGS_TEXT = html4.eflags['CDATA'] | html4.eflags['RCDATA'];\n\n  /**\n   * Given a SAX-like event handler, produce a function that feeds those\n   * events and a parameter to the event handler.\n   *\n   * The event handler has the form:{@code\n   * {\n   *   // Name is an upper-case HTML tag name.  Attribs is an array of\n   *   // alternating upper-case attribute names, and attribute values.  The\n   *   // attribs array is reused by the parser.  Param is the value passed to\n   *   // the saxParser.\n   *   startTag: function (name, attribs, param) { ... },\n   *   endTag:   function (name, param) { ... },\n   *   pcdata:   function (text, param) { ... },\n   *   rcdata:   function (text, param) { ... },\n   *   cdata:    function (text, param) { ... },\n   *   startDoc: function (param) { ... },\n   *   endDoc:   function (param) { ... }\n   * }}\n   *\n   * @param {Object} handler a record containing event handlers.\n   * @return {function(string, Object)} A function that takes a chunk of HTML\n   *     and a parameter.  The parameter is passed on to the handler methods.\n   */\n  function makeSaxParser(handler) {\n    // Accept quoted or unquoted keys (Closure compat)\n    var hcopy = {\n      cdata: handler.cdata || handler['cdata'],\n      comment: handler.comment || handler['comment'],\n      endDoc: handler.endDoc || handler['endDoc'],\n      endTag: handler.endTag || handler['endTag'],\n      pcdata: handler.pcdata || handler['pcdata'],\n      rcdata: handler.rcdata || handler['rcdata'],\n      startDoc: handler.startDoc || handler['startDoc'],\n      startTag: handler.startTag || handler['startTag']\n    };\n    return function(htmlText, param) {\n      return parse(htmlText, hcopy, param);\n    };\n  }\n\n  // Parsing strategy is to split input into parts that might be lexically\n  // meaningful (every \">\" becomes a separate part), and then recombine\n  // parts if we discover they're in a different context.\n\n  // TODO(felix8a): Significant performance regressions from -legacy,\n  // tested on\n  //    Chrome 18.0\n  //    Firefox 11.0\n  //    IE 6, 7, 8, 9\n  //    Opera 11.61\n  //    Safari 5.1.3\n  // Many of these are unusual patterns that are linearly slower and still\n  // pretty fast (eg 1ms to 5ms), so not necessarily worth fixing.\n\n  // TODO(felix8a): \"<script> && && && ... <\\/script>\" is slower on all\n  // browsers.  The hotspot is htmlSplit.\n\n  // TODO(felix8a): \"<p title='>>>>...'><\\/p>\" is slower on all browsers.\n  // This is partly htmlSplit, but the hotspot is parseTagAndAttrs.\n\n  // TODO(felix8a): \"<a><\\/a><a><\\/a>...\" is slower on IE9.\n  // \"<a>1<\\/a><a>1<\\/a>...\" is faster, \"<a><\\/a>2<a><\\/a>2...\" is faster.\n\n  // TODO(felix8a): \"<p<p<p...\" is slower on IE[6-8]\n\n  var continuationMarker = {};\n  function parse(htmlText, handler, param) {\n    var m, p, tagName;\n    var parts = htmlSplit(htmlText);\n    var state = {\n      noMoreGT: false,\n      noMoreEndComments: false\n    };\n    parseCPS(handler, parts, 0, state, param);\n  }\n\n  function continuationMaker(h, parts, initial, state, param) {\n    return function () {\n      parseCPS(h, parts, initial, state, param);\n    };\n  }\n\n  function parseCPS(h, parts, initial, state, param) {\n    try {\n      if (h.startDoc && initial == 0) { h.startDoc(param); }\n      var m, p, tagName;\n      for (var pos = initial, end = parts.length; pos < end;) {\n        var current = parts[pos++];\n        var next = parts[pos];\n        switch (current) {\n        case '&':\n          if (ENTITY_RE_2.test(next)) {\n            if (h.pcdata) {\n              h.pcdata('&' + next, param, continuationMarker,\n                continuationMaker(h, parts, pos, state, param));\n            }\n            pos++;\n          } else {\n            if (h.pcdata) { h.pcdata(\"&amp;\", param, continuationMarker,\n                continuationMaker(h, parts, pos, state, param));\n            }\n          }\n          break;\n        case '<\\/':\n          if ((m = /^([-\\w:]+)[^\\'\\\"]*/.exec(next))) {\n            if (m[0].length === next.length && parts[pos + 1] === '>') {\n              // fast case, no attribute parsing needed\n              pos += 2;\n              tagName = m[1].toLowerCase();\n              if (h.endTag) {\n                h.endTag(tagName, param, continuationMarker,\n                  continuationMaker(h, parts, pos, state, param));\n              }\n            } else {\n              // slow case, need to parse attributes\n              // TODO(felix8a): do we really care about misparsing this?\n              pos = parseEndTag(\n                parts, pos, h, param, continuationMarker, state);\n            }\n          } else {\n            if (h.pcdata) {\n              h.pcdata('&lt;/', param, continuationMarker,\n                continuationMaker(h, parts, pos, state, param));\n            }\n          }\n          break;\n        case '<':\n          if (m = /^([-\\w:]+)\\s*\\/?/.exec(next)) {\n            if (m[0].length === next.length && parts[pos + 1] === '>') {\n              // fast case, no attribute parsing needed\n              pos += 2;\n              tagName = m[1].toLowerCase();\n              if (h.startTag) {\n                h.startTag(tagName, [], param, continuationMarker,\n                  continuationMaker(h, parts, pos, state, param));\n              }\n              // tags like <script> and <textarea> have special parsing\n              var eflags = html4.ELEMENTS[tagName];\n              if (eflags & EFLAGS_TEXT) {\n                var tag = { name: tagName, next: pos, eflags: eflags };\n                pos = parseText(\n                  parts, tag, h, param, continuationMarker, state);\n              }\n            } else {\n              // slow case, need to parse attributes\n              pos = parseStartTag(\n                parts, pos, h, param, continuationMarker, state);\n            }\n          } else {\n            if (h.pcdata) {\n              h.pcdata('&lt;', param, continuationMarker,\n                continuationMaker(h, parts, pos, state, param));\n            }\n          }\n          break;\n        case '<\\!--':\n          // The pathological case is n copies of '<\\!--' without '-->', and\n          // repeated failure to find '-->' is quadratic.  We avoid that by\n          // remembering when search for '-->' fails.\n          if (!state.noMoreEndComments) {\n            // A comment <\\!--x--> is split into three tokens:\n            //   '<\\!--', 'x--', '>'\n            // We want to find the next '>' token that has a preceding '--'.\n            // pos is at the 'x--'.\n            for (p = pos + 1; p < end; p++) {\n              if (parts[p] === '>' && /--$/.test(parts[p - 1])) { break; }\n            }\n            if (p < end) {\n              if (h.comment) {\n                var comment = parts.slice(pos, p).join('');\n                h.comment(\n                  comment.substr(0, comment.length - 2), param,\n                  continuationMarker,\n                  continuationMaker(h, parts, p + 1, state, param));\n              }\n              pos = p + 1;\n            } else {\n              state.noMoreEndComments = true;\n            }\n          }\n          if (state.noMoreEndComments) {\n            if (h.pcdata) {\n              h.pcdata('&lt;!--', param, continuationMarker,\n                continuationMaker(h, parts, pos, state, param));\n            }\n          }\n          break;\n        case '<\\!':\n          if (!/^\\w/.test(next)) {\n            if (h.pcdata) {\n              h.pcdata('&lt;!', param, continuationMarker,\n                continuationMaker(h, parts, pos, state, param));\n            }\n          } else {\n            // similar to noMoreEndComment logic\n            if (!state.noMoreGT) {\n              for (p = pos + 1; p < end; p++) {\n                if (parts[p] === '>') { break; }\n              }\n              if (p < end) {\n                pos = p + 1;\n              } else {\n                state.noMoreGT = true;\n              }\n            }\n            if (state.noMoreGT) {\n              if (h.pcdata) {\n                h.pcdata('&lt;!', param, continuationMarker,\n                  continuationMaker(h, parts, pos, state, param));\n              }\n            }\n          }\n          break;\n        case '<?':\n          // similar to noMoreEndComment logic\n          if (!state.noMoreGT) {\n            for (p = pos + 1; p < end; p++) {\n              if (parts[p] === '>') { break; }\n            }\n            if (p < end) {\n              pos = p + 1;\n            } else {\n              state.noMoreGT = true;\n            }\n          }\n          if (state.noMoreGT) {\n            if (h.pcdata) {\n              h.pcdata('&lt;?', param, continuationMarker,\n                continuationMaker(h, parts, pos, state, param));\n            }\n          }\n          break;\n        case '>':\n          if (h.pcdata) {\n            h.pcdata(\"&gt;\", param, continuationMarker,\n              continuationMaker(h, parts, pos, state, param));\n          }\n          break;\n        case '':\n          break;\n        default:\n          if (h.pcdata) {\n            h.pcdata(current, param, continuationMarker,\n              continuationMaker(h, parts, pos, state, param));\n          }\n          break;\n        }\n      }\n      if (h.endDoc) { h.endDoc(param); }\n    } catch (e) {\n      if (e !== continuationMarker) { throw e; }\n    }\n  }\n\n  // Split str into parts for the html parser.\n  function htmlSplit(str) {\n    // can't hoist this out of the function because of the re.exec loop.\n    var re = /(<\\/|<\\!--|<[!?]|[&<>])/g;\n    str += '';\n    if (splitWillCapture) {\n      return str.split(re);\n    } else {\n      var parts = [];\n      var lastPos = 0;\n      var m;\n      while ((m = re.exec(str)) !== null) {\n        parts.push(str.substring(lastPos, m.index));\n        parts.push(m[0]);\n        lastPos = m.index + m[0].length;\n      }\n      parts.push(str.substring(lastPos));\n      return parts;\n    }\n  }\n\n  function parseEndTag(parts, pos, h, param, continuationMarker, state) {\n    var tag = parseTagAndAttrs(parts, pos);\n    // drop unclosed tags\n    if (!tag) { return parts.length; }\n    if (h.endTag) {\n      h.endTag(tag.name, param, continuationMarker,\n        continuationMaker(h, parts, pos, state, param));\n    }\n    return tag.next;\n  }\n\n  function parseStartTag(parts, pos, h, param, continuationMarker, state) {\n    var tag = parseTagAndAttrs(parts, pos);\n    // drop unclosed tags\n    if (!tag) { return parts.length; }\n    if (h.startTag) {\n      h.startTag(tag.name, tag.attrs, param, continuationMarker,\n        continuationMaker(h, parts, tag.next, state, param));\n    }\n    // tags like <script> and <textarea> have special parsing\n    if (tag.eflags & EFLAGS_TEXT) {\n      return parseText(parts, tag, h, param, continuationMarker, state);\n    } else {\n      return tag.next;\n    }\n  }\n\n  var endTagRe = {};\n\n  // Tags like <script> and <textarea> are flagged as CDATA or RCDATA,\n  // which means everything is text until we see the correct closing tag.\n  function parseText(parts, tag, h, param, continuationMarker, state) {\n    var end = parts.length;\n    if (!endTagRe.hasOwnProperty(tag.name)) {\n      endTagRe[tag.name] = new RegExp('^' + tag.name + '(?:[\\\\s\\\\/]|$)', 'i');\n    }\n    var re = endTagRe[tag.name];\n    var first = tag.next;\n    var p = tag.next + 1;\n    for (; p < end; p++) {\n      if (parts[p - 1] === '<\\/' && re.test(parts[p])) { break; }\n    }\n    if (p < end) { p -= 1; }\n    var buf = parts.slice(first, p).join('');\n    if (tag.eflags & html4.eflags['CDATA']) {\n      if (h.cdata) {\n        h.cdata(buf, param, continuationMarker,\n          continuationMaker(h, parts, p, state, param));\n      }\n    } else if (tag.eflags & html4.eflags['RCDATA']) {\n      if (h.rcdata) {\n        h.rcdata(normalizeRCData(buf), param, continuationMarker,\n          continuationMaker(h, parts, p, state, param));\n      }\n    } else {\n      throw new Error('bug');\n    }\n    return p;\n  }\n\n  // at this point, parts[pos-1] is either \"<\" or \"<\\/\".\n  function parseTagAndAttrs(parts, pos) {\n    var m = /^([-\\w:]+)/.exec(parts[pos]);\n    var tag = {};\n    tag.name = m[1].toLowerCase();\n    tag.eflags = html4.ELEMENTS[tag.name];\n    var buf = parts[pos].substr(m[0].length);\n    // Find the next '>'.  We optimistically assume this '>' is not in a\n    // quoted context, and further down we fix things up if it turns out to\n    // be quoted.\n    var p = pos + 1;\n    var end = parts.length;\n    for (; p < end; p++) {\n      if (parts[p] === '>') { break; }\n      buf += parts[p];\n    }\n    if (end <= p) { return void 0; }\n    var attrs = [];\n    while (buf !== '') {\n      m = ATTR_RE.exec(buf);\n      if (!m) {\n        // No attribute found: skip garbage\n        buf = buf.replace(/^[\\s\\S][^a-z\\s]*/, '');\n\n      } else if ((m[4] && !m[5]) || (m[6] && !m[7])) {\n        // Unterminated quote: slurp to the next unquoted '>'\n        var quote = m[4] || m[6];\n        var sawQuote = false;\n        var abuf = [buf, parts[p++]];\n        for (; p < end; p++) {\n          if (sawQuote) {\n            if (parts[p] === '>') { break; }\n          } else if (0 <= parts[p].indexOf(quote)) {\n            sawQuote = true;\n          }\n          abuf.push(parts[p]);\n        }\n        // Slurp failed: lose the garbage\n        if (end <= p) { break; }\n        // Otherwise retry attribute parsing\n        buf = abuf.join('');\n        continue;\n\n      } else {\n        // We have an attribute\n        var aName = m[1].toLowerCase();\n        var aValue = m[2] ? decodeValue(m[3]) : '';\n        attrs.push(aName, aValue);\n        buf = buf.substr(m[0].length);\n      }\n    }\n    tag.attrs = attrs;\n    tag.next = p + 1;\n    return tag;\n  }\n\n  function decodeValue(v) {\n    var q = v.charCodeAt(0);\n    if (q === 0x22 || q === 0x27) { // \" or '\n      v = v.substr(1, v.length - 2);\n    }\n    return unescapeEntities(stripNULs(v));\n  }\n\n  /**\n   * Returns a function that strips unsafe tags and attributes from html.\n   * @param {defs.TagPolicy} tagPolicy\n   *     A function that takes (tagName, attribs[]), where tagName is a key in\n   *     html4.ELEMENTS and attribs is an array of alternating attribute names\n   *     and values.  It should return a record (as follows), or null to delete\n   *     the element.  It's okay for tagPolicy to modify the attribs array,\n   *     but the same array is reused, so it should not be held between calls.\n   *     Record keys:\n   *        attribs: (required) Sanitized attributes array.\n   *        tagName: Replacement tag name.\n   * @return {function(string, Array)} A function that sanitizes a string of\n   *     HTML and appends result strings to the second argument, an array.\n   */\n  function makeHtmlSanitizer(tagPolicy) {\n    var stack;\n    var ignoring;\n    var emit = function (text, out) {\n      if (!ignoring) { out.push(text); }\n    };\n    return makeSaxParser({\n      'startDoc': function(_) {\n        stack = [];\n        ignoring = false;\n      },\n      'startTag': function(tagNameOrig, attribs, out) {\n        if (ignoring) { return; }\n        if (!html4.ELEMENTS.hasOwnProperty(tagNameOrig)) { return; }\n        var eflagsOrig = html4.ELEMENTS[tagNameOrig];\n        if (eflagsOrig & html4.eflags['FOLDABLE']) {\n          return;\n        }\n\n        var decision = tagPolicy(tagNameOrig, attribs);\n        if (!decision) {\n          ignoring = !(eflagsOrig & html4.eflags['EMPTY']);\n          return;\n        } else if (typeof decision !== 'object') {\n          throw new Error('tagPolicy did not return object (old API?)');\n        }\n        if ('attribs' in decision) {\n          attribs = decision['attribs'];\n        } else {\n          throw new Error('tagPolicy gave no attribs');\n        }\n        var eflagsRep;\n        var tagNameRep;\n        if ('tagName' in decision) {\n          tagNameRep = decision['tagName'];\n          eflagsRep = html4.ELEMENTS[tagNameRep];\n        } else {\n          tagNameRep = tagNameOrig;\n          eflagsRep = eflagsOrig;\n        }\n        // TODO(mikesamuel): relying on tagPolicy not to insert unsafe\n        // attribute names.\n\n        // If this is an optional-end-tag element and either this element or its\n        // previous like sibling was rewritten, then insert a close tag to\n        // preserve structure.\n        if (eflagsOrig & html4.eflags['OPTIONAL_ENDTAG']) {\n          var onStack = stack[stack.length - 1];\n          if (onStack && onStack.orig === tagNameOrig &&\n              (onStack.rep !== tagNameRep || tagNameOrig !== tagNameRep)) {\n                out.push('<\\/', onStack.rep, '>');\n          }\n        }\n\n        if (!(eflagsOrig & html4.eflags['EMPTY'])) {\n          stack.push({orig: tagNameOrig, rep: tagNameRep});\n        }\n\n        out.push('<', tagNameRep);\n        for (var i = 0, n = attribs.length; i < n; i += 2) {\n          var attribName = attribs[i],\n              value = attribs[i + 1];\n          if (value !== null && value !== void 0) {\n            out.push(' ', attribName, '=\"', escapeAttrib(value), '\"');\n          }\n        }\n        out.push('>');\n\n        if ((eflagsOrig & html4.eflags['EMPTY'])\n            && !(eflagsRep & html4.eflags['EMPTY'])) {\n          // replacement is non-empty, synthesize end tag\n          out.push('<\\/', tagNameRep, '>');\n        }\n      },\n      'endTag': function(tagName, out) {\n        if (ignoring) {\n          ignoring = false;\n          return;\n        }\n        if (!html4.ELEMENTS.hasOwnProperty(tagName)) { return; }\n        var eflags = html4.ELEMENTS[tagName];\n        if (!(eflags & (html4.eflags['EMPTY'] | html4.eflags['FOLDABLE']))) {\n          var index;\n          if (eflags & html4.eflags['OPTIONAL_ENDTAG']) {\n            for (index = stack.length; --index >= 0;) {\n              var stackElOrigTag = stack[index].orig;\n              if (stackElOrigTag === tagName) { break; }\n              if (!(html4.ELEMENTS[stackElOrigTag] &\n                    html4.eflags['OPTIONAL_ENDTAG'])) {\n                // Don't pop non optional end tags looking for a match.\n                return;\n              }\n            }\n          } else {\n            for (index = stack.length; --index >= 0;) {\n              if (stack[index].orig === tagName) { break; }\n            }\n          }\n          if (index < 0) { return; }  // Not opened.\n          for (var i = stack.length; --i > index;) {\n            var stackElRepTag = stack[i].rep;\n            if (!(html4.ELEMENTS[stackElRepTag] &\n                  html4.eflags['OPTIONAL_ENDTAG'])) {\n              out.push('<\\/', stackElRepTag, '>');\n            }\n          }\n          if (index < stack.length) {\n            tagName = stack[index].rep;\n          }\n          stack.length = index;\n          out.push('<\\/', tagName, '>');\n        }\n      },\n      'pcdata': emit,\n      'rcdata': emit,\n      'cdata': emit,\n      'endDoc': function(out) {\n        for (; stack.length; stack.length--) {\n          out.push('<\\/', stack[stack.length - 1].rep, '>');\n        }\n      }\n    });\n  }\n\n  var ALLOWED_URI_SCHEMES = /^(?:https?|geo|mailto|sms|tel)$/i;\n\n  function safeUri(uri, effect, ltype, hints, naiveUriRewriter) {\n    if (!naiveUriRewriter) { return null; }\n    try {\n      var parsed = URI.parse('' + uri);\n      if (parsed) {\n        if (!parsed.hasScheme() ||\n            ALLOWED_URI_SCHEMES.test(parsed.getScheme())) {\n          var safe = naiveUriRewriter(parsed, effect, ltype, hints);\n          return safe ? safe.toString() : null;\n        }\n      }\n    } catch (e) {\n      return null;\n    }\n    return null;\n  }\n\n  function log(logger, tagName, attribName, oldValue, newValue) {\n    if (!attribName) {\n      logger(tagName + \" removed\", {\n        change: \"removed\",\n        tagName: tagName\n      });\n    }\n    if (oldValue !== newValue) {\n      var changed = \"changed\";\n      if (oldValue && !newValue) {\n        changed = \"removed\";\n      } else if (!oldValue && newValue)  {\n        changed = \"added\";\n      }\n      logger(tagName + \".\" + attribName + \" \" + changed, {\n        change: changed,\n        tagName: tagName,\n        attribName: attribName,\n        oldValue: oldValue,\n        newValue: newValue\n      });\n    }\n  }\n\n  function lookupAttribute(map, tagName, attribName) {\n    var attribKey;\n    attribKey = tagName + '::' + attribName;\n    if (map.hasOwnProperty(attribKey)) {\n      return map[attribKey];\n    }\n    attribKey = '*::' + attribName;\n    if (map.hasOwnProperty(attribKey)) {\n      return map[attribKey];\n    }\n    return void 0;\n  }\n  function getAttributeType(tagName, attribName) {\n    return lookupAttribute(html4.ATTRIBS, tagName, attribName);\n  }\n  function getLoaderType(tagName, attribName) {\n    return lookupAttribute(html4.LOADERTYPES, tagName, attribName);\n  }\n  function getUriEffect(tagName, attribName) {\n    return lookupAttribute(html4.URIEFFECTS, tagName, attribName);\n  }\n\n  /**\n   * Sanitizes attributes on an HTML tag.\n   * @param {string} tagName An HTML tag name in lowercase.\n   * @param {Array.<?string>} attribs An array of alternating names and values.\n   * @param {?function(?string): ?string} opt_naiveUriRewriter A transform to\n   *     apply to URI attributes; it can return a new string value, or null to\n   *     delete the attribute.  If unspecified, URI attributes are deleted.\n   * @param {function(?string): ?string} opt_nmTokenPolicy A transform to apply\n   *     to attributes containing HTML names, element IDs, and space-separated\n   *     lists of classes; it can return a new string value, or null to delete\n   *     the attribute.  If unspecified, these attributes are kept unchanged.\n   * @return {Array.<?string>} The sanitized attributes as a list of alternating\n   *     names and values, where a null value means to omit the attribute.\n   */\n  function sanitizeAttribs(tagName, attribs,\n    opt_naiveUriRewriter, opt_nmTokenPolicy, opt_logger) {\n    // TODO(felix8a): it's obnoxious that domado duplicates much of this\n    // TODO(felix8a): maybe consistently enforce constraints like target=\n    for (var i = 0; i < attribs.length; i += 2) {\n      var attribName = attribs[i];\n      var value = attribs[i + 1];\n      var oldValue = value;\n      var atype = null, attribKey;\n      if ((attribKey = tagName + '::' + attribName,\n           html4.ATTRIBS.hasOwnProperty(attribKey)) ||\n          (attribKey = '*::' + attribName,\n           html4.ATTRIBS.hasOwnProperty(attribKey))) {\n        atype = html4.ATTRIBS[attribKey];\n      }\n      if (atype !== null) {\n        switch (atype) {\n          case html4.atype['NONE']: break;\n          case html4.atype['SCRIPT']:\n            value = null;\n            if (opt_logger) {\n              log(opt_logger, tagName, attribName, oldValue, value);\n            }\n            break;\n          case html4.atype['STYLE']:\n            if ('undefined' === typeof parseCssDeclarations) {\n              value = null;\n              if (opt_logger) {\n                log(opt_logger, tagName, attribName, oldValue, value);\n\t      }\n              break;\n            }\n            var sanitizedDeclarations = [];\n            parseCssDeclarations(\n                value,\n                {\n                  'declaration': function (property, tokens) {\n                    var normProp = property.toLowerCase();\n                    sanitizeCssProperty(\n                        normProp, tokens,\n                        opt_naiveUriRewriter\n                        ? function (url) {\n                            return safeUri(\n                                url, html4.ueffects.SAME_DOCUMENT,\n                                html4.ltypes.SANDBOXED,\n                                {\n                                  \"TYPE\": \"CSS\",\n                                  \"CSS_PROP\": normProp\n                                }, opt_naiveUriRewriter);\n                          }\n                        : null);\n                    if (tokens.length) {\n                      sanitizedDeclarations.push(\n                          normProp + ': ' + tokens.join(' '));\n                    }\n                  }\n                });\n            value = sanitizedDeclarations.length > 0 ?\n              sanitizedDeclarations.join(' ; ') : null;\n            if (opt_logger) {\n              log(opt_logger, tagName, attribName, oldValue, value);\n            }\n            break;\n          case html4.atype['ID']:\n          case html4.atype['IDREF']:\n          case html4.atype['IDREFS']:\n          case html4.atype['GLOBAL_NAME']:\n          case html4.atype['LOCAL_NAME']:\n          case html4.atype['CLASSES']:\n            value = opt_nmTokenPolicy ? opt_nmTokenPolicy(value) : value;\n            if (opt_logger) {\n              log(opt_logger, tagName, attribName, oldValue, value);\n            }\n            break;\n          case html4.atype['URI']:\n            value = safeUri(value,\n              getUriEffect(tagName, attribName),\n              getLoaderType(tagName, attribName),\n              {\n                \"TYPE\": \"MARKUP\",\n                \"XML_ATTR\": attribName,\n                \"XML_TAG\": tagName\n              }, opt_naiveUriRewriter);\n              if (opt_logger) {\n              log(opt_logger, tagName, attribName, oldValue, value);\n            }\n            break;\n          case html4.atype['URI_FRAGMENT']:\n            if (value && '#' === value.charAt(0)) {\n              value = value.substring(1);  // remove the leading '#'\n              value = opt_nmTokenPolicy ? opt_nmTokenPolicy(value) : value;\n              if (value !== null && value !== void 0) {\n                value = '#' + value;  // restore the leading '#'\n              }\n            } else {\n              value = null;\n            }\n            if (opt_logger) {\n              log(opt_logger, tagName, attribName, oldValue, value);\n            }\n            break;\n          default:\n            value = null;\n            if (opt_logger) {\n              log(opt_logger, tagName, attribName, oldValue, value);\n            }\n            break;\n        }\n      } else {\n        value = null;\n        if (opt_logger) {\n          log(opt_logger, tagName, attribName, oldValue, value);\n        }\n      }\n      attribs[i + 1] = value;\n    }\n    return attribs;\n  }\n\n  /**\n   * Creates a tag policy that omits all tags marked UNSAFE in html4-defs.js\n   * and applies the default attribute sanitizer with the supplied policy for\n   * URI attributes and NMTOKEN attributes.\n   * @param {?function(?string): ?string} opt_naiveUriRewriter A transform to\n   *     apply to URI attributes.  If not given, URI attributes are deleted.\n   * @param {function(?string): ?string} opt_nmTokenPolicy A transform to apply\n   *     to attributes containing HTML names, element IDs, and space-separated\n   *     lists of classes.  If not given, such attributes are left unchanged.\n   * @return {defs.TagPolicy} A tagPolicy suitable for\n   *     passing to html.sanitize.\n   */\n  function makeTagPolicy(\n    opt_naiveUriRewriter, opt_nmTokenPolicy, opt_logger) {\n    return function(tagName, attribs) {\n      if (!(html4.ELEMENTS[tagName] & html4.eflags['UNSAFE'])) {\n        return {\n          'attribs': sanitizeAttribs(tagName, attribs,\n            opt_naiveUriRewriter, opt_nmTokenPolicy, opt_logger)\n        };\n      } else {\n        if (opt_logger) {\n          log(opt_logger, tagName, undefined, undefined, undefined);\n        }\n      }\n    };\n  }\n\n  /**\n   * Sanitizes HTML tags and attributes according to a given policy.\n   * @param {string} inputHtml The HTML to sanitize.\n   * @param {function(string, Array.<?string>)} tagPolicy A function that\n   *     decides which tags to accept and sanitizes their attributes (see\n   *     makeHtmlSanitizer above for details).\n   * @return {string} The sanitized HTML.\n   */\n  function sanitizeWithPolicy(inputHtml, tagPolicy) {\n    var outputArray = [];\n    makeHtmlSanitizer(tagPolicy)(inputHtml, outputArray);\n    return outputArray.join('');\n  }\n\n  /**\n   * Strips unsafe tags and attributes from HTML.\n   * @param {string} inputHtml The HTML to sanitize.\n   * @param {?function(?string): ?string} opt_naiveUriRewriter A transform to\n   *     apply to URI attributes.  If not given, URI attributes are deleted.\n   * @param {function(?string): ?string} opt_nmTokenPolicy A transform to apply\n   *     to attributes containing HTML names, element IDs, and space-separated\n   *     lists of classes.  If not given, such attributes are left unchanged.\n   */\n  function sanitize(inputHtml,\n    opt_naiveUriRewriter, opt_nmTokenPolicy, opt_logger) {\n    var tagPolicy = makeTagPolicy(\n      opt_naiveUriRewriter, opt_nmTokenPolicy, opt_logger);\n    return sanitizeWithPolicy(inputHtml, tagPolicy);\n  }\n\n  // Export both quoted and unquoted names for Closure linkage.\n  var html = {};\n  html.escapeAttrib = html['escapeAttrib'] = escapeAttrib;\n  html.makeHtmlSanitizer = html['makeHtmlSanitizer'] = makeHtmlSanitizer;\n  html.makeSaxParser = html['makeSaxParser'] = makeSaxParser;\n  html.makeTagPolicy = html['makeTagPolicy'] = makeTagPolicy;\n  html.normalizeRCData = html['normalizeRCData'] = normalizeRCData;\n  html.sanitize = html['sanitize'] = sanitize;\n  html.sanitizeAttribs = html['sanitizeAttribs'] = sanitizeAttribs;\n  html.sanitizeWithPolicy = html['sanitizeWithPolicy'] = sanitizeWithPolicy;\n  html.unescapeEntities = html['unescapeEntities'] = unescapeEntities;\n  return html;\n})(html4);\n\nvar html_sanitize = html['sanitize'];\n\n// Exports for Closure compiler.  Note this file is also cajoled\n// for domado and run in an environment without 'window'\nif (typeof window !== 'undefined') {\n}\n\nexport var htmlSanitizer = html;\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ALLOWLISTED_ATTRS,\n  ALLOWLISTED_ATTRS_BY_TAGS,\n  ALLOWLISTED_TARGETS,\n  BIND_PREFIX,\n  DENYLISTED_TAGS,\n  EMAIL_ALLOWLISTED_AMP_TAGS,\n  TRIPLE_MUSTACHE_ALLOWLISTED_TAGS,\n  isValidAttr,\n} from './purifier/sanitation';\nimport {dict} from './core/types/object';\nimport {htmlSanitizer} from '../third_party/caja/html-sanitizer';\nimport {isAmp4Email} from './format';\nimport {rewriteAttributeValue} from './url-rewrite';\nimport {user} from './log';\n\n/** @private @const {string} */\nconst TAG = 'sanitizer';\n\n/**\n * Allowlist of supported self-closing tags for Caja. These are used for\n * correct parsing on Caja and are not necessary for DOMPurify which uses\n * the browser's HTML parser.\n * @const {!Object<string, boolean>}\n */\nconst SELF_CLOSING_TAGS = dict({\n  'br': true,\n  'col': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'source': true,\n  'track': true,\n  'wbr': true,\n  'area': true,\n  'base': true,\n  'command': true,\n  'embed': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n});\n\n/**\n * Regex to allow data-*, aria-* and role attributes.\n * Only needed in Caja. Internally supported by DOMPurify.\n * @const {!RegExp}\n */\nconst ALLOWLISTED_ATTR_PREFIX_REGEX = /^(data-|aria-)|^role$/i;\n\n/**\n * Sanitizes the provided HTML.\n *\n * This function expects the HTML to be already pre-sanitized and thus it does\n * not validate all of the AMP rules - only the most dangerous security-related\n * cases, such as <SCRIPT>, <STYLE>, <IFRAME>.\n *\n * @param {string} html\n * @param {!Document} doc\n * @return {string}\n */\nexport function sanitizeHtml(html, doc) {\n  const tagPolicy = htmlSanitizer.makeTagPolicy((parsed) =>\n    parsed.getScheme() === 'https' ? parsed : null\n  );\n  const output = [];\n  let ignore = 0;\n\n  const emit = (content) => {\n    if (ignore == 0) {\n      output.push(content);\n    }\n  };\n\n  // No Caja support for <script> or <svg>.\n  const cajaDenylistedTags = {\n    'script': true,\n    'svg': true,\n    ...DENYLISTED_TAGS,\n  };\n\n  const parser = htmlSanitizer.makeSaxParser({\n    'startTag': function (tagName, attribs) {\n      if (ignore > 0) {\n        if (!SELF_CLOSING_TAGS[tagName]) {\n          ignore++;\n        }\n        return;\n      }\n      const isAmpElement = tagName.startsWith('amp-');\n      // Preprocess \"binding\" attributes, e.g. [attr], by stripping enclosing\n      // brackets before custom validation and restoring them afterwards.\n      const bindingAttribs = [];\n      for (let i = 0; i < attribs.length; i += 2) {\n        const attr = attribs[i];\n        if (!attr) {\n          continue;\n        }\n        const classicBinding = attr[0] == '[' && attr[attr.length - 1] == ']';\n        const alternativeBinding = attr.startsWith(BIND_PREFIX);\n        if (classicBinding) {\n          attribs[i] = attr.slice(1, -1);\n        }\n        if (classicBinding || alternativeBinding) {\n          bindingAttribs.push(i);\n        }\n      }\n\n      if (cajaDenylistedTags[tagName]) {\n        ignore++;\n      } else if (isAmpElement) {\n        // Enforce AMP4EMAIL tag allowlist at runtime.\n        if (isAmp4Email(doc) && !EMAIL_ALLOWLISTED_AMP_TAGS[tagName]) {\n          ignore++;\n        }\n      } else {\n        // Ask Caja to validate the element as well.\n        // Use the resulting properties.\n        const savedAttribs = attribs.slice(0);\n        const scrubbed = /** @type {!JsonObject} */ (\n          tagPolicy(tagName, attribs)\n        );\n        if (!scrubbed) {\n          ignore++;\n        } else {\n          attribs = scrubbed['attribs'];\n          // Restore some of the attributes that AMP is directly responsible\n          // for, such as \"on\".\n          for (let i = 0; i < attribs.length; i += 2) {\n            const attrName = attribs[i];\n            if (ALLOWLISTED_ATTRS.includes(attrName)) {\n              attribs[i + 1] = savedAttribs[i + 1];\n            } else if (attrName.search(ALLOWLISTED_ATTR_PREFIX_REGEX) == 0) {\n              attribs[i + 1] = savedAttribs[i + 1];\n            } else if (\n              ALLOWLISTED_ATTRS_BY_TAGS[tagName] &&\n              ALLOWLISTED_ATTRS_BY_TAGS[tagName].includes(attrName)\n            ) {\n              attribs[i + 1] = savedAttribs[i + 1];\n            }\n          }\n        }\n        // `<A>` has special target rules:\n        // - Default target is \"_top\";\n        // - Allowed targets are \"_blank\", \"_top\";\n        // - All other targets are rewritted to \"_top\".\n        if (tagName == 'a') {\n          let index = -1;\n          let hasHref = false;\n          for (let i = 0; i < savedAttribs.length; i += 2) {\n            if (savedAttribs[i] == 'target') {\n              index = i + 1;\n            } else if (savedAttribs[i] == 'href') {\n              // Only allow valid `href` values.\n              hasHref = attribs[i + 1] != null;\n            }\n          }\n          let origTarget = index != -1 ? savedAttribs[index] : null;\n          if (origTarget != null) {\n            origTarget = origTarget.toLowerCase();\n            if (ALLOWLISTED_TARGETS.indexOf(origTarget) != -1) {\n              attribs[index] = origTarget;\n            } else {\n              attribs[index] = '_top';\n            }\n          } else if (hasHref) {\n            attribs.push('target', '_top');\n          }\n        }\n      }\n      if (ignore > 0) {\n        if (SELF_CLOSING_TAGS[tagName]) {\n          ignore--;\n        }\n        return;\n      }\n      // Filter out bindings with empty attribute values.\n      const hasBindings = bindingAttribs.some((i) => !!attribs[i + 1]);\n      if (hasBindings) {\n        // Set a custom attribute to identify elements with bindings.\n        // This is an optimization that avoids the need for a DOM scan later.\n        attribs.push('i-amphtml-binding', '');\n      }\n      emit('<');\n      emit(tagName);\n      for (let i = 0; i < attribs.length; i += 2) {\n        const attrName = attribs[i];\n        const attrValue = attribs[i + 1];\n        if (!isValidAttr(tagName, attrName, attrValue, doc, false)) {\n          user().error(\n            TAG,\n            `Removing \"${attrName}\" attribute with invalid ` +\n              `value in <${tagName} ${attrName}=\"${attrValue}\">.`\n          );\n          continue;\n        }\n        emit(' ');\n        if (bindingAttribs.includes(i) && !attrName.startsWith(BIND_PREFIX)) {\n          emit(`[${attrName}]`);\n        } else {\n          emit(attrName);\n        }\n        emit('=\"');\n        if (attrValue) {\n          // Rewrite attribute values unless this attribute is a binding.\n          // Bindings contain expressions and shouldn't be rewritten.\n          const rewrite = bindingAttribs.includes(i)\n            ? attrValue\n            : rewriteAttributeValue(tagName, attrName, attrValue);\n          emit(htmlSanitizer.escapeAttrib(rewrite));\n        }\n        emit('\"');\n      }\n      emit('>');\n    },\n    'endTag': function (tagName) {\n      if (ignore > 0) {\n        ignore--;\n        return;\n      }\n      emit('</');\n      emit(tagName);\n      emit('>');\n    },\n    'pcdata': emit,\n    'rcdata': emit,\n    'cdata': emit,\n  });\n  parser(html);\n  return output.join('');\n}\n\n/**\n * Sanitizes user provided HTML to mustache templates, used in amp-mustache.\n *\n * WARNING: This method should not be used elsewhere as we do not strip out\n * the style attribute in this method for the inline-style experiment.\n * We do so in sanitizeHtml which occurs after this initial sanitizing.\n *\n * @param {string} html\n * @return {string}\n */\nexport function sanitizeTagsForTripleMustache(html) {\n  return htmlSanitizer.sanitizeWithPolicy(html, tripleMustacheTagPolicy);\n}\n\n/**\n * Tag policy for handling what is valid html in templates.\n * @param {string} tagName\n * @param {!Array<string>} attribs\n * @return {?{tagName: string, attribs: !Array<string>}}\n */\nfunction tripleMustacheTagPolicy(tagName, attribs) {\n  if (tagName == 'template') {\n    for (let i = 0; i < attribs.length; i += 2) {\n      if (attribs[i] == 'type' && attribs[i + 1] == 'amp-mustache') {\n        return {\n          tagName,\n          attribs: ['type', 'amp-mustache'],\n        };\n      }\n    }\n  }\n  if (!TRIPLE_MUSTACHE_ALLOWLISTED_TAGS.includes(tagName)) {\n    return null;\n  }\n  return {\n    tagName,\n    attribs,\n  };\n}\n", "/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\nfunction mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' &&\n        Object.prototype.hasOwnProperty.call(obj, propName);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      }\n      // ORIGINAL CODE:\n      // else if (type === '=') {\n      //   // Set the tags for the next time around.\n      //   compileTags(value);\n      // }\n      // Fail quitely but do not allow delimiter substitutions. This is\n      // important from the security point of view so that our validators\n      // do not have to parse and interprete all of the mustache's syntax.\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (!hasProperty(value, names[index])) {\n              value = null;\n              break;\n            }\n            if (index === names.length - 1)\n              lookupHit = true;\n            value = value[names[index++]];\n          }\n        } else {\n          if (!hasProperty(context.view, name)) {\n            value = null;\n          } else {\n            value = context.view[name];\n            lookupHit = true;\n          }\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null) {\n      if (mustache.sanitizeUnescaped) {\n        return mustache.sanitizeUnescaped(value);\n      }\n      return value;\n    }\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.2.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export the sanitizing function for unescaped values.\n  mustache.sanitizeUnescaped = null;\n  mustache.setUnescapedSanitizer = function setUnescapedSanitizer(sanitizeUnescaped) {\n    mustache.sanitizeUnescaped = sanitizeUnescaped;\n  };\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n};\n\nconst Mustache = {};\nmustacheFactory(Mustache);\nexport default Mustache;\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {BaseTemplate} from '../../../src/base-template';\nimport {dict} from '../../../src/core/types/object';\nimport {iterateCursor, templateContentClone} from '../../../src/dom';\nimport {\n  sanitizeHtml,\n  sanitizeTagsForTripleMustache,\n} from '../../../src/sanitizer';\nimport {user} from '../../../src/log';\nimport mustache from '../../../third_party/mustache/mustache';\n\nconst TAG = 'amp-mustache';\n\n/**\n * Implements an AMP template for Mustache.js.\n * See {@link https://github.com/janl/mustache.js/}.\n *\n * @visibleForTesting\n */\nexport class AmpMustache extends BaseTemplate {\n  /**\n   * @param {!Element} element\n   * @param {!Window} win\n   */\n  constructor(element, win) {\n    super(element, win);\n\n    // Unescaped templating (triple mustache) has a special, strict sanitizer.\n    mustache.setUnescapedSanitizer(sanitizeTagsForTripleMustache);\n\n    user().warn(\n      TAG,\n      'The extension \"amp-mustache-0.1.js\" is deprecated. ' +\n        'Please use a more recent version of this extension.'\n    );\n  }\n\n  /** @override */\n  compileCallback() {\n    // If viewer is renderTemplate capable, skip the handling of the mustache\n    // templates as its rendering is managed by the viewer. This template will\n    // only be responsible for sanitizing and inserting it into the DOM.\n    if (this.viewerCanRenderTemplates()) {\n      return;\n    }\n    /** @private @const {!JsonObject} */\n    this.nestedTemplates_ = dict();\n\n    /** @private @const {string} */\n    this.template_ = this.initTemplateString_();\n\n    mustache.parse(this.template_, /* tags */ undefined);\n  }\n\n  /**\n   * @private\n   * @return {string}\n   */\n  initTemplateString_() {\n    if (this.element.tagName == 'TEMPLATE') {\n      const content = templateContentClone(this.element);\n      this.processNestedTemplates_(content);\n      const container = this.element.ownerDocument.createElement('div');\n      container.appendChild(content);\n      return container./*OK*/ innerHTML;\n    } else if (this.element.tagName == 'SCRIPT') {\n      return this.element.textContent;\n    }\n\n    return '';\n  }\n\n  /**\n   * Stores and replaces nested templates with custom triple-mustache pointers.\n   *\n   * This prevents the outer-most template from replacing variables in nested\n   * templates. Note that this constrains nested template markup to the more\n   * restrictive sanitization rules of triple-mustache.\n   *\n   * @param {!DocumentFragment} content\n   */\n  processNestedTemplates_(content) {\n    const templates = content.querySelectorAll('template');\n    iterateCursor(templates, (nestedTemplate, index) => {\n      const nestedTemplateKey = `__AMP_NESTED_TEMPLATE_${index}`;\n      this.nestedTemplates_[nestedTemplateKey] =\n        nestedTemplate./*OK*/ outerHTML;\n      const nestedTemplateAsVariable =\n        this.element.ownerDocument.createTextNode(`{{{${nestedTemplateKey}}}}`);\n      nestedTemplate.parentNode.replaceChild(\n        nestedTemplateAsVariable,\n        nestedTemplate\n      );\n    });\n  }\n\n  /** @override */\n  setHtml(html) {\n    const wrapped = `<div>${html}</div>`;\n    const serialized = this.serializeHtml_(wrapped);\n    return this.unwrapChildren(serialized);\n  }\n\n  /** @override */\n  render(data) {\n    const html = this.render_(data);\n    return this.serializeHtml_(html);\n  }\n\n  /** @override */\n  renderAsString(data) {\n    const html = this.render_(data);\n    return sanitizeHtml(html, this.win.document);\n  }\n\n  /**\n   * @param {!JsonObject|string} data\n   * @return {string}\n   * @private\n   */\n  render_(data) {\n    let mustacheData = data;\n    if (typeof data === 'object') {\n      mustacheData = {...data, ...this.nestedTemplates_};\n    }\n    return mustache.render(\n      this.template_,\n      mustacheData,\n      /* partials */ undefined\n    );\n  }\n\n  /**\n   * Sanitizes the html and inserts it in the DOM.\n   * @param {string} html\n   * @return {!Element}\n   * @private\n   */\n  serializeHtml_(html) {\n    const doc = this.win.document;\n    const root = doc.createElement('div');\n    const sanitized = sanitizeHtml(html, doc);\n    root./*OK*/ innerHTML = sanitized;\n    return this.tryUnwrap(root);\n  }\n}\n\nAMP.extension(TAG, '0.1', function (AMP) {\n  AMP.registerTemplate(TAG, AmpMustache);\n});\n"],
  "mappings": "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",
  "names": []
}
