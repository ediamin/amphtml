{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../src/core/types/array.js", "../../src/core/types/enum.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/config.js", "../../src/log.js", "../../src/core/window/index.js", "../../src/service.js", "../../src/experiments/index.js", "../../src/experiments/story-ad-auto-advance.js", "../../src/core/types/object/json.js", "../../src/localized-strings.js", "../../src/core/minified-mode.js", "../../src/core/assert/dev.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/css-selectors.js", "../../src/core/dom/query.js", "../../src/dom.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../src/service/localization.js", "../../extensions/amp-story-auto-ads/0.1/story-ad-localization.js", "../../src/core/types/string/bytes.js", "../../extensions/amp-story-auto-ads/0.1/utils.js", "../../src/analytics.js", "../../extensions/amp-story-auto-ads/0.1/story-ad-analytics.js", "../../build/amp-story-auto-ads-0.1.css.js", "../../src/core/constants/common-signals.js", "../../src/core/dom/event-helper-listen.js", "../../src/event-helper.js", "../../extensions/amp-story/1.0/events.js", "../../extensions/amp-story/1.0/embed-mode.js", "../../src/core/data-structures/observable.js", "../../extensions/amp-story/1.0/amp-story-store-service.js", "../../extensions/amp-story-auto-ads/0.1/story-ad-config.js", "../../src/style.js", "../../extensions/amp-story-auto-ads/0.1/story-ad-button-text-fitter.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../build/amp-story-auto-ads-attribution-0.1.css.js", "../../third_party/webcomponentsjs/ShadowCSS.js", "../../src/core/dom/web-components.js", "../../src/style-installer.js", "../../src/shadow-embed.js", "../../extensions/amp-story/1.0/utils.js", "../../build/amp-story-auto-ads-cta-button-0.1.css.js", "../../extensions/amp-story-auto-ads/0.1/story-ad-ui.js", "../../src/pass.js", "../../src/gesture.js", "../../src/motion.js", "../../src/gesture-recognizers.js", "../../extensions/amp-ad-exit/0.1/filters/filter.js", "../../extensions/amp-analytics/0.1/iframe-transport-vendors.js", "../../extensions/amp-ad-exit/0.1/config.js", "../../extensions/amp-story-auto-ads/0.1/story-ad-page.js", "../../extensions/amp-story-auto-ads/0.1/story-ad-page-manager.js", "../../build/amp-story-auto-ads-ad-badge-0.1.css.js", "../../src/experiments/story-ad-placements.js", "../../extensions/amp-story-auto-ads/0.1/algorithm-count-pages.js", "../../extensions/amp-story-auto-ads/0.1/algorithm-predetermined.js", "../../extensions/amp-story-auto-ads/0.1/algorithm-utils.js", "../../build/amp-story-auto-ads-progress-bar-0.1.css.js", "../../build/amp-story-auto-ads-shared-0.1.css.js", "../../extensions/amp-story-auto-ads/0.1/amp-story-auto-ads.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Checks whether `val` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} val\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, val) {\n  for (const k in enumObj) {\n    if (enumObj[k] === val) {\n      return true;\n    }\n  }\n  return false;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from '../log';\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service';\nimport {hasOwn, map} from '../core/types/object';\nimport {isArray} from '../core/types';\nimport {parseQueryString} from '../core/types/string/url';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {randomlySelectUnsetExperiments} from '../experiments';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {!Object<string, string>} */\nexport const AdvanceExpToTime = {\n  '31060905': '6s',\n  '31060906': '8s',\n  '31060907': '10s',\n};\n\n/** @const */\nexport const StoryAdAutoAdvance = {\n  ID: 'story-ad-auto-advance',\n  CONTROL: '31060904',\n  SIX_SECONDS: '31060905',\n  EIGHT_SECONDS: '31060906',\n  TEN_SECONDS: '31060907',\n};\n\n/**\n * Choose what time value to auto advance story ads.\n * @param {!Window} win\n */\nexport function divertStoryAdAutoAdvance(win) {\n  /** @type {!ExperimentInfoDef} */\n  const experimentInfo = {\n    experimentId: StoryAdAutoAdvance.ID,\n    isTrafficEligible: () => true,\n    branches: [\n      StoryAdAutoAdvance.CONTROL,\n      StoryAdAutoAdvance.SIX_SECONDS,\n      StoryAdAutoAdvance.EIGHT_SECONDS,\n      StoryAdAutoAdvance.TEN_SECONDS,\n    ],\n  };\n  randomlySelectUnsetExperiments(win, [experimentInfo]);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isArray} from '../array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {parseJson} from './core/types/object/json';\n\n/**\n * A unique identifier for each localized string.  Localized string IDs should:\n *\n *   - Maintain alphabetical order, by component\n *   - Be prefixed with the name of the extension that uses the string\n *     (e.g. \"AMP_STORY_\"), or with \"AMP_\" if they are general\n *   - NOT be reused; to deprecate an ID, comment it out and prefix its key with\n *     the string \"DEPRECATED_\"\n *\n * Next ID: 98\n *\n * @const @enum {string}\n */\nexport const LocalizedStringId = {\n  // amp-story\n  AMP_STORY_ACTIVATE_BUTTON_TEXT: '83',\n  AMP_STORY_AUDIO_MUTE_BUTTON_LABEL: '66',\n  AMP_STORY_AUDIO_MUTE_BUTTON_TEXT: '31',\n  AMP_STORY_AUDIO_UNMUTE_BUTTON_LABEL: '67',\n  AMP_STORY_AUDIO_UNMUTE_NO_SOUND_TEXT: '33',\n  AMP_STORY_AUDIO_UNMUTE_SOUND_TEXT: '32',\n  AMP_STORY_CLOSE_BUTTON_LABEL: '87',\n  AMP_STORY_CONSENT_ACCEPT_BUTTON_LABEL: '22',\n  AMP_STORY_CONSENT_DECLINE_BUTTON_LABEL: '23',\n  AMP_STORY_CONTINUE_ANYWAY_BUTTON_LABEL: '27',\n  AMP_STORY_DISCOVERY_DIALOG_TEXT: '96',\n  AMP_STORY_DOMAIN_DIALOG_HEADING_LABEL: '25',\n  AMP_STORY_DOMAIN_DIALOG_HEADING_LINK: '26',\n  AMP_STORY_EDUCATION_NAVIGATION_SWIPE_PROGRESS: '78',\n  AMP_STORY_EDUCATION_NAVIGATION_SWIPE_INSTRUCTIONS: '79',\n  AMP_STORY_EDUCATION_NAVIGATION_SWIPE_DISMISS: '80',\n  AMP_STORY_EDUCATION_NAVIGATION_TAP_PROGRESS: '75',\n  AMP_STORY_EDUCATION_NAVIGATION_TAP_PROGRESS_SINGLE: '81',\n  AMP_STORY_EDUCATION_NAVIGATION_TAP_INSTRUCTIONS: '76',\n  AMP_STORY_EDUCATION_NAVIGATION_TAP_DISMISS: '77',\n  AMP_STORY_HAS_NEW_PAGE_TEXT: '64',\n  AMP_STORY_HINT_UI_NEXT_LABEL: '2',\n  AMP_STORY_HINT_UI_PREVIOUS_LABEL: '3',\n  AMP_STORY_INFO_BUTTON_LABEL: '68',\n  AMP_STORY_NEXT_PAGE: '91',\n  AMP_STORY_NEXT_STORY: '90',\n  AMP_STORY_OPEN_OUTLINK_TEXT: '97',\n  AMP_STORY_PAGE_ATTACHMENT_OPEN_LABEL: '35',\n  AMP_STORY_PAGINATION_BUTTON_PREVIOUS_PAGE_LABEL: '82',\n  AMP_STORY_PAGE_ERROR_VIDEO: '65',\n  AMP_STORY_PAGE_PLAY_VIDEO: '34',\n  AMP_STORY_PAUSE_BUTTON_LABEL: '85',\n  AMP_STORY_PLAY_BUTTON_LABEL: '86',\n  AMP_STORY_PREVIOUS_PAGE: '93',\n  AMP_STORY_REPLAY: '92',\n  AMP_STORY_SHARE_BUTTON_LABEL: '69',\n  AMP_STORY_SHARING_CLIPBOARD_FAILURE_TEXT: '4',\n  AMP_STORY_SHARING_CLIPBOARD_SUCCESS_TEXT: '5',\n  AMP_STORY_SHARING_PAGE_LABEL: '62',\n  AMP_STORY_SHARING_PROVIDER_NAME_EMAIL: '6',\n  AMP_STORY_SHARING_PROVIDER_NAME_FACEBOOK: '7',\n  AMP_STORY_SHARING_PROVIDER_NAME_GOOGLE_PLUS: '8',\n  AMP_STORY_SHARING_PROVIDER_NAME_LINE: '63',\n  AMP_STORY_SHARING_PROVIDER_NAME_LINK: '9',\n  AMP_STORY_SHARING_PROVIDER_NAME_LINKEDIN: '10',\n  AMP_STORY_SHARING_PROVIDER_NAME_PINTEREST: '11',\n  AMP_STORY_SHARING_PROVIDER_NAME_SMS: '12',\n  AMP_STORY_SHARING_PROVIDER_NAME_SYSTEM: '13',\n  AMP_STORY_SHARING_PROVIDER_NAME_TUMBLR: '14',\n  AMP_STORY_SHARING_PROVIDER_NAME_TWITTER: '15',\n  AMP_STORY_SHARING_PROVIDER_NAME_WHATSAPP: '16',\n  AMP_STORY_SIDEBAR_BUTTON_LABEL: '70',\n  AMP_STORY_SKIP_TO_NEXT_BUTTON_LABEL: '88',\n  AMP_STORY_TOOLTIP_EXPAND_TWEET: '36',\n  AMP_STORY_WARNING_DESKTOP_HEIGHT_SIZE_TEXT: '37',\n  AMP_STORY_WARNING_DESKTOP_SIZE_TEXT: '18',\n  AMP_STORY_WARNING_DESKTOP_WIDTH_SIZE_TEXT: '38',\n  AMP_STORY_WARNING_EXPERIMENT_DISABLED_TEXT: '19',\n  AMP_STORY_WARNING_LANDSCAPE_ORIENTATION_TEXT: '20',\n  AMP_STORY_WARNING_UNSUPPORTED_BROWSER_TEXT: '21',\n\n  // amp-story-auto-ads\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_APPLY_NOW: '39',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_BOOK_NOW: '40',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_BUY_TICKETS: '41',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_DOWNLOAD: '42',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_EXPLORE: '43',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_GET_NOW: '44',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_INSTALL: '45',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_LEARN_MORE: '46',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_LISTEN: '47',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_MORE: '48',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_OPEN_APP: '49',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_ORDER_NOW: '50',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_PLAY: '51',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_READ: '52',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_SHOP: '53',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_SHOW: '54',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_SHOWTIMES: '55',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_SIGN_UP: '56',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_SUBSCRIBE: '57',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_USE_APP: '58',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_VIEW: '59',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_WATCH: '60',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_WATCH_EPISODE: '61',\n\n  // amp-story-interactive\n  AMP_STORY_INTERACTIVE_DISCLAIMER_NOTE: '89',\n  AMP_STORY_INTERACTIVE_RESULTS_SCORE: '84',\n  AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_A: '71',\n  AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_B: '72',\n  AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_C: '73',\n  AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_D: '74',\n\n  // DEPRECATED_AMP_STORY_EXPERIMENT_ENABLE_BUTTON_LABEL: '0',\n  // DEPRECATED_AMP_STORY_EXPERIMENT_ENABLED_TEXT: '1',\n  // DEPRECATED_AMP_STORY_CONSENT_DISMISS_DIALOG_BUTTON_LABEL: '24',\n  // DEPRECATED_AMP_STORY_SYSTEM_LAYER_SHARE_WIDGET_LABEL: '17',\n};\n\n/**\n * @typedef {{\n *   string: string,\n *   description: string,\n * }}\n */\nexport let LocalizedStringDef;\n\n/**\n * @typedef {!Object<!LocalizedStringId, !LocalizedStringDef>}\n */\nexport let LocalizedStringBundleDef;\n\n/**\n * Creates a deep copy of the specified LocalizedStringBundle.\n * @param {!LocalizedStringBundleDef} localizedStringBundle\n * @return {!LocalizedStringBundleDef}\n */\nfunction cloneLocalizedStringBundle(localizedStringBundle) {\n  return /** @type {!LocalizedStringBundleDef} */ (\n    parseJson(\n      JSON.stringify(/** @type {!JsonObject} */ (localizedStringBundle))\n    )\n  );\n}\n\n/**\n * Creates a pseudo locale by applying string transformations (specified by the\n * localizationFn) to an existing string bundle, without modifying the original.\n * @param {!LocalizedStringBundleDef} localizedStringBundle The localized\n *     string bundle to be transformed.\n * @param {function(string): string} localizationFn The transformation to be\n *     applied to each string in the bundle.\n * @return {!LocalizedStringBundleDef} The new strings.\n */\nexport function createPseudoLocale(localizedStringBundle, localizationFn) {\n  /** @type {!LocalizedStringBundleDef} */\n  const pseudoLocaleStringBundle = cloneLocalizedStringBundle(\n    localizedStringBundle\n  );\n\n  Object.keys(pseudoLocaleStringBundle).forEach((localizedStringIdAsStr) => {\n    const localizedStringId = /** @type {!LocalizedStringId} */ (\n      localizedStringIdAsStr\n    );\n    pseudoLocaleStringBundle[localizedStringId].string = localizationFn(\n      localizedStringBundle[localizedStringId].string\n    );\n    pseudoLocaleStringBundle[localizedStringId].fallback = localizationFn(\n      localizedStringBundle[localizedStringId].fallback\n    );\n  });\n\n  return pseudoLocaleStringBundle;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Magic constant that is replaced by babel.\n// IS_MINIFIED is always replaced with true when closure compiler is used\nconst IS_MINIFIED = false;\n\n/**\n * Returns true whenever closure compiler is used.\n * @return {boolean}\n */\nexport function isMinifiedMode() {\n  return IS_MINIFIED;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {isMinifiedMode} from '../minified-mode';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (isMinifiedMode()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../../../third_party/css-escape/css-escape';\nimport {devAssert} from '../assert';\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n * @suppress {uselessCode}\n */\nexport function escapeCssSelectorIdent(ident) {\n  // This gets rewritten to true/false during compilation. It will trigger an\n  // JSC_UNREACHABLE_CODE warning, but that's intentional for DCE.\n  if (IS_ESM) {\n    return CSS.escape(ident);\n  }\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The LocalizedStringId type is imported even though it is not used because the\n// compiler does not output types for enums, but we want to distinguish between\n// LocalizedStringId enum values and any other strings.\n// eslint-disable-next-line no-unused-vars\nimport {LocalizedStringId} from '../localized-strings';\nimport {Services} from '../services';\nimport {closest} from '../core/dom/query';\n\n/**\n * Language code used if there is no language code specified by the document.\n * @const {string}\n */\nconst FALLBACK_LANGUAGE_CODE = 'default';\n\n/**\n * @const {!RegExp}\n */\nconst LANGUAGE_CODE_CHUNK_REGEX = /\\w+/gi;\n\n/**\n * Gets the string matching the specified localized string ID in the language\n * specified.\n * @param {!Object<string, !../localized-strings.LocalizedStringBundleDef>} localizedStringBundles\n * @param {!Array<string>} languageCodes\n * @param {!LocalizedStringId} localizedStringId\n * @return {?string}\n */\nfunction findLocalizedString(\n  localizedStringBundles,\n  languageCodes,\n  localizedStringId\n) {\n  let localizedString = null;\n\n  languageCodes.some((languageCode) => {\n    const localizedStringBundle = localizedStringBundles[languageCode];\n    if (localizedStringBundle && localizedStringBundle[localizedStringId]) {\n      localizedString =\n        localizedStringBundle[localizedStringId].string ||\n        localizedStringBundle[localizedStringId].fallback;\n      return !!localizedString;\n    }\n\n    return false;\n  });\n\n  return localizedString;\n}\n\n/**\n * @param {string} languageCode\n * @return {!Array<string>} A list of language codes.\n * @visibleForTesting\n */\nexport function getLanguageCodesFromString(languageCode) {\n  if (!languageCode) {\n    return ['en', FALLBACK_LANGUAGE_CODE];\n  }\n  const matches = languageCode.match(LANGUAGE_CODE_CHUNK_REGEX) || [];\n  return matches.reduce(\n    (fallbackLanguageCodeList, chunk, index) => {\n      const fallbackLanguageCode = matches\n        .slice(0, index + 1)\n        .join('-')\n        .toLowerCase();\n      fallbackLanguageCodeList.unshift(fallbackLanguageCode);\n      return fallbackLanguageCodeList;\n    },\n    [FALLBACK_LANGUAGE_CODE]\n  );\n}\n\n/**\n * Localization service.\n */\nexport class LocalizationService {\n  /**\n   * @param {!Element} element\n   */\n  constructor(element) {\n    this.element_ = element;\n\n    /**\n     * @private @const {?string}\n     */\n    this.viewerLanguageCode_ = Services.viewerForDoc(element).getParam('lang');\n\n    /**\n     * A mapping of language code to localized string bundle.\n     * @private @const {!Object<string, !../localized-strings.LocalizedStringBundleDef>}\n     */\n    this.localizedStringBundles_ = {};\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {!Array<string>}\n   * @private\n   */\n  getLanguageCodesForElement_(element) {\n    const languageEl = closest(element, (el) => el.hasAttribute('lang'));\n    const languageCode = languageEl ? languageEl.getAttribute('lang') : null;\n    const languageCodesToUse = getLanguageCodesFromString(languageCode || '');\n\n    if (this.viewerLanguageCode_) {\n      languageCodesToUse.unshift(this.viewerLanguageCode_);\n    }\n\n    return languageCodesToUse;\n  }\n\n  /**\n   * @param {string} languageCode The language code to associate with the\n   *     specified localized string bundle.\n   * @param {!../localized-strings.LocalizedStringBundleDef} localizedStringBundle\n   *     The localized string bundle to register.\n   * @return {!LocalizationService} For chaining.\n   */\n  registerLocalizedStringBundle(languageCode, localizedStringBundle) {\n    const normalizedLangCode = languageCode.toLowerCase();\n    if (!this.localizedStringBundles_[normalizedLangCode]) {\n      this.localizedStringBundles_[normalizedLangCode] = {};\n    }\n\n    Object.assign(\n      this.localizedStringBundles_[normalizedLangCode],\n      localizedStringBundle\n    );\n    return this;\n  }\n\n  /**\n   * @param {!LocalizedStringId} localizedStringId\n   * @param {!Element=} elementToUse The element where the string will be\n   *     used.  The language is based on the language at that part of the\n   *     document.  If unspecified, will use the document-level language, if\n   *     one exists, or the default otherwise.\n   * @return {?string}\n   */\n  getLocalizedString(localizedStringId, elementToUse = this.element_) {\n    const languageCodes = this.getLanguageCodesForElement_(elementToUse);\n\n    return findLocalizedString(\n      this.localizedStringBundles_,\n      languageCodes,\n      localizedStringId\n    );\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LocalizationService} from '../../../src/service/localization';\nimport {\n  LocalizedStringId,\n  createPseudoLocale,\n} from '../../../src/localized-strings';\nimport {Services} from '../../../src/services';\nimport {registerServiceBuilderForDoc} from '../../../src/service';\nimport LocalizedStringsAr from './_locales/ar.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsDe from './_locales/de.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsEn from './_locales/en.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsEnGb from './_locales/en-GB.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsEs from './_locales/es.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsEs419 from './_locales/es-419.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsFr from './_locales/fr.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsHi from './_locales/hi.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsId from './_locales/id.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsIt from './_locales/it.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsJa from './_locales/ja.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsKo from './_locales/ko.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsNl from './_locales/nl.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsNo from './_locales/no.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsPtBr from './_locales/pt-BR.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsPtPt from './_locales/pt-PT.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsRu from './_locales/ru.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsTr from './_locales/tr.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsVi from './_locales/vi.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsZhCn from './_locales/zh-CN.json' assert {type: 'json'}; // lgtm[js/syntax-error]\nimport LocalizedStringsZhTw from './_locales/zh-TW.json' assert {type: 'json'}; // lgtm[js/syntax-error]\n\n/** @const */\nexport const CtaTypes = {\n  APPLY_NOW: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_APPLY_NOW,\n  BOOK_NOW: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_BOOK_NOW,\n  BUY_TICKETS: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_BUY_TICKETS,\n  DOWNLOAD: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_DOWNLOAD,\n  EXPLORE: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_EXPLORE,\n  GET_NOW: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_GET_NOW,\n  INSTALL: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_INSTALL,\n  LEARN_MORE: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_LEARN_MORE,\n  LISTEN: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_LISTEN,\n  MORE: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_MORE,\n  OPEN_APP: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_OPEN_APP,\n  ORDER_NOW: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_ORDER_NOW,\n  PLAY: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_PLAY,\n  READ: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_READ,\n  SHOP: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_SHOP,\n  SHOW: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_SHOW,\n  SHOWTIMES: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_SHOWTIMES,\n  SIGN_UP: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_SIGN_UP,\n  SUBSCRIBE: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_SUBSCRIBE,\n  USE_APP: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_USE_APP,\n  VIEW: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_VIEW,\n  WATCH: LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_WATCH,\n  WATCH_EPISODE:\n    LocalizedStringId.AMP_STORY_AUTO_ADS_BUTTON_LABEL_WATCH_EPISODE,\n};\n\n/**\n * Util function to retrieve the localization service. Ensures we can retrieve\n * the service synchronously without running into race conditions.\n * @param {!Element} element\n * @return {!../../../src/service/localization.LocalizationService}\n */\nconst getLocalizationService = (element) => {\n  let localizationService = Services.localizationForDoc(element);\n\n  if (!localizationService) {\n    localizationService = new LocalizationService(element);\n    registerServiceBuilderForDoc(element, 'localization', function () {\n      return localizationService;\n    });\n  }\n\n  return localizationService;\n};\n\nexport class StoryAdLocalization {\n  /**\n   * @param {!Element} storyAutoAdsEl\n   */\n  constructor(storyAutoAdsEl) {\n    /** @private @const {!Element} */\n    this.storyAutoAdsEl_ = storyAutoAdsEl;\n    /** @private {?../../../src/service/localization.LocalizationService} */\n    this.localizationService_ = null;\n  }\n\n  /**\n   * @param {!../../../src/localized-strings.LocalizedStringId} id\n   * @return {?string}\n   */\n  getLocalizedString(id) {\n    if (!this.localizationService_) {\n      this.init_();\n    }\n    return this.localizationService_.getLocalizedString(id);\n  }\n\n  /**\n   * Create localization service and register all bundles.\n   */\n  init_() {\n    this.localizationService_ = getLocalizationService(this.storyAutoAdsEl_);\n\n    const enXaPseudoLocaleBundle = createPseudoLocale(\n      LocalizedStringsEn,\n      (s) => `[${s} one two]`\n    );\n\n    this.localizationService_\n      .registerLocalizedStringBundle('default', LocalizedStringsEn)\n      .registerLocalizedStringBundle('ar', LocalizedStringsAr)\n      .registerLocalizedStringBundle('de', LocalizedStringsDe)\n      .registerLocalizedStringBundle('en', LocalizedStringsEn)\n      .registerLocalizedStringBundle('en-GB', LocalizedStringsEnGb)\n      .registerLocalizedStringBundle('es', LocalizedStringsEs)\n      .registerLocalizedStringBundle('es-419', LocalizedStringsEs419)\n      .registerLocalizedStringBundle('fr', LocalizedStringsFr)\n      .registerLocalizedStringBundle('hi', LocalizedStringsHi)\n      .registerLocalizedStringBundle('id', LocalizedStringsId)\n      .registerLocalizedStringBundle('it', LocalizedStringsIt)\n      .registerLocalizedStringBundle('ja', LocalizedStringsJa)\n      .registerLocalizedStringBundle('ko', LocalizedStringsKo)\n      .registerLocalizedStringBundle('nl', LocalizedStringsNl)\n      .registerLocalizedStringBundle('no', LocalizedStringsNo)\n      .registerLocalizedStringBundle('pt-PT', LocalizedStringsPtPt)\n      .registerLocalizedStringBundle('pt-BR', LocalizedStringsPtBr)\n      .registerLocalizedStringBundle('ru', LocalizedStringsRu)\n      .registerLocalizedStringBundle('tr', LocalizedStringsTr)\n      .registerLocalizedStringBundle('vi', LocalizedStringsVi)\n      .registerLocalizedStringBundle('zh-cn', LocalizedStringsZhCn)\n      .registerLocalizedStringBundle('zh-TW', LocalizedStringsZhTw)\n      .registerLocalizedStringBundle('en-xa', enXaPseudoLocaleBundle);\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../../assert';\n\n/**\n * Interpret a byte array as a UTF-8 string.\n * @param {!BufferSource} bytes\n * @return {string}\n */\nexport function utf8Decode(bytes) {\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder('utf-8').decode(bytes);\n  }\n  const asciiString = bytesToString(new Uint8Array(bytes.buffer || bytes));\n  return decodeURIComponent(escape(asciiString));\n}\n\n/**\n * Turn a string into UTF-8 bytes.\n * @param {string} string\n * @return {!Uint8Array}\n */\nexport function utf8Encode(string) {\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder('utf-8').encode(string);\n  }\n  return stringToBytes(unescape(encodeURIComponent(string)));\n}\n\n/**\n * Converts a string which holds 8-bit code points, such as the result of atob,\n * into a Uint8Array with the corresponding bytes.\n * If you have a string of characters, you probably want to be using utf8Encode.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function stringToBytes(str) {\n  const bytes = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    const charCode = str.charCodeAt(i);\n    devAssert(charCode <= 255, 'Characters must be in range [0,255]');\n    bytes[i] = charCode;\n  }\n  return bytes;\n}\n\n/**\n * Converts a 8-bit bytes array into a string\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function bytesToString(bytes) {\n  // Intentionally avoids String.fromCharCode.apply so we don't suffer a\n  // stack overflow. #10495, https://jsperf.com/bytesToString-2\n  const array = new Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = String.fromCharCode(bytes[i]);\n  }\n  return array.join('');\n}\n\n/**\n * Converts a 4-item byte array to an unsigned integer.\n * Assumes bytes are big endian.\n * @param {!Uint8Array} bytes\n * @return {number}\n */\nexport function bytesToUInt32(bytes) {\n  if (bytes.length != 4) {\n    throw new Error('Received byte array with length != 4');\n  }\n  const val =\n    ((bytes[0] & 0xff) << 24) |\n    ((bytes[1] & 0xff) << 16) |\n    ((bytes[2] & 0xff) << 8) |\n    (bytes[3] & 0xff);\n  // Convert to unsigned.\n  return val >>> 0;\n}\n\n/**\n * Generate a random bytes array with specific length using\n * win.crypto.getRandomValues. Return null if it is not available.\n * @param {!Window} win\n * @param {number} length\n * @return {?Uint8Array}\n */\nexport function getCryptoRandomBytesArray(win, length) {\n  let {crypto} = win;\n\n  // Support IE 11\n  if (!IS_ESM) {\n    crypto = /** @type {!webCrypto.Crypto|undefined} */ (\n      crypto || win.msCrypto\n    );\n    if (!crypto || !crypto.getRandomValues) {\n      return null;\n    }\n  }\n\n  // Widely available in browsers we support:\n  // http://caniuse.com/#search=getRandomValues\n  const uint8array = new Uint8Array(length);\n  crypto.getRandomValues(uint8array);\n  return uint8array;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CtaTypes} from './story-ad-localization';\nimport {getCryptoRandomBytesArray} from '../../../src/core/types/string/bytes';\n\n/**\n * Returns an string with a total of 128 of random values based on the\n * `win.crypto.getRandomValues` API. If that is not available concatenates\n * a string of other values that might be hard to guess including\n * `Math.random` and the current time.\n * @param {!Window} win\n * @return {string} Entropy.\n */\nexport function getUniqueId(win) {\n  // Use win.crypto.getRandomValues to get 128 bits of random value\n  const uint8array = getCryptoRandomBytesArray(win, 16); // 128 bit\n  if (uint8array) {\n    return uint8array.join('');\n  }\n\n  // Support for legacy browsers.\n  return String(\n    win.location.href +\n      Date.now() +\n      win.Math.random() +\n      win.screen.width +\n      win.screen.height\n  );\n}\n\n/**\n * Localizes CTA text if it is chosen from our predefined types.a\n * @param {string} ctaType\n * @param {!./story-ad-localization.StoryAdLocalization} localizationService\n * @return {?string}\n */\nexport function localizeCtaText(ctaType, localizationService) {\n  // CTA picked from predefined choices.\n  if (CtaTypes[ctaType]) {\n    const ctaLocalizedStringId = CtaTypes[ctaType];\n    return localizationService.getLocalizedString(ctaLocalizedStringId);\n  }\n  // Custom CTA text - Should already be localized.\n  return ctaType;\n}\n\n/**\n * Returns document from given iframe, or null if non FIE.\n * @param {HTMLIFrameElement} iframe\n * @return {!Document}\n */\nexport function getFrameDoc(iframe) {\n  return iframe.contentDocument || iframe.contentWindow.document;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {dict} from './core/types/object';\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject} vars A map of vars and their values.\n * @param {boolean} enableDataVars A boolean to indicate if data-vars-*\n * attribute value from target element should be included.\n */\nexport function triggerAnalyticsEvent(\n  target,\n  eventType,\n  vars = dict(),\n  enableDataVars = true\n) {\n  Services.analyticsForDocOrNull(target).then((analytics) => {\n    if (!analytics) {\n      return;\n    }\n    analytics.triggerEventForTarget(target, eventType, vars, enableDataVars);\n  });\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dict} from '../../../src/core/types/object';\nimport {getUniqueId} from './utils';\nimport {triggerAnalyticsEvent} from '../../../src/analytics';\n\n/** @const {string} */\nexport const STORY_AD_ANALYTICS = 'story-ad-analytics';\n\n/** @enum {string} */\nexport const AnalyticsEvents = {\n  AD_REQUESTED: 'story-ad-request',\n  AD_LOADED: 'story-ad-load',\n  AD_INSERTED: 'story-ad-insert',\n  AD_VIEWED: 'story-ad-view',\n  AD_SWIPED: 'story-ad-swipe',\n  AD_CLICKED: 'story-ad-click',\n  AD_EXITED: 'story-ad-exit',\n  AD_DISCARDED: 'story-ad-discard',\n};\n\n/** @enum {string} */\nexport const AnalyticsVars = {\n  // Timestamp when ad is requested.\n  AD_REQUESTED: 'requestTime',\n  // Timestamp when ad emits `INI_LOAD` signal.\n  AD_LOADED: 'loadTime',\n  // Timestamp when ad is inserted into story as page after next.\n  AD_INSERTED: 'insertTime',\n  // Timestamp when page becomes active page.\n  AD_VIEWED: 'viewTime',\n  // Timestamp when ad page detects swipe event.\n  AD_SWIPED: 'swipeTime',\n  // Timestamp when ad is clicked.\n  AD_CLICKED: 'clickTime',\n  // Timestamp when ad page moves from active => inactive.\n  AD_EXITED: 'exitTime',\n  // Timestamp when ad is discared due to bad metadata etc.\n  AD_DISCARDED: 'discardTime',\n  // Index of the ad generating the trigger.\n  AD_INDEX: 'adIndex',\n  // Id that should be unique for every ad.\n  AD_UNIQUE_ID: 'adUniqueId',\n  // Position in the parent story. Number of page before ad + 1. Does not count\n  // previously inserted ad pages.\n  POSITION: 'position',\n  // Given cta-type of inserted ad.\n  CTA_TYPE: 'ctaType',\n};\n\nexport class StoryAdAnalytics {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const @private {!Window} */\n    this.win_ = ampdoc.win;\n    /** @const @private {!Object<number, JsonObject>} */\n    this.data_ = {};\n  }\n\n  /**\n   * Construct an analytics event and trigger it.\n   * @param {!Element} element amp-story-page element containing ad.\n   * @param {number} adIndex\n   * @param {string} eventType\n   * @param {!Object<string, number>} vars A map of vars and their values.\n   */\n  fireEvent(element, adIndex, eventType, vars) {\n    this.ensurePageTrackingInitialized_(adIndex);\n    Object.assign(/** @type {!Object} */ (this.data_[adIndex]), vars);\n    triggerAnalyticsEvent(\n      element,\n      eventType,\n      /** @type {!JsonObject} */ (this.data_[adIndex])\n    );\n  }\n\n  /**`\n   * Adds a variable for a specific ad that can be used in all subsequent triggers.\n   * @param {number} adIndex\n   * @param {string} varName\n   * @param {*} value\n   */\n  setVar(adIndex, varName, value) {\n    this.ensurePageTrackingInitialized_(adIndex);\n    this.data_[adIndex][varName] = value;\n  }\n\n  /**\n   * Creates a tracking object for each page if non-existant.\n   * @param {number} adIndex\n   */\n  ensurePageTrackingInitialized_(adIndex) {\n    if (!this.data_[adIndex]) {\n      this.data_[adIndex] = dict({\n        [AnalyticsVars.AD_INDEX]: adIndex,\n        [AnalyticsVars.AD_UNIQUE_ID]: getUniqueId(this.win_),\n      });\n    }\n  }\n}\n", "export const CSS = \".i-amphtml-story-desktop-panels amp-story-page[i-amphtml-loading][ad]{transform:scale(1) translateX(-100%) translateY(200%)!important}.i-amphtml-story-desktop-fullbleed .i-amphtml-cta-container{bottom:12.5vh!important;top:67.5%!important}.i-amphtml-glass-pane{height:100%!important;width:100%!important;z-index:1!important}amp-story-page[xdomain-ad] .i-amphtml-glass-pane{height:80%!important}amp-story-page amp-ad iframe{width:100%;height:100%}amp-story-page amp-ad[data-a4a-upgrade-type=amp-ad-network-doubleclick-impl],amp-story-page amp-ad[type=adsense]{top:0!important;left:0!important;transform:translate(0)!important}.i-amphtml-story-desktop-fullbleed .i-amphtml-story-grid-template-fill>amp-ad{left:50%!important;right:auto!important;margin:auto!important;min-height:75vh!important;max-height:75vh!important;min-width:45vh!important;max-width:45vh!important;transform:translateX(-50%)!important}\\n/*# sourceURL=/extensions/amp-story-auto-ads/0.1/amp-story-auto-ads.css*/\";\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element's implementation has been registered and ready for upgrade.\n   */\n  READY_TO_UPGRADE: 'ready-upgrade',\n\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has been mounted.\n   */\n  MOUNTED: 'mounted',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {lastChildElement} from './core/dom/query';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {createCustomEvent} from '../../../src/event-helper';\n\n/** @const {!Object<string, string>} */\nexport const EventType = {\n  // Triggered when the user mutes the story\n  MUTE: 'ampstory:mute',\n\n  // Triggered when the user unmutes the story\n  UNMUTE: 'ampstory:unmute',\n\n  // Triggered when the story should switch to a specified page\n  SWITCH_PAGE: 'ampstory:switchpage',\n\n  // Triggered when the story should switch to the previous page\n  PREVIOUS_PAGE: 'ampstory:previouspage',\n\n  // Triggered when the story should switch to the next page\n  NEXT_PAGE: 'ampstory:nextpage',\n\n  // Triggered when a page updates its progress\n  PAGE_PROGRESS: 'ampstory:pageprogress',\n\n  // Triggered when the story should be replayed\n  REPLAY: 'ampstory:replay',\n\n  // DEVELOPMENT MODE ONLY: Triggered when a story page has log entries (e.g.\n  // warnings or errors).\n  DEV_LOG_ENTRIES_AVAILABLE: 'ampstory:devlogentriesavailable',\n\n  // Triggered when user clicks on end 75% of the last page\n  NO_NEXT_PAGE: 'ampstory:nonextpage',\n\n  // Triggered when user clicks on start 25% of the first page\n  NO_PREVIOUS_PAGE: 'ampstory:nopreviouspage',\n\n  // Triggered when a story has loaded at least its initial set of pages.\n  STORY_LOADED: 'ampstory:load',\n\n  // Triggered when a page has loaded at least one frame of all of its media.\n  PAGE_LOADED: 'ampstory:pageload',\n\n  // Dispatches an action to the amp-story store service. Only works under test.\n  DISPATCH_ACTION: 'ampstory:dispatchaction',\n};\n\n/**\n * @param {!Window} win\n * @param {!EventTarget} source\n * @param {string} eventName\n * @param {!JsonObject=} payload\n * @param {!CustomEventInit=} eventInit\n */\nexport function dispatch(\n  win,\n  source,\n  eventName,\n  payload = undefined,\n  eventInit = undefined\n) {\n  const event = createCustomEvent(win, eventName, payload, eventInit);\n  source.dispatchEvent(event);\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {isEnumValue} from '../../../src/core/types';\nimport {parseQueryString} from '../../../src/core/types/string/url';\n\n/**\n * Embed mode for AMP story.  See ../embed-modes.md for details.\n * @enum {number}\n */\nexport const EmbedMode = {\n  /**\n   * Default mode.\n   */\n  NOT_EMBEDDED: 0,\n\n  /**\n   * TBD embed mode.\n   *\n   * This differs from the NOT_EMBEDDED embed mode in the following ways:\n   * - Hides all system layer buttons\n   * - Disables swipe-based user education\n   * - Disallows ads\n   * - Unmutes audio in the story by default\n   */\n  NAME_TBD: 1,\n\n  /**\n   * This mode is intended for embedders that natively handle sharing the story,\n   * thereby rendering the sharing functionality within the amp-story extension\n   * redundant.\n   *\n   * This differs from the NOT_EMBEDDED embed mode in the following ways:\n   * - Removes share icon from system layer\n   * - TODO(#14923): Removes the link information from embedded UIs.\n   */\n  NO_SHARING: 2,\n\n  /**\n   * This mode is intended for a preview of the story.\n   *\n   * This differs from the NOT_EMBEDDED embed mode in the following ways:\n   * - Auto-advances pages by a given duration.\n   * - Hides all system layer buttons\n   * - Disables swipe-based user education\n   * - Disallows ads\n   */\n  PREVIEW: 3,\n\n  /**\n   * This mode is intended for embedders that natively handle the audio and\n   * sharing experiences, through native controls and viewer communication.\n   *\n   * This differs from the NOT_EMBEDDED embed mode in the following ways:\n   * - Removes share icon from system layer\n   * - Removes audio icon from system layer\n   */\n  NO_SHARING_NOR_AUDIO_UI: 4,\n};\n\n/**\n * Parameter to retrieve the embed mode from the location hash.\n * @type {string}\n */\nexport const EmbedModeParam = 'embedMode';\n\n/**\n * @param {string} str\n * @return {!EmbedMode}\n * @package\n */\nexport function parseEmbedMode(str) {\n  const params = parseQueryString(str);\n  const unsanitizedEmbedMode = params[EmbedModeParam];\n  const embedModeIndex = parseInt(unsanitizedEmbedMode, 10);\n\n  return isEnumValue(EmbedMode, embedModeIndex)\n    ? /** @type {!EmbedMode} */ (embedModeIndex)\n    : EmbedMode.NOT_EMBEDDED;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {removeItem} from '../types/array';\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    removeItem(this.handlers_, handler);\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    for (const handler of this.handlers_) {\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    return this.handlers_?.length ?? 0;\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {EmbedMode, parseEmbedMode} from './embed-mode';\nimport {Observable} from '../../../src/core/data-structures/observable';\nimport {Services} from '../../../src/services';\nimport {deepEquals} from '../../../src/core/types/object/json';\nimport {dev} from '../../../src/log';\nimport {hasOwn} from '../../../src/core/types/object';\nimport {registerServiceBuilder} from '../../../src/service';\n\n/** @type {string} */\nconst TAG = 'amp-story';\n\n/**\n * Util function to retrieve the store service. Ensures we can retrieve the\n * service synchronously from the amp-story codebase without running into race\n * conditions.\n * @param  {!Window} win\n * @return {!AmpStoryStoreService}\n */\nexport const getStoreService = (win) => {\n  let service = Services.storyStoreService(win);\n\n  if (!service) {\n    service = new AmpStoryStoreService(win);\n    registerServiceBuilder(win, 'story-store', function () {\n      return service;\n    });\n  }\n\n  return service;\n};\n\n/**\n * Different UI experiences to display the story.\n * @const @enum {number}\n */\nexport const UIType = {\n  MOBILE: 0,\n  DESKTOP_PANELS: 1, // Default desktop UI.\n  DESKTOP_FULLBLEED: 2, // Desktop UI if landscape mode is enabled.\n  VERTICAL: 3, // Vertical scrolling versions, for search engine bots indexing.\n};\n\n/**\n * States in which an embedded component could be found in.\n * @enum {number}\n */\nexport const EmbeddedComponentState = {\n  HIDDEN: 0, // Component is present in page, but hasn't been interacted with.\n  FOCUSED: 1, // Component has been clicked, a tooltip should be shown.\n  EXPANDED: 2, // Component is in expanded mode.\n};\n\n/**\n * @typedef {{\n *    element: !Element,\n *    state: !EmbeddedComponentState,\n *    clientX: number,\n *    clientY: number,\n * }}\n */\nexport let InteractiveComponentDef;\n\n/**\n * @typedef {{\n *    option: ?../../amp-story-interactive/0.1/amp-story-interactive-abstract.OptionConfigType,\n *    interactiveId: string,\n *    type: ../../amp-story-interactive/0.1/amp-story-interactive-abstract.InteractiveType\n * }}\n */\nexport let InteractiveReactData;\n\n/**\n * @typedef {{\n *    canInsertAutomaticAd: boolean,\n *    canShowAudioUi: boolean,\n *    canShowNavigationOverlayHint: boolean,\n *    canShowPaginationButtons: boolean,\n *    canShowPreviousPageHelp: boolean,\n *    canShowSharingUis: boolean,\n *    canShowSystemLayerButtons: boolean,\n *    viewerCustomControls: !Array<!Object>,\n *    accessState: boolean,\n *    adState: boolean,\n *    pageAttachmentState: boolean,\n *    affiliateLinkState: !Element,\n *    desktopState: boolean,\n *    educationState: boolean,\n *    gyroscopeEnabledState: string,\n *    hasSidebarState: boolean,\n *    infoDialogState: boolean,\n *    interactiveEmbeddedComponentState: !InteractiveComponentDef,\n *    interactiveReactState: !Map<string, !InteractiveReactData>,\n *    keyboardActiveState: boolean,\n *    mutedState: boolean,\n *    pageAudioState: boolean,\n *    pageHasElementsWithPlaybackState: boolean,\n *    panningMediaState: !Map<string, ../../amp-story-panning-media/0.1/amp-story-panning-media.panningMediaPositionDef> ,\n *    pausedState: boolean,\n *    previewState: boolean,\n *    rtlState: boolean,\n *    shareMenuState: boolean,\n *    sidebarState: boolean,\n *    storyHasAudioState: boolean,\n *    storyHasPlaybackUiState: boolean,\n *    storyHasBackgroundAudioState: boolean,\n *    supportedBrowserState: boolean,\n *    systemUiIsVisibleState: boolean,\n *    uiState: !UIType,\n *    viewportWarningState: boolean,\n *    actionsAllowlist: !Array<{tagOrTarget: string, method: string}>,\n *    consentId: ?string,\n *    currentPageId: string,\n *    currentPageIndex: number,\n *    pageIds: !Array<string>,\n *    newPageAvailableId: string,\n *    pageSize: {width: number, height: number},\n * }}\n */\nexport let State;\n\n/** @const @enum {string} */\nexport const StateProperty = {\n  // Embed options.\n  CAN_INSERT_AUTOMATIC_AD: 'canInsertAutomaticAd',\n  CAN_SHOW_AUDIO_UI: 'canShowAudioUi',\n  CAN_SHOW_NAVIGATION_OVERLAY_HINT: 'canShowNavigationOverlayHint',\n  CAN_SHOW_PAGINATION_BUTTONS: 'canShowPaginationButtons',\n  CAN_SHOW_PREVIOUS_PAGE_HELP: 'canShowPreviousPageHelp',\n  CAN_SHOW_SHARING_UIS: 'canShowSharingUis',\n  CAN_SHOW_SYSTEM_LAYER_BUTTONS: 'canShowSystemLayerButtons',\n  VIEWER_CUSTOM_CONTROLS: 'viewerCustomControls',\n\n  // App States.\n  ACCESS_STATE: 'accessState', // amp-access paywall.\n  AD_STATE: 'adState',\n  PAGE_ATTACHMENT_STATE: 'pageAttachmentState',\n  AFFILIATE_LINK_STATE: 'affiliateLinkState',\n  DESKTOP_STATE: 'desktopState',\n  EDUCATION_STATE: 'educationState',\n  GYROSCOPE_PERMISSION_STATE: 'gyroscopePermissionState',\n  HAS_SIDEBAR_STATE: 'hasSidebarState',\n  INFO_DIALOG_STATE: 'infoDialogState',\n  INTERACTIVE_COMPONENT_STATE: 'interactiveEmbeddedComponentState',\n  // State of interactive components (polls, quizzes) on the story.\n  INTERACTIVE_REACT_STATE: 'interactiveReactState',\n  KEYBOARD_ACTIVE_STATE: 'keyboardActiveState',\n  MUTED_STATE: 'mutedState',\n  PAGE_HAS_AUDIO_STATE: 'pageAudioState',\n  PAGE_HAS_ELEMENTS_WITH_PLAYBACK_STATE: 'pageHasElementsWithPlaybackState',\n  PANNING_MEDIA_STATE: 'panningMediaState',\n  PAUSED_STATE: 'pausedState',\n  // Story preview state.\n  PREVIEW_STATE: 'previewState',\n  RTL_STATE: 'rtlState',\n  SHARE_MENU_STATE: 'shareMenuState',\n  SIDEBAR_STATE: 'sidebarState',\n  SUPPORTED_BROWSER_STATE: 'supportedBrowserState',\n  // Any page has audio, or amp-story has a `background-audio` attribute.\n  STORY_HAS_AUDIO_STATE: 'storyHasAudioState',\n  // amp-story has a `background-audio` attribute.\n  STORY_HAS_BACKGROUND_AUDIO_STATE: 'storyHasBackgroundAudioState',\n  // Any page has elements with playback.\n  STORY_HAS_PLAYBACK_UI_STATE: 'storyHasPlaybackUiState',\n  SYSTEM_UI_IS_VISIBLE_STATE: 'systemUiIsVisibleState',\n  UI_STATE: 'uiState',\n  VIEWPORT_WARNING_STATE: 'viewportWarningState',\n\n  // App data.\n  ACTIONS_ALLOWLIST: 'actionsAllowlist',\n  CONSENT_ID: 'consentId',\n  CURRENT_PAGE_ID: 'currentPageId',\n  CURRENT_PAGE_INDEX: 'currentPageIndex',\n  ADVANCEMENT_MODE: 'advancementMode',\n  NAVIGATION_PATH: 'navigationPath',\n  NEW_PAGE_AVAILABLE_ID: 'newPageAvailableId',\n  PAGE_IDS: 'pageIds',\n  PAGE_SIZE: 'pageSize',\n};\n\n/** @const @enum {string} */\nexport const Action = {\n  ADD_INTERACTIVE_REACT: 'addInteractiveReact',\n  ADD_TO_ACTIONS_ALLOWLIST: 'addToActionsAllowlist',\n  CHANGE_PAGE: 'setCurrentPageId',\n  SET_CONSENT_ID: 'setConsentId',\n  SET_ADVANCEMENT_MODE: 'setAdvancementMode',\n  SET_NAVIGATION_PATH: 'setNavigationPath',\n  SET_PAGE_IDS: 'setPageIds',\n  TOGGLE_ACCESS: 'toggleAccess',\n  TOGGLE_AD: 'toggleAd',\n  TOGGLE_AFFILIATE_LINK: 'toggleAffiliateLink',\n  TOGGLE_EDUCATION: 'toggleEducation',\n  TOGGLE_HAS_SIDEBAR: 'toggleHasSidebar',\n  TOGGLE_INFO_DIALOG: 'toggleInfoDialog',\n  TOGGLE_INTERACTIVE_COMPONENT: 'toggleInteractiveComponent',\n  TOGGLE_KEYBOARD_ACTIVE_STATE: 'toggleKeyboardActiveState',\n  TOGGLE_MUTED: 'toggleMuted',\n  TOGGLE_PAGE_ATTACHMENT_STATE: 'togglePageAttachmentState',\n  TOGGLE_PAGE_HAS_AUDIO: 'togglePageHasAudio',\n  TOGGLE_PAGE_HAS_ELEMENT_WITH_PLAYBACK: 'togglePageHasElementWithPlayblack',\n  TOGGLE_PAUSED: 'togglePaused',\n  TOGGLE_RTL: 'toggleRtl',\n  TOGGLE_SHARE_MENU: 'toggleShareMenu',\n  TOGGLE_SIDEBAR: 'toggleSidebar',\n  TOGGLE_SUPPORTED_BROWSER: 'toggleSupportedBrowser',\n  TOGGLE_STORY_HAS_AUDIO: 'toggleStoryHasAudio',\n  TOGGLE_STORY_HAS_BACKGROUND_AUDIO: 'toggleStoryHasBackgroundAudio',\n  TOGGLE_STORY_HAS_PLAYBACK_UI: 'toggleStoryHasPlaybackUi',\n  TOGGLE_SYSTEM_UI_IS_VISIBLE: 'toggleSystemUiIsVisible',\n  TOGGLE_UI: 'toggleUi',\n  SET_GYROSCOPE_PERMISSION: 'setGyroscopePermission',\n  TOGGLE_VIEWPORT_WARNING: 'toggleViewportWarning',\n  ADD_NEW_PAGE_ID: 'addNewPageId',\n  SET_PAGE_SIZE: 'updatePageSize',\n  ADD_PANNING_MEDIA_STATE: 'addPanningMediaState',\n  SET_VIEWER_CUSTOM_CONTROLS: 'setCustomControls',\n};\n\n/**\n * Functions to compare a data structure from the previous to the new state and\n * detect a mutation, when a simple equality test would not work.\n * @private @const {!Object<string, !function(*, *):boolean>}\n */\nconst stateComparisonFunctions = {\n  [StateProperty.ACTIONS_ALLOWLIST]: (old, curr) => old.length !== curr.length,\n  [StateProperty.INTERACTIVE_COMPONENT_STATE]:\n    /**\n     * @param {InteractiveComponentDef} old\n     * @param {InteractiveComponentDef} curr\n     */\n    (old, curr) => old.element !== curr.element || old.state !== curr.state,\n  [StateProperty.NAVIGATION_PATH]: (old, curr) => old.length !== curr.length,\n  [StateProperty.PAGE_IDS]: (old, curr) => old.length !== curr.length,\n  [StateProperty.PAGE_SIZE]: (old, curr) =>\n    old === null ||\n    curr === null ||\n    old.width !== curr.width ||\n    old.height !== curr.height,\n  [StateProperty.PANNING_MEDIA_STATE]: (old, curr) =>\n    old === null || curr === null || !deepEquals(old, curr, 2),\n  [StateProperty.INTERACTIVE_REACT_STATE]: (old, curr) =>\n    !deepEquals(old, curr, 3),\n};\n\n/**\n * Returns the new sate.\n * @param  {!State} state Immutable state\n * @param  {!Action} action\n * @param  {*} data\n * @return {!State} new state\n */\nconst actions = (state, action, data) => {\n  switch (action) {\n    case Action.ADD_INTERACTIVE_REACT:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.INTERACTIVE_REACT_STATE]: {\n          ...state[StateProperty.INTERACTIVE_REACT_STATE],\n          [data['interactiveId']]: data,\n        },\n      });\n    case Action.ADD_NEW_PAGE_ID:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.NEW_PAGE_AVAILABLE_ID]: data,\n      });\n    case Action.ADD_PANNING_MEDIA_STATE:\n      const updatedState = {\n        ...state[StateProperty.PANNING_MEDIA_STATE],\n        ...data,\n      };\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PANNING_MEDIA_STATE]: updatedState,\n      });\n    case Action.ADD_TO_ACTIONS_ALLOWLIST:\n      const newActionsAllowlist = [].concat(\n        state[StateProperty.ACTIONS_ALLOWLIST],\n        data\n      );\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.ACTIONS_ALLOWLIST]: newActionsAllowlist,\n      });\n    // Triggers the amp-acess paywall.\n    case Action.TOGGLE_ACCESS:\n      // Don't change the PAUSED_STATE if ACCESS_STATE is not changed.\n      if (state[StateProperty.ACCESS_STATE] === data) {\n        return state;\n      }\n\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.ACCESS_STATE]: !!data,\n        [StateProperty.PAUSED_STATE]: !!data,\n      });\n    case Action.TOGGLE_PAGE_ATTACHMENT_STATE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAGE_ATTACHMENT_STATE]: !!data,\n      });\n    // Triggers the ad UI.\n    case Action.TOGGLE_AD:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.AD_STATE]: !!data,\n      });\n    // Expands or collapses the affiliate link.\n    case Action.TOGGLE_AFFILIATE_LINK:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.AFFILIATE_LINK_STATE]: data,\n      });\n    case Action.TOGGLE_EDUCATION:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.EDUCATION_STATE]: !!data,\n      });\n    case Action.TOGGLE_INTERACTIVE_COMPONENT:\n      data = /** @type {InteractiveComponentDef} */ (data);\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAUSED_STATE]:\n          data.state === EmbeddedComponentState.EXPANDED ||\n          data.state === EmbeddedComponentState.FOCUSED,\n        [StateProperty.SYSTEM_UI_IS_VISIBLE_STATE]:\n          data.state !== EmbeddedComponentState.EXPANDED ||\n          state.uiState === UIType.DESKTOP_PANELS,\n        [StateProperty.INTERACTIVE_COMPONENT_STATE]: data,\n      });\n    // Shows or hides the info dialog.\n    case Action.TOGGLE_INFO_DIALOG:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.INFO_DIALOG_STATE]: !!data,\n        [StateProperty.PAUSED_STATE]: !!data,\n      });\n    // Shows or hides the audio controls.\n    case Action.TOGGLE_STORY_HAS_AUDIO:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.STORY_HAS_AUDIO_STATE]: !!data,\n      });\n    case Action.TOGGLE_STORY_HAS_BACKGROUND_AUDIO:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.STORY_HAS_BACKGROUND_AUDIO_STATE]: !!data,\n      });\n    // Shows or hides the play/pause controls.\n    case Action.TOGGLE_STORY_HAS_PLAYBACK_UI:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.STORY_HAS_PLAYBACK_UI_STATE]: !!data,\n      });\n    // Mutes or unmutes the story media.\n    case Action.TOGGLE_MUTED:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.MUTED_STATE]: !!data,\n      });\n    case Action.TOGGLE_PAGE_HAS_AUDIO:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAGE_HAS_AUDIO_STATE]: !!data,\n      });\n    case Action.TOGGLE_PAGE_HAS_ELEMENT_WITH_PLAYBACK:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAGE_HAS_ELEMENTS_WITH_PLAYBACK_STATE]: !!data,\n      });\n    case Action.TOGGLE_PAUSED:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAUSED_STATE]: !!data,\n      });\n    case Action.TOGGLE_RTL:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.RTL_STATE]: !!data,\n      });\n    case Action.TOGGLE_KEYBOARD_ACTIVE_STATE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.KEYBOARD_ACTIVE_STATE]: !!data,\n      });\n    case Action.TOGGLE_SIDEBAR:\n      // Don't change the PAUSED_STATE if SIDEBAR_STATE is not changed.\n      if (state[StateProperty.SIDEBAR_STATE] === data) {\n        return state;\n      }\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAUSED_STATE]: !!data,\n        [StateProperty.SIDEBAR_STATE]: !!data,\n      });\n    case Action.TOGGLE_HAS_SIDEBAR:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.HAS_SIDEBAR_STATE]: !!data,\n      });\n    case Action.TOGGLE_SUPPORTED_BROWSER:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.SUPPORTED_BROWSER_STATE]: !!data,\n      });\n    case Action.TOGGLE_SHARE_MENU:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAUSED_STATE]: !!data,\n        [StateProperty.SHARE_MENU_STATE]: !!data,\n      });\n    case Action.TOGGLE_SYSTEM_UI_IS_VISIBLE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.SYSTEM_UI_IS_VISIBLE_STATE]: !!data,\n      });\n    case Action.TOGGLE_UI:\n      if (\n        state[StateProperty.UI_STATE] === UIType.VERTICAL &&\n        data !== UIType.VERTICAL\n      ) {\n        dev().error(TAG, 'Cannot switch away from UIType.VERTICAL');\n        return state;\n      }\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.DESKTOP_STATE]: data === UIType.DESKTOP_PANELS,\n        [StateProperty.UI_STATE]: data,\n      });\n    case Action.SET_GYROSCOPE_PERMISSION:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.GYROSCOPE_PERMISSION_STATE]: data,\n      });\n    case Action.TOGGLE_VIEWPORT_WARNING:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.VIEWPORT_WARNING_STATE]: !!data,\n      });\n    case Action.SET_CONSENT_ID:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.CONSENT_ID]: data,\n      });\n    case Action.CHANGE_PAGE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.CURRENT_PAGE_ID]: data.id,\n        [StateProperty.CURRENT_PAGE_INDEX]: data.index,\n      });\n    case Action.SET_ADVANCEMENT_MODE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.ADVANCEMENT_MODE]: data,\n      });\n    case Action.SET_NAVIGATION_PATH:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.NAVIGATION_PATH]: data,\n      });\n    case Action.SET_PAGE_IDS:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAGE_IDS]: data,\n      });\n    case Action.SET_PAGE_SIZE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAGE_SIZE]: data,\n      });\n    case Action.SET_VIEWER_CUSTOM_CONTROLS:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.VIEWER_CUSTOM_CONTROLS]: data,\n      });\n    default:\n      dev().error(TAG, 'Unknown action %s.', action);\n      return state;\n  }\n};\n\n/**\n * Store service.\n */\nexport class AmpStoryStoreService {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @private @const {!Window} */\n    this.win_ = win;\n\n    /** @private {!Object<string, !Observable>} */\n    this.listeners_ = {};\n\n    /** @private {!State} */\n    this.state_ = /** @type {!State} */ ({\n      ...this.getDefaultState_(),\n      ...this.getEmbedOverrides_(),\n    });\n  }\n\n  /**\n   * Retrieves a state property.\n   * @param  {string} key Property to retrieve from the state.\n   * @return {*}\n   */\n  get(key) {\n    if (!hasOwn(this.state_, key)) {\n      dev().error(TAG, 'Unknown state %s.', key);\n      return;\n    }\n    return this.state_[key];\n  }\n\n  /**\n   * Subscribes to a state property mutations.\n   * @param  {string} key\n   * @param  {!Function} listener\n   * @param  {boolean=} callToInitialize Whether the listener should be\n   *                                     triggered with current value.\n   */\n  subscribe(key, listener, callToInitialize = false) {\n    if (!hasOwn(this.state_, key)) {\n      dev().error(TAG, \"Can't subscribe to unknown state %s.\", key);\n      return;\n    }\n    if (!this.listeners_[key]) {\n      this.listeners_[key] = new Observable();\n    }\n    this.listeners_[key].add(listener);\n\n    if (callToInitialize) {\n      listener(this.get(key));\n    }\n  }\n\n  /**\n   * Dispatches an action and triggers the listeners for the updated state\n   * properties.\n   * @param  {!Action} action\n   * @param  {*} data\n   */\n  dispatch(action, data) {\n    const oldState = {...this.state_};\n    this.state_ = actions(this.state_, action, data);\n\n    let comparisonFn;\n    Object.keys(this.listeners_).forEach((key) => {\n      comparisonFn = stateComparisonFunctions[key];\n      if (\n        comparisonFn\n          ? comparisonFn(oldState[key], this.state_[key])\n          : oldState[key] !== this.state_[key]\n      ) {\n        this.listeners_[key].fire(this.state_[key]);\n      }\n    });\n  }\n\n  /**\n   * Retrieves the default state, that could be overriden by an embed mode.\n   * @return {!State}\n   * @private\n   */\n  getDefaultState_() {\n    // Compiler won't resolve the object keys and trigger an error for missing\n    // properties, so we have to force the type.\n    return /** @type {!State} */ ({\n      [StateProperty.CAN_INSERT_AUTOMATIC_AD]: true,\n      [StateProperty.CAN_SHOW_AUDIO_UI]: true,\n      [StateProperty.CAN_SHOW_NAVIGATION_OVERLAY_HINT]: true,\n      [StateProperty.CAN_SHOW_PREVIOUS_PAGE_HELP]: true,\n      [StateProperty.CAN_SHOW_PAGINATION_BUTTONS]: true,\n      [StateProperty.CAN_SHOW_SHARING_UIS]: true,\n      [StateProperty.CAN_SHOW_SYSTEM_LAYER_BUTTONS]: true,\n      [StateProperty.VIEWER_CUSTOM_CONTROLS]: [],\n      [StateProperty.ACCESS_STATE]: false,\n      [StateProperty.AD_STATE]: false,\n      [StateProperty.AFFILIATE_LINK_STATE]: null,\n      [StateProperty.DESKTOP_STATE]: false,\n      [StateProperty.EDUCATION_STATE]: false,\n      [StateProperty.GYROSCOPE_PERMISSION_STATE]: '',\n      [StateProperty.HAS_SIDEBAR_STATE]: false,\n      [StateProperty.INFO_DIALOG_STATE]: false,\n      [StateProperty.INTERACTIVE_COMPONENT_STATE]: {\n        state: EmbeddedComponentState.HIDDEN,\n      },\n      [StateProperty.INTERACTIVE_REACT_STATE]: {},\n      [StateProperty.KEYBOARD_ACTIVE_STATE]: false,\n      [StateProperty.MUTED_STATE]: true,\n      [StateProperty.PAGE_ATTACHMENT_STATE]: false,\n      [StateProperty.PAGE_HAS_AUDIO_STATE]: false,\n      [StateProperty.PAGE_HAS_ELEMENTS_WITH_PLAYBACK_STATE]: false,\n      [StateProperty.PANNING_MEDIA_STATE]: {},\n      [StateProperty.PAUSED_STATE]: false,\n      [StateProperty.RTL_STATE]: false,\n      [StateProperty.SHARE_MENU_STATE]: false,\n      [StateProperty.SIDEBAR_STATE]: false,\n      [StateProperty.SUPPORTED_BROWSER_STATE]: true,\n      [StateProperty.STORY_HAS_AUDIO_STATE]: false,\n      [StateProperty.STORY_HAS_BACKGROUND_AUDIO_STATE]: false,\n      [StateProperty.STORY_HAS_PLAYBACK_UI_STATE]: false,\n      [StateProperty.SYSTEM_UI_IS_VISIBLE_STATE]: true,\n      [StateProperty.UI_STATE]: UIType.MOBILE,\n      [StateProperty.VIEWPORT_WARNING_STATE]: false,\n      // amp-story only allows actions on a case-by-case basis to preserve UX\n      // behaviors. By default, no actions are allowed.\n      [StateProperty.ACTIONS_ALLOWLIST]: [],\n      [StateProperty.CONSENT_ID]: null,\n      [StateProperty.CURRENT_PAGE_ID]: '',\n      [StateProperty.CURRENT_PAGE_INDEX]: 0,\n      [StateProperty.ADVANCEMENT_MODE]: '',\n      [StateProperty.NEW_PAGE_AVAILABLE_ID]: '',\n      [StateProperty.NAVIGATION_PATH]: [],\n      [StateProperty.PAGE_IDS]: [],\n      [StateProperty.PAGE_SIZE]: null,\n      [StateProperty.PREVIEW_STATE]: false,\n    });\n  }\n\n  // @TODO(gmajoulet): These should get their own file if they start growing.\n  /**\n   * Retrieves the embed mode config, that will override the default state.\n   * @return {!Object<StateProperty, *>} Partial state\n   * @protected\n   */\n  getEmbedOverrides_() {\n    const embedMode = parseEmbedMode(this.win_.location.hash);\n    switch (embedMode) {\n      case EmbedMode.NAME_TBD:\n        return {\n          [StateProperty.CAN_INSERT_AUTOMATIC_AD]: false,\n          [StateProperty.CAN_SHOW_NAVIGATION_OVERLAY_HINT]: false,\n          [StateProperty.CAN_SHOW_PAGINATION_BUTTONS]: false,\n          [StateProperty.CAN_SHOW_PREVIOUS_PAGE_HELP]: true,\n          [StateProperty.CAN_SHOW_SYSTEM_LAYER_BUTTONS]: false,\n          [StateProperty.MUTED_STATE]: false,\n        };\n      case EmbedMode.NO_SHARING:\n        return {\n          [StateProperty.CAN_SHOW_SHARING_UIS]: false,\n        };\n      case EmbedMode.PREVIEW:\n        return {\n          [StateProperty.PREVIEW_STATE]: true,\n          [StateProperty.CAN_INSERT_AUTOMATIC_AD]: false,\n          [StateProperty.CAN_SHOW_NAVIGATION_OVERLAY_HINT]: false,\n          [StateProperty.CAN_SHOW_PAGINATION_BUTTONS]: false,\n          [StateProperty.CAN_SHOW_PREVIOUS_PAGE_HELP]: false,\n          [StateProperty.CAN_SHOW_SYSTEM_LAYER_BUTTONS]: false,\n        };\n      case EmbedMode.NO_SHARING_NOR_AUDIO_UI:\n        return {\n          [StateProperty.CAN_SHOW_AUDIO_UI]: false,\n          [StateProperty.CAN_SHOW_SHARING_UIS]: false,\n        };\n      default:\n        return {};\n    }\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isJsonScriptTag} from '../../../src/dom';\nimport {isObject} from '../../../src/core/types';\nimport {parseJson} from '../../../src/core/types/object/json';\nimport {user, userAssert} from '../../../src/log';\n\n/** @const {string} */\nconst TAG = 'amp-story-auto-ads:config';\n\n/** @enum {boolean} */\nconst DisallowedAdAttributes = {\n  'height': true,\n  'layout': true,\n  'width': true,\n};\n\n/** @enum {boolean} */\nconst AllowedAdTypes = {\n  'adsense': true,\n  'custom': true,\n  'doubleclick': true,\n  'fake': true,\n  'nws': true,\n};\n\nexport class StoryAdConfig {\n  /**\n   * @param {!Element} element amp-story-auto-ads element.\n   */\n  constructor(element) {\n    /** @private {!Element} amp-story-auto ads element. */\n    this.element_ = element;\n  }\n\n  /**\n   * Validate and sanitize config.\n   * @return {!JsonObject}\n   */\n  getConfig() {\n    const child = this.element_.firstElementChild;\n    userAssert(\n      child && isJsonScriptTag(child),\n      `The ${TAG} should ` +\n        'be inside a <script> tag with type=\"application/json\"'\n    );\n\n    const jsonConfig = parseJson(child.textContent);\n\n    const requiredAttrs = {\n      class: 'i-amphtml-story-ad',\n      layout: 'fill',\n      'amp-story': '',\n    };\n\n    const adAttributes = jsonConfig['ad-attributes'];\n    userAssert(\n      adAttributes,\n      `${TAG} Error reading config. ` +\n        'Top level JSON should have an \"ad-attributes\" key'\n    );\n\n    this.validateType_(adAttributes['type']);\n\n    for (const attr in adAttributes) {\n      const value = adAttributes[attr];\n      if (isObject(value)) {\n        adAttributes[attr] = JSON.stringify(value);\n      }\n      if (DisallowedAdAttributes[attr]) {\n        user().warn(TAG, 'ad-attribute \"%s\" is not allowed', attr);\n        delete adAttributes[attr];\n      }\n    }\n\n    return /** @type {!JsonObject} */ ({...adAttributes, ...requiredAttrs});\n  }\n\n  /**\n   * Logic specific to each ad type.\n   * @param {string} type\n   */\n  validateType_(type) {\n    userAssert(\n      !!AllowedAdTypes[type],\n      `${TAG} \"${type}\" ad type is missing or not supported`\n    );\n\n    if (type === 'fake') {\n      const {id} = this.element_;\n      userAssert(\n        id && id.startsWith('i-amphtml-demo-'),\n        `${TAG} id must start with i-amphtml-demo- to use fake ads`\n      );\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {px, setStyle, setStyles} from '../../../src/style';\n\n/** @const {number} Fixed button height from design spec. */\nconst MAX_HEIGHT = 32;\n\n/** @enum {number} From design spec. */\nconst FontSizes = {\n  MIN: 12,\n  MAX: 14,\n};\n\nexport class ButtonTextFitter {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   */\n  constructor(ampdoc) {\n    /** @const @private {!../../../src/service/mutator-interface.MutatorInterface} */\n    this.mutator_ = Services.mutatorForDoc(ampdoc);\n\n    /** @private {!Document} */\n    this.doc_ = ampdoc.win.document;\n\n    /** @private {!Element} */\n    this.measurer_ = this.doc_.createElement('div');\n\n    this.mutator_.mutateElement(this.measurer_, () => {\n      this.doc_.body.appendChild(this.measurer_);\n      setStyles(this.measurer_, {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        zIndex: 1,\n        visibility: 'hidden',\n        'font-weight': 'bold',\n        'letter-spacing': '0.2px',\n      });\n    });\n  }\n\n  /**\n   * @param {!Element} pageElement\n   * @param {!Element} container\n   * @param {string} content\n   * @return {Promise<boolean>}\n   */\n  fit(pageElement, container, content) {\n    let success = false;\n    return this.mutator_\n      .mutateElement(container, () => {\n        this.measurer_.textContent = content;\n        const fontSize = calculateFontSize(\n          this.measurer_,\n          MAX_HEIGHT,\n          this.getMaxWidth_(pageElement),\n          FontSizes.MIN,\n          FontSizes.MAX\n        );\n        if (fontSize >= FontSizes.MIN) {\n          this.updateFontSize_(container, fontSize);\n          success = true;\n        }\n      })\n      .then(() => {\n        return success;\n      });\n  }\n\n  /**\n   * Called on each button creation, in case of window resize.\n   * Page width - (2 x 32px of padding on each side) + (2 x 10px padding on button).\n   * @param {!Element} pageElement\n   * @return {number}\n   * @private\n   */\n  getMaxWidth_(pageElement) {\n    return pageElement./*OK*/ offsetWidth - 84;\n  }\n\n  /**\n   * @param {!Element} container\n   * @param {number} fontSize\n   */\n  updateFontSize_(container, fontSize) {\n    setStyle(container, 'fontSize', px(fontSize));\n  }\n}\n\n/**\n * This used to be binary search, but since range is so small just try the 3\n * values. If range gets larger, reevaluate.\n * @param {Element} measurer\n * @param {number} expectedHeight\n * @param {number} expectedWidth\n * @param {number} minFontSize\n * @param {number} maxFontSize\n * @return {number}\n */\nfunction calculateFontSize(\n  measurer,\n  expectedHeight,\n  expectedWidth,\n  minFontSize,\n  maxFontSize\n) {\n  for (let fontSize = maxFontSize; fontSize >= minFontSize; fontSize--) {\n    setStyle(measurer, 'fontSize', px(fontSize));\n    const height = measurer./*OK*/ offsetHeight;\n    const width = measurer./*OK*/ offsetWidth;\n    if (height < expectedHeight && width < expectedWidth) {\n      return fontSize;\n    }\n  }\n  // Did not fit within design spec.\n  return minFontSize - 1;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './core/data-structures/lru-cache';\nimport {dict, hasOwn} from './core/types/object';\nimport {endsWith} from './core/types/string';\nimport {getMode} from './mode';\nimport {isArray} from './core/types';\nimport {parseQueryString} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {?} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "export const CSS = \".i-amphtml-story-ad-attribution{position:absolute;bottom:0!important;left:0!important;max-height:15px!important;z-index:4!important}.i-amphtml-story-ad-fullbleed.i-amphtml-story-ad-attribution{bottom:12.5vh!important;left:50%!important;transform:translateX(-22.5vh)!important}\\n/*# sourceURL=/extensions/amp-story-auto-ads/0.1/amp-story-auto-ads-attribution.css*/\";\n", "/**\n* @license\n* Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n* Use of this source code is governed by a BSD-style\n* license that can be found in the LICENSE file or at\n* https://developers.google.com/open-source/licenses/bsd\n*/\n\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsultion: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to imlement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\n\nexport const ShadowCSS = {\n  strictStyling: false,\n  // change a selector like 'div' to 'name div'\n  /** @this {ShadowCSS} */\n  scopeRules: function(cssRules, scopeSelector, opt_transformer) {\n    var cssText = '';\n    if (cssRules) {\n      Array.prototype.forEach.call(cssRules, function(rule) {\n        if (rule.selectorText && (rule.style && rule.style.cssText !== undefined)) {\n          cssText += this.scopeSelector(rule.selectorText, scopeSelector,\n            this.strictStyling, opt_transformer) + ' {\\n\\t';\n          cssText += this.propertiesFromRule(rule) + '\\n}\\n\\n';\n        } else if (rule.type === CSSRule.MEDIA_RULE) {\n          cssText += '@media ' + rule.media.mediaText + ' {\\n';\n          cssText += this.scopeRules(rule.cssRules, scopeSelector);\n          cssText += '\\n}\\n\\n';\n        } else {\n          // KEYFRAMES_RULE in IE throws when we query cssText\n          // when it contains a -webkit- property.\n          // if this happens, we fallback to constructing the rule\n          // from the CSSRuleSet\n          // https://connect.microsoft.com/IE/feedbackdetail/view/955703/accessing-csstext-of-a-keyframe-rule-that-contains-a-webkit-property-via-cssom-generates-exception\n          try {\n            if (rule.cssText) {\n              cssText += rule.cssText + '\\n\\n';\n            }\n          } catch(x) {\n            if (rule.type === CSSRule.KEYFRAMES_RULE && rule.cssRules) {\n              cssText += this.ieSafeCssTextFromKeyFrameRule(rule);\n            }\n          }\n        }\n      }, this);\n    }\n    return cssText;\n  },\n  /** @this {ShadowCSS} */\n  ieSafeCssTextFromKeyFrameRule: function(rule) {\n    var cssText = '@keyframes ' + rule.name + ' {';\n    Array.prototype.forEach.call(rule.cssRules, function(rule) {\n      cssText += ' ' + rule.keyText + ' {' + rule.style.cssText + '}';\n    });\n    cssText += ' }';\n    return cssText;\n  },\n  /** @this {ShadowCSS} */\n  scopeSelector: function(selector, scopeSelector, strict, opt_transformer) {\n    var r = [], parts = selector.split(',');\n    parts.forEach(function(p) {\n      p = p.trim();\n      if (opt_transformer) {\n        p = opt_transformer(p);\n      }\n      if (this.selectorNeedsScoping(p, scopeSelector)) {\n        p = (strict && !p.match(polyfillHostNoCombinator)) ?\n            this.applyStrictSelectorScope(p, scopeSelector) :\n            this.applySelectorScope(p, scopeSelector);\n      }\n      r.push(p);\n    }, this);\n    return r.join(', ');\n  },\n  /** @this {ShadowCSS} */\n  selectorNeedsScoping: function(selector, scopeSelector) {\n    if (Array.isArray(scopeSelector)) {\n      return true;\n    }\n    var re = this.makeScopeMatcher(scopeSelector);\n    return !selector.match(re);\n  },\n  /** @this {ShadowCSS} */\n  makeScopeMatcher: function(scopeSelector) {\n    scopeSelector = scopeSelector.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + selectorReSuffix, 'm');\n  },\n  /** @this {ShadowCSS} */\n  applySelectorScope: function(selector, selectorScope) {\n    return Array.isArray(selectorScope) ?\n        this.applySelectorScopeList(selector, selectorScope) :\n        this.applySimpleSelectorScope(selector, selectorScope);\n  },\n  // apply an array of selectors\n  /** @this {ShadowCSS} */\n  applySelectorScopeList: function(selector, scopeSelectorList) {\n    var r = [];\n    for (var i=0, s; (s=scopeSelectorList[i]); i++) {\n      r.push(this.applySimpleSelectorScope(selector, s));\n    }\n    return r.join(', ');\n  },\n  // scope via name and [is=name]\n  /** @this {ShadowCSS} */\n  applySimpleSelectorScope: function(selector, scopeSelector) {\n    if (selector.match(polyfillHostRe)) {\n      selector = selector.replace(polyfillHostNoCombinator, scopeSelector);\n      return selector.replace(polyfillHostRe, scopeSelector + ' ');\n    } else {\n      return scopeSelector + ' ' + selector;\n    }\n  },\n  // return a selector with [name] suffix on each simple selector\n  // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]\n  /** @this {ShadowCSS} */\n  applyStrictSelectorScope: function(selector, scopeSelector) {\n    scopeSelector = scopeSelector.replace(/\\[is=([^\\]]*)\\]/g, '$1');\n    var splits = [' ', '>', '+', '~'],\n      scoped = selector,\n      attrName = '[' + scopeSelector + ']';\n    splits.forEach(function(sep) {\n      var parts = scoped.split(sep);\n      scoped = parts.map(function(p) {\n        // remove :host since it should be unnecessary\n        var t = p.trim().replace(polyfillHostRe, '');\n        if (t && (splits.indexOf(t) < 0) && (t.indexOf(attrName) < 0)) {\n          p = t.replace(/([^:]*)(:*)(.*)/, '$1' + attrName + '$2$3');\n        }\n        return p;\n      }).join(sep);\n    });\n    return scoped;\n  },\n  /** @this {ShadowCSS} */\n  propertiesFromRule: function(rule) {\n    var cssText = rule.style.cssText;\n    // TODO(sorvell): Safari cssom incorrectly removes quotes from the content\n    // property. (https://bugs.webkit.org/show_bug.cgi?id=118045)\n    // don't replace attr rules\n    if (rule.style.content && !rule.style.content.match(/['\"]+|attr/)) {\n      cssText = cssText.replace(/content:[^;]*;/g, 'content: \\'' +\n          rule.style.content + '\\';');\n    }\n    // TODO(sorvell): we can workaround this issue here, but we need a list\n    // of troublesome properties to fix https://github.com/Polymer/platform/issues/53\n    //\n    // inherit rules can be omitted from cssText\n    // TODO(sorvell): remove when Blink bug is fixed:\n    // https://code.google.com/p/chromium/issues/detail?id=358273\n    var style = rule.style;\n    for (var i in style) {\n      if (style[i] === 'initial') {\n        cssText += i + ': initial; ';\n      }\n    }\n    return cssText;\n  }\n};\n\nvar selectorRe = /([^{]*)({[\\s\\S]*?})/gim,\n    cssCommentRe = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentNextSelectorRe = /\\/\\*\\s*@polyfill ([^*]*\\*+([^/*][^*]*\\*+)*\\/)([^{]*?){/gim,\n    cssContentNextSelectorRe = /polyfill-next-selector[^}]*content\\:[\\s]*?['\"](.*?)['\"][;\\s]*}([^{]*?){/gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentRuleRe = /\\/\\*\\s@polyfill-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim,\n    cssContentRuleRe = /(polyfill-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentUnscopedRuleRe = /\\/\\*\\s@polyfill-unscoped-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim,\n    cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim,\n    cssPseudoRe = /::(x-[^\\s{,(]*)/gim,\n    cssPartRe = /::part\\(([^)]*)\\)/gim,\n    // note: :host pre-processed to -shadowcsshost.\n    polyfillHost = '-shadowcsshost',\n    // note: :host-context pre-processed to -shadowcsshostcontext.\n    polyfillHostContext = '-shadowcsscontext',\n    parenSuffix = ')(?:\\\\((' +\n        '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n        ')\\\\))?([^,{]*)';\n    var cssColonHostRe = new RegExp('(' + polyfillHost + parenSuffix, 'gim'),\n    cssColonHostContextRe = new RegExp('(' + polyfillHostContext + parenSuffix, 'gim'),\n    selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$',\n    colonHostRe = /\\:host/gim,\n    colonHostContextRe = /\\:host-context/gim,\n    /* host name without combinator */\n    polyfillHostNoCombinator = polyfillHost + '-no-combinator',\n    polyfillHostRe = new RegExp(polyfillHost, 'gim'),\n    polyfillHostContextRe = new RegExp(polyfillHostContext, 'gim'),\n    shadowDOMSelectorsRe = [\n      />>>/g,\n      /::shadow/g,\n      /::content/g,\n      // Deprecated selectors\n      /\\/deep\\//g, // former >>>\n      /\\/shadow\\//g, // former ::shadow\n      /\\/shadow-deep\\//g, // former /deep/\n      /\\^\\^/g,     // former /shadow/\n      /\\^(?!=)/g   // former /shadow-deep/\n    ];\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Possible versions of Shadow DOM spec\n * @enum {string}\n */\nexport const ShadowDomVersion = {\n  NONE: 'none',\n  V0: 'v0',\n  V1: 'v1',\n};\n\n/**\n * @type {!ShadowDomVersion|undefined}\n * @visibleForTesting\n */\nlet shadowDomSupportedVersion;\n\n/**\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet shadowCssSupported;\n\n/**\n * @param {!ShadowDomVersion|undefined} val\n * @visibleForTesting\n */\nexport function setShadowDomSupportedVersionForTesting(val) {\n  shadowDomSupportedVersion = val;\n}\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setShadowCssSupportedForTesting(val) {\n  shadowCssSupported = val;\n}\n\n/**\n * Returns `true` if the Shadow DOM is supported.\n * @return {boolean}\n */\nexport function isShadowDomSupported() {\n  return getShadowDomSupportedVersion() != ShadowDomVersion.NONE;\n}\n\n/**\n * Returns `true` if Shadow CSS encapsulation is supported.\n * @return {boolean}\n */\nexport function isShadowCssSupported() {\n  if (shadowCssSupported === undefined) {\n    shadowCssSupported =\n      isShadowDomSupported() &&\n      (isNative(Element.prototype.attachShadow) ||\n        isNative(Element.prototype.createShadowRoot));\n  }\n  return shadowCssSupported;\n}\n\n/**\n * Returns `true` if the passed function is native to the browser, and is not\n * polyfilled\n * @param {Function|undefined} func A function that is attatched to a JS\n * object.\n * @return {boolean}\n */\nfunction isNative(func) {\n  return !!func && func.toString().indexOf('[native code]') != -1;\n}\n\n/**\n * Returns the supported version of Shadow DOM spec.\n * @param {typeof Element=} opt_elementClass optional for testing\n * @return {!ShadowDomVersion}\n */\nexport function getShadowDomSupportedVersion(opt_elementClass) {\n  if (shadowDomSupportedVersion === undefined) {\n    shadowDomSupportedVersion = getShadowDomVersion(\n      opt_elementClass || Element\n    );\n  }\n  return shadowDomSupportedVersion;\n}\n\n/**\n * Returns shadow dom version.\n *\n * @param {!typeof Element} element\n * @return {!ShadowDomVersion}\n */\nfunction getShadowDomVersion(element) {\n  if (!!element.prototype.attachShadow) {\n    return ShadowDomVersion.V1;\n  } else if (!!element.prototype.createShadowRoot) {\n    return ShadowDomVersion.V0;\n  }\n  return ShadowDomVersion.NONE;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './core/constants/common-signals';\nimport {Services} from './services';\nimport {TickLabel} from './core/constants/enums';\nimport {dev, devAssert} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './core/types/object';\nimport {rethrowAsync} from './core/error';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch((reason) => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then((services) => {\n      bodyMadeVisible = true;\n      if (INI_LOAD_INOB) {\n        // Force sync measurement to ensure that style recalc is complete\n        // before showing body, which would trigger FCP. This should reduce\n        // make it less likely that a CLS would be triggered after FCP.\n        doc.body./*OK*/ getBoundingClientRect();\n      }\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick(TickLabel.MAKE_BODY_VISIBLE);\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DomWriterBulk, DomWriterStreamer} from './utils/dom-writer';\nimport {Services} from './services';\nimport {ShadowCSS} from '../third_party/webcomponentsjs/ShadowCSS';\nimport {\n  ShadowDomVersion,\n  getShadowDomSupportedVersion,\n  isShadowCssSupported,\n} from './core/dom/web-components';\nimport {dev, devAssert} from './log';\nimport {escapeCssSelectorIdent} from './core/dom/css-selectors';\nimport {installCssTransformer} from './style-installer';\nimport {iterateCursor} from './dom';\nimport {setInitialDisplay, setStyle} from './style';\nimport {toArray} from './core/types/array';\nimport {toWin} from './core/window';\n\n/** @const {!RegExp} */\nconst CSS_SELECTOR_BEG_REGEX = /[^\\.\\-\\_0-9a-zA-Z]/;\n\n/** @const {!RegExp} */\nconst CSS_SELECTOR_END_REGEX = /[^\\-\\_0-9a-zA-Z]/;\n\nconst SHADOW_CSS_CACHE = '__AMP_SHADOW_CSS';\n\n/**\n * @type {boolean|undefined}\n */\nlet shadowDomStreamingSupported;\n\n/**\n * Creates a shadow root for the specified host and returns it. Polyfills\n * shadow root creation if necessary.\n * @param {!Element} hostElement\n * @return {!ShadowRoot}\n */\nexport function createShadowRoot(hostElement) {\n  const win = toWin(hostElement.ownerDocument.defaultView);\n\n  const existingRoot = hostElement.shadowRoot || hostElement.__AMP_SHADOW_ROOT;\n  if (existingRoot) {\n    existingRoot./*OK*/ innerHTML = '';\n    return existingRoot;\n  }\n\n  let shadowRoot;\n  const shadowDomSupported = getShadowDomSupportedVersion();\n  if (shadowDomSupported == ShadowDomVersion.V1) {\n    shadowRoot = hostElement.attachShadow({mode: 'open'});\n    if (!shadowRoot.styleSheets) {\n      Object.defineProperty(shadowRoot, 'styleSheets', {\n        get: function () {\n          const items = [];\n          iterateCursor(shadowRoot.childNodes, (child) => {\n            if (child.tagName === 'STYLE') {\n              items.push(child.sheet);\n            }\n          });\n          return items;\n        },\n      });\n    }\n  } else if (shadowDomSupported == ShadowDomVersion.V0) {\n    shadowRoot = hostElement.createShadowRoot();\n  } else {\n    shadowRoot = createShadowRootPolyfill(hostElement);\n  }\n\n  if (!isShadowCssSupported()) {\n    const rootId = `i-amphtml-sd-${win.Math.floor(win.Math.random() * 10000)}`;\n    shadowRoot['id'] = rootId;\n    shadowRoot.host.classList.add(rootId);\n\n    // CSS isolation.\n    installCssTransformer(shadowRoot, (css) => {\n      return transformShadowCss(shadowRoot, css);\n    });\n  }\n\n  return shadowRoot;\n}\n\n/**\n * Shadow root polyfill.\n * @param {!Element} hostElement\n * @return {!ShadowRoot}\n */\nfunction createShadowRootPolyfill(hostElement) {\n  const doc = hostElement.ownerDocument;\n\n  // Host CSS polyfill.\n  hostElement.classList.add('i-amphtml-shadow-host-polyfill');\n  const hostStyle = doc.createElement('style');\n  hostStyle.textContent =\n    '.i-amphtml-shadow-host-polyfill>:not(i-amphtml-shadow-root)' +\n    '{display:none!important}';\n  hostElement.appendChild(hostStyle);\n\n  // Shadow root.\n  const shadowRoot /** @type {!ShadowRoot} */ =\n    // Cast to ShadowRoot even though it is an Element\n    // TODO(@dvoytenko) Consider to switch to a type union instead.\n    /** @type {?}  */ (doc.createElement('i-amphtml-shadow-root'));\n  hostElement.appendChild(shadowRoot);\n  hostElement.__AMP_SHADOW_ROOT = shadowRoot;\n  Object.defineProperty(hostElement, 'shadowRoot', {\n    enumerable: true,\n    configurable: true,\n    value: shadowRoot,\n  });\n\n  // API: https://www.w3.org/TR/shadow-dom/#the-shadowroot-interface\n\n  shadowRoot.host = hostElement;\n\n  // `getElementById` is resolved via `querySelector('#id')`.\n  shadowRoot.getElementById = function (id) {\n    const escapedId = escapeCssSelectorIdent(id);\n    return /** @type {?HTMLElement} */ (\n      shadowRoot./*OK*/ querySelector(`#${escapedId}`)\n    );\n  };\n\n  // The styleSheets property should have a list of local styles.\n  Object.defineProperty(shadowRoot, 'styleSheets', {\n    get: () => {\n      if (!doc.styleSheets) {\n        return [];\n      }\n      return toArray(doc.styleSheets).filter((styleSheet) =>\n        shadowRoot.contains(styleSheet.ownerNode)\n      );\n    },\n  });\n\n  return shadowRoot;\n}\n\n/**\n * Imports a body into a shadow root with the workaround for a polyfill case.\n * @param {!ShadowRoot} shadowRoot\n * @param {!Element} body\n * @param {boolean} deep\n * @return {!Element}\n */\nexport function importShadowBody(shadowRoot, body, deep) {\n  const doc = shadowRoot.ownerDocument;\n  let resultBody;\n  if (isShadowCssSupported()) {\n    resultBody = dev().assertElement(doc.importNode(body, deep));\n  } else {\n    resultBody = doc.createElement('amp-body');\n    setInitialDisplay(resultBody, 'block');\n    for (let i = 0; i < body.attributes.length; i++) {\n      resultBody.setAttribute(\n        body.attributes[0].name,\n        body.attributes[0].value\n      );\n    }\n    if (deep) {\n      for (let n = body.firstChild; !!n; n = n.nextSibling) {\n        resultBody.appendChild(doc.importNode(n, true));\n      }\n    }\n  }\n  setStyle(resultBody, 'position', 'relative');\n  const oldBody = shadowRoot['body'];\n  if (oldBody) {\n    shadowRoot.removeChild(oldBody);\n  }\n  shadowRoot.appendChild(resultBody);\n  Object.defineProperty(shadowRoot, 'body', {\n    configurable: true,\n    value: resultBody,\n  });\n  return resultBody;\n}\n\n/**\n * If necessary, transforms CSS to isolate AMP CSS within the shaodw root and\n * reduce the possibility of high-level conflicts.\n * @param {!ShadowRoot} shadowRoot\n * @param {string} css\n * @return {string}\n */\nexport function transformShadowCss(shadowRoot, css) {\n  return scopeShadowCss(shadowRoot, css);\n}\n\n/**\n * Transforms CSS to isolate AMP CSS within the shadow root and reduce the\n * possibility of high-level conflicts. There are two types of transformations:\n * 1. Root transformation: `body` -> `amp-body`, etc.\n * 2. Scoping: `a {}` -> `.i-amphtml-sd-123 a {}`.\n *\n * @param {!ShadowRoot} shadowRoot\n * @param {string} css\n * @return {string}\n * @visibleForTesting\n */\nexport function scopeShadowCss(shadowRoot, css) {\n  const id = devAssert(shadowRoot['id']);\n  const doc = shadowRoot.ownerDocument;\n  let rules = null;\n  // Try to use a separate document.\n  try {\n    rules = getStylesheetRules(doc.implementation.createHTMLDocument(''), css);\n  } catch (e) {\n    // Ignore.\n  }\n  // Try to use the current document.\n  if (!rules) {\n    try {\n      rules = getStylesheetRules(doc, css);\n    } catch (e) {\n      // Ignore.\n    }\n  }\n\n  // No rules could be parsed - return css as is.\n  if (!rules) {\n    return css;\n  }\n\n  // Patch selectors.\n  // Invoke `ShadowCSS.scopeRules` via `call` because the way it uses `this`\n  // internally conflicts with Closure compiler's advanced optimizations.\n  const {scopeRules} = ShadowCSS;\n  return scopeRules.call(ShadowCSS, rules, `.${id}`, transformRootSelectors);\n}\n\n/**\n * Replaces top-level selectors such as `html` and `body` with their polyfill\n * counterparts: `amp-html` and `amp-body`.\n * @param {string} selector\n * @return {string}\n */\nfunction transformRootSelectors(selector) {\n  return selector.replace(/(html|body)/g, rootSelectorPrefixer);\n}\n\n/**\n * See `transformRootSelectors`.\n * @param {string} match\n * @param {string} name\n * @param {number} pos\n * @param {string} selector\n * @return {string}\n * @private\n */\nfunction rootSelectorPrefixer(match, name, pos, selector) {\n  const prev = selector.charAt(pos - 1);\n  const next = selector.charAt(pos + match.length);\n  if (\n    (!prev || CSS_SELECTOR_BEG_REGEX.test(prev)) &&\n    (!next || CSS_SELECTOR_END_REGEX.test(next))\n  ) {\n    return 'amp-' + match;\n  }\n  return match;\n}\n\n/**\n * @param {!Document} doc\n * @param {string} css\n * @return {?CSSRuleList}\n */\nfunction getStylesheetRules(doc, css) {\n  const style = /** @type {!HTMLStyleElement} */ (doc.createElement('style'));\n  style./*OK*/ textContent = css;\n  try {\n    (doc.head || doc.documentElement).appendChild(style);\n    if (style.sheet) {\n      return /** @type {!CSSStyleSheet} */ (style.sheet).cssRules;\n    }\n    return null;\n  } finally {\n    if (style.parentNode) {\n      style.parentNode.removeChild(style);\n    }\n  }\n}\n\n/**\n * @param {!ShadowRoot} shadowRoot\n * @param {string} name\n * @param {string} cssText\n */\nexport function installShadowStyle(shadowRoot, name, cssText) {\n  const doc = shadowRoot.ownerDocument;\n  const win = toWin(doc.defaultView);\n  if (\n    shadowRoot.adoptedStyleSheets !== undefined &&\n    win.CSSStyleSheet.prototype.replaceSync !== undefined\n  ) {\n    const cache = win[SHADOW_CSS_CACHE] || (win[SHADOW_CSS_CACHE] = {});\n    let styleSheet = cache[name];\n    if (!styleSheet) {\n      styleSheet = new win.CSSStyleSheet();\n      styleSheet.replaceSync(cssText);\n      cache[name] = styleSheet;\n    }\n    shadowRoot.adoptedStyleSheets =\n      shadowRoot.adoptedStyleSheets.concat(styleSheet);\n  } else {\n    const styleEl = doc.createElement('style');\n    styleEl.setAttribute('data-name', name);\n    styleEl.textContent = cssText;\n    shadowRoot.appendChild(styleEl);\n  }\n}\n\n/**\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetShadowStyleCacheForTesting(win) {\n  win[SHADOW_CSS_CACHE] = null;\n}\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setShadowDomStreamingSupportedForTesting(val) {\n  shadowDomStreamingSupported = val;\n}\n\n/**\n * Returns `true` if the Shadow DOM streaming is supported.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isShadowDomStreamingSupported(win) {\n  if (shadowDomStreamingSupported === undefined) {\n    shadowDomStreamingSupported = calcShadowDomStreamingSupported(win);\n  }\n  return shadowDomStreamingSupported;\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nfunction calcShadowDomStreamingSupported(win) {\n  // API must be supported.\n  if (\n    !win.document.implementation ||\n    typeof win.document.implementation.createHTMLDocument != 'function'\n  ) {\n    return false;\n  }\n  // Firefox does not support DOM streaming.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=867102\n  if (Services.platformFor(win).isFirefox()) {\n    return false;\n  }\n  // Assume full streaming support.\n  return true;\n}\n\n/**\n * Creates the Shadow DOM writer available on this platform.\n * @param {!Window} win\n * @return {!./utils/dom-writer.DomWriter}\n */\nexport function createShadowDomWriter(win) {\n  if (isShadowDomStreamingSupported(win)) {\n    return new DomWriterStreamer(win);\n  }\n  return new DomWriterBulk(win);\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {\n  assertHttpsUrl,\n  getSourceOrigin,\n  isProxyOrigin,\n  resolveRelativeUrl,\n} from '../../../src/url';\nimport {\n  closestAncestorElementBySelector,\n  scopedQuerySelectorAll,\n} from '../../../src/core/dom/query';\nimport {createShadowRoot} from '../../../src/shadow-embed';\nimport {dev, user, userAssert} from '../../../src/log';\nimport {getMode} from '../../../src/mode';\n\nimport {setStyle, toggle} from '../../../src/style';\n\n/**\n * Returns millis as number if given a string(e.g. 1s, 200ms etc)\n * @param {string} time\n * @param {number=} fallbackMs Used when `time` is not a valid time string.\n * @return {number|undefined}\n */\nexport function timeStrToMillis(time, fallbackMs = NaN) {\n  const match = time.toLowerCase().match(/^([0-9\\.]+)\\s*(s|ms)$/);\n\n  const num = match ? match[1] : undefined;\n  const units = match ? match[2] : undefined;\n\n  if (!match || match.length !== 3 || (units !== 's' && units !== 'ms')) {\n    return fallbackMs;\n  }\n\n  return Math.round((units == 's' ? 1000 : 1) * parseFloat(num));\n}\n\n/**\n * Determines whether the specified element has an action for its on=\"tap:...\"\n * handler.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function hasTapAction(el) {\n  // There are better ways to determine this, but they're all bound to action\n  // service race conditions. This is good enough for our use case.\n  return (\n    el.hasAttribute('on') && !!el.getAttribute('on').match(/(^|;)\\s*tap\\s*:/)\n  );\n}\n\n/**\n * Calculates a client rect without applying scaling transformations.\n * Note: must be run in a vsync measure context.\n * @param {!Element} el\n * @return {!ClientRect}\n */\nexport function unscaledClientRect(el) {\n  const {height, left, top, width} = el./*OK*/ getBoundingClientRect();\n\n  const scaleFactorX = width == 0 ? 1 : width / el./*OK*/ offsetWidth;\n  const scaleFactorY = height == 0 ? 1 : height / el./*OK*/ offsetHeight;\n\n  return /** @type {!ClientRect} */ ({\n    left: left / scaleFactorX,\n    top: top / scaleFactorY,\n    width: width / scaleFactorX,\n    height: height / scaleFactorY,\n  });\n}\n\n/**\n * Finds an amp-video/amp-audio ancestor.\n * @param {!Element} el\n * @return {?AmpElement}\n */\nexport function ampMediaElementFor(el) {\n  return closestAncestorElementBySelector(el, 'amp-video, amp-audio');\n}\n\n/**\n * Creates a shadow root for the provided container, and appends the element\n * along with its CSS.\n * @param  {!Element} container\n * @param  {!Element} element\n * @param  {string} css\n */\nexport function createShadowRootWithStyle(container, element, css) {\n  const style = self.document.createElement('style');\n  style./*OK*/ textContent = css;\n\n  const containerToUse = getMode().test\n    ? container\n    : createShadowRoot(container);\n\n  containerToUse.appendChild(style);\n  containerToUse.appendChild(element);\n}\n\n/**\n * Parses the resolved CSS color property, that is always in the form of\n * `rgba(0, 0, 0, 1)` or `rgb(0, 0, 0)`, that can be retrieved using\n * `getComputedStyle`.\n * Returns an object containing the R, G, and B 8bit numbers.\n * @param  {string} cssValue\n * @return {!Object<string, number>}\n */\nexport function getRGBFromCssColorValue(cssValue) {\n  const regexPattern = /rgba?\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})/;\n\n  if (!cssValue.match(regexPattern)) {\n    user().error(\n      'UTILS',\n      'getRGBFromCssColorValue expects a parameter in ' +\n        `the form of 'rgba(0, 0, 0, 1)' or 'rgb(0, 0, 0)' but got ${cssValue}`\n    );\n    // Returns a fallback value, to fail 'gracefully' in case a browser we don't\n    // know about gave an unexpected value.\n    return {r: 0, g: 0, b: 0};\n  }\n\n  const matches = regexPattern.exec(cssValue);\n\n  return {\n    r: Number(matches[1]),\n    g: Number(matches[2]),\n    b: Number(matches[3]),\n  };\n}\n\n/**\n * Returns the color, either black or white, that has the best contrast ratio\n * against the provided RGB 8bit values.\n * @param  {!Object<string, number>} rgb  ie: {r: 0, g: 0, b: 0}\n * @return {string} '#fff' or '#000'\n */\nexport function getTextColorForRGB(rgb) {\n  const {b, g, r} = rgb;\n  // Calculates the relative luminance L.\n  // https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n  const getLinearRGBValue = (x) => {\n    // 8bit to sRGB.\n    x /= 255;\n\n    // Converts the gamma-compressed RGB values to linear RGB.\n    return x <= 0.03928 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  };\n\n  const linearR = getLinearRGBValue(r);\n  const linearG = getLinearRGBValue(g);\n  const linearB = getLinearRGBValue(b);\n\n  const L = 0.2126 * linearR + 0.7152 * linearG + 0.0722 * linearB;\n\n  // Determines which one of the white and black text have a better contrast\n  // ratio against the used background color.\n  // https://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n  // @TODO(gmajoulet): Improve the text color for high contrast ratio.\n  // 1 is L for #FFF, and 0 is L for #000.\n  // (1 + 0.05) / (L + 0.05) > (L + 0.05) / (0 + 0.05) toggles for L = 0.179.\n  return L > 0.179 ? '#000' : '#FFF';\n}\n\n/**\n * Sets given attribute to the given element in next `mutate` phase.\n * @param {!AMP.BaseElement} elementImpl\n * @param {string} name\n * @param {string=} opt_value\n */\nexport function setAttributeInMutate(elementImpl, name, opt_value) {\n  const value = opt_value || '';\n  elementImpl.mutateElement(() => {\n    elementImpl.element.setAttribute(name, value);\n  });\n}\n\n/**\n * Removes given attribute from the given element in next `mutate` phase.\n * @param {!AMP.BaseElement} elementImpl\n * @param {string} name\n */\nexport function removeAttributeInMutate(elementImpl, name) {\n  elementImpl.mutateElement(() => {\n    elementImpl.element.removeAttribute(name);\n  });\n}\n\n/**\n * @param {!Element} element\n * @param {string|!Location} url\n */\nexport function userAssertValidProtocol(element, url) {\n  userAssert(\n    Services.urlForDoc(element).isProtocolValid(url),\n    'Unsupported protocol for URL %s',\n    url\n  );\n}\n\n/**\n * Gets the origin url for elements that display a url. It\n * trims the protocol prefix and returns only the hostname of the origin.\n * @param {!Element} element\n * @param {string} url\n * @return {string}\n */\nexport function getSourceOriginForElement(element, url) {\n  let domainName;\n\n  try {\n    domainName = getSourceOrigin(Services.urlForDoc(element).parse(url));\n    // Remove protocol prefix.\n    domainName = Services.urlForDoc(element).parse(domainName).hostname;\n  } catch (e) {\n    // Unknown path prefix in url.\n    domainName = Services.urlForDoc(element).parse(url).hostname;\n  }\n  return domainName;\n}\n\n/**\n * Resolves an image url and optimizes it if served from the cache.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function resolveImgSrc(win, url) {\n  let urlSrc = resolveRelativeUrl(url, win.location);\n  if (isProxyOrigin(win.location.href)) {\n    // TODO(Enriqe): add extra params for resized image, for example:\n    // (/ii/w${width}/s)\n    urlSrc = urlSrc.replace('/c/s/', '/i/s/');\n  }\n  return urlSrc;\n}\n\n/**\n * Whether a Story should show the URL info dialog.\n * @param {!../../../src/service/viewer-interface.ViewerInterface} viewer\n * @return {boolean}\n */\nexport function shouldShowStoryUrlInfo(viewer) {\n  const showStoryUrlInfo = viewer.getParam('showStoryUrlInfo');\n  return showStoryUrlInfo ? showStoryUrlInfo !== '0' : viewer.isEmbedded();\n}\n\n/**\n * Retrieves an attribute src from the <amp-story> element.\n * @param {!Element} element\n * @param {string} attribute\n * @param {string=} warn\n * @return {?string}\n */\nexport function getStoryAttributeSrc(element, attribute, warn = false) {\n  const storyEl = dev().assertElement(\n    closestAncestorElementBySelector(element, 'AMP-STORY')\n  );\n  const attrSrc = storyEl && storyEl.getAttribute(attribute);\n\n  if (attrSrc) {\n    assertHttpsUrl(attrSrc, storyEl, attribute);\n  } else if (warn) {\n    user().warn('AMP-STORY', `Expected ${attribute} attribute on <amp-story>`);\n  }\n\n  return attrSrc;\n}\n\n/**\n * The attribute name for text background color\n * @private @const {string}\n */\nconst TEXT_BACKGROUND_COLOR_ATTRIBUTE_NAME = 'data-text-background-color';\n\n/**\n * The selector for text background color\n * @private @const {string}\n */\nconst TEXT_BACKGROUND_COLOR_SELECTOR = `[${TEXT_BACKGROUND_COLOR_ATTRIBUTE_NAME}]`;\n\n/**\n * Styles text with a background color based on the value of\n * the data-text-background-color attribute\n * @param {!Element} element\n */\nexport function setTextBackgroundColor(element) {\n  const elementsToUpgradeStyles = scopedQuerySelectorAll(\n    element,\n    TEXT_BACKGROUND_COLOR_SELECTOR\n  );\n\n  Array.prototype.forEach.call(elementsToUpgradeStyles, (el) => {\n    const color = el.getAttribute(TEXT_BACKGROUND_COLOR_ATTRIBUTE_NAME);\n    setStyle(el, 'background-color', color);\n  });\n}\n\n/**\n * Click a clone of the anchor in the context of the light dom.\n * Used to apply linker logic on shadow-dom anchors.\n * @param {!Element} anchorElement\n * @param {!Element} domElement element from the light dom\n */\nexport function triggerClickFromLightDom(anchorElement, domElement) {\n  const outerAnchor = anchorElement.cloneNode();\n  toggle(outerAnchor, false);\n  domElement.appendChild(outerAnchor);\n  outerAnchor.click();\n  outerAnchor.remove();\n}\n", "export const CSS = \".i-amphtml-story-ad-link{background-color:#fff!important;border-radius:20px!important;box-sizing:border-box!important;bottom:32px!important;box-shadow:0px 2px 12px rgba(0,0,0,0.16)!important;color:#4285f4!important;font-family:Roboto,sans-serif!important;font-weight:700!important;height:36px!important;letter-spacing:0.2px!important;line-height:36px!important;overflow:hidden!important;opacity:0;padding:0 10px!important;position:absolute!important;text-align:center!important;text-decoration:none!important;min-width:120px!important;max-width:calc(100vw - 64px)}[cta-active].i-amphtml-story-ad-link{animation-delay:100ms!important;animation-duration:300ms!important;animation-timing-function:cubic-bezier(0.4,0,0.2,1)!important;animation-fill-mode:forwards!important;animation-name:ad-cta!important}@keyframes ad-cta{0%{opacity:0;transform:scale(0)}to{opacity:1;transform:scale(1)}}\\n/*# sourceURL=/extensions/amp-story-auto-ads/0.1/amp-story-auto-ads-cta-button.css*/\";\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {assertHttpsUrl} from '../../../src/url';\nimport {CSS as attributionCSS} from '../../../build/amp-story-auto-ads-attribution-0.1.css';\nimport {\n  createElementWithAttributes,\n  iterateCursor,\n  openWindowDialog,\n} from '../../../src/dom';\nimport {createShadowRootWithStyle} from '../../amp-story/1.0/utils';\nimport {CSS as ctaButtonCSS} from '../../../build/amp-story-auto-ads-cta-button-0.1.css';\nimport {dev, user} from '../../../src/log';\nimport {dict, map} from '../../../src/core/types/object';\n\n/**\n * @typedef {{\n *  cta-type: ?string,\n *  cta-url: ?string,\n *  cta-landing-page-type: ?string,\n *  attribution-icon: ?string,\n *  attribution-url: ?string,\n * }}\n */\nexport let StoryAdUIMetadata;\n\n/** @const {string} */\nconst TAG = 'amp-story-auto-ads:ui';\n\n/** @const {string} */\nconst CTA_META_PREFIX = 'amp-cta-';\n\n/** @const {string} */\nconst A4A_VARS_META_PREFIX = 'amp4ads-vars-';\n\nexport const START_CTA_ANIMATION_ATTR = 'cta-active';\n\n/** @enum {string} */\nexport const A4AVarNames = {\n  ATTRIBUTION_ICON: 'attribution-icon',\n  ATTRIBUTION_URL: 'attribution-url',\n  CTA_TYPE: 'cta-type',\n  CTA_URL: 'cta-url',\n};\n\n/** @enum {string} */\nconst DataAttrs = {\n  CTA_TYPE: 'data-vars-ctatype',\n  CTA_URL: 'data-vars-ctaurl',\n};\n\n/**\n * Finds all meta tags starting with `amp4ads-vars-` or `amp-cta`.\n * @param {Document} doc\n * @return {!IArrayLike}\n */\nexport function getStoryAdMetaTags(doc) {\n  const selector = 'meta[name^=amp4ads-vars-],meta[name^=amp-cta-]';\n  return doc.querySelectorAll(selector);\n}\n\n/**\n * Creates object containing information extracted from the creative\n * that is needed to render story ad ui e.g. cta, attribution, etc.\n * @param {!Document} doc\n * @return {StoryAdUIMetadata}\n */\nexport function getStoryAdMetadataFromDoc(doc) {\n  const storyMetaTags = getStoryAdMetaTags(doc);\n  const vars = map();\n  iterateCursor(storyMetaTags, (tag) => {\n    const {content, name} = tag;\n    if (name.startsWith(CTA_META_PREFIX)) {\n      const key = name.split('amp-')[1];\n      vars[key] = content;\n    } else if (name.startsWith(A4A_VARS_META_PREFIX)) {\n      const key = name.split(A4A_VARS_META_PREFIX)[1];\n      vars[key] = content;\n    }\n  });\n  return vars;\n}\n\n/**\n * Gets story ad UI metadata from the <amp-ad> element.\n * @param {!Element} adElement\n * @return {!Object}\n */\nexport function getStoryAdMetadataFromElement(adElement) {\n  const ctaUrl = adElement.getAttribute(DataAttrs.CTA_URL);\n  const ctaType = adElement.getAttribute(DataAttrs.CTA_TYPE);\n  return {\n    [A4AVarNames.CTA_TYPE]: ctaType,\n    [A4AVarNames.CTA_URL]: ctaUrl,\n  };\n}\n\n/**\n * Returns a boolean indicating if there is sufficent metadata to render CTA.\n * @param {!StoryAdUIMetadata} metadata\n * @param {boolean=} opt_inabox\n * @return {boolean}\n */\nexport function validateCtaMetadata(metadata, opt_inabox) {\n  // If making a CTA layer we need a button name & outlink url.\n  if (!metadata[A4AVarNames.CTA_TYPE] || !metadata[A4AVarNames.CTA_URL]) {\n    // Don't polute inabox logs, as we don't know when this is intended to\n    // be a story ad.\n    !opt_inabox &&\n      user().error(TAG, 'Both CTA Type & CTA Url are required in ad response.');\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates ad attribution UI if sufficent metadata. Returns element if\n * successfully created.\n * @param {!Window} win\n * @param {!StoryAdUIMetadata} metadata\n * @param {!Element} container\n * @return {?Element}\n */\nexport function maybeCreateAttribution(win, metadata, container) {\n  const doc = win.document;\n\n  try {\n    const href = metadata[A4AVarNames.ATTRIBUTION_URL];\n    const src = metadata[A4AVarNames.ATTRIBUTION_ICON];\n\n    // Ad attribution is optional, but need both to render.\n    if (!href || !src) {\n      return null;\n    }\n\n    assertHttpsUrl(\n      href,\n      dev().assertElement(container),\n      'amp-story-auto-ads attribution url'\n    );\n\n    assertHttpsUrl(\n      src,\n      dev().assertElement(container),\n      'amp-story-auto-ads attribution icon'\n    );\n\n    const root = createElementWithAttributes(\n      doc,\n      'div',\n      dict({\n        'role': 'button',\n        'class': 'i-amphtml-attribution-host',\n      })\n    );\n\n    const adChoicesIcon = createElementWithAttributes(\n      doc,\n      'img',\n      dict({\n        'class': 'i-amphtml-story-ad-attribution',\n        'src': src,\n      })\n    );\n\n    adChoicesIcon.addEventListener('click', (unusedEvent) =>\n      handleAttributionClick(win, href)\n    );\n\n    createShadowRootWithStyle(root, adChoicesIcon, attributionCSS);\n    container.appendChild(root);\n\n    return adChoicesIcon;\n  } catch (e) {\n    // If something goes wrong creating the attribution, we still want to\n    // show the ad.\n    return null;\n  }\n}\n\n/**\n * Opens attribution click in new window.\n * @param {!Window} win\n * @param {string} href\n */\nexport function handleAttributionClick(win, href) {\n  openWindowDialog(win, href, '_blank');\n}\n\n/**\n * @param {!Document} doc\n * @param {!./story-ad-button-text-fitter.ButtonTextFitter} buttonFitter\n * @param {!Element} container\n * @param {!StoryAdUIMetadata} uiMetadata\n * @return {!Promise<?Element>} If anchor was successfully created.\n */\nexport function createCta(doc, buttonFitter, container, uiMetadata) {\n  const ctaUrl = uiMetadata[A4AVarNames.CTA_URL];\n  const ctaText = uiMetadata[A4AVarNames.CTA_TYPE];\n\n  const a = createElementWithAttributes(\n    doc,\n    'a',\n    dict({\n      'class': 'i-amphtml-story-ad-link',\n      'target': '_blank',\n      'href': ctaUrl,\n    })\n  );\n\n  const fitPromise = buttonFitter.fit(\n    dev().assertElement(container),\n    a, // Container\n    ctaText // Content\n  );\n\n  return fitPromise.then((success) => {\n    if (!success) {\n      user().warn(TAG, 'CTA button text is too long. Ad was discarded.');\n      return null;\n    }\n\n    a.href = ctaUrl;\n    a.textContent = ctaText;\n\n    if (a.protocol !== 'https:' && a.protocol !== 'http:') {\n      user().warn(TAG, 'CTA url is not valid. Ad was discarded');\n      return null;\n    }\n\n    const ctaLayer = doc.createElement('amp-story-cta-layer');\n    ctaLayer.className = 'i-amphtml-cta-container';\n\n    const linkRoot = createElementWithAttributes(\n      doc,\n      'div',\n      dict({\n        'class': 'i-amphtml-story-ad-link-root',\n        'role': 'button',\n      })\n    );\n\n    createShadowRootWithStyle(linkRoot, a, ctaButtonCSS);\n\n    ctaLayer.appendChild(linkRoot);\n    container.appendChild(ctaLayer);\n    return a;\n  });\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\n\n/**\n * Pass class helps to manage single-pass process. A pass is scheduled using\n * delay method. Only one pass can be pending at a time. If no pass is pending\n * the process is considered to be \"idle\".\n */\nexport class Pass {\n  /**\n   * Creates a new Pass instance.\n   * @param {!Window} win\n   * @param {function()} handler Handler to be executed when pass is triggered.\n   * @param {number=} opt_defaultDelay Default delay to be used when schedule\n   *   is called without one.\n   */\n  constructor(win, handler, opt_defaultDelay) {\n    this.timer_ = Services.timerFor(win);\n\n    /** @private @const {function()} */\n    this.handler_ = handler;\n\n    /** @private @const {number} */\n    this.defaultDelay_ = opt_defaultDelay || 0;\n\n    /** @private {number|string} */\n    this.scheduled_ = -1;\n\n    /** @private {number} */\n    this.nextTime_ = 0;\n\n    /** @private {boolean} */\n    this.running_ = false;\n\n    /**\n     * @private\n     * @const {function()}\n     */\n    this.boundPass_ = () => {\n      this.pass_();\n    };\n  }\n\n  /**\n   * Whether or not a pass is currently pending.\n   * @return {boolean}\n   */\n  isPending() {\n    return this.scheduled_ != -1;\n  }\n\n  /**\n   * Tries to schedule a new pass optionally with specified delay. If the new\n   * requested pass is requested before the pending pass, the pending pass is\n   * canceled. If the new pass is requested after the pending pass, the newly\n   * requested pass is ignored.\n   *\n   * Returns {@code true} if the pass has been scheduled and {@code false} if\n   * ignored.\n   *\n   * @param {number=} opt_delay Delay to schedule the pass. If not specified\n   *   the default delay is used, falling back to 0.\n   * @return {boolean}\n   */\n  schedule(opt_delay) {\n    let delay = opt_delay || this.defaultDelay_;\n    if (this.running_ && delay < 10) {\n      // If we get called recursively, wait at least 10ms for the next\n      // execution.\n      delay = 10;\n    }\n\n    const nextTime = Date.now() + delay;\n    // Schedule anew if nothing is scheduled currently or if the new time is\n    // sooner then previously requested.\n    if (!this.isPending() || nextTime - this.nextTime_ < -10) {\n      this.cancel();\n      this.nextTime_ = nextTime;\n      this.scheduled_ = this.timer_.delay(this.boundPass_, delay);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   *\n   */\n  pass_() {\n    this.scheduled_ = -1;\n    this.nextTime_ = 0;\n    this.running_ = true;\n    this.handler_();\n    this.running_ = false;\n  }\n\n  /**\n   * Cancels the pending pass if any.\n   */\n  cancel() {\n    if (this.isPending()) {\n      this.timer_.cancel(this.scheduled_);\n      this.scheduled_ = -1;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Observable} from './core/data-structures/observable';\nimport {Pass} from './pass';\nimport {devAssert} from './log';\nimport {findIndex} from './core/types/array';\nimport {supportsPassiveEventListener} from './core/dom/event-helper-listen';\nimport {toWin} from './core/window';\n\nconst PROP_ = '__AMP_Gestures';\n\n/**\n * A gesture object contains the type and data of the gesture such as\n * a tap or a double-tap or a swipe. See {@link GestureRecognizer} for\n * more details.\n * @struct\n * @const\n * @template DATA\n */\nexport class Gesture {\n  /**\n   * @param {string} type The gesture's string type.\n   * @param {DATA} data The data of the gesture.\n   * @param {time} time The time that the gesture has been emitted.\n   * @param {?Event} event An optional browser event that resulted in the\n   *   gesture.\n   */\n  constructor(type, data, time, event) {\n    /** @const {string} */\n    this.type = type;\n    /** @const {DATA} */\n    this.data = data;\n    /** @const {number} */\n    this.time = time;\n    /** @const {?Event} */\n    this.event = event;\n  }\n}\n\n/**\n * Gestures object manages all gestures on a particular element. It listens\n * to all pointer events and delegates them to individual gesture recognizers.\n * When a recognizer has recognized a gesture and ready to start emitting it\n * it requests permission to do so from this class which resolves conflicts\n * between competing recognizers to decide which gesture should go forward.\n */\nexport class Gestures {\n  /**\n   * Creates if not yet created and returns the shared Gestures instance for\n   * the specified element.\n   * @param {!Element} element\n   * @param {boolean=} opt_shouldNotPreventDefault\n   * @param {boolean=} opt_shouldStopPropagation\n   * @return {!Gestures}\n   */\n  static get(\n    element,\n    opt_shouldNotPreventDefault = false,\n    opt_shouldStopPropagation = false\n  ) {\n    let res = element[PROP_];\n    if (!res) {\n      res = new Gestures(\n        element,\n        opt_shouldNotPreventDefault,\n        opt_shouldStopPropagation\n      );\n      element[PROP_] = res;\n    }\n    return res;\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {boolean} shouldNotPreventDefault\n   * @param {boolean} shouldStopPropagation\n   */\n  constructor(element, shouldNotPreventDefault, shouldStopPropagation) {\n    /** @private {!Element} */\n    this.element_ = element;\n\n    /** @private {!Array<!GestureRecognizer>} */\n    this.recognizers_ = [];\n\n    /** @private {!Array<boolean>} */\n    this.tracking_ = [];\n\n    /** @private {!Array<time>} */\n    this.ready_ = [];\n\n    /** @private {!Array<time>} */\n    this.pending_ = [];\n\n    /** @private {?GestureRecognizer} */\n    this.eventing_ = null;\n\n    /** @private {boolean} */\n    this.shouldNotPreventDefault_ = shouldNotPreventDefault;\n\n    /** @private {boolean} */\n    this.shouldStopPropagation_ = shouldStopPropagation;\n\n    /**\n     * This variable indicates that the eventing has stopped on this\n     * event cycle.\n     * @private {boolean}\n     */\n    this.wasEventing_ = false;\n\n    /** @private {!Pass} */\n    this.pass_ = new Pass(\n      toWin(element.ownerDocument.defaultView),\n      this.doPass_.bind(this)\n    );\n\n    /** @private {!Observable} */\n    this.pointerDownObservable_ = new Observable();\n\n    /**\n     * Observers for each type of registered gesture types.\n     * @private {!Object<string, !Observable<!Gesture>>}\n     */\n    this.overservers_ = Object.create(null);\n\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchStart_ = this.onTouchStart_.bind(this);\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchEnd_ = this.onTouchEnd_.bind(this);\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchMove_ = this.onTouchMove_.bind(this);\n    /** @private @const {function(!Event)} */\n    this.boundOnTouchCancel_ = this.onTouchCancel_.bind(this);\n\n    const win = element.ownerDocument.defaultView;\n    const passiveSupported = supportsPassiveEventListener(toWin(win));\n    this.element_.addEventListener(\n      'touchstart',\n      this.boundOnTouchStart_,\n      passiveSupported ? {passive: true} : false\n    );\n    this.element_.addEventListener('touchend', this.boundOnTouchEnd_);\n    this.element_.addEventListener(\n      'touchmove',\n      this.boundOnTouchMove_,\n      passiveSupported ? {passive: true} : false\n    );\n    this.element_.addEventListener('touchcancel', this.boundOnTouchCancel_);\n\n    /** @private {boolean} */\n    this.passAfterEvent_ = false;\n  }\n\n  /**\n   * Unsubscribes from all pointer events and removes the shared cache instance.\n   */\n  cleanup() {\n    this.element_.removeEventListener('touchstart', this.boundOnTouchStart_);\n    this.element_.removeEventListener('touchend', this.boundOnTouchEnd_);\n    this.element_.removeEventListener('touchmove', this.boundOnTouchMove_);\n    this.element_.removeEventListener('touchcancel', this.boundOnTouchCancel_);\n    delete this.element_[PROP_];\n    this.pass_.cancel();\n  }\n\n  /**\n   * Subscribes to a gesture emitted by the specified recognizer. For a first\n   * gesture handler registered in this method the recognizer is installed\n   * and from that point on it participates in the event processing.\n   *\n   * @param {function(new:GestureRecognizer, !Gestures)} recognizerConstr\n   * @param {function(!Gesture)} handler\n   * @return {!UnlistenDef}\n   * @template DATA\n   */\n  onGesture(recognizerConstr, handler) {\n    const recognizer = new recognizerConstr(this);\n    const type = recognizer.getType();\n    let overserver = this.overservers_[type];\n    if (!overserver) {\n      this.recognizers_.push(recognizer);\n      overserver = new Observable();\n      this.overservers_[type] = overserver;\n    }\n    return overserver.add(handler);\n  }\n\n  /**\n   * Unsubscribes all handlers from the given gesture recognizer. Returns\n   * true if anything was done. Returns false if there were no handlers\n   * registered on the given gesture recognizer in first place.\n   *\n   * @param {function(new:GestureRecognizer, !Gestures)} recognizerConstr\n   * @return {boolean}\n   */\n  removeGesture(recognizerConstr) {\n    const type = new recognizerConstr(this).getType();\n    const overserver = this.overservers_[type];\n    if (overserver) {\n      overserver.removeAll();\n      const index = findIndex(this.recognizers_, (e) => e.getType() == type);\n      if (index < 0) {\n        return false;\n      }\n      // Remove the recognizer as well as all associated tracking state\n      this.recognizers_.splice(index, 1);\n      this.ready_.splice(index, 1);\n      this.pending_.splice(index, 1);\n      this.tracking_.splice(index, 1);\n      delete this.overservers_[type];\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Subscribes to pointer down events, such as \"touchstart\" or \"mousedown\".\n   * @param {!Function} handler\n   * @return {!UnlistenDef}\n   */\n  onPointerDown(handler) {\n    return this.pointerDownObservable_.add(handler);\n  }\n\n  /**\n   * Handles all \"touchstart\" events and dispatches them to the tracking\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchStart_(event) {\n    const now = Date.now();\n    this.wasEventing_ = false;\n\n    this.pointerDownObservable_.fire(event);\n\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.ready_[i]) {\n        // If the recognizer is in the \"ready\" state, it won't receive\n        // any more touch series until it's allowed to emit.\n        continue;\n      }\n      if (this.pending_[i] && this.pending_[i] < now) {\n        // Pending state expired. Reset.\n        this.stopTracking_(i);\n      }\n      if (this.recognizers_[i].onTouchStart(event)) {\n        // When a recognizer is interested in the touch series it returns \"true\"\n        // from its onTouchStart method. For this recognizer we start tracking\n        // the whole series of touch events from touchstart to touchend. Other\n        // recognizers will not receive them unless they return \"true\" from\n        // onTouchStart.\n        this.startTracking_(i);\n      }\n    }\n\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Handles all \"touchmove\" events and dispatches them to the tracking\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchMove_(event) {\n    const now = Date.now();\n\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (!this.tracking_[i]) {\n        // The whole touch series are ignored for non-tracking recognizers.\n        continue;\n      }\n      if (this.pending_[i] && this.pending_[i] < now) {\n        // Pending state expired. Reset.\n        this.stopTracking_(i);\n        continue;\n      }\n      if (!this.recognizers_[i].onTouchMove(event)) {\n        // Recognizer lost interest in the series. Reset.\n        this.stopTracking_(i);\n      }\n    }\n\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Handles all \"touchend\" events and dispatches them to the tracking\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchEnd_(event) {\n    const now = Date.now();\n\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (!this.tracking_[i]) {\n        // The whole touch series are ignored for non-tracking recognizers.\n        continue;\n      }\n      if (this.pending_[i] && this.pending_[i] < now) {\n        // Pending state expired. Reset.\n        this.stopTracking_(i);\n        continue;\n      }\n\n      this.recognizers_[i].onTouchEnd(event);\n\n      const isReady = !this.pending_[i];\n      const isExpired = this.pending_[i] < now;\n      const isEventing = this.eventing_ == this.recognizers_[i];\n\n      if (!isEventing && (isReady || isExpired)) {\n        this.stopTracking_(i);\n      }\n    }\n\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Handles all \"touchcancel\" events. Cancels all tracking/emitting\n   * recognizers.\n   * @param {!Event} event\n   * @private\n   */\n  onTouchCancel_(event) {\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      this.cancelEventing_(i);\n    }\n    this.afterEvent_(event);\n  }\n\n  /**\n   * Callback for a gesture recognizer to communicate that it's ready to\n   * start emitting gestures. Gestures instance may or may not allow the\n   * recognizer to proceed.\n   * @param {!GestureRecognizer} recognizer\n   * @param {number} offset\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalReady_(recognizer, offset) {\n    // Somebody got here first.\n    if (this.eventing_) {\n      recognizer.acceptCancel();\n      return;\n    }\n\n    // Set the recognizer as ready and wait for the pass to\n    // make the decision.\n    const now = Date.now();\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.recognizers_[i] == recognizer) {\n        this.ready_[i] = now + offset;\n        this.pending_[i] = 0;\n      }\n    }\n    this.passAfterEvent_ = true;\n  }\n\n  /**\n   * Callback for a gesture recognizer to communicate that it's close to\n   * start emitting gestures, but needs more time to see more events. Once\n   * this time expires the recognizer should either signal readiness or it\n   * will be canceled.\n   * @param {!GestureRecognizer} recognizer\n   * @param {number} timeLeft\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalPending_(recognizer, timeLeft) {\n    // Somebody got here first.\n    if (this.eventing_) {\n      recognizer.acceptCancel();\n      return;\n    }\n\n    const now = Date.now();\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.recognizers_[i] == recognizer) {\n        this.pending_[i] = now + timeLeft;\n      }\n    }\n  }\n\n  /**\n   * Callback for a gesture recognizer to communicate that it's done\n   * emitting gestures.\n   * @param {!GestureRecognizer} recognizer\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalEnd_(recognizer) {\n    if (this.eventing_ == recognizer) {\n      this.eventing_ = null;\n      this.wasEventing_ = true;\n    }\n  }\n\n  /**\n   * Callback for a gesture emit the gesture. Only the currently emitting\n   * recognizer is allowed to emit gestures.\n   * @param {!GestureRecognizer} recognizer\n   * @param {*} data\n   * @param {?Event} event\n   * @private\n   * @restricted\n   * @visibleForTesting\n   */\n  signalEmit_(recognizer, data, event) {\n    devAssert(\n      this.eventing_ == recognizer,\n      'Recognizer is not currently allowed: %s',\n      recognizer.getType()\n    );\n    const overserver = this.overservers_[recognizer.getType()];\n    if (overserver) {\n      overserver.fire(\n        new Gesture(recognizer.getType(), data, Date.now(), event)\n      );\n    }\n  }\n\n  /**\n   * @param {!Event} event\n   * @private\n   */\n  afterEvent_(event) {\n    let cancelEvent = !!this.eventing_ || this.wasEventing_;\n    this.wasEventing_ = false;\n    if (!cancelEvent) {\n      const now = Date.now();\n      for (let i = 0; i < this.recognizers_.length; i++) {\n        if (this.ready_[i] || (this.pending_[i] && this.pending_[i] >= now)) {\n          cancelEvent = true;\n          break;\n        }\n      }\n    }\n    if (cancelEvent) {\n      event.stopPropagation();\n      if (!this.shouldNotPreventDefault_) {\n        event.preventDefault();\n      }\n    } else if (this.shouldStopPropagation_) {\n      event.stopPropagation();\n    }\n    if (this.passAfterEvent_) {\n      this.passAfterEvent_ = false;\n      this.doPass_();\n    }\n  }\n\n  /**\n   * The pass that decides which recognizers can start emitting and which\n   * are canceled.\n   * @private\n   */\n  doPass_() {\n    const now = Date.now();\n\n    // The \"most ready\" recognizer is the youngest in the \"ready\" set.\n    // Otherwise we wouldn't wait for it at all.\n    let readyIndex = -1;\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (!this.ready_[i]) {\n        if (this.pending_[i] && this.pending_[i] < now) {\n          // Pending state expired. Reset.\n          this.stopTracking_(i);\n        }\n        continue;\n      }\n      if (readyIndex == -1 || this.ready_[i] > this.ready_[readyIndex]) {\n        readyIndex = i;\n      }\n    }\n\n    if (readyIndex == -1) {\n      // Nothing to do.\n      return;\n    }\n\n    // Look for conflicts.\n    let waitTime = 0;\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (this.ready_[i] || !this.tracking_[i]) {\n        continue;\n      }\n      waitTime = Math.max(waitTime, this.pending_[i] - now);\n    }\n\n    if (waitTime < 2) {\n      // We waited long enough.\n      this.startEventing_(readyIndex);\n      return;\n    }\n\n    // Some conflicts: have to wait to see who wins.\n    this.pass_.schedule(waitTime);\n  }\n\n  /**\n   * This recognizer is given \"go ahead\" and all others are canceled.\n   * @param {number} index\n   * @private\n   */\n  startEventing_(index) {\n    const recognizer = this.recognizers_[index];\n    for (let i = 0; i < this.recognizers_.length; i++) {\n      if (i != index) {\n        this.cancelEventing_(i);\n      }\n    }\n    this.ready_[index] = 0;\n    this.pending_[index] = 0;\n    this.eventing_ = recognizer;\n    recognizer.acceptStart();\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  startTracking_(index) {\n    this.tracking_[index] = true;\n    this.pending_[index] = 0;\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  stopTracking_(index) {\n    this.tracking_[index] = false;\n    this.pending_[index] = 0;\n    if (!this.ready_[index]) {\n      this.recognizers_[index].acceptCancel();\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @private\n   */\n  cancelEventing_(index) {\n    this.ready_[index] = 0;\n    this.stopTracking_(index);\n  }\n}\n\n/**\n * The gesture recognizer receives the pointer events from Gestures instance.\n * Based on these events, it can \"recognize\" the gesture it's responsible for,\n * request to start emitting and emit gestures. Gestures instances manages\n * several competing recognizers and decides which ones get to emit gestures\n * and which do not.\n *\n * The recognizer can be in several main states:\n * 1. Tracking state. In this state the recognizer is receiving the series of\n *    touch events from touchstart to touchend. To get into this state the\n *    recognizer has to return \"true\" from the {@link onTouchStart}.\n * 2. Pending state (optional). The recognizer matched part of the gesture,\n *    but needs more time to get track more events. It requests more time\n *    by calling {@link signalPending}, By the end of this time the recognizer\n *    has either matched the gesture or has been canceled.\n * 3. Ready state. The recognizer matched the whole gesture and ready to start\n *    emitting. It communicates to the Gestures this readiness by calling\n *    {@link signalReady}.\n * 5. Emitting state. If Gestures decides to go ahead with this recognizer, it\n *    will call {@link acceptStart} method. Otherwise, it will call\n *    {@link acceptCancel} method. Once in the emitting state, the recognizer\n *    can emit any number of events by calling {@link signalEmit}.\n * 6. Complete state. Once done, the recognizer can call {@link signalEnd} to\n *    communicate that it's done.\n *\n * @template DATA\n */\nexport class GestureRecognizer {\n  /**\n   * @param {string} type\n   * @param {!Gestures} manager\n   */\n  constructor(type, manager) {\n    /** @private @const {string} */\n    this.type_ = type;\n\n    /** @private @const {!Gestures} */\n    this.manager_ = manager;\n  }\n\n  /**\n   * Returns the type of the gesture emitted by the instance of this class.\n   * It has to be unique in the scope of the Gestures instance.\n   * @return {string}\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * The recognizer can call this method to communicate that it's ready to\n   * start emitting the gesture. Optionally it can pass a zero, positive or\n   * negative offset - a time on how much the gesture should be penalized or\n   * given advantage in conflict resolution. The recognizer at this point is\n   * in the \"ready\" state.\n   * @param {time} offset\n   */\n  signalReady(offset) {\n    this.manager_.signalReady_(this, offset);\n  }\n\n  /**\n   * The recognizer can call this method to communicate that it needs more\n   * time (timeLeft) to match the gesture. By the end of this time the\n   * recognizer has to either transit to the ready state using\n   * {@link signalReady} or it will be canceled. The recognizer is in the\n   * \"pending\" state.\n   * @param {time} timeLeft\n   */\n  signalPending(timeLeft) {\n    this.manager_.signalPending_(this, timeLeft);\n  }\n\n  /**\n   * The recognizer can call this method to communicate that it's done\n   * emitting the gestures. It will return to the waiting state. Recognizer\n   * can only call this method if it has previously received the\n   * {@link acceptStart} call.\n   */\n  signalEnd() {\n    this.manager_.signalEnd_(this);\n  }\n\n  /**\n   * The recognizer can call this method to emit the gestures while in the\n   * \"emitting\" state. Recognizer can only call this method if it has\n   * previously received the {@link acceptStart} call.\n   * @param {DATA} data\n   * @param {?Event} event\n   */\n  signalEmit(data, event) {\n    this.manager_.signalEmit_(this, data, event);\n  }\n\n  /**\n   * The Gestures instance calls this method to allow the recognizer to start\n   * emitting the gestures. At this point the recognizer is in the \"emitting\"\n   * state. It will be in this state until it calls {@link signalEnd} or\n   * the {@link acceptCancel} is called by the Gestures instance.\n   */\n  acceptStart() {}\n\n  /**\n   * The Gestures instance calls this method to reset the recognizer. At this\n   * point the recognizer is in the initial waiting state.\n   */\n  acceptCancel() {}\n\n  /**\n   * The Gestures instance calls this method for each \"touchstart\" event. If\n   * the recognizer wants to receive other touch events in the series, it has\n   * to return \"true\".\n   * @param {!Event} unusedEvent\n   * @return {boolean}\n   */\n  onTouchStart(unusedEvent) {\n    return false;\n  }\n\n  /**\n   * The Gestures instance calls this method for each \"touchmove\" event. If\n   * the recognizer wants to continue receiving touch events in the series,\n   * it has to return \"true\".\n   * @param {!Event} unusedEvent\n   * @return {boolean}\n   */\n  onTouchMove(unusedEvent) {\n    return false;\n  }\n\n  /**\n   * The Gestures instance calls this method for the \"touchend\" event.\n   * Somewhere within this touch series the recognizer has to call\n   * {@link signalReady} or {@link signalPending} or it will be reset for the\n   * next touch series.\n   * @param {!Event} unusedEvent\n   */\n  onTouchEnd(unusedEvent) {}\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {Services} from './services';\n\n/** @const {function()} */\nconst NOOP_CALLBACK_ = function () {};\n\n/** @const {number} */\nconst MIN_VELOCITY_ = 0.02;\n\n/** @const {number} */\nconst FRAME_CONST_ = 16.67;\n\n/** @const {number} */\nconst EXP_FRAME_CONST_ = Math.round(-FRAME_CONST_ / Math.log(0.95));\n\n/**\n * Depreciation factor of 1/100 of a millisecond. This is how much previous\n * velocity is depreciated when calculating the new velocity.\n * @const {number}\n */\nconst VELOCITY_DEPR_FACTOR_ = FRAME_CONST_ * 2;\n\n/**\n * Calculates velocity for an object traveling the distance deltaV in the\n * time deltaTime given the previous velocity prevVelocity. The calculation\n * assumes a basic informational depreciation of previous velocity.\n * @param {number} deltaV\n * @param {time} deltaTime\n * @param {number} prevVelocity\n * @return {number}\n */\nexport function calcVelocity(deltaV, deltaTime, prevVelocity) {\n  if (deltaTime < 1) {\n    deltaTime = 1;\n  }\n\n  // Calculate speed and speed depreciation.\n  const speed = deltaV / deltaTime;\n\n  // Depreciation is simply an informational quality. It basically means:\n  // we can't ignore the velocity we knew recently, but we'd only consider\n  // it proportionally to how long ago we've seen it. Currently, this\n  // depreciation factor is 1/100 of a millisecond. New average velocity is\n  // calculated by weighing toward the new velocity and away from old\n  // velocity based on the depreciation.\n  const depr = 0.5 + Math.min(deltaTime / VELOCITY_DEPR_FACTOR_, 0.5);\n  return speed * depr + prevVelocity * (1 - depr);\n}\n\n/**\n * Returns a motion process that will yield when the velocity has run down to\n * zerp. For each iteration, the velocity is depreciated and the coordinates\n * are advanced from start X/Y to the destination according to velocity\n * vectors. For each such iteration the callback is called with the new x and y.\n * @param {!Node} contextNode\n * @param {number} startX Start X coordinate.\n * @param {number} startY Start Y coordinate.\n * @param {number} veloX Starting X velocity.\n * @param {number} veloY Starting Y velocity.\n * @param {function(number, number):boolean} callback The callback for each\n *   step of the deceleration motion.\n * @param {!./service/vsync-impl.Vsync=} opt_vsync Mostly for testing only.\n * @return {!Motion}\n */\nexport function continueMotion(\n  contextNode,\n  startX,\n  startY,\n  veloX,\n  veloY,\n  callback,\n  opt_vsync\n) {\n  return new Motion(\n    contextNode,\n    startX,\n    startY,\n    veloX,\n    veloY,\n    callback,\n    opt_vsync\n  ).start();\n}\n\n/**\n * Motion process that allows tracking and monitoring of the running motion.\n * Most importantly it exposes methods \"then\" and \"thenAlways\" that have the\n * semantics of a Promise and signal when the motion has completed or failed.\n * Additionally, it exposes the method \"halt\" which allows to stop/reset the\n * motion.\n * @implements {IThenable}\n */\nexport class Motion {\n  /**\n   * @param {!Node} contextNode Context node.\n   * @param {number} startX Start X coordinate.\n   * @param {number} startY Start Y coordinate.\n   * @param {number} veloX Starting X velocity.\n   * @param {number} veloY Starting Y velocity.\n   * @param {function(number, number):boolean} callback The callback for each\n   *   step of the deceleration motion.\n   * @param {!./service/vsync-impl.Vsync=} opt_vsync\n   */\n  constructor(contextNode, startX, startY, veloX, veloY, callback, opt_vsync) {\n    /** @private @const {!./service/vsync-impl.Vsync} */\n    this.vsync_ = opt_vsync || Services.vsyncFor(self);\n\n    /** @private @const {!Node} */\n    this.contextNode_ = contextNode;\n\n    /** @private @const */\n    this.callback_ = callback;\n\n    /** @private {number} */\n    this.lastX_ = startX;\n\n    /** @private {number} */\n    this.lastY_ = startY;\n\n    /** @private {number} */\n    this.maxVelocityX_ = veloX;\n\n    /** @private {number} */\n    this.maxVelocityY_ = veloY;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n\n    /** @private {number} */\n    this.velocityY_ = 0;\n\n    const deferred = new Deferred();\n\n    /** @private {!Promise} */\n    this.promise_ = deferred.promise;\n\n    /** @private {!Function} */\n    this.resolve_ = deferred.resolve;\n\n    /** @private {!Function} */\n    this.reject_ = deferred.reject;\n\n    /** @private {boolean} */\n    this.continuing_ = false;\n  }\n\n  /** */\n  start() {\n    this.continuing_ = true;\n    if (\n      Math.abs(this.maxVelocityX_) <= MIN_VELOCITY_ &&\n      Math.abs(this.maxVelocityY_) <= MIN_VELOCITY_\n    ) {\n      this.fireMove_();\n      this.completeContinue_(true);\n    } else {\n      this.runContinuing_();\n    }\n    return this;\n  }\n\n  /**\n   * Halts the motion. The motion promise will be rejected since the motion\n   * has been interrupted.\n   */\n  halt() {\n    if (this.continuing_) {\n      this.completeContinue_(false);\n    }\n  }\n\n  /**\n   * Chains to the motion's promise that will resolve when the motion has\n   * completed or will reject if motion has failed or was interrupted.\n   * @override\n   */\n  then(opt_resolve, opt_reject) {\n    if (!opt_resolve && !opt_reject) {\n      return this.promise_;\n    }\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n\n  /**\n   * Callback for regardless whether the motion succeeds or fails.\n   * @param {function()=} opt_callback\n   * @return {!Promise}\n   */\n  thenAlways(opt_callback) {\n    const callback = opt_callback || NOOP_CALLBACK_;\n    return /** @type {!Promise} */ (this.then(callback, callback));\n  }\n\n  /**\n   * @return {!Promise}\n   * @private\n   */\n  runContinuing_() {\n    this.velocityX_ = this.maxVelocityX_;\n    this.velocityY_ = this.maxVelocityY_;\n    const boundStep = this.stepContinue_.bind(this);\n    const boundComplete = this.completeContinue_.bind(this, true);\n    return this.vsync_\n      .runAnimMutateSeries(this.contextNode_, boundStep, 5000)\n      .then(boundComplete, boundComplete);\n  }\n\n  /**\n   * Returns \"true\" to continue and \"false\" to stop motion process.\n   * @param {time} timeSinceStart\n   * @param {time} timeSincePrev\n   * @return {boolean}\n   * @private\n   */\n  stepContinue_(timeSinceStart, timeSincePrev) {\n    if (!this.continuing_) {\n      return false;\n    }\n\n    this.lastX_ += timeSincePrev * this.velocityX_;\n    this.lastY_ += timeSincePrev * this.velocityY_;\n    if (!this.fireMove_()) {\n      return false;\n    }\n\n    const decel = Math.exp(-timeSinceStart / EXP_FRAME_CONST_);\n    this.velocityX_ = this.maxVelocityX_ * decel;\n    this.velocityY_ = this.maxVelocityY_ * decel;\n    return (\n      Math.abs(this.velocityX_) > MIN_VELOCITY_ ||\n      Math.abs(this.velocityY_) > MIN_VELOCITY_\n    );\n  }\n\n  /**\n   * @param {boolean} success\n   * @private\n   */\n  completeContinue_(success) {\n    if (!this.continuing_) {\n      return;\n    }\n    this.continuing_ = false;\n    this.fireMove_();\n    if (success) {\n      this.resolve_();\n    } else {\n      this.reject_();\n    }\n  }\n\n  /** @private */\n  fireMove_() {\n    return this.callback_(this.lastX_, this.lastY_);\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {GestureRecognizer} from './gesture';\nimport {calcVelocity} from './motion';\n\nconst DOUBLETAP_DELAY = 200;\n\n/**\n * A \"tap\" gesture.\n * @typedef {{\n *   clientX: number,\n *   clientY: number\n * }}\n */\nexport let TapDef;\n\n/**\n * Recognizes \"tap\" gestures.\n * @extends {GestureRecognizer<TapDef>}\n */\nexport class TapRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('tap', manager);\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {?EventTarget} */\n    this.target_ = null;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    const {touches} = e;\n    this.target_ = e.target;\n    if (touches && touches.length == 1) {\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const touches = e.changedTouches || e.touches;\n    if (touches && touches.length == 1) {\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      const dx = Math.abs(this.lastX_ - this.startX_) >= 8;\n      const dy = Math.abs(this.lastY_ - this.startY_) >= 8;\n      if (dx || dy) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @override */\n  onTouchEnd(unusedE) {\n    this.signalReady(0);\n  }\n\n  /** @override */\n  acceptStart() {\n    this.signalEmit(\n      {\n        clientX: this.lastX_,\n        clientY: this.lastY_,\n        target: this.target_,\n      },\n      null\n    );\n    this.signalEnd();\n  }\n}\n\n/**\n * A \"doubletap\" gesture.\n * @typedef {{\n *   clientX: number,\n *   clientY: number\n * }}\n */\nexport let DoubletapDef;\n\n/**\n * Recognizes a \"doubletap\" gesture. This gesture will block a single \"tap\"\n * for about 200ms while it's expecting the second \"tap\".\n * @extends {GestureRecognizer<DoubletapDef>}\n */\nexport class DoubletapRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('doubletap', manager);\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {number} */\n    this.tapCount_ = 0;\n\n    /** @private {?Event} */\n    this.event_ = null;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    if (this.tapCount_ > 1) {\n      return false;\n    }\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      const dx = Math.abs(this.lastX_ - this.startX_) >= 8;\n      const dy = Math.abs(this.lastY_ - this.startY_) >= 8;\n      if (dx || dy) {\n        this.acceptCancel();\n        return false;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    this.tapCount_++;\n    if (this.tapCount_ < 2) {\n      this.signalPending(DOUBLETAP_DELAY);\n    } else {\n      this.event_ = e;\n      this.signalReady(0);\n    }\n  }\n\n  /** @override */\n  acceptStart() {\n    this.tapCount_ = 0;\n    this.signalEmit({clientX: this.lastX_, clientY: this.lastY_}, this.event_);\n    this.signalEnd();\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.tapCount_ = 0;\n  }\n}\n\n/**\n * A \"swipe-xy\", \"swipe-x\" or \"swipe-y\" gesture. A number of these gestures\n * may be emitted for a single touch series.\n * @typedef {{\n *   first: boolean,\n *   last: boolean,\n *   deltaX: number,\n *   deltaY: number,\n *   velocityX: number,\n *   velocityY: number\n * }}\n */\nexport let SwipeDef;\n\n/**\n * Recognizes swipe gestures. This gesture will yield about 10ms to other\n * gestures.\n * @extends {GestureRecognizer<SwipeDef>}\n */\nclass SwipeRecognizer extends GestureRecognizer {\n  /**\n   * @param {string} type\n   * @param {!./gesture.Gestures} manager\n   * @param {boolean} horiz\n   * @param {boolean} vert\n   */\n  constructor(type, manager, horiz, vert) {\n    super(type, manager);\n\n    /** @private {boolean} */\n    this.horiz_ = horiz;\n\n    /** @private {boolean} */\n    this.vert_ = vert;\n\n    /** @private {boolean} */\n    this.eventing_ = false;\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {number} */\n    this.prevX_ = 0;\n\n    /** @private {number} */\n    this.prevY_ = 0;\n\n    /** @private {time} */\n    this.startTime_ = 0;\n\n    /** @private {time} */\n    this.lastTime_ = 0;\n\n    /** @private {time} */\n    this.prevTime_ = 0;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n\n    /** @private {number} */\n    this.velocityY_ = 0;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    const {touches} = e;\n    // If already eventing, ignore additional touches\n    if (this.eventing_ && touches && touches.length > 1) {\n      return true;\n    }\n    if (touches && touches.length == 1) {\n      this.startTime_ = Date.now();\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (touches && touches.length >= 1) {\n      const {clientX: x, clientY: y} = touches[0];\n      this.lastX_ = x;\n      this.lastY_ = y;\n      if (this.eventing_) {\n        // If already eventing, always emit new coordinates\n        this.emit_(false, false, e);\n      } else {\n        // Figure out whether or not we should start eventing\n        const dx = Math.abs(x - this.startX_);\n        const dy = Math.abs(y - this.startY_);\n        // Swipe is penalized slightly since it's one of the least demanding\n        // gesture, thus -10 in signalReady.\n        if (this.horiz_ && this.vert_) {\n          if (dx >= 8 || dy >= 8) {\n            this.signalReady(-10);\n          }\n        } else if (this.horiz_) {\n          if (dx >= 8 && dx > dy) {\n            this.signalReady(-10);\n          } else if (dy >= 8) {\n            return false;\n          }\n        } else if (this.vert_) {\n          if (dy >= 8 && dy > dx) {\n            this.signalReady(-10);\n          } else if (dx >= 8) {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    const {touches} = e;\n    // Number of current touches on the page\n    if (touches && touches.length == 0) {\n      this.end_(e);\n    }\n  }\n\n  /** @override */\n  acceptStart() {\n    this.eventing_ = true;\n    // Reset start coordinates to where the gesture began to avoid visible\n    // jump, but preserve them as \"prev\" coordinates to calculate the right\n    // velocity.\n    this.prevX_ = this.startX_;\n    this.prevY_ = this.startY_;\n    this.prevTime_ = this.startTime_;\n    this.startX_ = this.lastX_;\n    this.startY_ = this.lastY_;\n    this.emit_(true, false, null);\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.eventing_ = false;\n  }\n\n  /**\n   * @param {boolean} first\n   * @param {boolean} last\n   * @param {?Event} event\n   * @private\n   */\n  emit_(first, last, event) {\n    this.lastTime_ = Date.now();\n    const deltaTime = this.lastTime_ - this.prevTime_;\n    // It's often that `touchend` arrives on the next frame. These should\n    // be ignored to avoid a significant velocity downgrade.\n    if ((!last && deltaTime > 4) || (last && deltaTime > 16)) {\n      const velocityX = calcVelocity(\n        this.lastX_ - this.prevX_,\n        deltaTime,\n        this.velocityX_\n      );\n      const velocityY = calcVelocity(\n        this.lastY_ - this.prevY_,\n        deltaTime,\n        this.velocityY_\n      );\n\n      // On iOS, the touchend will always have the same x/y position as the\n      // last touchmove, so we want to make sure we do not remove the velocity.\n      // The touchend event with zero velocity can occur within a couple of\n      // frames of the last touchmove.\n      if (!last || deltaTime > 32 || velocityX != 0 || velocityY != 0) {\n        this.velocityX_ = Math.abs(velocityX) > 1e-4 ? velocityX : 0;\n        this.velocityY_ = Math.abs(velocityY) > 1e-4 ? velocityY : 0;\n      }\n\n      this.prevX_ = this.lastX_;\n      this.prevY_ = this.lastY_;\n      this.prevTime_ = this.lastTime_;\n    }\n\n    this.signalEmit(\n      {\n        first,\n        last,\n        time: this.lastTime_,\n        deltaX: this.lastX_ - this.startX_,\n        deltaY: this.lastY_ - this.startY_,\n        startX: this.startX_,\n        startY: this.startY_,\n        lastX: this.lastX_,\n        lastY: this.lastY_,\n        velocityX: this.velocityX_,\n        velocityY: this.velocityY_,\n      },\n      event\n    );\n  }\n\n  /**\n   * @param {?Event} event\n   * @private\n   */\n  end_(event) {\n    if (this.eventing_) {\n      this.eventing_ = false;\n      this.emit_(false, true, event);\n      this.signalEnd();\n    }\n  }\n}\n\n/**\n * Recognizes \"swipe-xy\" gesture. Yields about 10ms to other gestures.\n */\nexport class SwipeXYRecognizer extends SwipeRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('swipe-xy', manager, true, true);\n  }\n}\n\n/**\n * Recognizes \"swipe-x\" gesture. Yields about 10ms to other gestures.\n */\nexport class SwipeXRecognizer extends SwipeRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('swipe-x', manager, true, false);\n  }\n}\n\n/**\n * Recognizes \"swipe-y\" gesture. Yields about 10ms to other gestures.\n */\nexport class SwipeYRecognizer extends SwipeRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('swipe-y', manager, false, true);\n  }\n}\n\n/**\n * A \"tapzoom\" gesture. It has a center, delta off the center center and\n * the velocity of moving away from the center.\n * @typedef {{\n *   first: boolean,\n *   last: boolean,\n *   centerClientX: number,\n *   centerClientY: number,\n *   deltaX: number,\n *   deltaY: number,\n *   velocityX: number,\n *   velocityY: number\n * }}\n */\nlet TapzoomDef;\n\n/**\n * Recognizes a \"tapzoom\" gesture. This gesture will block other gestures\n * for about 400ms after first \"tap\" while it's expecting swipe.\n * @extends {GestureRecognizer<TapzoomDef>}\n */\nexport class TapzoomRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('tapzoom', manager);\n\n    /** @private {boolean} */\n    this.eventing_ = false;\n\n    /** @private {number} */\n    this.startX_ = 0;\n\n    /** @private {number} */\n    this.startY_ = 0;\n\n    /** @private {number} */\n    this.lastX_ = 0;\n\n    /** @private {number} */\n    this.lastY_ = 0;\n\n    /** @private {number} */\n    this.tapCount_ = 0;\n\n    /** @private {number} */\n    this.prevX_ = 0;\n\n    /** @private {number} */\n    this.prevY_ = 0;\n\n    /** @private {time} */\n    this.lastTime_ = 0;\n\n    /** @private {time} */\n    this.prevTime_ = 0;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n\n    /** @private {number} */\n    this.velocityY_ = 0;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    if (this.eventing_) {\n      return false;\n    }\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.startX_ = touches[0].clientX;\n      this.startY_ = touches[0].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (touches && touches.length == 1) {\n      this.lastX_ = touches[0].clientX;\n      this.lastY_ = touches[0].clientY;\n      if (this.eventing_) {\n        this.emit_(false, false, e);\n      } else {\n        const dx = Math.abs(this.lastX_ - this.startX_) >= 8;\n        const dy = Math.abs(this.lastY_ - this.startY_) >= 8;\n        if (dx || dy) {\n          if (this.tapCount_ == 0) {\n            this.acceptCancel();\n            return false;\n          } else {\n            this.signalReady(0);\n          }\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    if (this.eventing_) {\n      this.end_(e);\n      return;\n    }\n\n    this.tapCount_++;\n    if (this.tapCount_ == 1) {\n      this.signalPending(400);\n      return;\n    }\n\n    this.acceptCancel();\n  }\n\n  /** @override */\n  acceptStart() {\n    this.tapCount_ = 0;\n    this.eventing_ = true;\n    this.emit_(true, false, null);\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.tapCount_ = 0;\n    this.eventing_ = false;\n  }\n\n  /**\n   * @param {boolean} first\n   * @param {boolean} last\n   * @param {?Event} event\n   * @private\n   */\n  emit_(first, last, event) {\n    this.lastTime_ = Date.now();\n    if (first) {\n      this.velocityX_ = this.velocityY_ = 0;\n    } else if (this.lastTime_ - this.prevTime_ > 2) {\n      this.velocityX_ = calcVelocity(\n        this.lastX_ - this.prevX_,\n        this.lastTime_ - this.prevTime_,\n        this.velocityX_\n      );\n      this.velocityY_ = calcVelocity(\n        this.lastY_ - this.prevY_,\n        this.lastTime_ - this.prevTime_,\n        this.velocityY_\n      );\n    }\n    this.prevX_ = this.lastX_;\n    this.prevY_ = this.lastY_;\n    this.prevTime_ = this.lastTime_;\n\n    this.signalEmit(\n      {\n        first,\n        last,\n        centerClientX: this.startX_,\n        centerClientY: this.startY_,\n        deltaX: this.lastX_ - this.startX_,\n        deltaY: this.lastY_ - this.startY_,\n        velocityX: this.velocityX_,\n        velocityY: this.velocityY_,\n      },\n      event\n    );\n  }\n\n  /**\n   * @param {?Event} event\n   * @private\n   */\n  end_(event) {\n    if (this.eventing_) {\n      this.eventing_ = false;\n      this.emit_(false, true, event);\n      this.signalEnd();\n    }\n  }\n}\n\n/**\n * A \"pinch\" gesture. It has a center, delta off the center center and\n * the velocity of moving away from the center. \"dir\" component of `1`\n * indicates that it's a expand motion and `-1` indicates pinch motion.\n * @typedef {{\n *   first: boolean,\n *   last: boolean,\n *   centerClientX: number,\n *   centerClientY: number,\n *   dir: number,\n *   deltaX: number,\n *   deltaY: number,\n *   velocityX: number,\n *   velocityY: number\n * }}\n */\nexport let PinchDef;\n\n/**\n * Threshold in pixels for how much two touches move away from\n * each other before we recognize the gesture as a pinch.\n */\nconst PINCH_ACCEPT_THRESHOLD = 4;\n\n/**\n * Threshold in pixels for how much two touches move in the same\n * direction before we reject the gesture as a pinch.\n */\nconst PINCH_REJECT_THRESHOLD = 10;\n\n/**\n * Recognizes a \"pinch\" gesture.\n * @extends {GestureRecognizer<PinchDef>}\n */\nexport class PinchRecognizer extends GestureRecognizer {\n  /**\n   * @param {!./gesture.Gestures} manager\n   */\n  constructor(manager) {\n    super('pinch', manager);\n\n    /** @private {boolean} */\n    this.eventing_ = false;\n\n    /** @private {number} */\n    this.startX1_ = 0;\n    /** @private {number} */\n    this.startY1_ = 0;\n\n    /** @private {number} */\n    this.startX2_ = 0;\n    /** @private {number} */\n    this.startY2_ = 0;\n\n    /** @private {number} */\n    this.lastX1_ = 0;\n    /** @private {number} */\n    this.lastY1_ = 0;\n\n    /** @private {number} */\n    this.lastX2_ = 0;\n    /** @private {number} */\n    this.lastY2_ = 0;\n\n    /** @private {number} */\n    this.prevDeltaX_ = 0;\n    /** @private {number} */\n    this.prevDeltaY_ = 0;\n\n    /** @private {number} */\n    this.centerClientX_ = 0;\n    /** @private {number} */\n    this.centerClientY_ = 0;\n\n    /** @private {time} */\n    this.startTime_ = 0;\n    /** @private {time} */\n    this.lastTime_ = 0;\n    /** @private {time} */\n    this.prevTime_ = 0;\n\n    /** @private {number} */\n    this.velocityX_ = 0;\n    /** @private {number} */\n    this.velocityY_ = 0;\n  }\n\n  /** @override */\n  onTouchStart(e) {\n    const {touches} = e;\n    if (!touches) {\n      return false;\n    }\n    // Pinch touches are not always simultaneous, continue to listen\n    // for second touch.\n    if (touches.length == 1) {\n      return true;\n    }\n    // If already in the middle of a pinch event, ignore additional touches.\n    if (this.eventing_ && touches.length > 2) {\n      return true;\n    }\n    if (touches.length == 2) {\n      this.startTime_ = Date.now();\n      this.startX1_ = touches[0].clientX;\n      this.startY1_ = touches[0].clientY;\n      this.startX2_ = touches[1].clientX;\n      this.startY2_ = touches[1].clientY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  onTouchMove(e) {\n    const {touches} = e;\n    if (!touches || touches.length == 0) {\n      return false;\n    }\n    // Pinch touches are not always simultaneous, continue to listen\n    // for second touch.\n    if (touches.length == 1) {\n      return true;\n    }\n\n    // Have 2+ touches\n    this.lastX1_ = touches[0].clientX;\n    this.lastY1_ = touches[0].clientY;\n    this.lastX2_ = touches[1].clientX;\n    this.lastY2_ = touches[1].clientY;\n\n    // If eventing, always emit gesture with new coordinates\n    if (this.eventing_) {\n      this.emit_(false, false, e);\n      return true;\n    }\n\n    // Gesture is 2+ touch but direction indicates not a pinch\n    if (this.isPinchRejected_()) {\n      return false;\n    }\n\n    if (this.isPinchReady_()) {\n      this.signalReady(0);\n    }\n    // Pinch gesture detected but threshold not reached, continue listening\n    return true;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isPinchReady_() {\n    const dx1 = this.lastX1_ - this.startX1_;\n    const dy1 = this.lastY1_ - this.startY1_;\n    const dx2 = this.lastX2_ - this.startX2_;\n    const dy2 = this.lastY2_ - this.startY2_;\n\n    const pinchDirectionCorrect = dx1 * dx2 <= 0 && dy1 * dy2 <= 0;\n    const xPinchRecognized = Math.abs(dx1 - dx2) >= PINCH_ACCEPT_THRESHOLD;\n    const yPinchRecognized = Math.abs(dy1 - dy2) >= PINCH_ACCEPT_THRESHOLD;\n    return pinchDirectionCorrect && (xPinchRecognized || yPinchRecognized);\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isPinchRejected_() {\n    const dx1 = this.lastX1_ - this.startX1_;\n    const dy1 = this.lastY1_ - this.startY1_;\n    const dx2 = this.lastX2_ - this.startX2_;\n    const dy2 = this.lastY2_ - this.startY2_;\n\n    const pinchDirectionIncorrect = dx1 * dx2 > 0 || dy1 * dy2 > 0;\n    const xPinchRejected = Math.abs(dx1 + dx2) >= PINCH_REJECT_THRESHOLD;\n    const yPinchRejected = Math.abs(dy1 + dy2) >= PINCH_REJECT_THRESHOLD;\n    return pinchDirectionIncorrect && (xPinchRejected || yPinchRejected);\n  }\n\n  /** @override */\n  onTouchEnd(e) {\n    // Pinch requires at least two touches on the page\n    const {touches} = e;\n    if (touches && touches.length < 2) {\n      this.end_(e);\n    }\n  }\n\n  /** @override */\n  acceptStart() {\n    this.eventing_ = true;\n    this.prevTime_ = this.startTime_;\n    this.prevDeltaX_ = 0;\n    this.prevDeltaY_ = 0;\n    this.centerClientX_ = (this.startX1_ + this.startX2_) * 0.5;\n    this.centerClientY_ = (this.startY1_ + this.startY2_) * 0.5;\n    this.emit_(true, false, null);\n  }\n\n  /** @override */\n  acceptCancel() {\n    this.eventing_ = false;\n  }\n\n  /**\n   * @param {boolean} first\n   * @param {boolean} last\n   * @param {?Event} event\n   * @private\n   */\n  emit_(first, last, event) {\n    this.lastTime_ = Date.now();\n    const deltaTime = this.lastTime_ - this.prevTime_;\n    const deltaX = this.deltaX_();\n    const deltaY = this.deltaY_();\n    // It's often that `touchend` arrives on the next frame. These should\n    // be ignored to avoid a significant velocity downgrade.\n    if ((!last && deltaTime > 4) || (last && deltaTime > 16)) {\n      this.velocityX_ = calcVelocity(\n        deltaX - this.prevDeltaX_,\n        deltaTime,\n        this.velocityX_\n      );\n      this.velocityY_ = calcVelocity(\n        deltaY - this.prevDeltaY_,\n        deltaTime,\n        this.velocityY_\n      );\n      this.velocityX_ = Math.abs(this.velocityX_) > 1e-4 ? this.velocityX_ : 0;\n      this.velocityY_ = Math.abs(this.velocityY_) > 1e-4 ? this.velocityY_ : 0;\n      this.prevDeltaX_ = deltaX;\n      this.prevDeltaY_ = deltaY;\n      this.prevTime_ = this.lastTime_;\n    }\n\n    const startSq = this.sqDist_(\n      this.startX1_,\n      this.startX2_,\n      this.startY1_,\n      this.startY2_\n    );\n    const lastSq = this.sqDist_(\n      this.lastX1_,\n      this.lastX2_,\n      this.lastY1_,\n      this.lastY2_\n    );\n    this.signalEmit(\n      {\n        first,\n        last,\n        time: this.lastTime_,\n        centerClientX: this.centerClientX_,\n        centerClientY: this.centerClientY_,\n        dir: Math.sign(lastSq - startSq),\n        deltaX: deltaX * 0.5,\n        deltaY: deltaY * 0.5,\n        velocityX: this.velocityX_ * 0.5,\n        velocityY: this.velocityY_ * 0.5,\n      },\n      event\n    );\n  }\n\n  /**\n   * @param {?Event} event\n   * @private\n   */\n  end_(event) {\n    if (this.eventing_) {\n      this.eventing_ = false;\n      this.emit_(false, true, event);\n      this.signalEnd();\n    }\n  }\n\n  /**\n   * @param {number} x1\n   * @param {number} x2\n   * @param {number} y1\n   * @param {number} y2\n   * @return {number}\n   * @private\n   */\n  sqDist_(x1, x2, y1, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  deltaX_() {\n    return Math.abs(\n      this.lastX1_ - this.startX1_ - (this.lastX2_ - this.startX2_)\n    );\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  deltaY_() {\n    return Math.abs(\n      this.lastY1_ - this.startY1_ - (this.lastY2_ - this.startY2_)\n    );\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nexport const FilterType = {\n  CLICK_DELAY: 'clickDelay',\n  CLICK_LOCATION: 'clickLocation',\n  INACTIVE_ELEMENT: 'inactiveElement',\n};\n\nexport class Filter {\n  /**\n   * @param {string} name The name given to this filter.\n   * @param {!FilterType} type\n   */\n  constructor(name, type) {\n    /** @const {string} */\n    this.name = name;\n    /** @const {!FilterType} */\n    this.type = type;\n  }\n\n  /**\n   * @param {!../../../../src/service/action-impl.ActionEventDef} unusedEvent\n   * @return {boolean} Whether the exit is allowed.\n   */\n  filter(unusedEvent) {}\n\n  /**\n   * This function is expected to be called in the onLayoutMeasure function of\n   * AmpAdExit element to do any measure work for the filter.\n   */\n  onLayoutMeasure() {}\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Vendors who have IAB viewability certification may use iframe transport\n * (see ../amp-analytics.md and ../integrating-analytics.md). In this case,\n * put only the specification of the iframe location in the object below.\n *\n * This object is separated from vendors.js to be shared with extensions\n * other than amp-analytics, for instance amp-ad-exit.\n *\n * @const {!Object}\n */\nconst prodConfig = {\n  'bg': 'https://tpc.googlesyndication.com/b4a/b4a-runner.html',\n  'moat': 'https://z.moatads.com/ampanalytics093284/iframe.html',\n};\n/**\n * Canary config override\n *\n * @const {!Object}\n */\nconst canaryConfig = {\n  ...prodConfig,\n  'bg': 'https://tpc.googlesyndication.com/b4a/experimental/b4a-runner.html',\n};\n\nexport const IFRAME_TRANSPORTS = /** @type {!JsonObject} */ (prodConfig);\nexport const IFRAME_TRANSPORTS_CANARY = /** @type {!JsonObject} */ (\n  canaryConfig\n);\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FilterType} from './filters/filter';\nimport {IFRAME_TRANSPORTS} from '../../amp-analytics/0.1/iframe-transport-vendors';\nimport {user, userAssert} from '../../../src/log';\n\n/**\n * @typedef {{\n *   startTimingEvent: (string|undefined)\n * }}\n */\nexport let AmpAdExitConfigOptions;\n\n/**\n * @typedef {{\n *   targets: !Object<string, !NavigationTargetConfig>,\n *   filters: (!Object<string, !FilterConfig>|undefined),\n *   transport: (!Object<TransportMode, boolean>|undefined),\n *   options: (!AmpAdExitConfigOptions|undefined)\n * }}\n */\nexport let AmpAdExitConfig;\n\n/**\n * @typedef {{\n *   finalUrl: string,\n *   trackingUrls: (!Array<string>|undefined),\n *   vars: (VariablesDef|undefined),\n *   filters: (!Array<string>|undefined),\n *   behaviors: (BehaviorsDef|undefined)\n * }}\n */\nexport let NavigationTargetConfig;\n\n/**\n * @typedef {{\n *   defaultValue: (string|number|boolean),\n *   iframeTransportSignal: (string|undefined)\n * }}\n */\nexport let VariableDef;\n\n/**\n * @typedef {!Object<string, !VariableDef>}\n */\nexport let VariablesDef;\n\n/**\n * Supported Behaviors:\n *  -- clickTarget -- Specifies where to try to open the click.\n *                    Either '_blank'(default) or '_top'\n *\n * @typedef {{\n *   clickTarget: (string|undefined)\n * }}\n */\nexport let BehaviorsDef;\n\n/**\n * @typedef {{\n *   type: !FilterType,\n *   delay: number,\n *   startTimingEvent: (string|undefined)\n * }}\n */\nexport let ClickDelayConfig;\n\n/**\n * @typedef {{\n *   type: !FilterType,\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined),\n *   relativeTo: (string|undefined)\n * }}\n */\nexport let ClickLocationConfig;\n\n/**\n * @typedef {{\n *   type: !FilterType,\n *   selector: string\n * }}\n */\nexport let InactiveElementConfig;\n\n/** @typedef {!ClickDelayConfig|!ClickLocationConfig} */\nexport let FilterConfig;\n\n/** @enum {string} */\nexport const TransportMode = {\n  BEACON: 'beacon',\n  IMAGE: 'image',\n};\n\n/**\n * Checks whether the object conforms to the AmpAdExitConfig spec.\n *\n * @param {?JsonObject} config The config to validate.\n * @return {!JsonObject}\n */\nexport function assertConfig(config) {\n  userAssert(typeof config == 'object');\n  if (config['filters']) {\n    assertFilters(config['filters']);\n  } else {\n    config['filters'] = {};\n  }\n  if (config['transport']) {\n    assertTransport(config['transport']);\n  } else {\n    config['transport'] = {};\n  }\n  assertTargets(config['targets'], /** @type {!JsonObject} */ (config));\n  return /** @type {!JsonObject} */ (config);\n}\n\n/**\n * Asserts a transport.\n * @param {!JsonObject} transport\n */\nfunction assertTransport(transport) {\n  for (const t in transport) {\n    userAssert(\n      t == TransportMode.BEACON || t == TransportMode.IMAGE,\n      `Unknown transport option: '${t}'`\n    );\n    userAssert(typeof transport[t] == 'boolean');\n  }\n}\n\n/**\n * Asserts an array of filters.\n * @param {!JsonObject} filters\n */\nfunction assertFilters(filters) {\n  const validFilters = [\n    FilterType.CLICK_DELAY,\n    FilterType.CLICK_LOCATION,\n    FilterType.INACTIVE_ELEMENT,\n  ];\n  for (const name in filters) {\n    userAssert(\n      typeof filters[name] == 'object',\n      \"Filter specification '%s' is malformed\",\n      name\n    );\n    userAssert(\n      validFilters.indexOf(filters[name].type) != -1,\n      'Supported filters: ' + validFilters.join(', ')\n    );\n  }\n}\n\n/**\n * Asserts targets and its config\n *\n * @param {!JsonObject} targets\n * @param {!JsonObject} config\n */\nfunction assertTargets(targets, config) {\n  userAssert(typeof targets == 'object', \"'targets' must be an object\");\n  for (const target in targets) {\n    assertTarget(target, targets[target], config);\n  }\n}\n\n/**\n * Asserts target\n *\n * @param {string} name\n * @param {!JsonObject} target\n * @param {!JsonObject} config\n */\nfunction assertTarget(name, target, config) {\n  userAssert(\n    typeof target['finalUrl'] == 'string',\n    \"finalUrl of target '%s' must be a string\",\n    name\n  );\n  if (target['filters']) {\n    /** @type {!Array} */ (target['filters']).forEach((filter) => {\n      userAssert(config['filters'][filter], \"filter '%s' not defined\", filter);\n    });\n  }\n  if (target['vars']) {\n    const pattern = /^_[a-zA-Z0-9_-]+$/;\n    for (const variable in target['vars']) {\n      userAssert(\n        pattern.test(variable),\n        \"'%s' must match the pattern '%s'\",\n        variable,\n        pattern\n      );\n    }\n  }\n}\n\n/**\n * Checks whether a vendor is valid (i.e. listed in vendors.js and has\n * transport/iframe defined.\n * @param {string} vendor The vendor name that should be listed in vendors.js\n * @return {string} The vendor's iframe URL\n */\nexport function assertVendor(vendor) {\n  return user().assertString(\n    IFRAME_TRANSPORTS[vendor],\n    `Unknown or invalid vendor ${vendor}, ` +\n      'note that vendor must use transport: iframe'\n  );\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  A4AVarNames,\n  START_CTA_ANIMATION_ATTR,\n  createCta,\n  getStoryAdMetadataFromDoc,\n  getStoryAdMetadataFromElement,\n  maybeCreateAttribution,\n  validateCtaMetadata,\n} from './story-ad-ui';\nimport {\n  AdvanceExpToTime,\n  StoryAdAutoAdvance,\n} from '../../../src/experiments/story-ad-auto-advance';\nimport {\n  AnalyticsEvents,\n  AnalyticsVars,\n  STORY_AD_ANALYTICS,\n} from './story-ad-analytics';\nimport {CommonSignals} from '../../../src/core/constants/common-signals';\nimport {Gestures} from '../../../src/gesture';\nimport {\n  StateProperty,\n  UIType,\n} from '../../amp-story/1.0/amp-story-store-service';\nimport {SwipeXRecognizer} from '../../../src/gesture-recognizers';\nimport {assertConfig} from '../../amp-ad-exit/0.1/config';\nimport {\n  createElementWithAttributes,\n  isJsonScriptTag,\n  toggleAttribute,\n} from '../../../src/dom';\nimport {dev, devAssert, userAssert} from '../../../src/log';\nimport {dict, map} from '../../../src/core/types/object';\nimport {elementByTag} from '../../../src/core/dom/query';\nimport {getData, listen} from '../../../src/event-helper';\nimport {getExperimentBranch} from '../../../src/experiments';\nimport {getFrameDoc, localizeCtaText} from './utils';\nimport {getServicePromiseForDoc} from '../../../src/service';\nimport {parseJson} from '../../../src/core/types/object/json';\nimport {setStyle} from '../../../src/style';\n\n/** @const {string} */\nconst TAG = 'amp-story-auto-ads:page';\n\n/** @const {number} */\nconst TIMEOUT_LIMIT = 10000; // 10 seconds\n\n/** @const {string} */\nconst GLASS_PANE_CLASS = 'i-amphtml-glass-pane';\n\n/** @const {string} */\nconst DESKTOP_FULLBLEED_CLASS = 'i-amphtml-story-ad-fullbleed';\n\n/** @enum {string} */\nconst PageAttributes = {\n  LOADING: 'i-amphtml-loading',\n  IFRAME_BODY_VISIBLE: 'amp-story-visible',\n};\n\nexport class StoryAdPage {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!JsonObject} config\n   * @param {number} index\n   * @param {!./story-ad-localization.StoryAdLocalization} localization\n   * @param {!./story-ad-button-text-fitter.ButtonTextFitter} buttonFitter\n   * @param {!../../amp-story/1.0/amp-story-store-service.AmpStoryStoreService} storeService\n   */\n  constructor(ampdoc, config, index, localization, buttonFitter, storeService) {\n    /** @private @const {!JsonObject} */\n    this.config_ = config;\n\n    /** @private @const {number} */\n    this.index_ = index;\n\n    /** @private @const {!./story-ad-localization.StoryAdLocalization} */\n    this.localizationService_ = localization;\n\n    /** @private @const {string} */\n    this.id_ = `i-amphtml-ad-page-${this.index_}`;\n\n    /** @private @const {!Window} */\n    this.win_ = ampdoc.win;\n\n    /** @private @const {!Document} */\n    this.doc_ = this.win_.document;\n\n    /** @private @const {!Promise} */\n    this.analytics_ = getServicePromiseForDoc(ampdoc, STORY_AD_ANALYTICS);\n\n    /** @private {?number} */\n    this.timeCreated_ = null;\n\n    /** @private {?Element} */\n    this.pageElement_ = null;\n\n    /** @private {?Element} */\n    this.adElement_ = null;\n\n    /** @private {?HTMLIFrameElement} */\n    this.adFrame_ = null;\n\n    /** @private {?Element} */\n    this.adChoicesIcon_ = null;\n\n    /** @private {?Element} */\n    this.ctaAnchor_ = null;\n\n    /** @private {?Document} */\n    this.adDoc_ = null;\n\n    /** @private {boolean} */\n    this.loaded_ = false;\n\n    /** @private @const {!Array<Function>} */\n    this.loadCallbacks_ = [];\n\n    /** @private @const {./story-ad-button-text-fitter.ButtonTextFitter} */\n    this.buttonFitter_ = buttonFitter;\n\n    /** @private {boolean} */\n    this.viewed_ = false;\n\n    /** @private @const {!../../amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n    this.storeService_ = storeService;\n\n    /** @private {boolean} */\n    this.is3pAdFrame_ = false;\n  }\n\n  /** @return {?Document} ad document within FIE */\n  getAdDoc() {\n    return this.adDoc_;\n  }\n\n  /** @return {string} */\n  getId() {\n    return this.id_;\n  }\n\n  /** @return {boolean} */\n  hasTimedOut() {\n    return (\n      !!this.timeCreated_ && Date.now() - this.timeCreated_ > TIMEOUT_LIMIT\n    );\n  }\n\n  /** @return {boolean} */\n  isLoaded() {\n    return this.loaded_;\n  }\n\n  /** @return {boolean} */\n  hasBeenViewed() {\n    return this.viewed_;\n  }\n\n  /** @return {?Element} */\n  getPageElement() {\n    return this.pageElement_;\n  }\n\n  /**\n   * Register functions to be executed when ad has loaded.\n   * @param {Function} cb\n   */\n  registerLoadCallback(cb) {\n    this.loadCallbacks_.push(cb);\n  }\n\n  /**\n   * Adds/removes [amp-story-visible] on FIE body so that animations can\n   * respond accordingly.\n   */\n  toggleVisibility() {\n    this.viewed_ = true;\n    this.ctaAnchor_ &&\n      toggleAttribute(this.ctaAnchor_, START_CTA_ANIMATION_ATTR);\n\n    // TODO(calebcordry): Properly handle visible attribute for custom ads.\n    if (this.adDoc_) {\n      toggleAttribute(\n        dev().assertElement(this.adDoc_.body),\n        PageAttributes.IFRAME_BODY_VISIBLE\n      );\n      // TODO(#24829) Remove alternate body when we have full ad network support.\n      const alternateBody = this.adDoc_.querySelector('#x-a4a-former-body');\n      alternateBody &&\n        toggleAttribute(alternateBody, PageAttributes.IFRAME_BODY_VISIBLE);\n    }\n  }\n\n  /**\n   * Create an `amp-story-page` containing an `amp-ad`.\n   * @return {!Element}\n   */\n  build() {\n    this.timeCreated_ = Date.now();\n    this.pageElement_ = this.createPageElement_();\n    this.adElement_ = this.createAdElement_();\n\n    const glassPane = this.doc_.createElement('div');\n    glassPane.classList.add(GLASS_PANE_CLASS);\n\n    const gridLayer = this.doc_.createElement('amp-story-grid-layer');\n    gridLayer.setAttribute('template', 'fill');\n\n    const paneGridLayer = gridLayer.cloneNode(/* deep */ false);\n\n    gridLayer.appendChild(this.adElement_);\n    paneGridLayer.appendChild(glassPane);\n    this.pageElement_.appendChild(gridLayer);\n    this.pageElement_.appendChild(paneGridLayer);\n\n    this.listenForAdLoadSignals_();\n    this.listenForSwipes_();\n\n    this.analyticsEvent_(AnalyticsEvents.AD_REQUESTED, {\n      [AnalyticsVars.AD_REQUESTED]: Date.now(),\n    });\n\n    return this.pageElement_;\n  }\n\n  /**\n   * Try to create CTA (Click-To-Action) before showing the ad. Will fail if\n   * not enough metadata to create the outlink button.\n   * @return {Promise<boolean>}\n   */\n  maybeCreateCta() {\n    return Promise.resolve().then(() => {\n      // Inabox story ads control their own CTA creation.\n      if (this.is3pAdFrame_) {\n        return true;\n      }\n\n      const uiMetadata = map();\n\n      // Template Ads.\n      if (!this.adDoc_) {\n        Object.assign(\n          uiMetadata,\n          getStoryAdMetadataFromElement(devAssert(this.adElement_))\n        );\n      } else {\n        Object.assign(\n          uiMetadata,\n          getStoryAdMetadataFromDoc(this.adDoc_),\n          // TODO(ccordry): Depricate when possible.\n          this.readAmpAdExit_()\n        );\n      }\n\n      if (!validateCtaMetadata(uiMetadata)) {\n        return false;\n      }\n\n      uiMetadata[A4AVarNames.CTA_TYPE] =\n        localizeCtaText(\n          uiMetadata[A4AVarNames.CTA_TYPE],\n          this.localizationService_\n        ) || uiMetadata[A4AVarNames.CTA_TYPE];\n\n      // Store the cta-type as an accesible var for any further pings.\n      this.analytics_.then((analytics) =>\n        analytics.setVar(\n          this.index_, // adIndex\n          AnalyticsVars.CTA_TYPE,\n          uiMetadata[A4AVarNames.CTA_TYPE]\n        )\n      );\n\n      if (\n        (this.adChoicesIcon_ = maybeCreateAttribution(\n          this.win_,\n          uiMetadata,\n          devAssert(this.pageElement_)\n        ))\n      ) {\n        this.storeService_.subscribe(\n          StateProperty.UI_STATE,\n          (uiState) => {\n            this.onUIStateUpdate_(uiState);\n          },\n          true /** callToInitialize */\n        );\n      }\n\n      return this.createCtaLayer_(uiMetadata);\n    });\n  }\n\n  /**\n   * @return {!Element}\n   * @private\n   */\n  createPageElement_() {\n    const attributes = dict({\n      'ad': '',\n      'distance': '2',\n      'i-amphtml-loading': '',\n      'id': this.id_,\n    });\n\n    const autoAdvanceExpBranch = getExperimentBranch(\n      this.win_,\n      StoryAdAutoAdvance.ID\n    );\n    if (\n      autoAdvanceExpBranch &&\n      autoAdvanceExpBranch !== StoryAdAutoAdvance.CONTROL\n    ) {\n      attributes['auto-advance-after'] = AdvanceExpToTime[autoAdvanceExpBranch];\n    }\n\n    const page = createElementWithAttributes(\n      this.doc_,\n      'amp-story-page',\n      attributes\n    );\n    // TODO(ccordry): Allow creative to change default background color.\n    setStyle(page, 'background-color', '#212125');\n    return page;\n  }\n\n  /**\n   * @return {!Element}\n   * @private\n   */\n  createAdElement_() {\n    if (this.config_['type'] === 'fake') {\n      this.config_['id'] = `i-amphtml-demo-${this.index_}`;\n    }\n    return createElementWithAttributes(this.doc_, 'amp-ad', this.config_);\n  }\n\n  /**\n   * Creates listeners to receive signal that ad is ready to be shown\n   * for both FIE & inabox case.\n   * @private\n   */\n  listenForAdLoadSignals_() {\n    // Friendly frame INI_LOAD.\n    this.adElement_\n      .signals()\n      // TODO(ccordry): Investigate using a better signal waiting for video loads.\n      .whenSignal(CommonSignals.INI_LOAD)\n      .then(() => this.onAdLoaded_());\n\n    // Inabox custom event.\n    const removeListener = listen(this.win_, 'message', (e) => {\n      if (getData(e) !== 'amp-story-ad-load') {\n        return;\n      }\n      if (this.getAdFrame_() && e.source === this.adFrame_.contentWindow) {\n        this.is3pAdFrame_ = true;\n        this.pageElement_.setAttribute('xdomain-ad', '');\n        this.onAdLoaded_();\n        removeListener();\n      }\n    });\n  }\n\n  /**\n   * Listen for any horizontal swipes, and fire an analytics event if it happens.\n   */\n  listenForSwipes_() {\n    const gestures = Gestures.get(\n      this.pageElement_,\n      true /* shouldNotPreventDefault */,\n      false /* shouldStopPropogation */\n    );\n    gestures.onGesture(SwipeXRecognizer, () => {\n      this.analyticsEvent_(AnalyticsEvents.AD_SWIPED, {\n        [AnalyticsVars.AD_SWIPED]: Date.now(),\n      });\n      gestures.cleanup();\n    });\n  }\n\n  /**\n   * Returns the iframe containing the creative if it exists.\n   * @return {?HTMLIFrameElement}\n   */\n  getAdFrame_() {\n    if (this.adFrame_) {\n      return this.adFrame_;\n    }\n    return (this.adFrame_ = /** @type {?HTMLIFrameElement} */ (\n      elementByTag(devAssert(this.pageElement_), 'iframe')\n    ));\n  }\n\n  /**\n   * Things that need to happen after the created ad is \"loaded\".\n   * @private\n   */\n  onAdLoaded_() {\n    // Ensures the video-manager does not follow the autoplay attribute on\n    // amp-video tags, which would play the ad in the background before it is\n    // displayed.\n    // TODO(ccordry): do we still need this? Its a pain to always stub in tests.\n    this.pageElement_.getImpl().then((impl) => impl.delegateVideoAutoplay());\n\n    // Remove loading attribute once loaded so that desktop CSS will position\n    // offscren with all other pages.\n    this.pageElement_.removeAttribute(PageAttributes.LOADING);\n\n    this.analyticsEvent_(AnalyticsEvents.AD_LOADED, {\n      [AnalyticsVars.AD_LOADED]: Date.now(),\n    });\n\n    if (this.getAdFrame_() && !this.is3pAdFrame_) {\n      this.adDoc_ = getFrameDoc(\n        /** @type {!HTMLIFrameElement} */ (this.adFrame_)\n      );\n    }\n\n    this.loaded_ = true;\n\n    this.loadCallbacks_.forEach((cb) => cb());\n  }\n\n  /**\n   * Create layer to contain outlink button.\n   * @param {!./story-ad-ui.StoryAdUIMetadata} uiMetadata\n   * @return {Promise<boolean>}\n   */\n  createCtaLayer_(uiMetadata) {\n    return createCta(\n      this.doc_,\n      devAssert(this.buttonFitter_),\n      dev().assertElement(this.pageElement_), // Container.\n      uiMetadata\n    ).then((anchor) => {\n      if (anchor) {\n        this.ctaAnchor_ = anchor;\n        // Click listener so that we can fire `story-ad-click` analytics trigger at\n        // the appropriate time.\n        anchor.addEventListener('click', () => {\n          const vars = {\n            [AnalyticsVars.AD_CLICKED]: Date.now(),\n          };\n          this.analyticsEvent_(AnalyticsEvents.AD_CLICKED, vars);\n        });\n        return true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * TODO(#24080) Remove this when story ads have full ad network support.\n   * This in intended to be a temporary hack so we can can support\n   * ad serving pipelines that are reliant on using amp-ad-exit for\n   * outlinks.\n   * Reads amp-ad-exit config and tries to extract a suitable outlink.\n   * If there are multiple exits present, behavior is unpredictable due to\n   * JSON parse.\n   * @private\n   * @return {!Object}\n   */\n  readAmpAdExit_() {\n    const ampAdExit = elementByTag(\n      dev().assertElement(this.adDoc_.body),\n      'amp-ad-exit'\n    );\n    if (ampAdExit) {\n      try {\n        const {children} = ampAdExit;\n        userAssert(\n          children.length == 1,\n          'The tag should contain exactly one <script> child.'\n        );\n        const child = children[0];\n        userAssert(\n          isJsonScriptTag(child),\n          'The amp-ad-exit config should ' +\n            'be inside a <script> tag with type=\"application/json\"'\n        );\n        const config = assertConfig(parseJson(child.textContent));\n        const target =\n          config['targets'] &&\n          Object.keys(config['targets']) &&\n          config['targets'][Object.keys(config['targets'])[0]];\n        const finalUrl = target && target['finalUrl'];\n        return target ? {[A4AVarNames.CTA_URL]: finalUrl} : {};\n      } catch (e) {\n        dev().error(TAG, e);\n        return {};\n      }\n    }\n  }\n\n  /**\n   * Reacts to UI state updates and passes the information along as\n   * attributes to the shadowed attribution icon.\n   * @param {!UIType} uiState\n   * @private\n   */\n  onUIStateUpdate_(uiState) {\n    if (!this.adChoicesIcon_) {\n      return;\n    }\n\n    this.adChoicesIcon_.classList.toggle(\n      DESKTOP_FULLBLEED_CLASS,\n      uiState === UIType.DESKTOP_FULLBLEED\n    );\n  }\n\n  /**\n   * Construct an analytics event and trigger it.\n   * @param {string} eventType\n   * @param {!Object<string, number>} vars A map of vars and their values.\n   * @private\n   */\n  analyticsEvent_(eventType, vars) {\n    this.analytics_.then((analytics) =>\n      analytics.fireEvent(this.pageElement_, this.index_, eventType, vars)\n    );\n  }\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnalyticsEvents,\n  AnalyticsVars,\n  STORY_AD_ANALYTICS,\n} from './story-ad-analytics';\nimport {ButtonTextFitter} from './story-ad-button-text-fitter';\nimport {\n  StateProperty,\n  getStoreService,\n} from '../../amp-story/1.0/amp-story-store-service';\nimport {StoryAdLocalization} from './story-ad-localization';\nimport {StoryAdPage} from './story-ad-page';\nimport {devAssert} from '../../../src/log';\nimport {findIndex} from '../../../src/core/types/array';\nimport {getServicePromiseForDoc} from '../../../src/service';\n\n/** @const {string} */\nconst TAG = 'amp-story-auto-ads:page-manager';\n\n/** @enum {number} */\nexport const InsertionState = {\n  DELAYED: 0,\n  FAILURE: 1,\n  SUCCESS: 2,\n};\n\nexport const NEXT_PAGE_NO_AD_ATTR = 'next-page-no-ad';\n\n/**\n * Manages creation and retrieval of story ad pages.\n */\nexport class StoryAdPageManager {\n  /**\n   * @param {!../../amp-story/1.0/amp-story.AmpStory} ampStory\n   * @param {!JsonObject} config\n   */\n  constructor(ampStory, config) {\n    /** @private {!../../amp-story/1.0/amp-story.AmpStory} */\n    this.ampStory_ = ampStory;\n\n    /** @private {!JsonObject} */\n    this.config_ = config;\n\n    /*** @private {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc */\n    this.ampdoc_ = ampStory.getAmpDoc();\n\n    /** @private {!Promise<!StoryAdAnalytics>} */\n    this.analytics_ = getServicePromiseForDoc(this.ampdoc_, STORY_AD_ANALYTICS);\n\n    /** @private {!./story-ad-localization.StoryAdLocalization} */\n    this.localizationService_ = new StoryAdLocalization(this.ampStory_.element);\n\n    /** @private {!./story-ad-button-text-fitter.ButtonTextFitter} */\n    this.buttonFitter_ = new ButtonTextFitter(this.ampdoc_);\n\n    /** @private {Object<string, StoryAdPage>} */\n    this.pages_ = {};\n\n    /** @private {!../../amp-story/1.0/amp-story-store-service.AmpStoryStoreService} **/\n    this.storeService_ = getStoreService(this.ampdoc_.win);\n\n    /** @private {number} */\n    this.adsConsumed_ = 0;\n\n    /** @private {Array<string>} */\n    this.createdPageIds_ = [];\n  }\n\n  /**\n   * Check if we have any pages left that have not been inserted or discarded.\n   * @return {boolean}\n   */\n  hasUnusedAdPage() {\n    return this.adsConsumed_ < this.createdPageIds_.length;\n  }\n\n  /**\n   * Gets the next ad page that has not yet been inserted or discarded.\n   * @return {!StoryAdPage}\n   */\n  getUnusedAdPage() {\n    const pageId = this.createdPageIds_[this.adsConsumed_];\n    devAssert(pageId, `${TAG} all created ads consumed.`);\n    return this.pages_[pageId];\n  }\n\n  /**\n   * Called when ad has failed or been placed and we should move to next ad.\n   */\n  discardCurrentAd() {\n    this.analyticsEvent_(AnalyticsEvents.AD_DISCARDED, {\n      [AnalyticsVars.AD_INDEX]: this.adsConsumed_,\n      [AnalyticsVars.AD_DISCARDED]: Date.now(),\n    });\n    this.adsConsumed_++;\n  }\n\n  /**\n   * Number of ads created by this manager.\n   * @return {number}\n   */\n  numberOfAdsCreated() {\n    return this.createdPageIds_.length;\n  }\n\n  /**\n   * Creates a StoryAdPage, appends the element to DOM, and adds it to\n   * parent story pages Array.\n   * @return {!StoryAdPage}\n   */\n  createAdPage() {\n    const index = this.createdPageIds_.length + 1;\n    const page = new StoryAdPage(\n      this.ampdoc_,\n      this.config_,\n      index,\n      this.localizationService_,\n      devAssert(this.buttonFitter_),\n      devAssert(this.storeService_)\n    );\n\n    const pageElement = page.build();\n    const pageId = page.getId();\n    this.pages_[pageId] = page;\n    this.createdPageIds_.push(pageId);\n\n    this.ampStory_.element.appendChild(pageElement);\n    pageElement.getImpl().then((impl) => {\n      this.ampStory_.addPage(impl);\n    });\n\n    return page;\n  }\n\n  /**\n   * @param {string} pageId\n   * @return {boolean}\n   */\n  hasId(pageId) {\n    return !!this.pages_[pageId];\n  }\n\n  /**\n   * @param {string} pageId\n   * @return {StoryAdPage}\n   */\n  getAdPageById(pageId) {\n    return this.pages_[pageId];\n  }\n\n  /**\n   * @param {string} pageId\n   * @return {number}\n   */\n  getIndexById(pageId) {\n    return findIndex(this.createdPageIds_, (id) => id === pageId) + 1;\n  }\n\n  /**\n   * Can fail if slot is protected by next-page-no-ad, if there are not enough\n   * pages left in the story for insertion, or the page before or after is an ad.\n   * @param {string} pageBeforeAdId\n   * @param {!StoryAdPage} nextAdPage\n   * @return {!Promise<!InsertionState>}\n   */\n  maybeInsertPageAfter(pageBeforeAdId, nextAdPage) {\n    let pageBeforeAd = this.ampStory_.getPageById(pageBeforeAdId);\n    let pageAfterAd = this.ampStory_.getNextPage(pageBeforeAd);\n    if (!pageAfterAd) {\n      return Promise.resolve(InsertionState.DELAYED);\n    }\n\n    if (this.isDesktopView_()) {\n      // If we are in desktop view the ad must be inserted 2 pages away because\n      // the next page will already be in view\n      pageBeforeAdId = pageAfterAd.element.id;\n      pageBeforeAd = pageAfterAd;\n      pageAfterAd = this.ampStory_.getNextPage(pageAfterAd);\n    }\n\n    if (!pageAfterAd) {\n      return Promise.resolve(InsertionState.DELAYED);\n    }\n\n    // We will not insert an ad in any slot containing `next-page-no-ad` nor\n    // two ads in a row.\n    if (\n      this.nextPageNoAd_(pageBeforeAd) ||\n      pageBeforeAd.isAd() ||\n      pageAfterAd.isAd()\n    ) {\n      return Promise.resolve(InsertionState.DELAYED);\n    }\n\n    return nextAdPage.maybeCreateCta().then((ctaCreated) => {\n      if (!ctaCreated) {\n        this.discardCurrentAd();\n        return InsertionState.FAILURE;\n      }\n      return this.insertIntoParentStory_(nextAdPage, pageBeforeAdId);\n    });\n  }\n\n  /**\n   *\n   * @param {!StoryAdPage} nextAdPage\n   * @param {string} pageBeforeAdId\n   * @return {InsertionState}\n   */\n  insertIntoParentStory_(nextAdPage, pageBeforeAdId) {\n    const nextAdPageId = nextAdPage.getId();\n    this.ampStory_.insertPage(pageBeforeAdId, nextAdPageId);\n\n    // If we are inserted we now have a `position` macro available for any\n    // analytics events moving forward.\n    const adIndex = this.getIndexById(nextAdPageId);\n    const pageNumber = this.ampStory_.getPageIndexById(pageBeforeAdId);\n\n    this.analytics_.then((analytics) =>\n      analytics.setVar(adIndex, AnalyticsVars.POSITION, pageNumber + 1)\n    );\n\n    this.currentAdInserted_();\n    return InsertionState.SUCCESS;\n  }\n\n  /**\n   *\n   */\n  currentAdInserted_() {\n    this.analyticsEvent_(AnalyticsEvents.AD_INSERTED, {\n      [AnalyticsVars.AD_INDEX]: this.adsConsumed_,\n      [AnalyticsVars.AD_INSERTED]: Date.now(),\n    });\n    this.adsConsumed_++;\n  }\n\n  /**\n   * @private\n   * @return {boolean}\n   */\n  isDesktopView_() {\n    return !!this.storeService_.get(StateProperty.DESKTOP_STATE);\n  }\n\n  /**\n   * Users may put an 'next-page-no-ad' attribute on their pages to prevent ads\n   * from showing as the next page.\n   * @param {?../../amp-story/1.0/amp-story-page.AmpStoryPage} page\n   * @return {boolean}\n   * @private\n   */\n  nextPageNoAd_(page) {\n    return page.element.hasAttribute(NEXT_PAGE_NO_AD_ATTR);\n  }\n\n  /**\n   * Construct an analytics event and trigger it.\n   * @param {string} eventType\n   * @param {!Object<string, number>} vars A map of vars and their values.\n   * @private\n   */\n  analyticsEvent_(eventType, vars) {\n    this.analytics_.then((analytics) =>\n      analytics.fireEvent(\n        this.ampStory_.element,\n        vars['adIndex'],\n        eventType,\n        vars\n      )\n    );\n  }\n}\n", "export const CSS = \".i-amphtml-ad-overlay-container{-ms-flex-align:center!important;align-items:center!important;display:-ms-flexbox!important;display:flex!important;height:48px!important;left:0!important;-ms-flex-pack:center!important;justify-content:center!important;pointer-events:none!important;position:absolute!important;top:0!important;width:48px!important;z-index:100001!important}.i-amphtml-ad-overlay-container[dir=rtl]{left:auto!important;right:0!important}.i-amphtml-ad-overlay-container[desktop-panels]{left:calc(50vw - 22.5vh)!important;top:12.5vh!important}.i-amphtml-story-ad-badge{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='39' height='31' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg filter='url(%23a)' fill='%23fff'%3E%3Cpath d='M17.367 19.363h-4.623L11.865 22H9.062l4.763-12.797h2.444L21.059 22h-2.804l-.888-2.637zm-3.91-2.136h3.198l-1.608-4.79-1.59 4.79zm8.734-.052c0-1.483.332-2.663.994-3.542.668-.88 1.579-1.318 2.733-1.318.926 0 1.69.345 2.294 1.037V8.5h2.549V22h-2.294l-.123-1.01c-.633.79-1.448 1.186-2.444 1.186-1.119 0-2.018-.44-2.698-1.319-.674-.884-1.01-2.112-1.01-3.682zm2.54.184c0 .891.156 1.574.466 2.048.31.475.762.712 1.354.712.785 0 1.339-.33 1.66-.993v-3.753c-.316-.662-.863-.993-1.643-.993-1.224 0-1.837.993-1.837 2.98z'/%3E%3Cpath d='m17.367 19.363.119-.04-.029-.085h-.09v.125zm-4.623 0v-.125h-.09l-.028.086.118.04zM11.865 22v.125h.09l.029-.085-.119-.04zm-2.803 0-.118-.044-.062.169h.18V22zm4.763-12.797v-.125h-.087l-.03.082.117.043zm2.444 0 .117-.044-.03-.08h-.087v.124zM21.059 22v.125h.18l-.063-.169-.117.044zm-2.804 0-.119.04.03.085h.089V22zm-4.799-4.773-.119-.039-.054.165h.173v-.126zm3.2 0v.125h.173l-.055-.164-.119.04zm-1.61-4.79.12-.04-.12-.354-.118.355.119.04zm2.321 6.801h-4.623v.25h4.623v-.25zm-4.741.086-.88 2.636.238.08.879-2.637-.237-.08zm-.76 2.551H9.061v.25h2.803v-.25zm-2.687.169 4.763-12.797-.234-.087-4.764 12.796.235.088zm4.646-12.716h2.444v-.25h-2.444v.25zm2.326-.081 4.79 12.797.235-.088-4.79-12.797-.235.088zm4.908 12.628h-2.804v.25h2.804v-.25zm-2.686.085-.887-2.637-.237.08.887 2.637.237-.08zm-4.917-4.608h3.2v-.25h-3.2v.25zm3.318-.164-1.609-4.79-.237.08 1.609 4.79.237-.08zm-1.846-4.79-1.59 4.79.237.079 1.59-4.79-.237-.079zm8.257 1.235-.1-.076.1.076zm5.027-.281-.094.082.219.25v-.332h-.125zm0-4.852v-.125h-.125V8.5h.125zm2.549 0h.125v-.125h-.125V8.5zm0 13.5v.125h.125V22h-.125zm-2.294 0-.124.015.013.11h.11V22zm-.123-1.01.124-.016-.036-.295-.186.232.098.078zm-5.142-.133-.1.076h.001l.1-.076zm5.01-1.731.112.055.013-.026v-.029h-.125zm0-3.753h.125v-.028l-.012-.026-.113.054zm-5.896 1.802c0-1.465.328-2.616.968-3.467l-.2-.15c-.683.907-1.018 2.117-1.018 3.617h.25zm.968-3.467c.643-.846 1.517-1.268 2.634-1.268v-.25c-1.191 0-2.14.456-2.833 1.367l.2.151zm2.634-1.268c.89 0 1.62.33 2.2.994l.188-.165c-.627-.719-1.427-1.08-2.388-1.08v.25zm2.419.912V8.5h-.25v4.852h.25zm-.125-4.727h2.549v-.25h-2.55v.25zm2.424-.125V22h.25V8.5h-.25zm.125 13.375h-2.294v.25h2.294v-.25zm-2.17.11-.123-1.01-.248.03.123 1.01.248-.03zm-.345-1.074c-.61.762-1.388 1.14-2.346 1.14v.25c1.035 0 1.885-.414 2.541-1.234l-.195-.156zm-2.346 1.14c-1.08 0-1.943-.422-2.599-1.27l-.198.153c.704.91 1.64 1.367 2.797 1.367v-.25zm-2.598-1.27c-.652-.855-.986-2.052-.986-3.606h-.25c0 1.587.34 2.844 1.037 3.758l.199-.151zm1.304-3.422c0 .903.157 1.613.487 2.117l.209-.137c-.292-.446-.446-1.1-.446-1.98h-.25zm.487 2.117c.334.511.826.768 1.458.768v-.25c-.552 0-.963-.218-1.25-.655l-.208.137zm1.458.768c.41 0 .768-.087 1.068-.266.3-.18.535-.448.705-.797l-.225-.11c-.151.313-.355.541-.608.693-.254.151-.565.23-.94.23v.25zm1.786-1.118v-3.753h-.25v3.753h.25zm-.012-3.807a1.817 1.817 0 0 0-.697-.798c-.297-.18-.652-.266-1.06-.266v.25c.372 0 .68.079.931.23.25.151.45.38.6.692l.226-.108zm-1.757-1.064c-.653 0-1.154.268-1.484.804-.324.526-.478 1.298-.478 2.3h.25c0-.984.153-1.701.441-2.169.282-.457.7-.685 1.271-.685v-.25z'/%3E%3C/g%3E%3Cdefs%3E%3Cfilter id='a' x='.882' y='.375' width='38.004' height='29.926' filterUnits='userSpaceOnUse' color-interpolation-filters='sRGB'%3E%3CfeFlood flood-opacity='0' result='BackgroundImageFix'/%3E%3CfeColorMatrix in='SourceAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeOffset/%3E%3CfeGaussianBlur stdDeviation='4'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.24 0'/%3E%3CfeBlend in2='BackgroundImageFix' result='effect1_dropShadow'/%3E%3CfeBlend in='SourceGraphic' in2='effect1_dropShadow' result='shape'/%3E%3C/filter%3E%3C/defs%3E%3C/svg%3E\\\")!important;background-position:50%!important;height:24px!important;margin:0!important;opacity:0!important;padding:0!important;width:24px!important;visibility:hidden!important}[dir=rtl] .i-amphtml-story-ad-badge{margin-left:0px!important;margin-right:16px!important}[ad-showing][desktop-panels] .i-amphtml-story-ad-badge{transition:opacity 0.1s linear 0.3s}[ad-showing] .i-amphtml-story-ad-badge{visibility:visible!important;opacity:1!important}\\n/*# sourceURL=/extensions/amp-story-auto-ads/0.1/amp-story-auto-ads-ad-badge.css*/\";\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {randomlySelectUnsetExperiments} from '../experiments';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const */\nexport const StoryAdPlacements = {\n  ID: 'story-ad-placements',\n  CONTROL: '31060567',\n  PREDETERMINED_EIGHT: '31060568',\n  PREDETERMINED_TEN: '31060817',\n  PREDETERMINED_TWELVE: '31060569',\n};\n\n/**\n * Choose which placement algorithm and density for given win.\n * @param {!Window} win\n */\nexport function divertStoryAdPlacements(win) {\n  /** @type {!ExperimentInfoDef} */\n  const experimentInfo = {\n    experimentId: StoryAdPlacements.ID,\n    isTrafficEligible: () => true,\n    branches: [\n      StoryAdPlacements.CONTROL,\n      StoryAdPlacements.PREDETERMINED_EIGHT,\n      StoryAdPlacements.PREDETERMINED_TEN,\n      StoryAdPlacements.PREDETERMINED_TWELVE,\n    ],\n  };\n  randomlySelectUnsetExperiments(win, [experimentInfo]);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {InsertionState} from './story-ad-page-manager';\nimport {StateProperty} from '../../amp-story/1.0/amp-story-store-service';\nimport {hasOwn, map} from '../../../src/core/types/object';\n\n/** @const {number} */\nconst INTERVAL = 7;\n\n/**\n * Original Story Ads placement algorithm. Tries to place ad every seven pages.\n * Will not place if ad is still loading.\n * @implements {./algorithm-interface.StoryAdPlacementAlgorithm}\n */\nexport class CountPagesAlgorithm {\n  /** @override */\n  constructor(storeService, pageManager) {\n    /** @private {!../../amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n    this.storeService_ = storeService;\n\n    /** @private {!StoryAdPageManager} */\n    this.pageManager_ = pageManager;\n\n    /** @private {!Object<string, boolean>} */\n    this.uniquePageIds_ = map();\n\n    /** @private {number} */\n    this.newPagesSinceLastAd_ = 1;\n\n    /** @private {boolean} */\n    this.pendingAdView_ = false;\n\n    /** @private {boolean} */\n    this.tryingToInsert_ = false;\n  }\n\n  /** @override */\n  isStoryEligible() {\n    const numPages = this.storeService_.get(StateProperty.PAGE_IDS).length;\n    return numPages > INTERVAL;\n  }\n\n  /** @override */\n  initializePages() {\n    return [this.pageManager_.createAdPage()];\n  }\n\n  /** @override */\n  onPageChange(pageId) {\n    if (!hasOwn(this.uniquePageIds_, pageId)) {\n      this.uniquePageIds_[pageId] = true;\n      this.newPagesSinceLastAd_++;\n    }\n\n    if (\n      this.pendingAdView_ ||\n      this.tryingToInsert_ ||\n      !this.readyToPlaceAd_() ||\n      !this.pageManager_.hasUnusedAdPage()\n    ) {\n      return;\n    }\n\n    this.tryingToInsert_ = true;\n    this.tryToPlaceAdAfterPage_(pageId);\n  }\n\n  /** @override */\n  onNewAdView(pageIndex) {\n    this.pendingAdView_ = false;\n    this.newPagesSinceLastAd_ = 0;\n    if (this.shouldCreateNextAd_(pageIndex)) {\n      this.pageManager_.createAdPage();\n    }\n  }\n\n  /**\n   * Determine if enough pages in the story are left for ad placement to be\n   * possible.\n   *\n   * @param {number} pageIndex\n   * @return {boolean}\n   */\n  shouldCreateNextAd_(pageIndex) {\n    const numPages = this.storeService_.get(StateProperty.PAGE_IDS).length;\n    return numPages - pageIndex > INTERVAL;\n  }\n\n  /**\n   * Determine if user has seen enough pages to show an ad. We want a certain\n   * number of pages before the first ad, and then a separate interval\n   * thereafter.\n   * @return {boolean}\n   */\n  readyToPlaceAd_() {\n    return this.newPagesSinceLastAd_ >= INTERVAL;\n  }\n\n  /**\n   * Place ad based on user config.\n   * @param {string} pageBeforeAdId\n   * @private\n   */\n  tryToPlaceAdAfterPage_(pageBeforeAdId) {\n    const nextAdPage = this.pageManager_.getUnusedAdPage();\n\n    // Timeout fail, move to next ad on next navigation.\n    if (!nextAdPage.isLoaded() && nextAdPage.hasTimedOut()) {\n      this.pageManager_.discardCurrentAd();\n      return;\n    }\n\n    // Keep trying the same ad, so we just exit without changing state.\n    if (!nextAdPage.isLoaded()) {\n      return;\n    }\n\n    this.pageManager_\n      .maybeInsertPageAfter(pageBeforeAdId, nextAdPage)\n      .then((insertionState) => {\n        this.tryingToInsert_ = false;\n        if (insertionState === InsertionState.SUCCESS) {\n          // We have an ad inserted that has yet to be viewed.\n          this.pendingAdView_ = true;\n        }\n      });\n  }\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {StateProperty} from '../../amp-story/1.0/amp-story-store-service';\nimport {StoryAdPlacements} from '../../../src/experiments/story-ad-placements';\n\n/** @const {number} */\nconst BEGINNING_OF_STORY_BUFFER = 3;\n\n/** @const {number} */\nconst END_OF_STORY_BUFFER = 1;\n\n/** @const {number} */\nconst MAX_ADS_PER_STORY = 4;\n\n/**\n * Calculate the indices of where ads should be placed based\n * on story length and the number of ads we want to show.\n * @param {number} storyLength\n * @param {number} numberOfAds\n * @return {!Array<number>}\n * @visibleForTesting\n */\nexport function getAdPositions(storyLength, numberOfAds) {\n  if (!numberOfAds) {\n    return [];\n  }\n  const firstPosition = Math.ceil(storyLength / (numberOfAds + 1));\n  const pagesLeft = storyLength - firstPosition;\n  const positions = [firstPosition];\n  const interval = Math.ceil(pagesLeft / numberOfAds);\n  for (let i = 1; i < numberOfAds; i++) {\n    const position = firstPosition + interval * i;\n    positions.push(position);\n  }\n  return positions;\n}\n\n/**\n * Get number of ads for this story. 1 ad for every full target interval +\n * a 1/interval chance for an extra ad. Respects maximum ads per story.\n * @param {number} pageCount\n * @param {number} targetInterval\n * @return {number}\n * @visibleForTesting\n */\nexport function getNumberOfAds(pageCount, targetInterval) {\n  const fullSegments = Math.floor(pageCount / targetInterval);\n  const addExtraAd =\n    Math.random() < (pageCount % targetInterval) / targetInterval;\n  const remainderAds = addExtraAd ? 1 : 0;\n  return Math.min(fullSegments + remainderAds, MAX_ADS_PER_STORY);\n}\n\n/**\n * This algorithm will calculate the number of ads to serve and place them\n * in predermined slots upon initialization.\n * @implements {./algorithm-interface.StoryAdPlacementAlgorithm}\n */\nexport class PredeterminedPositionAlgorithm {\n  /** @override */\n  constructor(storeService, pageManager, placementsExpBranch) {\n    /** @private {!StoryAdPageManager} */\n    this.pageManager_ = pageManager;\n\n    /** @private {number} */\n    this.targetInterval_ = this.getIntervalFromExpId_(placementsExpBranch);\n\n    /** @private {!Array<string>} */\n    this.storyPageIds_ = storeService.get(StateProperty.PAGE_IDS);\n\n    /** @private {!Array<number>} */\n    this.adPositions_ = [];\n\n    /** @private {number} */\n    this.pagesCreated_ = 0;\n  }\n\n  /** @override */\n  isStoryEligible() {\n    const storyLength = this.storyPageIds_.length;\n    return storyLength > BEGINNING_OF_STORY_BUFFER + END_OF_STORY_BUFFER;\n  }\n\n  /** @override */\n  initializePages() {\n    const storyLength = this.storyPageIds_.length;\n    const numberOfAds = getNumberOfAds(storyLength, this.targetInterval_);\n    this.adPositions_ = getAdPositions(storyLength, numberOfAds);\n    if (numberOfAds) {\n      // TODO(ccordry): once 1px impression is launched create all ads at once.\n      return [this.createNextPage_()];\n    }\n    return [];\n  }\n\n  /**\n   * Create the next ad page to be shown based on predetermined placements.\n   */\n  createNextPage_() {\n    const position = this.adPositions_[this.pagesCreated_];\n    const adPage = this.pageManager_.createAdPage();\n    adPage.registerLoadCallback(() => {\n      // TODO(ccordry): we could maybe try again if insertion fails.\n      this.pageManager_.maybeInsertPageAfter(\n        this.storyPageIds_[position - 1],\n        adPage\n      );\n    });\n    this.pagesCreated_++;\n    return adPage;\n  }\n\n  /**\n   * This algo does not care about page navigations as positions are calculated\n   * upon initialization.\n   * @override\n   */\n  onPageChange(unusedPageId) {}\n\n  /** @override */\n  onNewAdView(unusedPageIndex) {\n    if (this.pagesCreated_ < this.adPositions_.length) {\n      this.createNextPage_();\n    }\n  }\n\n  /**\n   * Map branches to the interval from experiment branch.\n   * @param {string} branchId\n   * @return {number}\n   */\n  getIntervalFromExpId_(branchId) {\n    if (branchId === StoryAdPlacements.PREDETERMINED_EIGHT) {\n      return 8;\n    } else if (branchId === StoryAdPlacements.PREDETERMINED_TEN) {\n      return 10;\n    } else if (branchId === StoryAdPlacements.PREDETERMINED_TWELVE) {\n      return 12;\n    }\n  }\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CountPagesAlgorithm} from './algorithm-count-pages';\nimport {PredeterminedPositionAlgorithm} from './algorithm-predetermined';\nimport {StoryAdPlacements} from '../../../src/experiments/story-ad-placements';\nimport {getExperimentBranch} from '../../../src/experiments';\n\n/**\n * Choose placement algorithm implementation.\n * @param {!Window} win\n * @param {!StoryStoreService} storeService\n * @param {!StoryAdPageManager} pageManager\n * @return {!StoryAdPlacementAlgorithm}\n */\nexport function getPlacementAlgo(win, storeService, pageManager) {\n  const placementsExpBranch = getExperimentBranch(win, StoryAdPlacements.ID);\n  if (\n    placementsExpBranch &&\n    placementsExpBranch !== StoryAdPlacements.CONTROL\n  ) {\n    return new PredeterminedPositionAlgorithm(\n      storeService,\n      pageManager,\n      placementsExpBranch\n    );\n  }\n  return new CountPagesAlgorithm(storeService, pageManager);\n}\n", "export const CSS = \".i-amphtml-story-ad-progress-background{background:hsla(0,0%,100%,0.4)!important;border-radius:1px!important;height:2px!important;left:4px!important;margin:4px auto!important;opacity:0!important;position:absolute!important;width:calc(100% - 8px)!important;visibility:hidden!important;z-index:100001!important}.i-amphtml-story-ad-progress-background[ad-showing]{opacity:1!important;visibility:visible!important}.i-amphtml-story-ad-progress-background[desktop-panels]{left:calc(50vw - 22.5vh + 4px)!important;top:12.5vh!important;width:calc(45vh - 8px)!important;transition:opacity 0.1s linear 0.3s}.i-amphtml-story-ad-progress-bar{background:#fff!important;height:2px!important}[ad-showing] .i-amphtml-story-ad-progress-bar{animation:grow linear}[paused] .i-amphtml-story-ad-progress-bar{animation-play-state:paused}@keyframes grow{0%{width:0%}to{width:100%}}\\n/*# sourceURL=/extensions/amp-story-auto-ads/0.1/amp-story-auto-ads-progress-bar.css*/\";\n", "export const CSS = \".i-amphtml-story-ad-link-root{all:initial!important;color:initial!important;display:-ms-flexbox!important;display:flex!important;-ms-flex-direction:column!important;flex-direction:column!important;-ms-flex-align:center!important;align-items:center!important}\\n/*# sourceURL=/extensions/amp-story-auto-ads/0.1/amp-story-auto-ads-shared.css*/\";\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AdvanceExpToTime,\n  StoryAdAutoAdvance,\n  divertStoryAdAutoAdvance,\n} from '../../../src/experiments/story-ad-auto-advance';\nimport {\n  AnalyticsEvents,\n  AnalyticsVars,\n  STORY_AD_ANALYTICS,\n  StoryAdAnalytics,\n} from './story-ad-analytics';\nimport {CSS} from '../../../build/amp-story-auto-ads-0.1.css';\nimport {CommonSignals} from '../../../src/core/constants/common-signals';\nimport {EventType, dispatch} from '../../amp-story/1.0/events';\nimport {Services} from '../../../src/services';\nimport {\n  StateProperty,\n  UIType,\n} from '../../amp-story/1.0/amp-story-store-service';\nimport {StoryAdConfig} from './story-ad-config';\nimport {StoryAdPageManager} from './story-ad-page-manager';\nimport {CSS as adBadgeCSS} from '../../../build/amp-story-auto-ads-ad-badge-0.1.css';\nimport {createShadowRootWithStyle} from '../../amp-story/1.0/utils';\nimport {dev, devAssert, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {divertStoryAdPlacements} from '../../../src/experiments/story-ad-placements';\nimport {getExperimentBranch} from '../../../src/experiments';\nimport {getPlacementAlgo} from './algorithm-utils';\nimport {getServicePromiseForDoc} from '../../../src/service';\nimport {CSS as progessBarCSS} from '../../../build/amp-story-auto-ads-progress-bar-0.1.css';\nimport {setStyle} from '../../../src/style';\nimport {CSS as sharedCSS} from '../../../build/amp-story-auto-ads-shared-0.1.css';\nimport {toggleAttribute} from '../../../src/dom';\n\n/** @const {string} */\nconst TAG = 'amp-story-auto-ads';\n\n/** @const {string} */\nconst AD_TAG = 'amp-ad';\n\n/** @const {string} */\nconst MUSTACHE_TAG = 'amp-mustache';\n\n/** @enum {string} */\nexport const Attributes = {\n  AD_SHOWING: 'ad-showing',\n  DESKTOP_PANELS: 'desktop-panels',\n  DIR: 'dir',\n  PAUSED: 'paused',\n};\n\nexport class AmpStoryAutoAds extends AMP.BaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private */\n    this.doc_ = this.win.document;\n\n    /** @private {?../../amp-story/1.0/amp-story.AmpStory} */\n    this.ampStory_ = null;\n\n    /** @private {?StoryAdPage} */\n    this.visibleAdPage_ = null;\n\n    /** @private {!JsonObject} */\n    this.config_ = dict();\n\n    /** @private {?Promise} */\n    this.analytics_ = null;\n\n    /** @private {?Element} */\n    this.adBadgeContainer_ = null;\n\n    /** @private {?Element} */\n    this.progressBarBackground_ = null;\n\n    /** @private {?../../amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n    this.storeService_ = null;\n\n    /** @private {?StoryAdPlacementAlgorithm} */\n    this.placementAlgorithm_ = null;\n\n    /** @private {?StoryAdPageManager} */\n    this.adPageManager_ = null;\n  }\n\n  /** @override */\n  buildCallback() {\n    return Services.storyStoreServiceForOrNull(this.win).then(\n      (storeService) => {\n        devAssert(storeService, 'Could not retrieve AmpStoryStoreService');\n        this.storeService_ = storeService;\n\n        if (!this.isAutomaticAdInsertionAllowed_()) {\n          return;\n        }\n\n        const ampStoryElement = this.element.parentElement;\n        userAssert(\n          ampStoryElement.tagName === 'AMP-STORY',\n          `<${TAG}> should be child of <amp-story>`\n        );\n\n        const ampdoc = this.getAmpDoc();\n        const extensionService = Services.extensionsFor(this.win);\n        extensionService./*OK*/ installExtensionForDoc(ampdoc, AD_TAG);\n        return ampStoryElement.getImpl().then((impl) => {\n          this.ampStory_ = impl;\n        });\n      }\n    );\n  }\n\n  /** @override */\n  isLayoutSupported() {\n    return true;\n  }\n\n  /** @override */\n  layoutCallback() {\n    if (!this.isAutomaticAdInsertionAllowed_()) {\n      return Promise.resolve();\n    }\n    return this.ampStory_\n      .signals()\n      .whenSignal(CommonSignals.INI_LOAD)\n      .then(() => {\n        this.handleConfig_();\n        this.adPageManager_ = new StoryAdPageManager(\n          this.ampStory_,\n          this.config_\n        );\n        divertStoryAdPlacements(this.win);\n        divertStoryAdAutoAdvance(this.win);\n        this.placementAlgorithm_ = getPlacementAlgo(\n          this.win,\n          this.storeService_,\n          this.adPageManager_\n        );\n        // Bail out early on short stories.\n        if (!this.placementAlgorithm_.isStoryEligible()) {\n          return;\n        }\n        this.analytics_ = getServicePromiseForDoc(\n          this.element,\n          STORY_AD_ANALYTICS\n        );\n        this.createAdOverlay_();\n        this.maybeCreateProgressBar_();\n        this.initializeListeners_();\n        this.initializePages_();\n      });\n  }\n\n  /**\n   * Force an immediate ad placement without waiting for ad being loaded,\n   * and then navigate to the ad page.\n   * @param {!StoryAdPage} adPage\n   */\n  forcePlaceAdAfterPage_(adPage) {\n    const pageBeforeAdId = /** @type {string} */ (\n      this.storeService_.get(StateProperty.CURRENT_PAGE_ID)\n    );\n    adPage.registerLoadCallback(() =>\n      this.adPageManager_\n        .maybeInsertPageAfter(pageBeforeAdId, adPage)\n        .then(() => this.navigateToFirstAdPage_(adPage))\n    );\n  }\n\n  /**\n   * Fires event to navigate to ad page once inserted into the story.\n   * @param {!StoryAdPage} adPage\n   */\n  navigateToFirstAdPage_(adPage) {\n    const firstAdPageElement = adPage.getPageElement();\n    // Setting distance manually to avoid flash of next page.\n    firstAdPageElement.setAttribute('distance', '1');\n    const payload = dict({\n      'targetPageId': 'i-amphtml-ad-page-1',\n      'direction': 'next',\n    });\n    const eventInit = {bubbles: true};\n    dispatch(\n      this.win,\n      firstAdPageElement,\n      EventType.SWITCH_PAGE,\n      payload,\n      eventInit\n    );\n  }\n\n  /**\n   * Sets config and installs additional extensions if necessary.\n   * @private\n   */\n  handleConfig_() {\n    this.config_ = new StoryAdConfig(this.element).getConfig();\n    if (this.config_['type'] === 'custom') {\n      Services.extensionsFor(this.win)./*OK*/ installExtensionForDoc(\n        this.element.getAmpDoc(),\n        MUSTACHE_TAG,\n        'latest'\n      );\n    }\n  }\n\n  /**\n   * Determines whether or not ad insertion is allowed based on how the story\n   * is served, and the number of pages in the story.\n   * @return {boolean}\n   * @private\n   */\n  isAutomaticAdInsertionAllowed_() {\n    return !!this.storeService_.get(StateProperty.CAN_INSERT_AUTOMATIC_AD);\n  }\n\n  /**\n   * Subscribes to all relevant state changes from the containing story.\n   * @private\n   */\n  initializeListeners_() {\n    this.storeService_.subscribe(StateProperty.AD_STATE, (isAd) => {\n      this.onAdStateUpdate_(isAd);\n    });\n\n    this.storeService_.subscribe(\n      StateProperty.RTL_STATE,\n      (rtlState) => {\n        this.onRtlStateUpdate_(rtlState);\n      },\n      true /** callToInitialize */\n    );\n\n    this.storeService_.subscribe(\n      StateProperty.UI_STATE,\n      (uiState) => {\n        this.onUIStateUpdate_(uiState);\n      },\n      true /** callToInitialize */\n    );\n\n    this.storeService_.subscribe(StateProperty.CURRENT_PAGE_ID, (pageId) => {\n      const pageIndex = this.storeService_.get(\n        StateProperty.CURRENT_PAGE_INDEX\n      );\n\n      this.handleActivePageChange_(\n        dev().assertNumber(pageIndex),\n        dev().assertString(pageId)\n      );\n    });\n  }\n\n  /**\n   * Reacts to the ad state updates and passes the information along as\n   * attributes to the shadowed ad badge.\n   * @param {boolean} isAd\n   */\n  onAdStateUpdate_(isAd) {\n    this.mutateElement(() => {\n      if (isAd) {\n        this.adBadgeContainer_.setAttribute(Attributes.AD_SHOWING, '');\n        // TODO(#33969) can no longer be null when launched.\n        this.progressBarBackground_ &&\n          this.progressBarBackground_.setAttribute(Attributes.AD_SHOWING, '');\n      } else {\n        this.adBadgeContainer_.removeAttribute(Attributes.AD_SHOWING);\n        // TODO(#33969) can no longer be null when launched.\n        this.progressBarBackground_ &&\n          this.progressBarBackground_.removeAttribute(Attributes.AD_SHOWING);\n      }\n    });\n  }\n\n  /**\n   * Reacts to the rtl state updates and passes the information along as\n   * attributes to the shadowed ad badge.\n   * @param {boolean} rtlState\n   */\n  onRtlStateUpdate_(rtlState) {\n    this.mutateElement(() => {\n      rtlState\n        ? this.adBadgeContainer_.setAttribute(Attributes.DIR, 'rtl')\n        : this.adBadgeContainer_.removeAttribute(Attributes.DIR);\n    });\n  }\n\n  /**\n   * Reacts to UI state updates and passes the information along as\n   * attributes to the shadowed ad badge.\n   * @param {!UIType} uiState\n   * @private\n   */\n  onUIStateUpdate_(uiState) {\n    this.mutateElement(() => {\n      const {DESKTOP_PANELS} = Attributes;\n      this.adBadgeContainer_.removeAttribute(DESKTOP_PANELS);\n      // TODO(#33969) can no longer be null when launched.\n      this.progressBarBackground_?.removeAttribute(DESKTOP_PANELS);\n\n      if (uiState === UIType.DESKTOP_PANELS) {\n        this.adBadgeContainer_.setAttribute(DESKTOP_PANELS, '');\n        this.progressBarBackground_?.setAttribute(DESKTOP_PANELS, '');\n      }\n    });\n  }\n\n  /**\n   * Create a hidden UI that will be shown when ad is displayed\n   * @private\n   */\n  createAdOverlay_() {\n    const root = this.doc_.createElement('div');\n    root.className = 'i-amphtml-ad-overlay-host';\n\n    this.adBadgeContainer_ = this.doc_.createElement('aside');\n    this.adBadgeContainer_.className = 'i-amphtml-ad-overlay-container';\n\n    const badge = this.doc_.createElement('div');\n    badge.className = 'i-amphtml-story-ad-badge';\n\n    this.adBadgeContainer_.appendChild(badge);\n    createShadowRootWithStyle(root, this.adBadgeContainer_, adBadgeCSS);\n    this.ampStory_.element.appendChild(root);\n  }\n\n  /**\n   * Create progress bar if auto advance exp is on.\n   */\n  maybeCreateProgressBar_() {\n    const autoAdvanceExpBranch = getExperimentBranch(\n      this.win,\n      StoryAdAutoAdvance.ID\n    );\n    // TODO(ccordry): move to experiment id when viewer is able to share.\n    const storyNextUpParam = Services.viewerForDoc(this.element).getParam(\n      'storyNextUp'\n    );\n    if (\n      autoAdvanceExpBranch &&\n      autoAdvanceExpBranch !== StoryAdAutoAdvance.CONTROL\n    ) {\n      this.createProgressBar_(AdvanceExpToTime[autoAdvanceExpBranch]);\n    } else if (storyNextUpParam) {\n      this.createProgressBar_(storyNextUpParam);\n    }\n  }\n\n  /**\n   * Create progress bar that will be shown when ad is advancing.\n   * @param {string} time\n   */\n  createProgressBar_(time) {\n    const progressBar = this.doc_.createElement('div');\n    progressBar.className = 'i-amphtml-story-ad-progress-bar';\n    setStyle(progressBar, 'animationDuration', time);\n\n    this.progressBarBackground_ = this.doc_.createElement('div');\n    this.progressBarBackground_.className =\n      'i-amphtml-story-ad-progress-background';\n\n    const host = this.doc_.createElement('div');\n    host.className = 'i-amphtml-story-ad-progress-bar-host';\n\n    this.progressBarBackground_.appendChild(progressBar);\n    createShadowRootWithStyle(host, this.progressBarBackground_, progessBarCSS);\n    this.ampStory_.element.appendChild(host);\n\n    // TODO(#33969) move this to init listeners when no longer conditional.\n    this.storeService_.subscribe(StateProperty.PAUSED_STATE, (isPaused) => {\n      this.onPauseStateUpdate_(isPaused);\n    });\n  }\n\n  /**\n   * If video is paused and ad is showing pause the progress bar.\n   * @param {boolean} isPaused\n   */\n  onPauseStateUpdate_(isPaused) {\n    const adShowing = this.storeService_.get(StateProperty.AD_STATE);\n    if (!adShowing) {\n      return;\n    }\n\n    toggleAttribute(this.progressBarBackground_, Attributes.PAUSED, isPaused);\n  }\n\n  /**\n   * Create new page containing ad and start preloading.\n   * @private\n   */\n  initializePages_() {\n    const pages = this.placementAlgorithm_.initializePages();\n    this.maybeForceAdPlacement_(devAssert(pages[0]));\n  }\n\n  /**\n   * Development mode forces navigation to ad page for better dev-x.\n   * @param {StoryAdPage} adPage\n   */\n  maybeForceAdPlacement_(adPage) {\n    if (\n      this.element.hasAttribute('development') &&\n      this.config_['type'] === 'fake'\n    ) {\n      this.forcePlaceAdAfterPage_(adPage);\n    }\n  }\n\n  /**\n   * Respond to page navigation event. This method is not called for the first\n   * page that is shown on load.\n   * @param {number} pageIndex Does not update when ad is showing.\n   * @param {string} pageId\n   * @private\n   */\n  handleActivePageChange_(pageIndex, pageId) {\n    if (this.adPageManager_.numberOfAdsCreated() === 0) {\n      // This is protection against us running our placement algorithm in a\n      // story where no ads have been created. Most likely because INI_LOAD on\n      // the story has not fired yet but we still are receiving page changes.\n      return;\n    }\n\n    this.placementAlgorithm_.onPageChange(pageId);\n\n    if (this.visibleAdPage_) {\n      this.transitionFromAdShowing_();\n    }\n\n    if (this.adPageManager_.hasId(pageId)) {\n      this.transitionToAdShowing_(pageIndex, pageId);\n    }\n  }\n\n  /**\n   * Called when switching away from an ad.\n   */\n  transitionFromAdShowing_() {\n    // We are transitioning away from an ad\n    const adPageId = this.visibleAdPage_.getId();\n    const adIndex = this.adPageManager_.getIndexById(adPageId);\n    this.removeVisibleAttribute_();\n    // Fire the exit event.\n    this.analyticsEvent_(AnalyticsEvents.AD_EXITED, {\n      [AnalyticsVars.AD_EXITED]: Date.now(),\n      [AnalyticsVars.AD_INDEX]: adIndex,\n    });\n  }\n\n  /**\n   * We are switching to an ad.\n   * @param {number} pageIndex\n   * @param {string} adPageId\n   */\n  transitionToAdShowing_(pageIndex, adPageId) {\n    const adPage = this.adPageManager_.getAdPageById(adPageId);\n    const adIndex = this.adPageManager_.getIndexById(adPageId);\n\n    if (!adPage.hasBeenViewed()) {\n      this.placementAlgorithm_.onNewAdView(pageIndex);\n    }\n\n    // Tell the iframe that it is visible.\n    this.setVisibleAttribute_(adPage);\n\n    // Fire the view event on the corresponding Ad.\n    this.analyticsEvent_(AnalyticsEvents.AD_VIEWED, {\n      [AnalyticsVars.AD_VIEWED]: Date.now(),\n      [AnalyticsVars.AD_INDEX]: adIndex,\n    });\n  }\n\n  /**\n   * Sets a `amp-story-visible` attribute on the fie body so that embedded ads\n   * can know when they are visible and do things like trigger animations.\n   * @param {StoryAdPage} adPage\n   */\n  setVisibleAttribute_(adPage) {\n    this.mutateElement(() => {\n      adPage.toggleVisibility();\n      this.visibleAdPage_ = adPage;\n    });\n  }\n\n  /**\n   *  Removes `amp-story-visible` attribute from the fie body.\n   */\n  removeVisibleAttribute_() {\n    this.mutateElement(() => {\n      if (this.visibleAdPage_) {\n        this.visibleAdPage_.toggleVisibility();\n        this.visibleAdPage_ = null;\n      }\n    });\n  }\n\n  /**\n   * Construct an analytics event and trigger it.\n   * @param {string} eventType\n   * @param {!Object<string, number>} vars A map of vars and their values.\n   * @private\n   */\n  analyticsEvent_(eventType, vars) {\n    this.analytics_.then((analytics) =>\n      analytics.fireEvent(this.element, vars['adIndex'], eventType, vars)\n    );\n  }\n}\n\nAMP.extension('amp-story-auto-ads', '0.1', (AMP) => {\n  AMP.registerElement('amp-story-auto-ads', AmpStoryAutoAds, CSS + sharedCSS);\n  AMP.registerServiceForDoc(STORY_AD_ANALYTICS, StoryAdAnalytics);\n});\n"],
  "mappings": ";;;;;;;;;AAgBA,MAAI;AASG,6BAA2B;AAChC,QAAI,UAAU;AACZ,aAAO;;AAMT,eAAW,QAAQ,QAAQ;AAC3B,WAAO;;AAwBT,MAAa,WAEX,qBAAc;AAAA,QAAA,QAAA;AAAA,oBAAA,MAAA;AAEZ,SAAK,UAAU,IAAW,QAAQ,SAAC,KAAK,KAAQ;AAE9C,YAAK,UAAU;AAEf,YAAK,SAAS;;;;;AC5Cb,mBAAiB,WAAW;AACjC,WAAO,YAAY,MAAM,UAAU,MAAM,KAAK,aAAa;;AAQtD,MAAO,UAAW,MAAX;AAkDP,kBAAgB,OAAO,cAAc;AAC1C,QAAM,UAAU;AAChB,QAAI,QAAQ;AACZ,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAM,OAAO,MAAM;AACnB,UAAI,aAAa,MAAM,GAAG,QAAQ;AAChC,gBAAQ,KAAK;aACR;AACL,YAAI,QAAQ,GAAG;AACb,gBAAM,SAAS;;AAEjB;;;AAGJ,QAAI,QAAQ,MAAM,QAAQ;AACxB,YAAM,SAAS;;AAEjB,WAAO;;AAYF,qBAAmB,OAAO,WAAW;AAC1C,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAI,UAAU,MAAM,IAAI,GAAG,QAAQ;AACjC,eAAO;;;AAGX,WAAO;;AA2CF,sBAAoB,OAAO,MAAM;AACtC,QAAM,QAAQ,MAAM,QAAQ;AAC5B,QAAI,SAAS,IAAI;AACf,aAAO;;AAET,UAAM,OAAO,OAAO;AACpB,WAAO;;;;AC7IF,uBAAqB,SAAS,KAAK;AACxC,aAAW,KAAK,SAAS;AACvB,UAAI,QAAQ,OAAO,KAAK;AACtB,eAAO;;;AAGX,WAAO;;;;ACoCF,oBAAkB,QAAQ,QAAQ;AACvC,QAAM,QAAQ,OAAO,SAAS,OAAO;AACrC,WAAO,SAAS,KAAK,OAAO,QAAQ,QAAQ,UAAU;;AAUjD,oBAAkB,QAAQ,WAAW,OAAO;AACjD,QAAI,OAAO,UAAU,UAAU;AAC7B,cAAQ;;AAEV,QAAI,QAAQ,UAAU,SAAS,OAAO,QAAQ;AAC5C,aAAO;;AAET,WAAO,OAAO,QAAQ,WAAW,WAAW;;;;ACpE9C,MAAA,oBAAuD,OAAO;AAA9D,MAAuB,UAAvB,kBAAO;AAAP,MAA0C,YAA1C,kBAAgC;AAOzB,oBAAkB,OAAO;AAC9B,WAAO,UAAU,KAAK,WAAW;;AAW5B,eAAa,aAAa;AAC/B,QAAM,MAAM,OAAO,OAAO;AAC1B,QAAI,aAAa;AACf,aAAO,OAAO,KAAK;;AAErB,WAAO;;AAcF,gBAAc,aAAa;AAGhC,WAAmC,eAAe;;AAW7C,kBAAgB,KAAK,KAAK;AAC/B,WAAO,QAAQ,KAAK,KAAK;;;;AC3CpB,qBAAmB,OAAO;AAC/B,WAAO,UAAK,OAAL,SAAA,MAAO,aAAoC;;;;ACD7C,MAAM,sBAAsB;AAQ5B,mCAAiC,KAAK;AAE3C,QAAI,UAAU,MAAM;AAClB,YAA8B;AAC9B,aAAO,IAAI,QAAQ,gBAAiB,KAAI,KAAJ,MAAa,IAAI,KAAO;;AAE9D,WAAO;;;;ACSF,kBACL,UACA,gBACA,aACA,UACA;AAAA,QAFA,gBAEA,QAAA;AAFA,oBAAc;;AAGd,QAAI,gBAAgB;AAClB,aAAO;;AAIT,QAAI,YAAY,CAAC,SAAS,aAAa,WAAW;AAChD,qBAAe;;AAMjB,QAAI,IAAI;AAGR,QAAM,eAAe,YAAY,MAAM;AACvC,QAAI,UAAU,aAAa;AAC3B,QAAM,eAAe,CAAC;AAEtB,WAAO,aAAa,QAAQ;AAC1B,UAAM,WAAW,UAAU;AAC3B,UAAM,eAAe,aAAa;AAElC,iBAAW,wBAAwB,YAAY;AAC/C,mBAAa,KAAK,UAAU,aAAa;;AAG3C,QAAM,QAAQ,IAAI,MAAM;AACxB,UAAM,eAAe,OAAO,cAAc,SAAC,GAAD;AAAA,aAAO,MAAM;;AAIvD,SAAK,sBAAL,OAAA,SAAA,KAAK,mBAAqB;AAC1B,UAAM;;;;AChED,oCAAkC;AACvC,WAAO;;;;ACRT,MAAM,qBAAqB;AAUpB,iCAA+B,WAAW,UAAe;AAAA,QAAf,aAAe,QAAA;AAAf,iBAAW;;AAC1D,QAAI;AACF,aAAO,mBAAmB;aACnB,GAAP;AACA,aAAO;;;AAWJ,4BAA0B,aAAa;AAC5C,QAAM,SAAS;AACf,QAAI,CAAC,aAAa;AAChB,aAAO;;AAGT,QAAI;AACJ,WAAQ,QAAQ,mBAAmB,KAAK,cAAe;AACrD,UAAM,OAAO,sBAAsB,MAAM,IAAI,MAAM;AACnD,UAAM,QAAQ,MAAM,KAChB,sBAAsB,MAAM,GAAG,QAAQ,OAAO,MAAM,MAAM,MAC1D;AACJ,aAAO,QAAQ;;AAEjB,WAAO;;;;AChBT,MAAI,aAAa;AAOV,mBAAiB,SAAS;AAC/B,QAAM,MAAM,WAAW;AACvB,QAAI,IAAI,YAAY;AAClB,aAAO,IAAI;;AAEb,WAAQ,IAAI,aAAa,SAAS;;AAQpC,oBAAkB,KAAK;AAErB,QAAM,aAAa,KAAK,cAAc;AAMtC,QAAM,gBAAgB;AACtB,QAAM,eAAc;AAEpB,QAAM,eACJ,iBAAiB,CAAC,CAAE,YAAW,QAAQ,IAAI,cAAc,IAAI;AAC/D,QAAM,aAAa,iBAAkB,EAAC,CAAC,WAAW,YAAY;AAC9D,QAAM,YAAY,iBAGhB,IAAI,SAAS,mBAAmB,IAAI,SAAS;AAG/C,QAAI,CAAC,YAAY;AACf,mBAAa,cAAc;;AAO7B,WAAO;MACL,UAAU;MACV,aAAa,kBAAkB;MAC/B,UAAU,UAAU,kBAAkB;MACtC,KAAG;MAEH,aAAa,UAAU;MACvB,UAAU;MACV,MAAM;MACN,KAAK,UAAU;MACf,SAAS;MACT;;;AAWJ,yBAAuB,KAAK;AAC1B,QAAI,IAAI,cAAc,IAAI,WAAW,GAAG;AACtC,aAAO,IAAI,WAAW;;AAQxB,WAAA,OAAY;;AAUP,6BAA2B,KAAK;AACrC,QAAM,YAAY,iBAChB,IAAI,SAAS,mBAAmB,IAAI,SAAS;AAE/C,WAAO,CAAC,CACN,EAAC,KAAK,WAAW,OAAO,WAAW,aAAa,SAC9C,UAAU,mBACP,IAAI;;;;ACnHb,MAAM,MAAM,KAAK,cAAc;AAE/B,MAAM,uBACH,QAAO,IAAI,2BAA2B,WACnC,IAAI,OAAO,IAAI,2BACf,IAAI,4BAA4B;AAEtC,MAAM,gBACH,QAAO,IAAI,oBAAoB,WAC5B,IAAI,OAAO,IAAI,oBACf,IAAI,qBACR;AAYF,sBAAoB,MAAM;AAExB,QAAI,CAAC,KAAK,YAAY,CAAC,KAAK,SAAS,MAAM;AACzC,aAAO;;AAIT,QAAI,KAAK,YAAY,cAAc,KAAK,KAAK,SAAS,SAAS;AAC7D,aAAO;;AAGT,QAAM,SAAS,KAAK,SAAS,KAAY,cAA1B,gBACC,OADD;AAGf,WAAQ,UAAU,OAAO,aAAa,cAAe;;AAkBhD,MAAM,OAAO;IAClB,YAAY,IAAI,oBAAoB;IACpC,qBAAqB,IAAI,0BAA0B;IACnD;IACA,KACE,IAAI,aAAa,WAAW,mBAAmB;IAIjD;IACA,gBAAgB;IAChB,gBACE,IAAI,wBACJ;IACF,oBACE,IAAI,4BACJ;IACF,UAAU,IAAI,eAAe;IAU7B,oBAAoB,CAClB,qDACA;IAGF,QAAQ,IAAI,gBAAgB,WAAW;;;;ACrElC,MAAM,4BAA4B;AAalC,MAAM,WAAW;IACtB,KAAK;IACL,OAAO;IACP,MAAM;IACN,MAAM;IACN,MAAM;;AA8eR,OAAK,YAAY,KAAK,aAAa;IACjC,MAAM;IACN,KAAK;IACL,cAAc;;AAGhB,MAAM,OAAO,KAAK;AAQlB,MAAI,iBAAiB;AAsCd,gBAAc,aAAa;AAChC,QAAI,CAAC,KAAK,MAAM;AACd,WAAK,OAAO,cAAc;;AAE5B,QAAI,CAAC,YAAY,KAAK,KAAK,KAAK,cAAc;AAC5C,aAAO,KAAK;WACP;AACL,UAAI,KAAK,cAAc;AACrB,eAAO,KAAK;;AAEd,aAAQ,KAAK,eAAe,cAAc;;;AAS9C,yBAAuB,QAAQ;AAC7B,QAAI,CAAC,gBAAgB;AACnB,YAAM,IAAI,MAAM;;AAElB,WAAO,IAAI,eACT,MACA,SAAC,QAAQ,aAAgB;AACvB,UAAI,eAAe,UAAU,GAAG;AAC9B,eAAO,SAAS;;AAElB,aAAO,SAAS;OAElB;;AAgBG,iBAAe;AACpB,QAAI,KAAK,KAAK;AACZ,aAAO,KAAK;;AAEd,QAAI,CAAC,gBAAgB;AACnB,YAAM,IAAI,MAAM;;AAElB,WAAQ,KAAK,MAAM,IAAI,eAAe,MAAM,SAAC,QAAW;AACtD,UAAI,UAAU,GAAG;AACf,eAAO,SAAS;;AAElB,UAAI,UAAU,GAAG;AACf,eAAO,SAAS;;AAElB,aAAO,SAAS;;;AASb,uBAAqB,KAAK,aAAa;AAC5C,QAAI,CAAC,aAAa;AAChB,aAAO;;AAET,WAAO,YAAY,cAAc,eAAe;;AAgC3C,qBACL,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;AACA,QAAI,UAAU,UAAU;AACtB,aAAO;;AAET,QAAI,KAAK,uBAAuB;AAK9B,cACG,IAAI;;AAGT,WAAO,MAAoB,OACzB,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;;AAiCG,sBACL,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;AACA,WAAO,OAAqB,OAC1B,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;;;;AC1wBG,iBAAe,WAAW;AAC/B,WAA+B;;;;ACwE1B,kCAAgC,KAAK,IAAI,aAAa,iBAAiB;AAC5E,UAAM,aAAa;AACnB,4BAAwB,KAAK,KAAK,IAAI;AACtC,QAAI,iBAAiB;AACnB,yBAAmB,KAAK;;;AAYrB,wCACL,WACA,IACA,aACA,iBACA;AACA,QAAM,SAAS,UAAU;AACzB,QAAM,SAAS,uBAAuB;AACtC,4BAAwB,QAAQ,QAAQ,IAAI;AAC5C,QAAI,iBAAiB;AACnB,yBAAmB,QAAQ;;;AA0BxB,sBAAoB,KAAK,IAAI;AAClC,UAAM,aAAa;AACnB,WAAO,mBAAmB,KAAK;;AAW1B,gCAA8B,KAAK,IAAI;AAC5C,WAAO,mBAAmB,KAAK;;AAa1B,6BAA2B,KAAK,IAAI;AACzC,WAAO,0BAA0B,KAAK;;AASjC,oCAAkC,KAAK,IAAI;AAChD,UAAM,aAAa;AACnB,QAAI,oBAAoB,KAAK,KAAK;AAChC,aAAO,mBAAmB,KAAK;WAC1B;AACL,aAAO;;;AAUJ,mCAAiC,KAAK,IAAI;AAC/C,WAAO,gCAAgC,KAAK;;AAWvC,4BAA0B,iBAAiB,IAAI;AACpD,QAAM,SAAS,UAAU;AACzB,QAAM,SAAS,uBAAuB;AACtC,WAAO,mBAAmB,QAAQ;;AAU7B,kCAAgC,iBAAiB,IAAI;AAC1D,QAAM,SAAS,UAAU;AACzB,QAAM,SAAS,uBAAuB;AACtC,QAAI,oBAAoB,QAAQ,KAAK;AACnC,aAAO,mBAAmB,QAAQ;WAC7B;AACL,aAAO;;;AAYJ,mCAAiC,iBAAiB,IAAI;AAC3D,WAAO,0BAA0B,uBAAuB,kBAAkB;;AAUrE,yCAAuC,iBAAiB,IAAI;AACjE,WAAO,gCACL,uBAAuB,kBACvB;;AA6BG,wBAAsB,KAAK;AAChC,WAAO,IAAI,aAAc,KAAI,YAAY;;AA0BpC,qBAAmB,WAAW;AACnC,QAAI,UAAU,UAAU;AACtB,UAAM,MAAM,MACgB,WAAU,iBAAiB,WAClD;AAEL,aAAO,iBAAiB,KAAK,UAAgC;;AAE/D,WAAqD;;AAOvD,kCAAgC,WAAW;AACzC,QAAM,SAAS,UAAU;AACzB,WAAO,OAAO,gBAAgB,OAAO,MAAM;;AAS7C,4BAA0B,KAAK;AAC7B,WACE,WAAW,KAAK;;AAWpB,8BAA4B,QAAQ,IAAI;AACtC,cACE,oBAAoB,QAAQ,KADrB,sBAEa,KAFb;AAIT,QAAM,WAAW,YAAY;AAC7B,QAAM,IAAI,SAAS;AACnB,QAAI,CAAC,EAAE,KAAK;AACV,gBAAU,EAAE,MAAH,aAAoB,KAApB;AACT,gBAAU,EAAE,SAAH,aAAuB,KAAvB;AACT,QAAE,MAAM,IAAI,EAAE,KAAK,EAAE;AACrB,gBAAU,EAAE,KAAH,aAAmB,KAAnB;AACT,QAAE,UAAU;AAGZ,UAAI,EAAE,SAAS;AACb,UAAE,QAAQ,EAAE;;;AAGhB,WAAO,EAAE;;AAWX,mCACE,QACA,SACA,IACA,MACA,cACA,oBACA;AACA,QAAM,WAAW,YAAY;AAC7B,QAAI,IAAI,SAAS;AAEjB,QAAI,CAAC,GAAG;AACN,UAAI,SAAS,MAAM;QACjB,KAAK;QACL,SAAS;QACT,SAAS;QACT,QAAQ;QACR,SAAS;QACT,MAAM;QACN,gBAAgB,sBAAsB;;;AAI1C,QAAI,CAAC,gBAAgB,EAAE,MAAM;AAE3B;;AAGF,MAAE,OAAO;AACT,MAAE,UAAU;AACZ,MAAE,iBAAiB,sBAAsB;AAIzC,QAAI,EAAE,SAAS;AAEb,yBAAmB,QAAQ;;;AAS/B,qCAAmC,QAAQ,IAAI;AAC7C,QAAM,SAAS,gCAAgC,QAAQ;AACvD,QAAI,QAAQ;AACV,aAAO;;AAMT,QAAM,WAAW,YAAY;AAC7B,aAAS,MAAM;AACf,WAAyC,SAAS,IAAI;;AA6BxD,2CAAyC,QAAQ,IAAI;AACnD,QAAM,WAAW,YAAY;AAC7B,QAAM,IAAI,SAAS;AACnB,QAAI,GAAG;AACL,UAAI,EAAE,SAAS;AACb,eAAO,EAAE;aACJ;AAEL,2BAAmB,QAAQ;AAC3B,eAAQ,EAAE,UAAU,QAAQ,QAAgC,EAAE;;;AAGlE,WAAO;;AAQT,uBAAqB,QAAQ;AAC3B,QAAI,WAAW,OAAO;AACtB,QAAI,CAAC,UAAU;AACb,iBAAW,OAAO,iBAAiB;;AAErC,WAAO;;AAqJT,+BAA6B,QAAQ,IAAI;AACvC,QAAM,UAAU,OAAO,kBAAkB,OAAO,eAAe;AAE/D,WAAO,CAAC,CAAE,YAAW,QAAQ;;AAI/B,2CAAyC;AACvC,QAAM,WAAW,IAAI;AACrB,QAAO,UAA4B,SAA5B,SAAS,SAAmB,SAAnB,QAAQ,UAAW,SAAX;AACxB,YAAQ,MAAM,WAAM;;AACpB,WAAO;MACL,KAAK;MACL;MACA;MACA;MACA,SAAS;MACT,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnnBV,MAAM,MAAM;AAGZ,MAAM,oBAAoB;AAG1B,MAAM,0BAA0B;AA0BzB,0BAAwB,KAAK,cAAc;AAChD,QAAM,UAAU,kBAAkB;AAClC,WAAO,CAAC,CAAC,QAAQ;;AAoDZ,6BAA2B,KAAK;AAAA,QAAA,kBAAA;AACrC,QAAI,IAAI,0BAA0B;AAChC,aAAO,IAAI;;AAEb,QAAI,2BAA2B;AAC/B,QAAM,UAAU,IAAI;AAGpB,QAAI,IAAI,YAAY;AAClB,eAAW,gBAAgB,IAAI,YAAY;AACzC,YAAM,YAAY,IAAI,WAAW;AACjC,YAAI,OAAO,cAAc,YAAY,aAAa,KAAK,aAAa,GAAG;AACrE,kBAAQ,gBAAgB,KAAK,WAAW;;;;AAK9C,QAAM,kBAAe,oBAAG,IAAI,eAAP,OAAA,SAAG,iBAAiB;AACzC,QAAI,QAAQ,oBAAoB,gBAAgB,QAAQ;AACtD,UAAM,OAAO,IAAI,SAAS,KAAK,cAC7B;AAEF,UAAI,MAAM;AACR,YAAM,qBAAqB,KAAK,aAAa,WAAW,MAAM;AAC9D,iBAAA,YAAA,gCAAyB,qBAAzB,OAAA,CAAA,SAAA,aAAA,QAA6C;AAAA,cAAlC,aAAkC,MAAA;AAC3C,cAAI,MAAM,YAAY,iBAAiB,SAAS,aAAa;AAC3D,oBAAQ,cAAc;;;;;AAM9B,WAAO,OAAO,SAAS,qBAAqB;AAE5C,QAAM,kBAAe,oBAAG,IAAI,eAAP,OAAA,SAAG,iBAAiB;AACzC,QAAI,QAAQ,oBAAoB,gBAAgB,QAAQ;AACtD,UAAM,OAAO,IAAI,SAAS,mBAAmB,IAAI,SAAS;AAC1D,UAAM,SAAS,iBAAiB;AAChC,eAAA,aAAA,gCAAyB,kBAAzB,QAAA,CAAA,UAAA,cAAA,QAA0C;AAAA,YAA/B,cAA+B,OAAA;AACxC,YAAM,QAAQ,OAAM,OAAM;AAC1B,YAAI,SAAS,KAAK;AAChB,kBAAQ,eAAc;;AAExB,YAAI,SAAS,KAAK;AAChB,kBAAQ,eAAc;;;;AAI5B,WAAO;;AAkBT,gCAA8B,KAAK;AAAA,QAAA;AACjC,QAAI,oBAAoB;AACxB,QAAI;AACF,UAAI,kBAAkB,KAAK;AACzB,4BAAoB,IAAI,aAAa,QAAQ;;aAE/C,SAAA;AACA,YAAM,KAAK,KAAK;;AAElB,QAAM,SAAS,uBAAA,sBAAiB,OAAjB,SAAA,mBAAmB,MAAM,gBAAe;AAEvD,QAAM,UAAU;AAChB,aAAA,aAAA,gCAAoB,SAApB,QAAA,CAAA,UAAA,cAAA,QAA4B;AAAA,UAAjB,QAAiB,OAAA;AAC1B,UAAI,CAAC,OAAO;AACV;;AAEF,UAAI,MAAM,MAAM,KAAK;AACnB,gBAAQ,MAAM,OAAO,MAAM;aACtB;AACL,gBAAQ,SAAS;;;AAGrB,WAAO;;AAkDT,iCAA+B;AAE7B,WAAO,KAAK;;AAWP,MAAM,2BAA2B;IACtC,cAAc;;AAQhB,4BAA0B,KAAK;AAC7B,QAAM,KAAK,yBAAyB;AACpC,WAAO,MAAM,aAAa,IAAI,KAAK,MAAM,KAAK,IAAI,aAAa;;AAmB1D,0CAAwC,KAAK,aAAa;AAC/D,QAAI,4BAA4B,IAAI,6BAA6B;AACjE,QAAM,sBAAsB;AAC5B,aAAA,aAAA,gCAAyB,cAAzB,QAAA,CAAA,UAAA,cAAA,QAAsC;AAAA,UAA3B,aAA2B,OAAA;AACpC,UAAM,iBAAiB,WAAW;AAClC,UAAI,OAAO,IAAI,2BAA2B,iBAAiB;AACzD,4BAAoB,kBAClB,IAAI,0BAA0B;AAChC;;AAGF,UAAI,CAAC,YAAW,qBAAZ,QAAC,WAAW,kBAAoB,OAAM;AACxC,YAAI,0BAA0B,kBAAkB;AAChD;;AAMF,UACE,CAAC,IAAI,0BAA0B,mBAC/B,eAAe,KAAY,iBAC3B;AACA,YAAI,0BAA0B,kBAAkB,iBAC9C,WAAW;AAEb,4BAAoB,kBAClB,IAAI,0BAA0B;;;AAGpC,WAAO;;AAYF,+BAA6B,KAAK,gBAAgB;AACvD,WAAO,IAAI,4BACP,IAAI,0BAA0B,kBAC9B;;;;ACpUC,MAAM,mBAAmB;IAC9B,YAAY;IACZ,YAAY;IACZ,YAAY;;AAIP,MAAM,qBAAqB;IAChC,IAAI;IACJ,SAAS;IACT,aAAa;IACb,eAAe;IACf,aAAa;;AAOR,oCAAkC,KAAK;AAE5C,QAAM,iBAAiB;MACrB,cAAc,mBAAmB;MACjC,mBAAmB,6BAAA;AAAA,eAAM;;MACzB,UAAU,CACR,mBAAmB,SACnB,mBAAmB,aACnB,mBAAmB,eACnB,mBAAmB;;AAGvB,mCAA+B,KAAK,CAAC;;;;ACahC,qBAAmB,MAAM;AAC9B,WAAmC,KAAK,MAAM;;AA8BzC,sBAAoB,IAAG,GAAG,OAAW;AAAA,QAAX,UAAW,QAAA;AAAX,cAAQ;;AACvC,QAAI,CAAC,SAAS,UAAU,QAAQ,GAAG;AACjC,YAAM,IAAI,MAAM,oBAAoB;;AAEtC,QAAI,OAAM,GAAG;AACX,aAAO;;AAGT,QAAM,QAAQ,CAAC;MAAC,GAAA;MAAG;MAAG;;AACtB,WAAO,MAAM,SAAS,GAAG;AACvB,UAAA,eAAsB,MAAM,SAArB,KAAP,aAAO,GAAG,KAAV,aAAU,GAAG,SAAb,aAAa;AAEb,UAAI,SAAQ,GAAG;AACb,YAAI,OAAO,OAAM,OAAO,IAAG;AACzB,iBAAO;mBACE,QAAQ,OAAM,QAAQ,KAAI;AACnC,cAAI,GAAE,WAAW,GAAE,QAAQ;AACzB,mBAAO;;AAET,mBAAS,IAAI,GAAG,IAAI,GAAE,QAAQ,KAAK;AACjC,kBAAM,KAAK;cAAC,GAAG,GAAE;cAAI,GAAG,GAAE;cAAI,OAAO,SAAQ;;;AAE/C;mBACS,MAAK,MAAK,OAAO,OAAM,YAAY,OAAO,OAAM,UAAU;AACnE,cAAM,QAAQ,OAAO,KAAK;AAC1B,cAAM,QAAQ,OAAO,KAAK;AAC1B,cAAI,MAAM,WAAW,MAAM,QAAQ;AACjC,mBAAO;;AAET,mBAAA,KAAA,GAAA,SAAgB,OAAhB,KAAA,OAAA,QAAA,MAAuB;AAAlB,gBAAM,IAAC,OAAA;AACV,kBAAM,KAAK;cAAC,GAAG,GAAE;cAAI,GAAG,GAAE;cAAI,OAAO,SAAQ;;;AAE/C;;;AAIJ,UAAI,OAAM,IAAG;AACX,eAAO;;;AAGX,WAAO;;;;AC3GF,MAAM,oBAAoB;IAE/B,gCAAgC;IAChC,mCAAmC;IACnC,kCAAkC;IAClC,qCAAqC;IACrC,sCAAsC;IACtC,mCAAmC;IACnC,8BAA8B;IAC9B,uCAAuC;IACvC,wCAAwC;IACxC,wCAAwC;IACxC,iCAAiC;IACjC,uCAAuC;IACvC,sCAAsC;IACtC,+CAA+C;IAC/C,mDAAmD;IACnD,8CAA8C;IAC9C,6CAA6C;IAC7C,oDAAoD;IACpD,iDAAiD;IACjD,4CAA4C;IAC5C,6BAA6B;IAC7B,8BAA8B;IAC9B,kCAAkC;IAClC,6BAA6B;IAC7B,qBAAqB;IACrB,sBAAsB;IACtB,6BAA6B;IAC7B,sCAAsC;IACtC,iDAAiD;IACjD,4BAA4B;IAC5B,2BAA2B;IAC3B,8BAA8B;IAC9B,6BAA6B;IAC7B,yBAAyB;IACzB,kBAAkB;IAClB,8BAA8B;IAC9B,0CAA0C;IAC1C,0CAA0C;IAC1C,8BAA8B;IAC9B,uCAAuC;IACvC,0CAA0C;IAC1C,6CAA6C;IAC7C,sCAAsC;IACtC,sCAAsC;IACtC,0CAA0C;IAC1C,2CAA2C;IAC3C,qCAAqC;IACrC,wCAAwC;IACxC,wCAAwC;IACxC,yCAAyC;IACzC,0CAA0C;IAC1C,gCAAgC;IAChC,qCAAqC;IACrC,gCAAgC;IAChC,4CAA4C;IAC5C,qCAAqC;IACrC,2CAA2C;IAC3C,4CAA4C;IAC5C,8CAA8C;IAC9C,4CAA4C;IAG5C,2CAA2C;IAC3C,0CAA0C;IAC1C,6CAA6C;IAC7C,0CAA0C;IAC1C,yCAAyC;IACzC,yCAAyC;IACzC,yCAAyC;IACzC,4CAA4C;IAC5C,wCAAwC;IACxC,sCAAsC;IACtC,0CAA0C;IAC1C,2CAA2C;IAC3C,sCAAsC;IACtC,sCAAsC;IACtC,sCAAsC;IACtC,sCAAsC;IACtC,2CAA2C;IAC3C,yCAAyC;IACzC,2CAA2C;IAC3C,yCAAyC;IACzC,sCAAsC;IACtC,uCAAuC;IACvC,+CAA+C;IAG/C,uCAAuC;IACvC,qCAAqC;IACrC,4CAA4C;IAC5C,4CAA4C;IAC5C,4CAA4C;IAC5C,4CAA4C;;AA0B9C,sCAAoC,uBAAuB;AACzD,WACE,UACE,KAAK,UAAsC;;AAc1C,8BAA4B,uBAAuB,gBAAgB;AAExE,QAAM,2BAA2B,2BAC/B;AAGF,WAAO,KAAK,0BAA0B,QAAQ,SAAC,wBAA2B;AACxE,UAAM,oBACJ;AAEF,+BAAyB,mBAAmB,SAAS,eACnD,sBAAsB,mBAAmB;AAE3C,+BAAyB,mBAAmB,WAAW,eACrD,sBAAsB,mBAAmB;;AAI7C,WAAO;;;;ACvKT,MAAM,cAAc;AAMb,4BAA0B;AAC/B,WAAO;;;;ACKT,+BAA6B;AAC3B,QAAI,KAAK,uBAAuB;AAC9B,cACG,IAAI;;;AAuBJ,sBACL,gBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;AACA,QAAI,kBAAkB;AACpB,aAAO;;AAET;AAEA,WAAO,AAAW,OAChB,IACA,gBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;;;;ACtFJ,AAoBA,MAAI,QAAQ;AAEZ,mBAAiB,OAAO,KAAK,MAAM,WAAW,OAAO;AAEnD,QAAI,OAAO;AACT,aAAO;;AAGT,QAAI,KAAK;AACP,aAAO;;AAKT,QAAI,WAAW;AACb,aAAO,MAAM,MAAM,GAAG,MAAM,OAAO,MAAM,MAAM,IAAI,WAAW,GAAG,SAAS,MAAM;;AAIlF,WAAO,OAAO;;AAQT,qBAAmB,OAAO;AAC/B,WAAO,OAAO,OAAO,QAAQ,OAAO;;;;AC+C/B,kCAAgC,OAAO;AAG5C,QAAA,OAAY;AACV,aAAO,IAAI,OAAO;;AAEpB,WAAO,UAAU;;;;AC1EnB,wBAAsB,MAAM;AAC1B,eACE,WAAW,KAAK,OADT,eAEM,OAFN;;AA2FJ,mBAAiB,SAAS,UAAU,YAAY;AACrD,aAAS,KAAK,SAAS,MAAM,OAAO,YAAY,KAAK,GAAG,eAAe;AACrE,UAAI,SAAS,KAAK;AAChB,eAAO;;;AAGX,WAAO;;AA4MF,wBAAsB,SAAS,SAAS;AAC7C,iBAAa;AACb,WAAO,QAAe,cAAc;;;;ACjR/B,wBAAsB,QAAQ,WAAW,UAAU;AACxD,QAAI,UAAU,SAAS;AACrB;AACA;;AAGF,QAAM,MAAM,MAAM,OAAO,cAAc;AACvC,QAAc,IAAI,kBAAkB;AAElC,UAAM,WAAW,IAAI,IAAI,iBAAiB,WAAM;AAC9C,YAAI,UAAU,SAAS;AACrB,mBAAS;AACT;;;AAGJ,eAAS,QAAQ,QAAQ;QAAC,WAAW;;WAChC;AAEL,UAAM,WAAW,IAAI,YAAY,WAAM;AACrC,YAAI,UAAU,SAAS;AACrB,cAAI,cAAc;AAClB;;SAEkB;;;AAsBnB,2BAAyB,KAAK,UAAU;AAC7C,iBAAa,IAAI,iBAAiB,WAAA;AAAA,aAAM,CAAC,CAAC,IAAI;OAAM;;AAQ/C,kCAAgC,KAAK;AAC1C,WAAO,IAAI,QAAQ,SAAC,SAAD;AAAA,aAAa,gBAAgB,KAAK;;;AAsEhD,kCAAgC,SAAS,YAAY;AAC1D,aAAW,QAAQ,YAAY;AAC7B,cAAQ,aAAa,MAAM,WAAW;;AAExC,WAAO;;AAUF,uCAAqC,KAAK,SAAS,YAAY;AACpE,QAAM,UAAU,IAAI,cAAc;AAClC,WAAO,uBAAuB,SAAS;;AAgJlC,yBAAuB,UAAU,IAAI;AAC1C,QAAO,SAAU,SAAV;AACP,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,SAAG,SAAS,IAAI;;;AAiBb,4BAA0B,KAAK,KAAK,QAAQ,cAAc;AAI/D,QAAI;AACJ,QAAI;AACF,YAAM,IAAI,KAAK,KAAK,QAAQ;aACrB,GAAP;AACA,YAAM,MAAM,OAAO,kCAAkC,QAAQ;;AAI/D,QAAI,CAAC,OAAO,UAAU,UAAU,CAAC,SAAS,gBAAgB,IAAI,aAAa;AACzE,YAAM,IAAI,KAAK,KAAK;;AAEtB,WAAO;;AAQF,2BAAyB,SAAS;AACvC,WACE,QAAQ,WAAW,YACnB,QAAQ,aAAa,WACrB,QAAQ,aAAa,QAAQ,iBAAiB;;AAiK3C,2BAAyB,SAAS,MAAM,QAAQ;AACrD,QAAM,eAAe,QAAQ,aAAa;AAC1C,QAAM,UAAU,WAAW,SAAY,SAAS,CAAC;AAEjD,QAAI,YAAY,cAAc;AAC5B,UAAI,SAAS;AACX,gBAAQ,aAAa,MAAM;aACtB;AACL,gBAAQ,gBAAgB;;;AAI5B,WAAO;;;;ACpdF,6BAA2B,WAAW;AAC3C,QAAI,CAAC,WAAW;AACd,aAAO;;AAGT,QAAM,WAAU,UAAU,MACxB;AAEF,QAAM,cAAc,WAAU,SAAQ,KAAK;AAC3C,QAAM,mBAAmB,WAAU,SAAQ,KAAK;AAChD,QAAI,CAAC,eAAe,CAAC,kBAAkB;AACrC,aAAO;;AAET,WAAO;MAAC;MAAa;;;AA2GhB,kCAAgC,MAAM;AAE3C,QAAI,CAAC,MAAM;AACT,aAAO;;AAIT,QAAM,OAAO,KAAK,iBAChB;AAEF,QAAM,UAAU;AAChB,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,UAAM,SAAS,KAAK;AACpB,UAAM,cACJ,OAAO,aAAa,qBACpB,OAAO,aAAa;AACtB,UAAM,WAAW,kBAAkB,OAAO;AAC1C,UAAI,eAAe,UAAU;AAC3B,gBAAQ,KAAK;UAAC;UAAa,kBAAkB,SAAS;;;;AAG1D,WAAO;;AAWF,iCAA+B,KAAK,IAAI,SAAS;AACtD,WAAO,uBAAuB,IAAI,SAAS,MAAM,KAC/C,SAAA,MAAA;AAAA,UAAE,cAAF,KAAE,aAAa,mBAAf,KAAe;AAAf,aACE,MAAM,eAAe,WAAW;;;;;ACjN/B,wCACL,KACA,IACA,WACA,SACA,aACA;AACA,QAAM,IAAI,wBAAwB,KAAK;AACvC,QAAI,GAAG;AACL,aAAyC;;AAE3C,WAAO,+BACL,KACA,IACA,WACA,SACA;;AAkBG,mCAAiC,SAAS,IAAI,WAAW,aAAa;AAC3E,WAAO,mCACL,SACA,IACA,WACA,aACA,KAAK,SAAC,SAAD;AAAA,aAAa,cAAc,SAAS,IAAI;;;AAc1C,8CACL,SACA,IACA,WACA,aACA;AACA,QAAM,IAAI,8BAA8B,SAAS;AACjD,QAAI,GAAG;AACL,aAAyC;;AAE3C,QAAM,SAAS,UAAU;AACzB,WAAO,OACJ,sBACA,KAAK,WAAM;AACV,UAAM,UAAU,OAAO,oBAAoB;AAC3C,UAAI,CAAC,SAAS;AACZ,eAAO;;AAET,UAAM,aAAa,WAAW,OAAO,KAAK;AAC1C,aAAO,WAAW,iBAAiB,WAAW;OAE/C,KAAK,SAAC,KAAQ;AACb,UAAI,CAAC,KAAK;AACR,eAAO;;AAIT,UAAI,aAAa;AACf,eAAO,8BAA8B,SAAS;;AAEhD,aAAO,wBAAwB,SAAS;;;AAevC,0DACL,SACA,IACA,WACA;AACA,QAAM,IAAI,uBAAuB,SAAS;AAC1C,QAAI,GAAG;AACL,aAAyC,QAAQ,QAAQ;;AAE3D,WAAO,mCAAmC,SAAS,IAAI;;AAYzD,yBAAuB,SAAS,IAAI,WAAW;AAC7C,WACE,WACE,SACA,mKAGA,IACA,WACA,WACA;;AAgBN,0CACE,KACA,IACA,WACA,SACA,aACA;AACA,WAAO,AACJ,uBAAuB,IAAI,UAC3B,KAAK,WAAM;AAMV,UAAM,aAAa,WAAW,KAAK;AAInC,UAAI,CAAC,sBAAsB,WAAW,KAAK,WAAW,UAAU;AAC9D,eAAO;;AAET,aAAO,WAAW,iBAAiB,WAAW;OAE/C,KAAK,SAAC,KAAQ;AACb,UAAI,CAAC,KAAK;AACR,eAAO;;AAIT,UAAI,aAAa;AACf,eAAO,wBAAwB,KAAK;;AAEtC,aAAO,kBAAkB,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzLpC,MAAa,WAAb,2BAAA;AAAA,yBAAA;AAAA,uBAAA,MAAA;;AAAA,iBAAA,WAAA,MAAA,CAAA;MAAA,KAAA;MAAA,OAWE,6BAA2B,SAAS;AAClC,eACE,wBAAwB,SAAS,UAAU;;OAbjD;MAAA,KAAA;MAAA,OAuBE,mCAAiC,SAAS;AACxC,eACE,mCAAmC,SAAS,UAAU;;OAzB5D;MAAA,KAAA;MAAA,OAkCE,oCAAkC,SAAS;AACzC,eACE,wBAAwB,SAAS,iBAAiB;;OApCxD;MAAA,KAAA;MAAA,OA6CE,0CAAwC,SAAS;AAC/C,eACE,mCACE,SACA,iBACA;;OAlDR;MAAA,KAAA;MAAA,OA2DE,6BAA2B,SAAS;AAClC,eACE,uBAAuB,SAAS;;OA7DtC;MAAA,KAAA;MAAA,OAqEE,+BAA6B,SAAS;AACpC,eACE,uBAAuB,SAAS;;OAvEtC;MAAA,KAAA;MAAA,OA+EE,wBAAsB,SAAS;AAC7B,eACE,wBAAwB,SAAS,YAAY;;OAjFnD;MAAA,KAAA;MAAA,OA4FE,0BAAwB,QAAQ;AAC9B,eACE,WAAW,QAAQ;;OA9FzB;MAAA,KAAA;MAAA,OAuGE,gBAAc,cAAc;AAC1B,eAAO,UAAU;;OAxGrB;MAAA,KAAA;MAAA,OAgHE,yBAAuB,SAAS,eAAuB;AAAA,YAAvB,kBAAuB,QAAA;AAAvB,0BAAgB;;AAC9C,YAAI,eAAe;AAEjB,cAAM,SAAS,UAAU;AACzB,oBAAS,cAAc,OAAO,KAAY,uBACxC,QACA;;AAGJ,eACE,wBACE,SACA,iCACA;;OA7HR;MAAA,KAAA;MAAA,OAsIE,+BAA6B,SAAS;AACpC,eACE,mCACE,SACA,iCACA;;OA3IR;MAAA,KAAA;MAAA,OAoJE,uBAAqB,QAAQ;AAC3B,eACE,WAAW,QAAQ;;OAtJzB;MAAA,KAAA;MAAA,OA8JE,0BAAwB,SAAS;AAC/B,eACE,+CACE,SACA,QACA;;OAnKR;MAAA,KAAA;MAAA,OA4KE,4BAA0B,SAAS;AACjC,eACE,+CACE,SACA,cACA;;OAjLR;MAAA,KAAA;MAAA,OA0LE,mBAAiB,iBAAiB;AAChC,eACE,wBAAwB,iBAAiB;;OA5L/C;MAAA,KAAA;MAAA,OAoME,0BAAwB,iBAAiB;AACvC,eACE,iBAAiB,iBAAiB;;OAtMxC;MAAA,KAAA;MAAA,OA8ME,6BAA2B,SAAS;AAClC,eACE,wBAAwB,SAAS,UAAU;;OAhNjD;MAAA,KAAA;MAAA,OAwNE,iCAA+B,SAAS;AACtC,eACE,wBAAwB,SAAS,cAAc;;OA1NrD;MAAA,KAAA;MAAA,OAkOE,mBAAiB,QAAQ;AACvB,eACE,WAAW,QAAQ;;OApOzB;MAAA,KAAA;MAAA,OA4OE,4BAA0B,iBAAiB;AACzC,eACE,iBAAiB,iBAAiB,gBAClC;;OA/ON;MAAA,KAAA;MAAA,OAsPE,uBAAqB,QAAQ;AAC3B,eACE,WAAW,QAAQ;;OAxPzB;MAAA,KAAA;MAAA,OAkQE,0BAAwB,iBAAiB;AACvC,eACE,wBAAwB,iBAAiB;;OApQ/C;MAAA,KAAA;MAAA,OA6QE,8BAA4B,SAAS;AACnC,eACE,uBAAuB,SAAS;;OA/QtC;MAAA,KAAA;MAAA,OAwRE,uBAAqB,iBAAiB;AACpC,eACE,iBAAiB,iBAAiB;;OA1RxC;MAAA,KAAA;MAAA,OAkSE,kBAAgB,KAAK;AACnB,eAAO,WAAW,KAAK;;OAnS3B;MAAA,KAAA;MAAA,OA2SE,sCAAoC,SAAS;AAC3C,eACE,mCAAmC,SAAS,aAAa;;OA7S/D;MAAA,KAAA;MAAA,OAqTE,gCAA8B,iBAAiB;AAC7C,eACE,uBAAuB,iBAAiB;;OAvT9C;MAAA,KAAA;MAAA,OA+TE,+BAA6B,iBAAiB;AAC5C,eACE,iBAAiB,iBAAiB;;OAjUxC;MAAA,KAAA;MAAA,OAyUE,uBAAqB,iBAAiB;AACpC,eACE,iBAAiB,iBAAiB;;OA3UxC;MAAA,KAAA;MAAA,OAmVE,sBAAoB,iBAAiB;AACnC,eACE,iBAAiB,iBAAiB;;OArVxC;MAAA,KAAA;MAAA,OA6VE,wBAAsB,QAAQ;AAC5B,eACE,WAAW,QAAQ;;OA/VzB;MAAA,KAAA;MAAA,OAuWE,8BAA4B,QAAQ;AAClC,eACE,yBAAyB,QAAQ;;OAzWvC;MAAA,KAAA;MAAA,OAiXE,qBAAmB,QAAQ;AACzB,eACE,WAAW,QAAQ;;OAnXzB;MAAA,KAAA;MAAA,OA6XE,gCAA8B,SAAS;AACrC,eACE,iBAAiB,SAAS;;OA/XhC;MAAA,KAAA;MAAA,OAuYE,uBAAqB,QAAQ;AAC3B,eAAO,WAAW,QAAQ;;OAxY9B;MAAA,KAAA;MAAA,OA+YE,yBAAuB,iBAAiB;AACtC,eACE,iBAAiB,iBAAiB;;OAjZxC;MAAA,KAAA;MAAA,OAyZE,gCAA8B,iBAAiB;AAC7C,eACE,wBAAwB,iBAAiB;;OA3Z/C;MAAA,KAAA;MAAA,OAmaE,uCAAqC,KAAK;AACxC,eAEG,6BAA6B,KAAK,kBAAkB,aAAa;;OAtaxE;MAAA,KAAA;MAAA,OA8aE,8BAA4B,KAAK;AAC/B,eAEG,yBAAyB,KAAK;;OAjbrC;MAAA,KAAA;MAAA,OA2bE,oCAAkC,KAAK;AACrC,eAEG,6BAA6B,KAAK,eAAe,aAAa;;OA9brE;MAAA,KAAA;MAAA,OAscE,2BAAyB,KAAK;AAC5B,eAEG,yBAAyB,KAAK;;OAzcrC;MAAA,KAAA;MAAA,OAidE,gCAA8B,KAAK;AACjC,eAEG,yBAAyB,KAAK;;OApdrC;MAAA,KAAA;MAAA,OA6dE,sCAAoC,KAAK;AACvC,eAEG,6BAA6B,KAAK,iBAAiB,aAAa;;OAhevE;MAAA,KAAA;MAAA,OAweE,6BAA2B,KAAK;AAC9B,eAEG,yBAAyB,KAAK;;OA3erC;MAAA,KAAA;MAAA,OAmfE,wCAAsC,KAAK;AACzC,eAEG,yBAAyB,KAAK;;OAtfrC;MAAA,KAAA;MAAA,OA8fE,sCAAoC,IAAI;AACtC,eACE,wBAAwB,IAAI;;OAhgBlC;MAAA,KAAA;MAAA,OAwgBE,4BAA0B,SAAS;AACjC,eACE,uBAAuB,SAAS;;OA1gBtC;MAAA,KAAA;MAAA,OAmhBE,wCAAsC,KAAK;AACzC,eAGI,6BACE,KACA,mBACA,aACA,OACA;;OA5hBV;MAAA,KAAA;MAAA,OAsiBE,+BAA6B,KAAK;AAChC,eAEG,yBAAyB,KAAK;;OAziBrC;MAAA,KAAA;MAAA,OAijBE,gCAA8B,SAAS;AACrC,eAEG,wBAAwB,SAAS,iBAAiB;;OApjBzD;MAAA,KAAA;MAAA,OA4jBE,8BAA4B,iBAAiB;AAC3C,eACE,wBAAwB,iBAAiB;;OA9jB/C;MAAA,KAAA;MAAA,OAskBE,uBAAqB,iBAAiB;AACpC,eACE,wBAAwB,iBAAiB;;OAxkB/C;MAAA,KAAA;MAAA,OAilBE,+BAA6B,iBAAiB;AAC5C,YAAM,aAAa,UAAS,OAAO;AACnC,YAAM,gBAAgB,UAAS,iBAAiB,WAAW;AAC3D,YAAM,YAAY,cAAc,gBAC5B,cAAc,iBACd;AAGJ,YAAM,SACJ,aAAa,UAAU,OAAO,WAAW,MAAM,YAAY;AAC7D,eACE,wBAAwB,QAAQ;;OA5lBtC;MAAA,KAAA;MAAA,OAomBE,yBAAuB,iBAAiB;AACtC,eACE,iBAAiB,iBAAiB;;OAtmBxC;MAAA,KAAA;MAAA,OA8mBE,kBAAgB,QAAQ;AAEtB,eACE,qBAAqB,QAAQ;;OAjnBnC;MAAA,KAAA;MAAA,OAynBE,+BAA6B,SAAS;AACpC,eACE,uBAAuB,SAAS;;OA3nBtC;MAAA,KAAA;MAAA,OAmoBE,uCAAqC,SAAS;AAC5C,eAGI,wBACE,SACA,2BACA;;OA1oBV;MAAA,KAAA;MAAA,OAspBE,0CAAwC,SAAS;AAC/C,eAGI,mCACE,SACA,wBACA;;OA7pBV;MAAA,KAAA;MAAA,OAyqBE,yBAAuB,SAAS;AAC9B,eACE,mCAAmC,SAAS,OAAO,WAAW;;OA3qBpE;MAAA,KAAA;MAAA,OAqrBE,mBAAiB,SAAS;AACxB,eACE,uBAAuB,SAAS;;OAvrBtC;MAAA,KAAA;MAAA,OAisBE,8BAA4B,SAAS;AACnC,eACE,mCACE,SACA,WACA,kBACA;;OAvsBR;MAAA,KAAA;MAAA,OAgtBE,4BAA0B,iBAAiB;AACzC,eACE,iBAAiB,iBAAiB;;OAltBxC;MAAA,KAAA;MAAA,OA0tBE,sBAAoB,iBAAiB;AACnC,eACE,iBAAiB,iBAAiB;;OA5tBxC;MAAA,KAAA;MAAA,OAuuBE,6BAA2B,iBAAiB;AAC1C,eACE,wBAAwB,iBAAiB;;OAzuB/C;MAAA,KAAA;MAAA,OAivBE,kBAAgB,QAAQ;AACtB,eACE,WAAW,QAAQ;;OAnvBzB;MAAA,KAAA;MAAA,OA2vBE,wBAAsB,iBAAiB;AACrC,eACE,iBAAiB,iBAAiB;;OA7vBxC;MAAA,KAAA;MAAA,OAqwBE,gBAAc,QAAQ;AACpB,eAA+C,WAAW,QAAQ;;OAtwBtE;MAAA,KAAA;MAAA,OA6wBE,oCAAkC,iBAAiB;AACjD,eACE,iBAAiB,iBAAiB;;OA/wBxC;MAAA,KAAA;MAAA,OAuxBE,qCAAmC,iBAAiB;AAClD,eACE,iBAAiB,iBAAiB;;OAzxBxC;MAAA,KAAA;MAAA,OAiyBE,sCAAoC,iBAAiB;AACnD,eACE,wBAAwB,iBAAiB;;;AAnyB/C,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA,MAAM,yBAAyB;AAK/B,MAAM,4BAA4B;AAUlC,+BACE,wBACA,eACA,mBACA;AACA,QAAI,kBAAkB;AAEtB,kBAAc,KAAK,SAAC,cAAiB;AACnC,UAAM,wBAAwB,uBAAuB;AACrD,UAAI,yBAAyB,sBAAsB,oBAAoB;AACrE,0BACE,sBAAsB,mBAAmB,UACzC,sBAAsB,mBAAmB;AAC3C,eAAO,CAAC,CAAC;;AAGX,aAAO;;AAGT,WAAO;;AAQF,sCAAoC,cAAc;AACvD,QAAI,CAAC,cAAc;AACjB,aAAO,CAAC,MAAM;;AAEhB,QAAM,WAAU,aAAa,MAAM,8BAA8B;AACjE,WAAO,SAAQ,OACb,SAAC,0BAA0B,OAAO,OAAU;AAC1C,UAAM,uBAAuB,SAC1B,MAAM,GAAG,QAAQ,GACjB,KAAK,KACL;AACH,+BAAyB,QAAQ;AACjC,aAAO;OAET,CAAC;;AAOL,MAAa,sBAAb,2BAAA;AAIE,kCAAY,SAAS;AAAA,uBAAA,MAAA;AACnB,WAAK,WAAW;AAKhB,WAAK,sBAAsB,SAAS,aAAa,SAAS,SAAS;AAMnE,WAAK,0BAA0B;;AAhBnC,kBAAA,sBAAA,CAAA;MAAA,KAAA;MAAA,OAwBE,qCAA4B,SAAS;AACnC,YAAM,aAAa,QAAQ,SAAS,SAAC,IAAD;AAAA,iBAAQ,GAAG,aAAa;;AAC5D,YAAM,eAAe,aAAa,WAAW,aAAa,UAAU;AACpE,YAAM,qBAAqB,2BAA2B,gBAAgB;AAEtE,YAAI,KAAK,qBAAqB;AAC5B,6BAAmB,QAAQ,KAAK;;AAGlC,eAAO;;OAjCX;MAAA,KAAA;MAAA,OA2CE,uCAA8B,cAAc,uBAAuB;AACjE,YAAM,qBAAqB,aAAa;AACxC,YAAI,CAAC,KAAK,wBAAwB,qBAAqB;AACrD,eAAK,wBAAwB,sBAAsB;;AAGrD,eAAO,OACL,KAAK,wBAAwB,qBAC7B;AAEF,eAAO;;OArDX;MAAA,KAAA;MAAA,OAgEE,4BAAmB,mBAAmB,cAA8B;AAAA,YAA9B,iBAA8B,QAAA;AAA9B,yBAAe,KAAK;;AACxD,YAAM,gBAAgB,KAAK,4BAA4B;AAEvD,eAAO,oBACL,KAAK,yBACL,eACA;;;AAtEN,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;MCnEO,qBAAA,KAAA,MAAA,0lDAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,usBAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,w0FAAA,SAAA,KAAA,KAAA;;;;;MACA,uBAAA,KAAA,MAAA,8mBAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,yuBAAA,SAAA,KAAA,KAAA;;;;;MACA,wBAAA,KAAA,MAAA,yqBAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,0tBAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,gwDAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,mrBAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,yqBAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,0/BAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,83BAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,wqBAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,soBAAA,SAAA,KAAA,KAAA;;;;;MACA,uBAAA,KAAA,MAAA,0qBAAA,SAAA,KAAA,KAAA;;;;;MACA,uBAAA,KAAA,MAAA,qrBAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,80DAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,4uBAAA,SAAA,KAAA,KAAA;;;;;MACA,qBAAA,KAAA,MAAA,g1BAAA,SAAA,KAAA,KAAA;;;;;MACA,uBAAA,KAAA,MAAA,s0BAAA,SAAA,KAAA,KAAA;;;;;MACA,uBAAA,KAAA,MAAA,02BAAA,SAAA,KAAA,KAAA;;;;;AAGA,MAAM,WAAW;IACtB,WAAW,kBAAkB;IAC7B,UAAU,kBAAkB;IAC5B,aAAa,kBAAkB;IAC/B,UAAU,kBAAkB;IAC5B,SAAS,kBAAkB;IAC3B,SAAS,kBAAkB;IAC3B,SAAS,kBAAkB;IAC3B,YAAY,kBAAkB;IAC9B,QAAQ,kBAAkB;IAC1B,MAAM,kBAAkB;IACxB,UAAU,kBAAkB;IAC5B,WAAW,kBAAkB;IAC7B,MAAM,kBAAkB;IACxB,MAAM,kBAAkB;IACxB,MAAM,kBAAkB;IACxB,MAAM,kBAAkB;IACxB,WAAW,kBAAkB;IAC7B,SAAS,kBAAkB;IAC3B,WAAW,kBAAkB;IAC7B,SAAS,kBAAkB;IAC3B,MAAM,kBAAkB;IACxB,OAAO,kBAAkB;IACzB,eACE,kBAAkB;;AAStB,MAAM,yBAAyB,iCAAC,SAAY;AAC1C,QAAI,sBAAsB,SAAS,mBAAmB;AAEtD,QAAI,CAAC,qBAAqB;AACxB,4BAAsB,IAAI,oBAAoB;AAC9C,mCAA6B,SAAS,gBAAgB,WAAY;AAChE,eAAO;;;AAIX,WAAO;;AAGT,MAAa,sBAAb,2BAAA;AAIE,kCAAY,gBAAgB;AAAA,uBAAA,MAAA;AAE1B,WAAK,kBAAkB;AAEvB,WAAK,uBAAuB;;AARhC,kBAAA,sBAAA,CAAA;MAAA,KAAA;MAAA,OAeE,4BAAmB,IAAI;AACrB,YAAI,CAAC,KAAK,sBAAsB;AAC9B,eAAK;;AAEP,eAAO,KAAK,qBAAqB,mBAAmB;;OAnBxD;MAAA,KAAA;MAAA,OAyBE,iBAAQ;AACN,aAAK,uBAAuB,uBAAuB,KAAK;AAExD,YAAM,yBAAyB,mBAC7B,oBACA,SAAC,GAAD;AAAA,iBAAA,MAAW,IAAX;;AAGF,aAAK,qBACF,8BAA8B,WAAW,oBACzC,8BAA8B,MAAM,oBACpC,8BAA8B,MAAM,oBACpC,8BAA8B,MAAM,oBACpC,8BAA8B,SAAS,sBACvC,8BAA8B,MAAM,oBACpC,8BAA8B,UAAU,uBACxC,8BAA8B,MAAM,oBACpC,8BAA8B,MAAM,oBACpC,8BAA8B,MAAM,oBACpC,8BAA8B,MAAM,oBACpC,8BAA8B,MAAM,oBACpC,8BAA8B,MAAM,oBACpC,8BAA8B,MAAM,oBACpC,8BAA8B,MAAM,oBACpC,8BAA8B,SAAS,sBACvC,8BAA8B,SAAS,sBACvC,8BAA8B,MAAM,oBACpC,8BAA8B,MAAM,oBACpC,8BAA8B,MAAM,oBACpC,8BAA8B,SAAS,sBACvC,8BAA8B,SAAS,sBACvC,8BAA8B,SAAS;;;AAxD9C,WAAA;;;;ACSO,qCAAmC,KAAK,QAAQ;AACrD,QAAK,SAAU,IAAV;AAGL,QAAI,MAAS;AACX,eACE,UAAU,IAAI;AAEhB,UAAI,CAAC,UAAU,CAAC,OAAO,iBAAiB;AACtC,eAAO;;;AAMX,QAAM,aAAa,IAAI,WAAW;AAClC,WAAO,gBAAgB;AACvB,WAAO;;;;AC3FF,uBAAqB,KAAK;AAE/B,QAAM,aAAa,0BAA0B,KAAK;AAClD,QAAI,YAAY;AACd,aAAO,WAAW,KAAK;;AAIzB,WAAO,OACL,IAAI,SAAS,OACX,KAAK,QACL,IAAI,KAAK,WACT,IAAI,OAAO,QACX,IAAI,OAAO;;AAUV,2BAAyB,SAAS,qBAAqB;AAE5D,QAAI,SAAS,UAAU;AACrB,UAAM,uBAAuB,SAAS;AACtC,aAAO,oBAAoB,mBAAmB;;AAGhD,WAAO;;AAQF,uBAAqB,QAAQ;AAClC,WAAO,OAAO,mBAAmB,OAAO,cAAc;;;;ACtCjD,iCACL,QACA,WACA,MACA,gBACA;AAAA,QAFA,SAEA,QAAA;AAFA,aAAO;;AAEP,QADA,mBACA,QAAA;AADA,uBAAiB;;AAEjB,aAAS,sBAAsB,QAAQ,KAAK,SAAC,WAAc;AACzD,UAAI,CAAC,WAAW;AACd;;AAEF,gBAAU,sBAAsB,QAAQ,WAAW,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBtD,MAAM,qBAAqB;AAG3B,MAAM,kBAAkB;IAC7B,cAAc;IACd,WAAW;IACX,aAAa;IACb,WAAW;IACX,WAAW;IACX,YAAY;IACZ,WAAW;IACX,cAAc;;AAIT,MAAM,gBAAgB;IAE3B,cAAc;IAEd,WAAW;IAEX,aAAa;IAEb,WAAW;IAEX,WAAW;IAEX,YAAY;IAEZ,WAAW;IAEX,cAAc;IAEd,UAAU;IAEV,cAAc;IAGd,UAAU;IAEV,UAAU;;AAGZ,MAAa,mBAAb,2BAAA;AAIE,+BAAY,QAAQ;AAAA,uBAAA,MAAA;AAElB,WAAK,OAAO,OAAO;AAEnB,WAAK,QAAQ;;AARjB,kBAAA,mBAAA,CAAA;MAAA,KAAA;MAAA,OAkBE,mBAAU,SAAS,SAAS,WAAW,MAAM;AAC3C,aAAK,+BAA+B;AACpC,eAAO,OAA+B,KAAK,MAAM,UAAW;AAC5D,8BACE,SACA,WAC4B,KAAK,MAAM;;OAxB7C;MAAA,KAAA;MAAA,OAkCE,gBAAO,SAAS,SAAS,OAAO;AAC9B,aAAK,+BAA+B;AACpC,aAAK,MAAM,SAAS,WAAW;;OApCnC;MAAA,KAAA;MAAA,OA2CE,wCAA+B,SAAS;AACtC,YAAI,CAAC,KAAK,MAAM,UAAU;AAAA,cAAA;AACxB,eAAK,MAAM,WAAW,KAAI,SAAA,IAAA,MACvB,cAAc,YAAW,SADF,MAEvB,cAAc,gBAAe,YAAY,KAAK,OAFvB;;;;AA7ChC,WAAA;;;;AChEO,MAAM,OAAM;;;ACoBZ,MAAM,gBAAgB;IAI3B,kBAAkB;IAKlB,UAAU;IAKV,OAAO;IAKP,SAAS;IAMT,YAAY;IAaZ,cAAc;IAOd,UAAU;IAaV,UAAU;IAKV,QAAQ;;;;AC9DV,MAAI;AAMJ,MAAI;AA0BG,wCACL,SACA,WACA,UACA,qBACA;AACA,QAAI,eAAe;AACnB,QAAI,gBAAgB;AAEpB,QAAI,UAAU,kBAAC,OAAU;AACvB,UAAI;AACF,eAAO,cAAc;eACd,GAAP;AAEA,aAAK,sBAAL,OAAA,SAAA,KAAK,mBAAqB;AAC1B,cAAM;;;AAGV,QAAM,iBAAgB;AACtB,QAAM,UAAU,CAAC,CAAC,wBAAD,QAAC,oBAAqB;AAEvC,iBAAa,iBACX,WACA,SACA,iBAAgB,sBAAsB;AAExC,WAAO,WAAM;AAAA,UAAA;AACX,MAAA,iBAAA,iBAAY,OAAZ,SAAA,cAAc,oBACZ,WACA,SACA,iBAAgB,sBAAsB;AAGxC,sBAAgB;AAChB,qBAAe;AACf,gBAAU;;;AAUP,0CAAwC;AAE7C,QAAI,kBAAkB,QAAW;AAC/B,aAAO;;AAGT,oBAAgB;AAChB,QAAI;AAEF,UAAM,UAAU;YACV,UAAU;AACZ,0BAAgB;;;AAGpB,WAAK,iBAAiB,gBAAgB,MAAM;AAC5C,WAAK,oBAAoB,gBAAgB,MAAM;aACxC,KAAP;;AAGF,WAAO;;AAgBF,wCAAsC,KAAK;AAChD,QAAI,qBAAqB,QAAW;AAClC,aAAO;;AAGT,uBAAmB;AACnB,QAAI;AACF,UAAM,UAAU;YACV,UAAU;AAGZ,6BAAmB;AACnB,iBAAO;;;AAIX,UAAI,iBAAiB,gBAAgB,MAAM;AAC3C,UAAI,oBAAoB,gBAAgB,MAAM;aACvC,KAAP;;AAGF,WAAO;;;;ACxHF,6BAA2B,KAAK,MAAM,QAAQ,eAAe;AAClE,QAAM,YAA6C;MAAC;;AACpD,WAAO,OAAO,WAAW;AAGzB,QAAc,OAAO,IAAI,eAAe,YAAY;AAClD,aAAO,IAAI,IAAI,YAAY,MAAM;WAC5B;AAEL,UAAM,IAAI,IAAI,SAAS,YAAY;AACnC,QAAE,gBACA,MACA,CAAC,CAAC,UAAU,SACZ,CAAC,CAAC,UAAU,YACZ;AAEF,aAAO;;;AAYJ,kBAAgB,SAAS,WAAW,UAAU,qBAAqB;AACxE,WAAO,6BACL,SACA,WACA,UACA;;AASG,mBAAiB,OAAO;AAC7B,WAAoD,MAAM;;;;AC1DrD,MAAM,YAAY;IAEvB,MAAM;IAGN,QAAQ;IAGR,aAAa;IAGb,eAAe;IAGf,WAAW;IAGX,eAAe;IAGf,QAAQ;IAIR,2BAA2B;IAG3B,cAAc;IAGd,kBAAkB;IAGlB,cAAc;IAGd,aAAa;IAGb,iBAAiB;;AAUZ,oBACL,KACA,QACA,WACA,SACA,WACA;AAAA,QAFA,YAEA,QAAA;AAFA,gBAAU;;AAEV,QADA,cACA,QAAA;AADA,kBAAY;;AAEZ,QAAM,QAAQ,kBAAkB,KAAK,WAAW,SAAS;AACzD,WAAO,cAAc;;;;ACtDhB,MAAM,YAAY;IAIvB,cAAc;IAWd,UAAU;IAWV,YAAY;IAWZ,SAAS;IAUT,yBAAyB;;AAOpB,MAAM,iBAAiB;AAOvB,0BAAwB,KAAK;AAClC,QAAM,SAAS,iBAAiB;AAChC,QAAM,uBAAuB,OAAO;AACpC,QAAM,iBAAiB,SAAS,sBAAsB;AAEtD,WAAO,YAAY,WAAW,kBACC,iBAC3B,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEhB,MAAa,aAAb,2BAAA;AAIE,2BAAc;AAAA,uBAAA,MAAA;AAEZ,WAAK,YAAY;;AANrB,kBAAA,aAAA,CAAA;MAAA,KAAA;MAAA,OAcE,aAAI,SAAS;AAAA,YAAA,QAAA;AACX,YAAI,CAAC,KAAK,WAAW;AACnB,eAAK,YAAY;;AAEnB,aAAK,UAAU,KAAK;AACpB,eAAO,WAAM;AACX,gBAAK,OAAO;;;OApBlB;MAAA,KAAA;MAAA,OA4BE,iBAAO,SAAS;AACd,YAAI,CAAC,KAAK,WAAW;AACnB;;AAEF,mBAAW,KAAK,WAAW;;OAhC/B;MAAA,KAAA;MAAA,OAsCE,qBAAY;AACV,YAAI,CAAC,KAAK,WAAW;AACnB;;AAEF,aAAK,UAAU,SAAS;;OA1C5B;MAAA,KAAA;MAAA,OAiDE,cAAK,WAAW;AACd,YAAI,CAAC,KAAK,WAAW;AACnB;;AAEF,iBAAA,YAAA,iCAAsB,KAAK,YAA3B,OAAA,CAAA,SAAA,aAAA,QAAsC;AAAA,cAA3B,UAA2B,MAAA;AACpC,kBAAQ;;;OAtDd;MAAA,KAAA;MAAA,OA8DE,2BAAkB;AAAA,YAAA,uBAAA;AAChB,eAAA,yBAAA,mBAAO,KAAK,cAAZ,OAAA,SAAO,gBAAgB,WAAvB,OAAA,wBAAiC;;;AA/DrC,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA,MAAM,OAAM;AASL,MAAM,kBAAkB,0BAAC,KAAQ;AACtC,QAAI,UAAU,SAAS,kBAAkB;AAEzC,QAAI,CAAC,SAAS;AACZ,gBAAU,IAAI,qBAAqB;AACnC,6BAAuB,KAAK,eAAe,WAAY;AACrD,eAAO;;;AAIX,WAAO;;AAOF,MAAM,SAAS;IACpB,QAAQ;IACR,gBAAgB;IAChB,mBAAmB;IACnB,UAAU;;AAOL,MAAM,yBAAyB;IACpC,QAAQ;IACR,SAAS;IACT,UAAU;;AAwEL,MAAM,gBAAgB;IAE3B,yBAAyB;IACzB,mBAAmB;IACnB,kCAAkC;IAClC,6BAA6B;IAC7B,6BAA6B;IAC7B,sBAAsB;IACtB,+BAA+B;IAC/B,wBAAwB;IAGxB,cAAc;IACd,UAAU;IACV,uBAAuB;IACvB,sBAAsB;IACtB,eAAe;IACf,iBAAiB;IACjB,4BAA4B;IAC5B,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;IAE7B,yBAAyB;IACzB,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,uCAAuC;IACvC,qBAAqB;IACrB,cAAc;IAEd,eAAe;IACf,WAAW;IACX,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IAEzB,uBAAuB;IAEvB,kCAAkC;IAElC,6BAA6B;IAC7B,4BAA4B;IAC5B,UAAU;IACV,wBAAwB;IAGxB,mBAAmB;IACnB,YAAY;IACZ,iBAAiB;IACjB,oBAAoB;IACpB,kBAAkB;IAClB,iBAAiB;IACjB,uBAAuB;IACvB,UAAU;IACV,WAAW;;AAIN,MAAM,SAAS;IACpB,uBAAuB;IACvB,0BAA0B;IAC1B,aAAa;IACb,gBAAgB;IAChB,sBAAsB;IACtB,qBAAqB;IACrB,cAAc;IACd,eAAe;IACf,WAAW;IACX,uBAAuB;IACvB,kBAAkB;IAClB,oBAAoB;IACpB,oBAAoB;IACpB,8BAA8B;IAC9B,8BAA8B;IAC9B,cAAc;IACd,8BAA8B;IAC9B,uBAAuB;IACvB,uCAAuC;IACvC,eAAe;IACf,YAAY;IACZ,mBAAmB;IACnB,gBAAgB;IAChB,0BAA0B;IAC1B,wBAAwB;IACxB,mCAAmC;IACnC,8BAA8B;IAC9B,6BAA6B;IAC7B,WAAW;IACX,0BAA0B;IAC1B,yBAAyB;IACzB,iBAAiB;IACjB,eAAe;IACf,yBAAyB;IACzB,4BAA4B;;AAQ9B,MAAM,2BAAwB,yBAAA,IAAA,sBAC3B,cAAc,qBAAoB,SAAC,KAAK,MAAN;AAAA,WAAe,IAAI,WAAW,KAAK;KAD1C,sBAE3B,cAAc,+BAKb,SAAC,KAAK,MAAN;AAAA,WAAe,IAAI,YAAY,KAAK,WAAW,IAAI,UAAU,KAAK;KAPxC,sBAQ3B,cAAc,mBAAkB,SAAC,KAAK,MAAN;AAAA,WAAe,IAAI,WAAW,KAAK;KARxC,sBAS3B,cAAc,YAAW,SAAC,KAAK,MAAN;AAAA,WAAe,IAAI,WAAW,KAAK;KATjC,sBAU3B,cAAc,aAAY,SAAC,KAAK,MAAN;AAAA,WACzB,QAAQ,QACR,SAAS,QACT,IAAI,UAAU,KAAK,SACnB,IAAI,WAAW,KAAK;KAdM,sBAe3B,cAAc,uBAAsB,SAAC,KAAK,MAAN;AAAA,WACnC,QAAQ,QAAQ,SAAS,QAAQ,CAAC,WAAW,KAAK,MAAM;KAhB9B,sBAiB3B,cAAc,2BAA0B,SAAC,KAAK,MAAN;AAAA,WACvC,CAAC,WAAW,KAAK,MAAM;KAlBG;AA4B9B,MAAM,UAAU,kBAAC,OAAO,QAAQ,MAAS;AAAA,QAAA,YAAA,YAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,YAAA,YAAA,YAAA,YAAA,YAAA,YAAA,YAAA,YAAA,YAAA,YAAA,YAAA,YAAA,aAAA,YAAA,YAAA,YAAA,YAAA,YAAA,YAAA,YAAA,YAAA,YAAA,aAAA,YAAA,YAAA,YAAA,YAAA;AACvC,YAAQ;WACD,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,2BAFjB,SAAA,IAGO,MAAM,cAAc,0BAH3B,cAAA,IAAA,WAIK,KAAK,oBAAmB,MAJ7B,cAAA;WAOG,OAAO;AACV,eAAA,SAAA,IACK,OADL,aAAA,IAAA,UAEG,cAAc,yBAAwB,MAFzC;WAIG,OAAO;AACV,YAAM,eAAY,SAAA,IACb,MAAM,cAAc,sBACpB;AAEL,eAAA,SAAA,IACK,OADL,aAAA,IAAA,UAEG,cAAc,uBAAsB,cAFvC;WAIG,OAAO;AACV,YAAM,sBAAsB,GAAG,OAC7B,MAAM,cAAc,oBACpB;AAEF,eAAA,SAAA,IACK,OADL,aAAA,IAAA,UAEG,cAAc,qBAAoB,qBAFrC;WAKG,OAAO;AAEV,YAAI,MAAM,cAAc,kBAAkB,MAAM;AAC9C,iBAAO;;AAGT,eAAA,SAAA,IACK,OADL,aAAA,IAAA,UAEG,cAAc,gBAAe,CAAC,CAAC,MAFlC,UAGG,cAAc,gBAAe,CAAC,CAAC,MAHlC;WAKG,OAAO;AACV,eAAA,SAAA,IACK,OADL,aAAA,IAAA,UAEG,cAAc,yBAAwB,CAAC,CAAC,MAF3C;WAKG,OAAO;AACV,eAAA,SAAA,IACK,OADL,aAAA,IAAA,UAEG,cAAc,YAAW,CAAC,CAAC,MAF9B;WAKG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,wBAAuB,MAFxC;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,mBAAkB,CAAC,CAAC,MAFrC;WAIG,OAAO;AACV,eAA+C;AAC/C,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,gBACb,KAAK,UAAU,uBAAuB,YACtC,KAAK,UAAU,uBAAuB,SAJ1C,WAKG,cAAc,8BACb,KAAK,UAAU,uBAAuB,YACtC,MAAM,YAAY,OAAO,gBAP7B,WAQG,cAAc,+BAA8B,MAR/C;WAWG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,qBAAoB,CAAC,CAAC,MAFvC,WAGG,cAAc,gBAAe,CAAC,CAAC,MAHlC;WAMG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,yBAAwB,CAAC,CAAC,MAF3C;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,oCAAmC,CAAC,CAAC,MAFtD;WAKG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,+BAA8B,CAAC,CAAC,MAFjD;WAKG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,eAAc,CAAC,CAAC,MAFjC;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,wBAAuB,CAAC,CAAC,MAF1C;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,yCAAwC,CAAC,CAAC,MAF3D;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,gBAAe,CAAC,CAAC,MAFlC;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,aAAY,CAAC,CAAC,MAF/B;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,eAAA,IAAA,YAEG,cAAc,yBAAwB,CAAC,CAAC,MAF3C;WAIG,OAAO;AAEV,YAAI,MAAM,cAAc,mBAAmB,MAAM;AAC/C,iBAAO;;AAET,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,gBAAe,CAAC,CAAC,MAFlC,WAGG,cAAc,iBAAgB,CAAC,CAAC,MAHnC;WAKG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,qBAAoB,CAAC,CAAC,MAFvC;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,2BAA0B,CAAC,CAAC,MAF7C;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,gBAAe,CAAC,CAAC,MAFlC,WAGG,cAAc,oBAAmB,CAAC,CAAC,MAHtC;WAKG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,8BAA6B,CAAC,CAAC,MAFhD;WAIG,OAAO;AACV,YACE,MAAM,cAAc,cAAc,OAAO,YACzC,SAAS,OAAO,UAChB;AACA,gBAAM,MAAM,MAAK;AACjB,iBAAO;;AAET,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,iBAAgB,SAAS,OAAO,gBAFjD,WAGG,cAAc,YAAW,MAH5B;WAKG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,8BAA6B,MAF9C;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,0BAAyB,CAAC,CAAC,MAF5C;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,cAAa,MAF9B;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,eAAA,IAAA,YAEG,cAAc,mBAAkB,KAAK,IAFxC,YAGG,cAAc,sBAAqB,KAAK,OAH3C;WAKG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,oBAAmB,MAFpC;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,mBAAkB,MAFnC;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,YAAW,MAF5B;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,aAAY,MAF7B;WAIG,OAAO;AACV,eAAA,SAAA,IACK,OADL,cAAA,IAAA,WAEG,cAAc,0BAAyB,MAF1C;;AAKA,cAAM,MAAM,MAAK,sBAAsB;AACvC,eAAO;;;AAOb,MAAa,uBAAb,2BAAA;AAIE,mCAAY,KAAK;AAAA,uBAAA,MAAA;AAEf,WAAK,OAAO;AAGZ,WAAK,aAAa;AAGlB,WAAK,SAAL,SAAA,IACK,KAAK,oBACL,KAAK;;AAdd,kBAAA,uBAAA,CAAA;MAAA,KAAA;MAAA,OAuBE,aAAI,KAAK;AACP,YAAI,CAAC,OAAO,KAAK,QAAQ,MAAM;AAC7B,gBAAM,MAAM,MAAK,qBAAqB;AACtC;;AAEF,eAAO,KAAK,OAAO;;OA5BvB;MAAA,KAAA;MAAA,OAsCE,mBAAU,KAAK,UAAU,kBAA0B;AAAA,YAA1B,qBAA0B,QAAA;AAA1B,6BAAmB;;AAC1C,YAAI,CAAC,OAAO,KAAK,QAAQ,MAAM;AAC7B,gBAAM,MAAM,MAAK,wCAAwC;AACzD;;AAEF,YAAI,CAAC,KAAK,WAAW,MAAM;AACzB,eAAK,WAAW,OAAO,IAAI;;AAE7B,aAAK,WAAW,KAAK,IAAI;AAEzB,YAAI,kBAAkB;AACpB,mBAAS,KAAK,IAAI;;;OAjDxB;MAAA,KAAA;MAAA,OA2DE,mBAAS,QAAQ,MAAM;AAAA,YAAA,QAAA;AACrB,YAAM,WAAQ,SAAA,IAAO,KAAK;AAC1B,aAAK,SAAS,QAAQ,KAAK,QAAQ,QAAQ;AAE3C,YAAI;AACJ,eAAO,KAAK,KAAK,YAAY,QAAQ,SAAC,KAAQ;AAC5C,yBAAe,yBAAyB;AACxC,cACE,eACI,aAAa,SAAS,MAAM,MAAK,OAAO,QACxC,SAAS,SAAS,MAAK,OAAO,MAClC;AACA,kBAAK,WAAW,KAAK,KAAK,MAAK,OAAO;;;;OAvE9C;MAAA,KAAA;MAAA,OAiFE,4BAAmB;AAAA,YAAA;AAGjB,eAAA,OAAA,IAAA,KACG,cAAc,2BAA0B,MAD3C,KAEG,cAAc,qBAAoB,MAFrC,KAGG,cAAc,oCAAmC,MAHpD,KAIG,cAAc,+BAA8B,MAJ/C,KAKG,cAAc,+BAA8B,MAL/C,KAMG,cAAc,wBAAuB,MANxC,KAOG,cAAc,iCAAgC,MAPjD,KAQG,cAAc,0BAAyB,IAR1C,KASG,cAAc,gBAAe,OAThC,KAUG,cAAc,YAAW,OAV5B,KAWG,cAAc,wBAAuB,MAXxC,KAYG,cAAc,iBAAgB,OAZjC,KAaG,cAAc,mBAAkB,OAbnC,KAcG,cAAc,8BAA6B,IAd9C,KAeG,cAAc,qBAAoB,OAfrC,KAgBG,cAAc,qBAAoB,OAhBrC,KAiBG,cAAc,+BAA8B;UAC3C,OAAO,uBAAuB;WAlBlC,KAoBG,cAAc,2BAA0B,IApB3C,KAqBG,cAAc,yBAAwB,OArBzC,KAsBG,cAAc,eAAc,MAtB/B,KAuBG,cAAc,yBAAwB,OAvBzC,KAwBG,cAAc,wBAAuB,OAxBxC,KAyBG,cAAc,yCAAwC,OAzBzD,KA0BG,cAAc,uBAAsB,IA1BvC,KA2BG,cAAc,gBAAe,OA3BhC,KA4BG,cAAc,aAAY,OA5B7B,KA6BG,cAAc,oBAAmB,OA7BpC,KA8BG,cAAc,iBAAgB,OA9BjC,KA+BG,cAAc,2BAA0B,MA/B3C,KAgCG,cAAc,yBAAwB,OAhCzC,KAiCG,cAAc,oCAAmC,OAjCpD,KAkCG,cAAc,+BAA8B,OAlC/C,KAmCG,cAAc,8BAA6B,MAnC9C,KAoCG,cAAc,YAAW,OAAO,QApCnC,KAqCG,cAAc,0BAAyB,OArC1C,KAwCG,cAAc,qBAAoB,IAxCrC,KAyCG,cAAc,cAAa,MAzC9B,KA0CG,cAAc,mBAAkB,IA1CnC,KA2CG,cAAc,sBAAqB,GA3CtC,KA4CG,cAAc,oBAAmB,IA5CpC,KA6CG,cAAc,yBAAwB,IA7CzC,KA8CG,cAAc,mBAAkB,IA9CnC,KA+CG,cAAc,YAAW,IA/C5B,KAgDG,cAAc,aAAY,MAhD7B,KAiDG,cAAc,iBAAgB,OAjDjC;;OApFJ;MAAA,KAAA;MAAA,OA+IE,8BAAqB;AAAA,YAAA,OAAA,OAAA,OAAA;AACnB,YAAM,YAAY,eAAe,KAAK,KAAK,SAAS;AACpD,gBAAQ;eACD,UAAU;AACb,mBAAA,QAAA,IAAA,MACG,cAAc,2BAA0B,OAD3C,MAEG,cAAc,oCAAmC,OAFpD,MAGG,cAAc,+BAA8B,OAH/C,MAIG,cAAc,+BAA8B,MAJ/C,MAKG,cAAc,iCAAgC,OALjD,MAMG,cAAc,eAAc,OAN/B;eAQG,UAAU;AACb,mBAAA,QAAA,IAAA,MACG,cAAc,wBAAuB,OADxC;eAGG,UAAU;AACb,mBAAA,QAAA,IAAA,MACG,cAAc,iBAAgB,MADjC,MAEG,cAAc,2BAA0B,OAF3C,MAGG,cAAc,oCAAmC,OAHpD,MAIG,cAAc,+BAA8B,OAJ/C,MAKG,cAAc,+BAA8B,OAL/C,MAMG,cAAc,iCAAgC,OANjD;eAQG,UAAU;AACb,mBAAA,QAAA,IAAA,MACG,cAAc,qBAAoB,OADrC,MAEG,cAAc,wBAAuB,OAFxC;;AAKA,mBAAO;;;;AA9Kf,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9dA,MAAM,OAAM;AAGZ,MAAM,yBAAyB;IAC7B,UAAU;IACV,UAAU;IACV,SAAS;;AAIX,MAAM,iBAAiB;IACrB,WAAW;IACX,UAAU;IACV,eAAe;IACf,QAAQ;IACR,OAAO;;AAGT,MAAa,gBAAb,2BAAA;AAIE,4BAAY,SAAS;AAAA,uBAAA,MAAA;AAEnB,WAAK,WAAW;;AANpB,kBAAA,gBAAA,CAAA;MAAA,KAAA;MAAA,OAaE,qBAAY;AACV,YAAM,QAAQ,KAAK,SAAS;AAC5B,mBACE,SAAS,gBAAgB,QACzB,SAAO,OAAP;AAIF,YAAM,aAAa,UAAU,MAAM;AAEnC,YAAM,gBAAgB;UACpB,OAAO;UACP,QAAQ;UACR,aAAa;;AAGf,YAAM,eAAe,WAAW;AAChC,mBACE,cACG,OAAH;AAIF,aAAK,cAAc,aAAa;AAEhC,iBAAW,QAAQ,cAAc;AAC/B,cAAM,QAAQ,aAAa;AAC3B,cAAI,SAAS,QAAQ;AACnB,yBAAa,QAAQ,KAAK,UAAU;;AAEtC,cAAI,uBAAuB,OAAO;AAChC,mBAAO,KAAK,MAAK,oCAAoC;AACrD,mBAAO,aAAa;;;AAIxB,eAAA,UAAA,IAAuC,cAAiB;;OAjD5D;MAAA,KAAA;MAAA,OAwDE,uBAAc,MAAM;AAClB,mBACE,CAAC,CAAC,eAAe,OACd,OAFK,OAEG,OAFH;AAKV,YAAI,SAAS,QAAQ;AACnB,cAAO,KAAM,KAAK,SAAX;AACP,qBACE,MAAM,GAAG,WAAW,oBACjB,OAFK;;;;AAhEhB,WAAA;;;;ACnBA,MAAI;AAGJ,MAAM,iBAAiB,CAAC,UAAU,UAAU,OAAO,OAAO,MAAM,KAAK;AAW9D,gCAA8B,WAAW;AAC9C,WAAO,UAAU,OAAO,GAAG,gBAAgB,UAAU,MAAM;;AAW7D,oCAAkC,OAAO,WAAW;AAClD,aAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,UAAM,eAAe,eAAe,KAAK;AACzC,UAAI,MAAM,kBAAkB,QAAW;AACrC,eAAO;;;AAGX,WAAO;;AAaF,mCAAiC,OAAO,WAAW,iBAAiB;AACzE,QAAI,MAAM,YAAY;AAEpB,aAAO;;AAET,QAAI,CAAC,mBAAmB;AACtB,0BAAoB;;AAEtB,QAAI,eAAe,kBAAkB;AACrC,QAAI,CAAC,gBAAgB,iBAAiB;AACpC,qBAAe;AACf,UAAI,MAAM,eAAe,QAAW;AAClC,YAAM,YAAY,qBAAqB;AACvC,YAAM,uBAAuB,yBAAyB,OAAO;AAE7D,YAAI,MAAM,0BAA0B,QAAW;AAC7C,yBAAe;;;AAGnB,UAAI,CAAC,iBAAiB;AACpB,0BAAkB,aAAa;;;AAGnC,WAAO;;AA4BF,oBAAkB,SAAS,UAAU,OAAO,WAAW,iBAAiB;AAC7E,QAAM,eAAe,wBACnB,QAAQ,OACR,UACA;AAEF,QAAI,CAAC,cAAc;AACjB;;AAEF,QAAM,aACJ,YAAY,QAAQ,YAAY;AAElC,QAAI,MAAM,eAAe;AACvB,cAAQ,MAAM,YAAY,cAAc;WACnC;AACL,cAAQ,MAAM,gBAAgB;;;AAgC3B,qBAAmB,SAAS,QAAQ;AACzC,aAAW,KAAK,QAAQ;AACtB,eAAS,SAAS,GAAG,OAAO;;;AAyFzB,cAAY,OAAO;AACxB,WAAU,QAAV;;AAyHF,iBAAe,UAAU;AACvB,WAAO,SAAS,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;ACvW7B,MAAM,aAAa;AAGnB,MAAM,YAAY;IAChB,KAAK;IACL,KAAK;;AAGP,MAAa,mBAAb,2BAAA;AAIE,+BAAY,QAAQ;AAAA,UAAA,QAAA;AAAA,uBAAA,MAAA;AAElB,WAAK,WAAW,SAAS,cAAc;AAGvC,WAAK,OAAO,OAAO,IAAI;AAGvB,WAAK,YAAY,KAAK,KAAK,cAAc;AAEzC,WAAK,SAAS,cAAc,KAAK,WAAW,WAAM;AAChD,cAAK,KAAK,KAAK,YAAY,MAAK;AAChC,kBAAU,MAAK,WAAW;UACxB,UAAU;UACV,KAAK;UACL,MAAM;UACN,QAAQ;UACR,YAAY;UACZ,eAAe;UACf,kBAAkB;;;;AAvB1B,kBAAA,mBAAA,CAAA;MAAA,KAAA;MAAA,OAkCE,aAAI,aAAa,WAAW,SAAS;AAAA,YAAA,SAAA;AACnC,YAAI,UAAU;AACd,eAAO,KAAK,SACT,cAAc,WAAW,WAAM;AAC9B,iBAAK,UAAU,cAAc;AAC7B,cAAM,WAAW,kBACf,OAAK,WACL,YACA,OAAK,aAAa,cAClB,UAAU,KACV,UAAU;AAEZ,cAAI,YAAY,UAAU,KAAK;AAC7B,mBAAK,gBAAgB,WAAW;AAChC,sBAAU;;WAGb,KAAK,WAAM;AACV,iBAAO;;;OApDf;MAAA,KAAA;MAAA,OA+DE,sBAAa,aAAa;AACxB,eAAO,YAAmB,cAAc;;OAhE5C;MAAA,KAAA;MAAA,OAuEE,yBAAgB,WAAW,UAAU;AACnC,iBAAS,WAAW,YAAY,GAAG;;;AAxEvC,WAAA;;AAsFA,6BACE,UACA,gBACA,eACA,aACA,aACA;AACA,aAAS,WAAW,aAAa,YAAY,aAAa,YAAY;AACpE,eAAS,UAAU,YAAY,GAAG;AAClC,UAAM,SAAS,SAAgB;AAC/B,UAAM,QAAQ,SAAgB;AAC9B,UAAI,SAAS,kBAAkB,QAAQ,eAAe;AACpD,eAAO;;;AAIX,WAAO,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;AC7GvB,MAAa,WAAb,2BAAA;AAIE,uBAAY,UAAU;AAAA,wBAAA,MAAA;AAEpB,WAAK,YAAY;AAGjB,WAAK,QAAQ;AAMb,WAAK,UAAU;AAGf,WAAK,SAAS;;AAlBlB,kBAAA,WAAA,CAAA;MAAA,KAAA;MAAA,OA2BE,aAAI,KAAK;AACP,eAAO,CAAC,CAAC,KAAK,OAAO;;OA5BzB;MAAA,KAAA;MAAA,OAmCE,aAAI,KAAK;AACP,YAAM,YAAY,KAAK,OAAO;AAC9B,YAAI,WAAW;AACb,oBAAU,SAAS,EAAE,KAAK;AAC1B,iBAAO,UAAU;;AAEnB,eAAO;;OAzCX;MAAA,KAAA;MAAA,OAgDE,aAAI,KAAK,SAAS;AAChB,YAAI,CAAC,KAAK,IAAI,MAAM;AAClB,eAAK;;AAEP,aAAK,OAAO,OAAO;UAAC;UAAS,QAAQ,KAAK;;AAC1C,aAAK;;OArDT;MAAA,KAAA;MAAA,OA2DE,kBAAS;AACP,YAAI,KAAK,SAAS,KAAK,WAAW;AAChC;;AAGF,YAAM,SAAQ,KAAK;AACnB,YAAI,SAAS,KAAK,UAAU;AAC5B,YAAI;AACJ,iBAAW,OAAO,QAAO;AACvB,cAAO,SAAU,OAAM,KAAhB;AACP,cAAI,SAAS,QAAQ;AACnB,qBAAS;AACT,wBAAY;;;AAIhB,YAAI,cAAc,QAAW;AAC3B,iBAAO,OAAM;AACb,eAAK;;;;AA7EX,WAAA;;;;ACOA,MAAM,sBAAsB,KAAK;IAE/B,KAAK;IAEL,KAAK;IAEL,KAAK;IAEL,MAAM;;AAOR,MAAI;AAQJ,MAAI;AA6CG,8BAA4B,KAAK,aAAa;AACnD,QAAI,CAAC,GAAG;AACN,UAAuC,KAAK,SAAS,cAAc;AACnE,cAAQ,QACJ,OACA,KAAK,mBAAoB,MAAK,kBAAkB,IAAI,SAAS;;AAGnE,WAAO,cAAc,GAAG,KAAK,AAAU,cAAc,OAAO;;AAevD,yBAAuB,IAAG,KAAK,WAAW;AAC/C,QAAA,OAAY;AACV,SAAE,OAAO;AACT,aAAyB,IAAI,IAAI,KAAK,GAAE;;AAG1C,QAAI,aAAa,UAAU,IAAI,MAAM;AACnC,aAAO,UAAU,IAAI;;AAGvB,OAAE,OAAO;AAIT,QAAI,CAAC,GAAE,UAAU;AACf,SAAE,OAAO,GAAE;;AAGb,QAAM,OAAiC;MACrC,MAAM,GAAE;MACR,UAAU,GAAE;MACZ,MAAM,GAAE;MACR,UAAU,GAAE;MACZ,MAAM,GAAE,QAAQ,MAAM,KAAK,GAAE;MAC7B,UAAU,GAAE;MACZ,QAAQ,GAAE;MACV,MAAM,GAAE;MACR,QAAQ;;AAKV,QAAI,KAAK,SAAS,OAAO,KAAK;AAC5B,WAAK,WAAW,MAAM,KAAK;;AAK7B,QACG,KAAK,YAAY,WAAW,KAAK,QAAQ,MACzC,KAAK,YAAY,YAAY,KAAK,QAAQ,KAC3C;AACA,WAAK,OAAO;AACZ,WAAK,OAAO,KAAK;;AAKnB,QAAI;AACJ,QAAI,GAAE,UAAU,GAAE,UAAU,QAAQ;AAClC,eAAS,GAAE;eACF,KAAK,YAAY,WAAW,CAAC,KAAK,MAAM;AACjD,eAAS,KAAK;WACT;AACL,eAAS,KAAK,WAAW,OAAO,KAAK;;AAEvC,SAAK,SAAS;AAGd,QAAM,SAAS,UAAU,QAAQ,OAAO,SAAS,OAAO,OAAO,QAAQ;AAEvE,QAAI,WAAW;AACb,gBAAU,IAAI,KAAK;;AAGrB,WAAO;;AA2GF,iCAA+B,KAAK;AACzC,QAAI,OAAO,OAAO,UAAU;AAC1B,YAAM,mBAAmB;;AAE3B,WACE,IAAI,YAAY,YAChB,IAAI,YAAY,eAChB,IAAI,YAAY,eAChB,SAAS,IAAI,UAAU;;AAepB,0BACL,WACA,gBACA,YACA;AAAA,QADA,eACA,QAAA;AADA,mBAAa;;AAEb,eACE,aAAa,MACb,2BACA,gBACA;AAGF,QAAM,eAAsC;AAC5C,eACE,sBAAsB,iBAAiB,UAAU,KAAK,eACtD,6HAGA,gBACA,YACA;AAEF,WAAO;;;;AChVF,MAAM,OAAM;;;ACAnB,AA2HO,MAAM,YAAY;IACvB,eAAe;IAGf,YAAY,oBAAS,UAAU,gBAAe,iBAAiB;AAC7D,UAAI,UAAU;AACd,UAAI,UAAU;AACZ,cAAM,UAAU,QAAQ,KAAK,UAAU,SAAS,MAAM;AACpD,cAAI,KAAK,gBAAiB,KAAK,SAAS,KAAK,MAAM,YAAY,QAAY;AACzE,uBAAW,KAAK,cAAc,KAAK,cAAc,gBAC/C,KAAK,eAAe,mBAAmB;AACzC,uBAAW,KAAK,mBAAmB,QAAQ;qBAClC,KAAK,SAAS,QAAQ,YAAY;AAC3C,uBAAW,YAAY,KAAK,MAAM,YAAY;AAC9C,uBAAW,KAAK,WAAW,KAAK,UAAU;AAC1C,uBAAW;iBACN;AAML,gBAAI;AACF,kBAAI,KAAK,SAAS;AAChB,2BAAW,KAAK,UAAU;;qBAEtB,GAAN;AACA,kBAAI,KAAK,SAAS,QAAQ,kBAAkB,KAAK,UAAU;AACzD,2BAAW,KAAK,8BAA8B;;;;WAInD;;AAEL,aAAO;;IAGT,+BAA+B,uCAAS,MAAM;AAC5C,UAAI,UAAU,gBAAgB,KAAK,OAAO;AAC1C,YAAM,UAAU,QAAQ,KAAK,KAAK,UAAU,SAAS,OAAM;AACzD,mBAAW,MAAM,MAAK,UAAU,OAAO,MAAK,MAAM,UAAU;;AAE9D,iBAAW;AACX,aAAO;;IAGT,eAAe,uBAAS,UAAU,gBAAe,QAAQ,iBAAiB;AACxE,UAAI,IAAI,IAAI,QAAQ,SAAS,MAAM;AACnC,YAAM,QAAQ,SAAS,GAAG;AACxB,YAAI,EAAE;AACN,YAAI,iBAAiB;AACnB,cAAI,gBAAgB;;AAEtB,YAAI,KAAK,qBAAqB,GAAG,iBAAgB;AAC/C,cAAK,UAAU,CAAC,EAAE,MAAM,4BACpB,KAAK,yBAAyB,GAAG,kBACjC,KAAK,mBAAmB,GAAG;;AAEjC,UAAE,KAAK;SACN;AACH,aAAO,EAAE,KAAK;;IAGhB,sBAAsB,8BAAS,UAAU,gBAAe;AACtD,UAAI,MAAM,QAAQ,iBAAgB;AAChC,eAAO;;AAET,UAAI,KAAK,KAAK,iBAAiB;AAC/B,aAAO,CAAC,SAAS,MAAM;;IAGzB,kBAAkB,0BAAS,gBAAe;AACxC,uBAAgB,eAAc,QAAQ,OAAO,OAAO,QAAQ,OAAO;AACnE,aAAO,IAAI,OAAO,OAAO,iBAAgB,MAAM,kBAAkB;;IAGnE,oBAAoB,4BAAS,UAAU,eAAe;AACpD,aAAO,MAAM,QAAQ,iBACjB,KAAK,uBAAuB,UAAU,iBACtC,KAAK,yBAAyB,UAAU;;IAI9C,wBAAwB,gCAAS,UAAU,mBAAmB;AAC5D,UAAI,IAAI;AACR,eAAS,IAAE,GAAG,GAAI,IAAE,kBAAkB,IAAK,KAAK;AAC9C,UAAE,KAAK,KAAK,yBAAyB,UAAU;;AAEjD,aAAO,EAAE,KAAK;;IAIhB,0BAA0B,kCAAS,UAAU,gBAAe;AAC1D,UAAI,SAAS,MAAM,iBAAiB;AAClC,mBAAW,SAAS,QAAQ,0BAA0B;AACtD,eAAO,SAAS,QAAQ,gBAAgB,iBAAgB;aACnD;AACL,eAAO,iBAAgB,MAAM;;;IAMjC,0BAA0B,kCAAS,UAAU,gBAAe;AAC1D,uBAAgB,eAAc,QAAQ,oBAAoB;AAC1D,UAAI,SAAS,CAAC,KAAK,KAAK,KAAK,MAC3B,SAAS,UACT,WAAW,MAAM,iBAAgB;AACnC,aAAO,QAAQ,SAAS,KAAK;AAC3B,YAAI,QAAQ,OAAO,MAAM;AACzB,iBAAS,MAAM,IAAI,SAAS,GAAG;AAE7B,cAAI,IAAI,EAAE,OAAO,QAAQ,gBAAgB;AACzC,cAAI,KAAM,OAAO,QAAQ,KAAK,KAAO,EAAE,QAAQ,YAAY,GAAI;AAC7D,gBAAI,EAAE,QAAQ,mBAAmB,OAAO,WAAW;;AAErD,iBAAO;WACN,KAAK;;AAEV,aAAO;;IAGT,oBAAoB,4BAAS,MAAM;AACjC,UAAI,UAAU,KAAK,MAAM;AAIzB,UAAI,KAAK,MAAM,WAAW,CAAC,KAAK,MAAM,QAAQ,MAAM,eAAe;AACjE,kBAAU,QAAQ,QAAQ,mBAAmB,eACzC,KAAK,MAAM,UAAU;;AAQ3B,UAAI,QAAQ,KAAK;AACjB,eAAS,KAAK,OAAO;AACnB,YAAI,MAAM,OAAO,WAAW;AAC1B,qBAAW,IAAI;;;AAGnB,aAAO;;;AAIX,MAcI,eAAe;AAdnB,MAgBI,sBAAsB;AAhB1B,MAiBI,cAAc;AAGd,MAAI,iBAAiB,IAAI,OAAO,MAAM,eAAe,aAAa;AAAlE,MACA,wBAAwB,IAAI,OAAO,MAAM,sBAAsB,aAAa;AAD5E,MAEA,mBAAmB;AAFnB,MAMA,2BAA2B,eAAe;AAN1C,MAOA,iBAAiB,IAAI,OAAO,cAAc;AAP1C,MAQA,wBAAwB,IAAI,OAAO,qBAAqB;;;ACtRrD,MAAM,mBAAmB;IAC9B,MAAM;IACN,IAAI;IACJ,IAAI;;AAON,MAAI;AAMJ,MAAI;AAsBG,kCAAgC;AACrC,WAAO,kCAAkC,iBAAiB;;AAOrD,kCAAgC;AACrC,QAAI,uBAAuB,QAAW;AACpC,2BACE,0BACC,UAAS,QAAQ,UAAU,iBAC1B,SAAS,QAAQ,UAAU;;AAEjC,WAAO;;AAUT,oBAAkB,MAAM;AACtB,WAAO,CAAC,CAAC,QAAQ,KAAK,WAAW,QAAQ,oBAAoB;;AAQxD,wCAAsC,kBAAkB;AAC7D,QAAI,8BAA8B,QAAW;AAC3C,kCAA4B,oBAC1B,oBAAoB;;AAGxB,WAAO;;AAST,+BAA6B,SAAS;AACpC,QAAI,CAAC,CAAC,QAAQ,UAAU,cAAc;AACpC,aAAO,iBAAiB;eACf,CAAC,CAAC,QAAQ,UAAU,kBAAkB;AAC/C,aAAO,iBAAiB;;AAE1B,WAAO,iBAAiB;;;;ACtF1B,MAAM,mBAAmB;AAgJlB,iCAA+B,SAAS,aAAa;AAC1D,YAAQ,oBAAoB;;;;AC3I9B,MAAM,yBAAyB;AAG/B,MAAM,yBAAyB;AAexB,4BAA0B,aAAa;AAC5C,QAAM,MAAM,MAAM,YAAY,cAAc;AAE5C,QAAM,eAAe,YAAY,cAAc,YAAY;AAC3D,QAAI,cAAc;AAChB,mBAAoB,YAAY;AAChC,aAAO;;AAGT,QAAI;AACJ,QAAM,qBAAqB;AAC3B,QAAI,sBAAsB,iBAAiB,IAAI;AAC7C,mBAAa,YAAY,aAAa;QAAC,MAAM;;AAC7C,UAAI,CAAC,WAAW,aAAa;AAC3B,eAAO,eAAe,YAAY,eAAe;UAC/C,KAAK,eAAY;AACf,gBAAM,QAAQ;AACd,0BAAc,WAAW,YAAY,SAAC,OAAU;AAC9C,kBAAI,MAAM,YAAY,SAAS;AAC7B,sBAAM,KAAK,MAAM;;;AAGrB,mBAAO;;;;eAIJ,sBAAsB,iBAAiB,IAAI;AACpD,mBAAa,YAAY;WACpB;AACL,mBAAa,yBAAyB;;AAGxC,QAAI,CAAC,wBAAwB;AAC3B,UAAM,SAAM,kBAAmB,IAAI,KAAK,MAAM,IAAI,KAAK,WAAW;AAClE,iBAAW,QAAQ;AACnB,iBAAW,KAAK,UAAU,IAAI;AAG9B,4BAAsB,YAAY,SAAC,KAAQ;AACzC,eAAO,mBAAmB,YAAY;;;AAI1C,WAAO;;AAQT,oCAAkC,aAAa;AAC7C,QAAM,MAAM,YAAY;AAGxB,gBAAY,UAAU,IAAI;AAC1B,QAAM,YAAY,IAAI,cAAc;AACpC,cAAU,cACR;AAEF,gBAAY,YAAY;AAGxB,QAAM,aAGe,IAAI,cAAc;AACvC,gBAAY,YAAY;AACxB,gBAAY,oBAAoB;AAChC,WAAO,eAAe,aAAa,cAAc;MAC/C,YAAY;MACZ,cAAc;MACd,OAAO;;AAKT,eAAW,OAAO;AAGlB,eAAW,iBAAiB,SAAU,IAAI;AACxC,UAAM,YAAY,uBAAuB;AACzC,aACE,WAAkB,cAAlB,MAAoC;;AAKxC,WAAO,eAAe,YAAY,eAAe;MAC/C,KAAK,eAAM;AACT,YAAI,CAAC,IAAI,aAAa;AACpB,iBAAO;;AAET,eAAO,QAAQ,IAAI,aAAa,OAAO,SAAC,YAAD;AAAA,iBACrC,WAAW,SAAS,WAAW;;;;AAKrC,WAAO;;AAkDF,8BAA4B,YAAY,KAAK;AAClD,WAAO,eAAe,YAAY;;AAc7B,0BAAwB,YAAY,KAAK;AAC9C,QAAM,KAAK,UAAU,WAAW;AAChC,QAAM,MAAM,WAAW;AACvB,QAAI,QAAQ;AAEZ,QAAI;AACF,cAAQ,mBAAmB,IAAI,eAAe,mBAAmB,KAAK;aAC/D,GAAP;;AAIF,QAAI,CAAC,OAAO;AACV,UAAI;AACF,gBAAQ,mBAAmB,KAAK;eACzB,GAAP;;;AAMJ,QAAI,CAAC,OAAO;AACV,aAAO;;AAMT,QAAO,cAAc,UAAd;AACP,WAAO,YAAW,KAAK,WAAW,OAA3B,MAAsC,IAAM;;AASrD,kCAAgC,UAAU;AACxC,WAAO,SAAS,QAAQ,gBAAgB;;AAY1C,gCAA8B,OAAO,MAAM,KAAK,UAAU;AACxD,QAAM,OAAO,SAAS,OAAO,MAAM;AACnC,QAAM,OAAO,SAAS,OAAO,MAAM,MAAM;AACzC,QACG,EAAC,QAAQ,uBAAuB,KAAK,UACrC,EAAC,QAAQ,uBAAuB,KAAK,QACtC;AACA,aAAO,SAAS;;AAElB,WAAO;;AAQT,8BAA4B,KAAK,KAAK;AACpC,QAAM,QAA0C,IAAI,cAAc;AAClE,UAAa,cAAc;AAC3B,QAAI;AACF,MAAC,KAAI,QAAQ,IAAI,iBAAiB,YAAY;AAC9C,UAAI,MAAM,OAAO;AACf,eAAsC,MAAM,MAAO;;AAErD,aAAO;cALT;AAOE,UAAI,MAAM,YAAY;AACpB,cAAM,WAAW,YAAY;;;;;;AC/L5B,qCAAmC,WAAW,SAAS,KAAK;AACjE,QAAM,QAAQ,KAAK,SAAS,cAAc;AAC1C,UAAa,cAAc;AAE3B,QAAM,iBAAiB,UAAU,OAC7B,YACA,iBAAiB;AAErB,mBAAe,YAAY;AAC3B,mBAAe,YAAY;;AAgL7B,MAAM,uCAAuC;AAM7C,MAAM,iCAA8B,MAAO,uCAAP;;;ACrS7B,MAAM,OAAM;;;ACwCnB,MAAM,OAAM;AAGZ,MAAM,kBAAkB;AAGxB,MAAM,uBAAuB;AAEtB,MAAM,2BAA2B;AAGjC,MAAM,cAAc;IACzB,kBAAkB;IAClB,iBAAiB;IACjB,UAAU;IACV,SAAS;;AAIX,MAAM,YAAY;IAChB,UAAU;IACV,SAAS;;AAQJ,8BAA4B,KAAK;AACtC,QAAM,WAAW;AACjB,WAAO,IAAI,iBAAiB;;AASvB,qCAAmC,KAAK;AAC7C,QAAM,gBAAgB,mBAAmB;AACzC,QAAM,OAAO;AACb,kBAAc,eAAe,SAAC,KAAQ;AACpC,UAAO,UAAiB,IAAjB,SAAS,OAAQ,IAAR;AAChB,UAAI,KAAK,WAAW,kBAAkB;AACpC,YAAM,MAAM,KAAK,MAAM,QAAQ;AAC/B,aAAK,OAAO;iBACH,KAAK,WAAW,uBAAuB;AAChD,YAAM,OAAM,KAAK,MAAM,sBAAsB;AAC7C,aAAK,QAAO;;;AAGhB,WAAO;;AAQF,yCAAuC,WAAW;AAAA,QAAA;AACvD,QAAM,SAAS,UAAU,aAAa,UAAU;AAChD,QAAM,UAAU,UAAU,aAAa,UAAU;AACjD,WAAA,OAAA,IAAA,KACG,YAAY,YAAW,SAD1B,KAEG,YAAY,WAAU,QAFzB;;AAYK,+BAA6B,UAAU,YAAY;AAExD,QAAI,CAAC,SAAS,YAAY,aAAa,CAAC,SAAS,YAAY,UAAU;AAGrE,OAAC,cACC,OAAO,MAAM,MAAK;AACpB,aAAO;;AAET,WAAO;;AAWF,kCAAgC,KAAK,UAAU,WAAW;AAC/D,QAAM,MAAM,IAAI;AAEhB,QAAI;AACF,UAAM,OAAO,SAAS,YAAY;AAClC,UAAM,MAAM,SAAS,YAAY;AAGjC,UAAI,CAAC,QAAQ,CAAC,KAAK;AACjB,eAAO;;AAGT,qBACE,MACA,MAAM,cAAc,YACpB;AAGF,qBACE,KACA,MAAM,cAAc,YACpB;AAGF,UAAM,OAAO,4BACX,KACA,OACA,KAAK;QACH,QAAQ;QACR,SAAS;;AAIb,UAAM,gBAAgB,4BACpB,KACA,OACA,KAAK;QACH,SAAS;QACT,OAAO;;AAIX,oBAAc,iBAAiB,SAAS,SAAC,aAAD;AAAA,eACtC,uBAAuB,KAAK;;AAG9B,gCAA0B,MAAM,eAAe;AAC/C,gBAAU,YAAY;AAEtB,aAAO;aACA,GAAP;AAGA,aAAO;;;AASJ,kCAAgC,KAAK,MAAM;AAChD,qBAAiB,KAAK,MAAM;;AAUvB,qBAAmB,KAAK,cAAc,WAAW,YAAY;AAClE,QAAM,SAAS,WAAW,YAAY;AACtC,QAAM,UAAU,WAAW,YAAY;AAEvC,QAAM,KAAI,4BACR,KACA,KACA,KAAK;MACH,SAAS;MACT,UAAU;MACV,QAAQ;;AAIZ,QAAM,aAAa,aAAa,IAC9B,MAAM,cAAc,YACpB,IACA;AAGF,WAAO,WAAW,KAAK,SAAC,SAAY;AAClC,UAAI,CAAC,SAAS;AACZ,eAAO,KAAK,MAAK;AACjB,eAAO;;AAGT,SAAE,OAAO;AACT,SAAE,cAAc;AAEhB,UAAI,GAAE,aAAa,YAAY,GAAE,aAAa,SAAS;AACrD,eAAO,KAAK,MAAK;AACjB,eAAO;;AAGT,UAAM,WAAW,IAAI,cAAc;AACnC,eAAS,YAAY;AAErB,UAAM,WAAW,4BACf,KACA,OACA,KAAK;QACH,SAAS;QACT,QAAQ;;AAIZ,gCAA0B,UAAU,IAAG;AAEvC,eAAS,YAAY;AACrB,gBAAU,YAAY;AACtB,aAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5OX,MAAa,OAAb,2BAAA;AAQE,mBAAY,KAAK,SAAS,kBAAkB;AAAA,UAAA,QAAA;AAAA,wBAAA,MAAA;AAC1C,WAAK,SAAS,SAAS,SAAS;AAGhC,WAAK,WAAW;AAGhB,WAAK,gBAAgB,oBAAoB;AAGzC,WAAK,aAAa;AAGlB,WAAK,YAAY;AAGjB,WAAK,WAAW;AAMhB,WAAK,aAAa,WAAM;AACtB,cAAK;;;AA/BX,mBAAA,OAAA,CAAA;MAAA,KAAA;MAAA,OAuCE,qBAAY;AACV,eAAO,KAAK,cAAc;;OAxC9B;MAAA,KAAA;MAAA,OAwDE,kBAAS,WAAW;AAClB,YAAI,QAAQ,aAAa,KAAK;AAC9B,YAAI,KAAK,YAAY,QAAQ,IAAI;AAG/B,kBAAQ;;AAGV,YAAM,WAAW,KAAK,QAAQ;AAG9B,YAAI,CAAC,KAAK,eAAe,WAAW,KAAK,YAAY,KAAK;AACxD,eAAK;AACL,eAAK,YAAY;AACjB,eAAK,aAAa,KAAK,OAAO,MAAM,KAAK,YAAY;AAErD,iBAAO;;AAGT,eAAO;;OA3EX;MAAA,KAAA;MAAA,OAiFE,iBAAQ;AACN,aAAK,aAAa;AAClB,aAAK,YAAY;AACjB,aAAK,WAAW;AAChB,aAAK;AACL,aAAK,WAAW;;OAtFpB;MAAA,KAAA;MAAA,OA4FE,kBAAS;AACP,YAAI,KAAK,aAAa;AACpB,eAAK,OAAO,OAAO,KAAK;AACxB,eAAK,aAAa;;;;AA/FxB,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,MAAM,QAAQ;AAUd,MAAa,UAQX,kBAAY,MAAM,MAAM,MAAM,OAAO;AAAA,sBAAA,MAAA;AAEnC,SAAK,OAAO;AAEZ,SAAK,OAAO;AAEZ,SAAK,OAAO;AAEZ,SAAK,QAAQ;;AAWjB,MAAa,WAAb,2BAAA;AA+BE,uBAAY,SAAS,yBAAyB,uBAAuB;AAAA,wBAAA,MAAA;AAEnE,WAAK,WAAW;AAGhB,WAAK,eAAe;AAGpB,WAAK,YAAY;AAGjB,WAAK,SAAS;AAGd,WAAK,WAAW;AAGhB,WAAK,YAAY;AAGjB,WAAK,2BAA2B;AAGhC,WAAK,yBAAyB;AAO9B,WAAK,eAAe;AAGpB,WAAK,QAAQ,IAAI,KACf,MAAM,QAAQ,cAAc,cAC5B,KAAK,QAAQ,KAAK;AAIpB,WAAK,yBAAyB,IAAI;AAMlC,WAAK,eAAe,OAAO,OAAO;AAGlC,WAAK,qBAAqB,KAAK,cAAc,KAAK;AAElD,WAAK,mBAAmB,KAAK,YAAY,KAAK;AAE9C,WAAK,oBAAoB,KAAK,aAAa,KAAK;AAEhD,WAAK,sBAAsB,KAAK,eAAe,KAAK;AAEpD,UAAM,MAAM,QAAQ,cAAc;AAClC,UAAM,oBAAmB,6BAA6B,MAAM;AAC5D,WAAK,SAAS,iBACZ,cACA,KAAK,oBACL,oBAAmB;QAAC,SAAS;UAAQ;AAEvC,WAAK,SAAS,iBAAiB,YAAY,KAAK;AAChD,WAAK,SAAS,iBACZ,aACA,KAAK,mBACL,oBAAmB;QAAC,SAAS;UAAQ;AAEvC,WAAK,SAAS,iBAAiB,eAAe,KAAK;AAGnD,WAAK,kBAAkB;;AAvG3B,mBAAA,WAAA,CAAA;MAAA,KAAA;MAAA,OA6GE,mBAAU;AACR,aAAK,SAAS,oBAAoB,cAAc,KAAK;AACrD,aAAK,SAAS,oBAAoB,YAAY,KAAK;AACnD,aAAK,SAAS,oBAAoB,aAAa,KAAK;AACpD,aAAK,SAAS,oBAAoB,eAAe,KAAK;AACtD,eAAO,KAAK,SAAS;AACrB,aAAK,MAAM;;OAnHf;MAAA,KAAA;MAAA,OAgIE,mBAAU,kBAAkB,SAAS;AACnC,YAAM,aAAa,IAAI,iBAAiB;AACxC,YAAM,OAAO,WAAW;AACxB,YAAI,aAAa,KAAK,aAAa;AACnC,YAAI,CAAC,YAAY;AACf,eAAK,aAAa,KAAK;AACvB,uBAAa,IAAI;AACjB,eAAK,aAAa,QAAQ;;AAE5B,eAAO,WAAW,IAAI;;OAzI1B;MAAA,KAAA;MAAA,OAoJE,uBAAc,kBAAkB;AAC9B,YAAM,OAAO,IAAI,iBAAiB,MAAM;AACxC,YAAM,aAAa,KAAK,aAAa;AACrC,YAAI,YAAY;AACd,qBAAW;AACX,cAAM,QAAQ,UAAU,KAAK,cAAc,SAAC,GAAD;AAAA,mBAAO,EAAE,aAAa;;AACjE,cAAI,QAAQ,GAAG;AACb,mBAAO;;AAGT,eAAK,aAAa,OAAO,OAAO;AAChC,eAAK,OAAO,OAAO,OAAO;AAC1B,eAAK,SAAS,OAAO,OAAO;AAC5B,eAAK,UAAU,OAAO,OAAO;AAC7B,iBAAO,KAAK,aAAa;AACzB,iBAAO;eACF;AACL,iBAAO;;;OArKb;MAAA,KAAA;MAAA,OA8KE,uBAAc,SAAS;AACrB,eAAO,KAAK,uBAAuB,IAAI;;OA/K3C;MAAA,KAAA;MAAA,OAwLE,uBAAc,OAAO;AACnB,YAAM,MAAM,KAAK;AACjB,aAAK,eAAe;AAEpB,aAAK,uBAAuB,KAAK;AAEjC,iBAAS,IAAI,GAAG,IAAI,KAAK,aAAa,QAAQ,KAAK;AACjD,cAAI,KAAK,OAAO,IAAI;AAGlB;;AAEF,cAAI,KAAK,SAAS,MAAM,KAAK,SAAS,KAAK,KAAK;AAE9C,iBAAK,cAAc;;AAErB,cAAI,KAAK,aAAa,GAAG,aAAa,QAAQ;AAM5C,iBAAK,eAAe;;;AAIxB,aAAK,YAAY;;OAlNrB;MAAA,KAAA;MAAA,OA2NE,sBAAa,OAAO;AAClB,YAAM,MAAM,KAAK;AAEjB,iBAAS,IAAI,GAAG,IAAI,KAAK,aAAa,QAAQ,KAAK;AACjD,cAAI,CAAC,KAAK,UAAU,IAAI;AAEtB;;AAEF,cAAI,KAAK,SAAS,MAAM,KAAK,SAAS,KAAK,KAAK;AAE9C,iBAAK,cAAc;AACnB;;AAEF,cAAI,CAAC,KAAK,aAAa,GAAG,YAAY,QAAQ;AAE5C,iBAAK,cAAc;;;AAIvB,aAAK,YAAY;;OA9OrB;MAAA,KAAA;MAAA,OAuPE,qBAAY,OAAO;AACjB,YAAM,MAAM,KAAK;AAEjB,iBAAS,IAAI,GAAG,IAAI,KAAK,aAAa,QAAQ,KAAK;AACjD,cAAI,CAAC,KAAK,UAAU,IAAI;AAEtB;;AAEF,cAAI,KAAK,SAAS,MAAM,KAAK,SAAS,KAAK,KAAK;AAE9C,iBAAK,cAAc;AACnB;;AAGF,eAAK,aAAa,GAAG,WAAW;AAEhC,cAAM,UAAU,CAAC,KAAK,SAAS;AAC/B,cAAM,YAAY,KAAK,SAAS,KAAK;AACrC,cAAM,aAAa,KAAK,aAAa,KAAK,aAAa;AAEvD,cAAI,CAAC,cAAe,YAAW,YAAY;AACzC,iBAAK,cAAc;;;AAIvB,aAAK,YAAY;;OAhRrB;MAAA,KAAA;MAAA,OAyRE,wBAAe,OAAO;AACpB,iBAAS,IAAI,GAAG,IAAI,KAAK,aAAa,QAAQ,KAAK;AACjD,eAAK,gBAAgB;;AAEvB,aAAK,YAAY;;OA7RrB;MAAA,KAAA;MAAA,OA0SE,sBAAa,YAAY,QAAQ;AAE/B,YAAI,KAAK,WAAW;AAClB,qBAAW;AACX;;AAKF,YAAM,MAAM,KAAK;AACjB,iBAAS,IAAI,GAAG,IAAI,KAAK,aAAa,QAAQ,KAAK;AACjD,cAAI,KAAK,aAAa,MAAM,YAAY;AACtC,iBAAK,OAAO,KAAK,MAAM;AACvB,iBAAK,SAAS,KAAK;;;AAGvB,aAAK,kBAAkB;;OA1T3B;MAAA,KAAA;MAAA,OAwUE,wBAAe,YAAY,UAAU;AAEnC,YAAI,KAAK,WAAW;AAClB,qBAAW;AACX;;AAGF,YAAM,MAAM,KAAK;AACjB,iBAAS,IAAI,GAAG,IAAI,KAAK,aAAa,QAAQ,KAAK;AACjD,cAAI,KAAK,aAAa,MAAM,YAAY;AACtC,iBAAK,SAAS,KAAK,MAAM;;;;OAlVjC;MAAA,KAAA;MAAA,OA+VE,oBAAW,YAAY;AACrB,YAAI,KAAK,aAAa,YAAY;AAChC,eAAK,YAAY;AACjB,eAAK,eAAe;;;OAlW1B;MAAA,KAAA;MAAA,OAgXE,qBAAY,YAAY,MAAM,OAAO;AACnC,kBACE,KAAK,aAAa,YAClB,2CACA,WAAW;AAEb,YAAM,aAAa,KAAK,aAAa,WAAW;AAChD,YAAI,YAAY;AACd,qBAAW,KACT,IAAI,QAAQ,WAAW,WAAW,MAAM,KAAK,OAAO;;;OAzX5D;MAAA,KAAA;MAAA,OAkYE,qBAAY,OAAO;AACjB,YAAI,cAAc,CAAC,CAAC,KAAK,aAAa,KAAK;AAC3C,aAAK,eAAe;AACpB,YAAI,CAAC,aAAa;AAChB,cAAM,MAAM,KAAK;AACjB,mBAAS,IAAI,GAAG,IAAI,KAAK,aAAa,QAAQ,KAAK;AACjD,gBAAI,KAAK,OAAO,MAAO,KAAK,SAAS,MAAM,KAAK,SAAS,MAAM,KAAM;AACnE,4BAAc;AACd;;;;AAIN,YAAI,aAAa;AACf,gBAAM;AACN,cAAI,CAAC,KAAK,0BAA0B;AAClC,kBAAM;;mBAEC,KAAK,wBAAwB;AACtC,gBAAM;;AAER,YAAI,KAAK,iBAAiB;AACxB,eAAK,kBAAkB;AACvB,eAAK;;;OAxZX;MAAA,KAAA;MAAA,OAiaE,mBAAU;AACR,YAAM,MAAM,KAAK;AAIjB,YAAI,aAAa;AACjB,iBAAS,IAAI,GAAG,IAAI,KAAK,aAAa,QAAQ,KAAK;AACjD,cAAI,CAAC,KAAK,OAAO,IAAI;AACnB,gBAAI,KAAK,SAAS,MAAM,KAAK,SAAS,KAAK,KAAK;AAE9C,mBAAK,cAAc;;AAErB;;AAEF,cAAI,cAAc,MAAM,KAAK,OAAO,KAAK,KAAK,OAAO,aAAa;AAChE,yBAAa;;;AAIjB,YAAI,cAAc,IAAI;AAEpB;;AAIF,YAAI,WAAW;AACf,iBAAS,KAAI,GAAG,KAAI,KAAK,aAAa,QAAQ,MAAK;AACjD,cAAI,KAAK,OAAO,OAAM,CAAC,KAAK,UAAU,KAAI;AACxC;;AAEF,qBAAW,KAAK,IAAI,UAAU,KAAK,SAAS,MAAK;;AAGnD,YAAI,WAAW,GAAG;AAEhB,eAAK,eAAe;AACpB;;AAIF,aAAK,MAAM,SAAS;;OAzcxB;MAAA,KAAA;MAAA,OAidE,wBAAe,OAAO;AACpB,YAAM,aAAa,KAAK,aAAa;AACrC,iBAAS,IAAI,GAAG,IAAI,KAAK,aAAa,QAAQ,KAAK;AACjD,cAAI,KAAK,OAAO;AACd,iBAAK,gBAAgB;;;AAGzB,aAAK,OAAO,SAAS;AACrB,aAAK,SAAS,SAAS;AACvB,aAAK,YAAY;AACjB,mBAAW;;OA3df;MAAA,KAAA;MAAA,OAkeE,wBAAe,OAAO;AACpB,aAAK,UAAU,SAAS;AACxB,aAAK,SAAS,SAAS;;OApe3B;MAAA,KAAA;MAAA,OA2eE,uBAAc,OAAO;AACnB,aAAK,UAAU,SAAS;AACxB,aAAK,SAAS,SAAS;AACvB,YAAI,CAAC,KAAK,OAAO,QAAQ;AACvB,eAAK,aAAa,OAAO;;;OA/e/B;MAAA,KAAA;MAAA,OAufE,yBAAgB,OAAO;AACrB,aAAK,OAAO,SAAS;AACrB,aAAK,cAAc;;QAzfvB,CAAA;MAAA,KAAA;MAAA,OASE,aACE,SACA,6BACA,2BACA;AAAA,YAFA,gCAEA,QAAA;AAFA,wCAA8B;;AAE9B,YADA,8BACA,QAAA;AADA,sCAA4B;;AAE5B,YAAI,MAAM,QAAQ;AAClB,YAAI,CAAC,KAAK;AACR,gBAAM,IAAI,UACR,SACA,6BACA;AAEF,kBAAQ,SAAS;;AAEnB,eAAO;;;AAvBX,WAAA;;AAwhBA,MAAa,oBAAb,2BAAA;AAKE,gCAAY,MAAM,SAAS;AAAA,wBAAA,MAAA;AAEzB,WAAK,QAAQ;AAGb,WAAK,WAAW;;AAVpB,mBAAA,oBAAA,CAAA;MAAA,KAAA;MAAA,OAkBE,mBAAU;AACR,eAAO,KAAK;;OAnBhB;MAAA,KAAA;MAAA,OA8BE,qBAAY,QAAQ;AAClB,aAAK,SAAS,aAAa,MAAM;;OA/BrC;MAAA,KAAA;MAAA,OA0CE,uBAAc,UAAU;AACtB,aAAK,SAAS,eAAe,MAAM;;OA3CvC;MAAA,KAAA;MAAA,OAoDE,qBAAY;AACV,aAAK,SAAS,WAAW;;OArD7B;MAAA,KAAA;MAAA,OA+DE,oBAAW,MAAM,OAAO;AACtB,aAAK,SAAS,YAAY,MAAM,MAAM;;OAhE1C;MAAA,KAAA;MAAA,OAyEE,uBAAc;;OAzEhB;MAAA,KAAA;MAAA,OA+EE,wBAAe;;OA/EjB;MAAA,KAAA;MAAA,OAwFE,sBAAa,aAAa;AACxB,eAAO;;OAzFX;MAAA,KAAA;MAAA,OAmGE,qBAAY,aAAa;AACvB,eAAO;;OApGX;MAAA,KAAA;MAAA,OA8GE,oBAAW,aAAa;;;AA9G1B,WAAA;;;;AC1jBA,MAAM,eAAe;AAGrB,MAAM,mBAAmB,KAAK,MAAM,CAAC,eAAe,KAAK,IAAI;AAO7D,MAAM,wBAAwB,eAAe;AAWtC,wBAAsB,QAAQ,WAAW,cAAc;AAC5D,QAAI,YAAY,GAAG;AACjB,kBAAY;;AAId,QAAM,QAAQ,SAAS;AAQvB,QAAM,OAAO,MAAM,KAAK,IAAI,YAAY,uBAAuB;AAC/D,WAAO,QAAQ,OAAO,eAAgB,KAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCgKtC,kBAAA,yBAAA,qBAAA;;;AAOJ,8BAAY,MAAM,SAAS,OAAO,MAAM;AAAA,UAAA;AAAA,wBAAA,MAAA;AACtC,eAAA,QAAA,KAAA,MAAM,MAAM;AAGZ,aAAK,SAAS;AAGd,aAAK,QAAQ;AAGb,aAAK,YAAY;AAGjB,aAAK,UAAU;AAGf,aAAK,UAAU;AAGf,aAAK,SAAS;AAGd,aAAK,SAAS;AAGd,aAAK,SAAS;AAGd,aAAK,SAAS;AAGd,aAAK,aAAa;AAGlB,aAAK,YAAY;AAGjB,aAAK,YAAY;AAGjB,aAAK,aAAa;AAGlB,aAAK,aAAa;AA3CoB,aAAA;;;;aA+CxC,sBAAa,GAAG;AACd,YAAO,UAAW,EAAX;AAEP,YAAI,KAAK,aAAa,WAAW,QAAQ,SAAS,GAAG;AACnD,iBAAO;;AAET,YAAI,WAAW,QAAQ,UAAU,GAAG;AAClC,eAAK,aAAa,KAAK;AACvB,eAAK,UAAU,QAAQ,GAAG;AAC1B,eAAK,UAAU,QAAQ,GAAG;AAC1B,iBAAO;eACF;AACL,iBAAO;;;;;aAKX,qBAAY,GAAG;AACb,YAAO,UAAW,EAAX;AACP,YAAI,WAAW,QAAQ,UAAU,GAAG;AAClC,cAAA,YAAiC,QAAQ,IAAzB,IAAhB,UAAO,SAAqB,IAA5B,UAAmB;AACnB,eAAK,SAAS;AACd,eAAK,SAAS;AACd,cAAI,KAAK,WAAW;AAElB,iBAAK,MAAM,OAAO,OAAO;iBACpB;AAEL,gBAAM,KAAK,KAAK,IAAI,IAAI,KAAK;AAC7B,gBAAM,KAAK,KAAK,IAAI,IAAI,KAAK;AAG7B,gBAAI,KAAK,UAAU,KAAK,OAAO;AAC7B,kBAAI,MAAM,KAAK,MAAM,GAAG;AACtB,qBAAK,YAAY;;uBAEV,KAAK,QAAQ;AACtB,kBAAI,MAAM,KAAK,KAAK,IAAI;AACtB,qBAAK,YAAY;yBACR,MAAM,GAAG;AAClB,uBAAO;;uBAEA,KAAK,OAAO;AACrB,kBAAI,MAAM,KAAK,KAAK,IAAI;AACtB,qBAAK,YAAY;yBACR,MAAM,GAAG;AAClB,uBAAO;;mBAEJ;AACL,qBAAO;;;AAGX,iBAAO;eACF;AACL,iBAAO;;;;;aAKX,oBAAW,GAAG;AACZ,YAAO,UAAW,EAAX;AAEP,YAAI,WAAW,QAAQ,UAAU,GAAG;AAClC,eAAK,KAAK;;;;;aAKd,uBAAc;AACZ,aAAK,YAAY;AAIjB,aAAK,SAAS,KAAK;AACnB,aAAK,SAAS,KAAK;AACnB,aAAK,YAAY,KAAK;AACtB,aAAK,UAAU,KAAK;AACpB,aAAK,UAAU,KAAK;AACpB,aAAK,MAAM,MAAM,OAAO;;;;aAI1B,wBAAe;AACb,aAAK,YAAY;;;;aASnB,eAAM,OAAO,MAAM,OAAO;AACxB,aAAK,YAAY,KAAK;AACtB,YAAM,YAAY,KAAK,YAAY,KAAK;AAGxC,YAAK,CAAC,QAAQ,YAAY,KAAO,QAAQ,YAAY,IAAK;AACxD,cAAM,YAAY,aAChB,KAAK,SAAS,KAAK,QACnB,WACA,KAAK;AAEP,cAAM,YAAY,aAChB,KAAK,SAAS,KAAK,QACnB,WACA,KAAK;AAOP,cAAI,CAAC,QAAQ,YAAY,MAAM,aAAa,KAAK,aAAa,GAAG;AAC/D,iBAAK,aAAa,KAAK,IAAI,aAAa,OAAO,YAAY;AAC3D,iBAAK,aAAa,KAAK,IAAI,aAAa,OAAO,YAAY;;AAG7D,eAAK,SAAS,KAAK;AACnB,eAAK,SAAS,KAAK;AACnB,eAAK,YAAY,KAAK;;AAGxB,aAAK,WACH;UACE;UACA;UACA,MAAM,KAAK;UACX,QAAQ,KAAK,SAAS,KAAK;UAC3B,QAAQ,KAAK,SAAS,KAAK;UAC3B,QAAQ,KAAK;UACb,QAAQ,KAAK;UACb,OAAO,KAAK;UACZ,OAAO,KAAK;UACZ,WAAW,KAAK;UAChB,WAAW,KAAK;WAElB;;;;aAQJ,cAAK,OAAO;AACV,YAAI,KAAK,WAAW;AAClB,eAAK,YAAY;AACjB,eAAK,MAAM,OAAO,MAAM;AACxB,eAAK;;;;;IA3MmB;AA+N9B,MAAa,mBAAb,yBAAA,mBAAA;AAAA,cAAA,mBAAA;AAAA,QAAA,UAAA,aAAA;AAIE,+BAAY,SAAS;AAAA,wBAAA,MAAA;AAAA,aAAA,QAAA,KAAA,MACb,WAAW,SAAS,MAAM;;AALpC,WAAA;IAAsC;;;AC5a/B,MAAM,aAAa;IACxB,aAAa;IACb,gBAAgB;IAChB,kBAAkB;;;;;;;;;;;;;;;;;;ACMpB,MAAM,aAAa;IACjB,MAAM;IACN,QAAQ;;AAOV,MAAM,eAAY,UAAA,IACb,YADa;IAEhB,MAAM;;;;ACoED,MAAM,gBAAgB;IAC3B,QAAQ;IACR,OAAO;;AASF,wBAAsB,QAAQ;AACnC,eAAW,OAAO,UAAU;AAC5B,QAAI,OAAO,YAAY;AACrB,oBAAc,OAAO;WAChB;AACL,aAAO,aAAa;;AAEtB,QAAI,OAAO,cAAc;AACvB,sBAAgB,OAAO;WAClB;AACL,aAAO,eAAe;;AAExB,kBAAc,OAAO,YAAwC;AAC7D,WAAmC;;AAOrC,2BAAyB,WAAW;AAClC,aAAW,KAAK,WAAW;AACzB,iBACE,KAAK,cAAc,UAAU,KAAK,cAAc,OADxC,gCAEsB,IAFtB;AAIV,iBAAW,OAAO,UAAU,MAAM;;;AAQtC,yBAAuB,SAAS;AAC9B,QAAM,eAAe,CACnB,WAAW,aACX,WAAW,gBACX,WAAW;AAEb,aAAW,QAAQ,SAAS;AAC1B,iBACE,OAAO,QAAQ,SAAS,UACxB,0CACA;AAEF,iBACE,aAAa,QAAQ,QAAQ,MAAM,SAAS,IAC5C,wBAAwB,aAAa,KAAK;;;AAWhD,yBAAuB,SAAS,QAAQ;AACtC,eAAW,OAAO,WAAW,UAAU;AACvC,aAAW,UAAU,SAAS;AAC5B,mBAAa,QAAQ,QAAQ,SAAS;;;AAW1C,wBAAsB,MAAM,QAAQ,QAAQ;AAC1C,eACE,OAAO,OAAO,eAAe,UAC7B,4CACA;AAEF,QAAI,OAAO,YAAY;AACE,aAAO,WAAY,QAAQ,SAAC,QAAW;AAC5D,mBAAW,OAAO,WAAW,SAAS,2BAA2B;;;AAGrE,QAAI,OAAO,SAAS;AAClB,UAAM,UAAU;AAChB,eAAW,YAAY,OAAO,SAAS;AACrC,mBACE,QAAQ,KAAK,WACb,oCACA,UACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtJR,MAAM,OAAM;AAGZ,MAAM,gBAAgB;AAGtB,MAAM,mBAAmB;AAGzB,MAAM,0BAA0B;AAGhC,MAAM,iBAAiB;IACrB,SAAS;IACT,qBAAqB;;AAGvB,MAAa,cAAb,2BAAA;AASE,0BAAY,QAAQ,QAAQ,OAAO,cAAc,cAAc,cAAc;AAAA,wBAAA,MAAA;AAE3E,WAAK,UAAU;AAGf,WAAK,SAAS;AAGd,WAAK,uBAAuB;AAG5B,WAAK,MAAL,uBAAgC,KAAK;AAGrC,WAAK,OAAO,OAAO;AAGnB,WAAK,OAAO,KAAK,KAAK;AAGtB,WAAK,aAAa,wBAAwB,QAAQ;AAGlD,WAAK,eAAe;AAGpB,WAAK,eAAe;AAGpB,WAAK,aAAa;AAGlB,WAAK,WAAW;AAGhB,WAAK,iBAAiB;AAGtB,WAAK,aAAa;AAGlB,WAAK,SAAS;AAGd,WAAK,UAAU;AAGf,WAAK,iBAAiB;AAGtB,WAAK,gBAAgB;AAGrB,WAAK,UAAU;AAGf,WAAK,gBAAgB;AAGrB,WAAK,eAAe;;AApExB,mBAAA,cAAA,CAAA;MAAA,KAAA;MAAA,OAwEE,oBAAW;AACT,eAAO,KAAK;;OAzEhB;MAAA,KAAA;MAAA,OA6EE,iBAAQ;AACN,eAAO,KAAK;;OA9EhB;MAAA,KAAA;MAAA,OAkFE,uBAAc;AACZ,eACE,CAAC,CAAC,KAAK,gBAAgB,KAAK,QAAQ,KAAK,eAAe;;OApF9D;MAAA,KAAA;MAAA,OAyFE,oBAAW;AACT,eAAO,KAAK;;OA1FhB;MAAA,KAAA;MAAA,OA8FE,yBAAgB;AACd,eAAO,KAAK;;OA/FhB;MAAA,KAAA;MAAA,OAmGE,0BAAiB;AACf,eAAO,KAAK;;OApGhB;MAAA,KAAA;MAAA,OA2GE,8BAAqB,IAAI;AACvB,aAAK,eAAe,KAAK;;OA5G7B;MAAA,KAAA;MAAA,OAmHE,4BAAmB;AACjB,aAAK,UAAU;AACf,aAAK,cACH,gBAAgB,KAAK,YAAY;AAGnC,YAAI,KAAK,QAAQ;AACf,0BACE,MAAM,cAAc,KAAK,OAAO,OAChC,eAAe;AAGjB,cAAM,gBAAgB,KAAK,OAAO,cAAc;AAChD,2BACE,gBAAgB,eAAe,eAAe;;;OAjItD;MAAA,KAAA;MAAA,OAyIE,iBAAQ;AAAA,YAAA;AACN,aAAK,eAAe,KAAK;AACzB,aAAK,eAAe,KAAK;AACzB,aAAK,aAAa,KAAK;AAEvB,YAAM,YAAY,KAAK,KAAK,cAAc;AAC1C,kBAAU,UAAU,IAAI;AAExB,YAAM,YAAY,KAAK,KAAK,cAAc;AAC1C,kBAAU,aAAa,YAAY;AAEnC,YAAM,gBAAgB,UAAU,UAAqB;AAErD,kBAAU,YAAY,KAAK;AAC3B,sBAAc,YAAY;AAC1B,aAAK,aAAa,YAAY;AAC9B,aAAK,aAAa,YAAY;AAE9B,aAAK;AACL,aAAK;AAEL,aAAK,gBAAgB,gBAAgB,cAArC,yBAAA,IAAA,sBACG,cAAc,gBAAe,KAAK,OADrC;AAIA,eAAO,KAAK;;OAlKhB;MAAA,KAAA;MAAA,OA0KE,0BAAiB;AAAA,YAAA,QAAA;AACf,eAAO,kBAAkB,KAAK,WAAM;AAElC,cAAI,MAAK,cAAc;AACrB,mBAAO;;AAGT,cAAM,aAAa;AAGnB,cAAI,CAAC,MAAK,QAAQ;AAChB,mBAAO,OACL,YACA,8BAA8B,UAAU,MAAK;iBAE1C;AACL,mBAAO,OACL,YACA,0BAA0B,MAAK,SAE/B,MAAK;;AAIT,cAAI,CAAC,oBAAoB,aAAa;AACpC,mBAAO;;AAGT,qBAAW,YAAY,YACrB,gBACE,WAAW,YAAY,WACvB,MAAK,yBACF,WAAW,YAAY;AAG9B,gBAAK,WAAW,KAAK,SAAC,WAAD;AAAA,mBACnB,UAAU,OACR,MAAK,QACL,cAAc,UACd,WAAW,YAAY;;AAI3B,cACG,MAAK,iBAAiB,uBACrB,MAAK,MACL,YACA,UAAU,MAAK,gBAEjB;AACA,kBAAK,cAAc,UACjB,cAAc,UACd,SAAC,SAAY;AACX,oBAAK,iBAAiB;eAExB;;AAIJ,iBAAO,MAAK,gBAAgB;;;OArOlC;MAAA,KAAA;MAAA,OA6OE,8BAAqB;AACnB,YAAM,aAAa,KAAK;UACtB,MAAM;UACN,YAAY;UACZ,qBAAqB;UACrB,MAAM,KAAK;;AAGb,YAAM,uBAAuB,oBAC3B,KAAK,MACL,mBAAmB;AAErB,YACE,wBACA,yBAAyB,mBAAmB,SAC5C;AACA,qBAAW,wBAAwB,iBAAiB;;AAGtD,YAAM,OAAO,4BACX,KAAK,MACL,kBACA;AAGF,iBAAS,MAAM,oBAAoB;AACnC,eAAO;;OAvQX;MAAA,KAAA;MAAA,OA8QE,4BAAmB;AACjB,YAAI,KAAK,QAAQ,YAAY,QAAQ;AACnC,eAAK,QAAQ,QAAb,oBAAuC,KAAK;;AAE9C,eAAO,4BAA4B,KAAK,MAAM,UAAU,KAAK;;OAlRjE;MAAA,KAAA;MAAA,OA0RE,mCAA0B;AAAA,YAAA,SAAA;AAExB,aAAK,WACF,UAEA,WAAW,cAAc,UACzB,KAAK,WAAA;AAAA,iBAAM,OAAK;;AAGnB,YAAM,iBAAiB,OAAO,KAAK,MAAM,WAAW,SAAC,GAAM;AACzD,cAAI,QAAQ,OAAO,qBAAqB;AACtC;;AAEF,cAAI,OAAK,iBAAiB,EAAE,WAAW,OAAK,SAAS,eAAe;AAClE,mBAAK,eAAe;AACpB,mBAAK,aAAa,aAAa,cAAc;AAC7C,mBAAK;AACL;;;;OA3SR;MAAA,KAAA;MAAA,OAmTE,4BAAmB;AAAA,YAAA,SAAA;AACjB,YAAM,WAAW,SAAS,IACxB,KAAK,cACL,MACA;AAEF,iBAAS,UAAU,kBAAkB,WAAM;AAAA,cAAA;AACzC,iBAAK,gBAAgB,gBAAgB,WAArC,yBAAA,IAAA,sBACG,cAAc,aAAY,KAAK,OADlC;AAGA,mBAAS;;;OA7Tf;MAAA,KAAA;MAAA,OAqUE,uBAAc;AACZ,YAAI,KAAK,UAAU;AACjB,iBAAO,KAAK;;AAEd,eAAQ,KAAK,WACX,aAAa,UAAU,KAAK,eAAe;;OA1UjD;MAAA,KAAA;MAAA,OAkVE,uBAAc;AAAA,YAAA;AAKZ,aAAK,aAAa,UAAU,KAAK,SAAC,MAAD;AAAA,iBAAU,KAAK;;AAIhD,aAAK,aAAa,gBAAgB,eAAe;AAEjD,aAAK,gBAAgB,gBAAgB,WAArC,0BAAA,IAAA,uBACG,cAAc,aAAY,KAAK,OADlC;AAIA,YAAI,KAAK,iBAAiB,CAAC,KAAK,cAAc;AAC5C,eAAK,SAAS,YACuB,KAAK;;AAI5C,aAAK,UAAU;AAEf,aAAK,eAAe,QAAQ,SAAC,IAAD;AAAA,iBAAQ;;;OAzWxC;MAAA,KAAA;MAAA,OAiXE,yBAAgB,YAAY;AAAA,YAAA,SAAA;AAC1B,eAAO,UACL,KAAK,MACL,UAAU,KAAK,gBACf,MAAM,cAAc,KAAK,eACzB,YACA,KAAK,SAAC,QAAW;AACjB,cAAI,QAAQ;AACV,mBAAK,aAAa;AAGlB,mBAAO,iBAAiB,SAAS,WAAM;AAAA,kBAAA;AACrC,kBAAM,OAAI,SAAA,IAAA,MACP,cAAc,cAAa,KAAK,OADzB;AAGV,qBAAK,gBAAgB,gBAAgB,YAAY;;AAEnD,mBAAO;;AAET,iBAAO;;;OApYb;MAAA,KAAA;MAAA,OAmZE,0BAAiB;AACf,YAAM,YAAY,aAChB,MAAM,cAAc,KAAK,OAAO,OAChC;AAEF,YAAI,WAAW;AACb,cAAI;AAAA,gBAAA;AACF,gBAAO,WAAY,UAAZ;AACP,uBACE,SAAS,UAAU,GACnB;AAEF,gBAAM,QAAQ,SAAS;AACvB,uBACE,gBAAgB,QAChB;AAGF,gBAAM,SAAS,aAAa,UAAU,MAAM;AAC5C,gBAAM,SACJ,OAAO,cACP,OAAO,KAAK,OAAO,eACnB,OAAO,WAAW,OAAO,KAAK,OAAO,YAAY;AACnD,gBAAM,WAAW,UAAU,OAAO;AAClC,mBAAO,SAAM,QAAA,IAAA,KAAK,YAAY,WAAU,UAA3B,QAAuC;mBAC7C,GAAP;AACA,kBAAM,MAAM,MAAK;AACjB,mBAAO;;;;OA9af;MAAA,KAAA;MAAA,OAybE,0BAAiB,SAAS;AACxB,YAAI,CAAC,KAAK,gBAAgB;AACxB;;AAGF,aAAK,eAAe,UAAU,OAC5B,yBACA,YAAY,OAAO;;OAhczB;MAAA,KAAA;MAAA,OA0cE,yBAAgB,WAAW,MAAM;AAAA,YAAA,SAAA;AAC/B,aAAK,WAAW,KAAK,SAAC,WAAD;AAAA,iBACnB,UAAU,UAAU,OAAK,cAAc,OAAK,QAAQ,WAAW;;;;AA5crE,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA,MAAM,OAAM;AAGL,MAAM,iBAAiB;IAC5B,SAAS;IACT,SAAS;IACT,SAAS;;AAGJ,MAAM,uBAAuB;AAKpC,MAAa,qBAAb,2BAAA;AAKE,iCAAY,UAAU,QAAQ;AAAA,wBAAA,MAAA;AAE5B,WAAK,YAAY;AAGjB,WAAK,UAAU;AAGf,WAAK,UAAU,SAAS;AAGxB,WAAK,aAAa,wBAAwB,KAAK,SAAS;AAGxD,WAAK,uBAAuB,IAAI,oBAAoB,KAAK,UAAU;AAGnE,WAAK,gBAAgB,IAAI,iBAAiB,KAAK;AAG/C,WAAK,SAAS;AAGd,WAAK,gBAAgB,gBAAgB,KAAK,QAAQ;AAGlD,WAAK,eAAe;AAGpB,WAAK,kBAAkB;;AAlC3B,mBAAA,qBAAA,CAAA;MAAA,KAAA;MAAA,OAyCE,2BAAkB;AAChB,eAAO,KAAK,eAAe,KAAK,gBAAgB;;OA1CpD;MAAA,KAAA;MAAA,OAiDE,2BAAkB;AAChB,YAAM,SAAS,KAAK,gBAAgB,KAAK;AACzC,kBAAU,QAAW,OAAZ;AACT,eAAO,KAAK,OAAO;;OApDvB;MAAA,KAAA;MAAA,OA0DE,4BAAmB;AAAA,YAAA;AACjB,aAAK,gBAAgB,gBAAgB,cAArC,yBAAA,IAAA,sBACG,cAAc,YAAW,KAAK,cADjC,sBAEG,cAAc,gBAAe,KAAK,OAFrC;AAIA,aAAK;;OA/DT;MAAA,KAAA;MAAA,OAsEE,8BAAqB;AACnB,eAAO,KAAK,gBAAgB;;OAvEhC;MAAA,KAAA;MAAA,OA+EE,wBAAe;AAAA,YAAA,QAAA;AACb,YAAM,QAAQ,KAAK,gBAAgB,SAAS;AAC5C,YAAM,OAAO,IAAI,YACf,KAAK,SACL,KAAK,SACL,OACA,KAAK,sBACL,UAAU,KAAK,gBACf,UAAU,KAAK;AAGjB,YAAM,cAAc,KAAK;AACzB,YAAM,SAAS,KAAK;AACpB,aAAK,OAAO,UAAU;AACtB,aAAK,gBAAgB,KAAK;AAE1B,aAAK,UAAU,QAAQ,YAAY;AACnC,oBAAY,UAAU,KAAK,SAAC,MAAS;AACnC,gBAAK,UAAU,QAAQ;;AAGzB,eAAO;;OApGX;MAAA,KAAA;MAAA,OA2GE,eAAM,QAAQ;AACZ,eAAO,CAAC,CAAC,KAAK,OAAO;;OA5GzB;MAAA,KAAA;MAAA,OAmHE,uBAAc,QAAQ;AACpB,eAAO,KAAK,OAAO;;OApHvB;MAAA,KAAA;MAAA,OA2HE,sBAAa,QAAQ;AACnB,eAAO,UAAU,KAAK,iBAAiB,SAAC,IAAD;AAAA,iBAAQ,OAAO;aAAU;;OA5HpE;MAAA,KAAA;MAAA,OAsIE,8BAAqB,gBAAgB,YAAY;AAAA,YAAA,SAAA;AAC/C,YAAI,eAAe,KAAK,UAAU,YAAY;AAC9C,YAAI,cAAc,KAAK,UAAU,YAAY;AAC7C,YAAI,CAAC,aAAa;AAChB,iBAAO,QAAQ,QAAQ,eAAe;;AAGxC,YAAI,KAAK,kBAAkB;AAGzB,2BAAiB,YAAY,QAAQ;AACrC,yBAAe;AACf,wBAAc,KAAK,UAAU,YAAY;;AAG3C,YAAI,CAAC,aAAa;AAChB,iBAAO,QAAQ,QAAQ,eAAe;;AAKxC,YACE,KAAK,cAAc,iBACnB,aAAa,UACb,YAAY,QACZ;AACA,iBAAO,QAAQ,QAAQ,eAAe;;AAGxC,eAAO,WAAW,iBAAiB,KAAK,SAAC,YAAe;AACtD,cAAI,CAAC,YAAY;AACf,mBAAK;AACL,mBAAO,eAAe;;AAExB,iBAAO,OAAK,uBAAuB,YAAY;;;OAxKrD;MAAA,KAAA;MAAA,OAkLE,gCAAuB,YAAY,gBAAgB;AACjD,YAAM,eAAe,WAAW;AAChC,aAAK,UAAU,WAAW,gBAAgB;AAI1C,YAAM,UAAU,KAAK,aAAa;AAClC,YAAM,aAAa,KAAK,UAAU,iBAAiB;AAEnD,aAAK,WAAW,KAAK,SAAC,WAAD;AAAA,iBACnB,UAAU,OAAO,SAAS,cAAc,UAAU,aAAa;;AAGjE,aAAK;AACL,eAAO,eAAe;;OAhM1B;MAAA,KAAA;MAAA,OAsME,8BAAqB;AAAA,YAAA;AACnB,aAAK,gBAAgB,gBAAgB,aAArC,0BAAA,IAAA,uBACG,cAAc,YAAW,KAAK,cADjC,uBAEG,cAAc,eAAc,KAAK,OAFpC;AAIA,aAAK;;OA3MT;MAAA,KAAA;MAAA,OAkNE,0BAAiB;AACf,eAAO,CAAC,CAAC,KAAK,cAAc,IAAI,cAAc;;OAnNlD;MAAA,KAAA;MAAA,OA6NE,uBAAc,MAAM;AAClB,eAAO,KAAK,QAAQ,aAAa;;OA9NrC;MAAA,KAAA;MAAA,OAuOE,yBAAgB,WAAW,MAAM;AAAA,YAAA,SAAA;AAC/B,aAAK,WAAW,KAAK,SAAC,WAAD;AAAA,iBACnB,UAAU,UACR,OAAK,UAAU,SACf,KAAK,YACL,WACA;;;;AA7OR,WAAA;;;;AC/CO,MAAM,OAAM;;;;ACsBZ,MAAM,oBAAoB;IAC/B,IAAI;IACJ,SAAS;IACT,qBAAqB;IACrB,mBAAmB;IACnB,sBAAsB;;AAOjB,mCAAiC,KAAK;AAE3C,QAAM,iBAAiB;MACrB,cAAc,kBAAkB;MAChC,mBAAmB,6BAAA;AAAA,eAAM;;MACzB,UAAU,CACR,kBAAkB,SAClB,kBAAkB,qBAClB,kBAAkB,mBAClB,kBAAkB;;AAGtB,mCAA+B,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBvC,MAAM,WAAW;AAOjB,MAAa,sBAAb,2BAAA;AAEE,kCAAY,cAAc,aAAa;AAAA,wBAAA,MAAA;AAErC,WAAK,gBAAgB;AAGrB,WAAK,eAAe;AAGpB,WAAK,iBAAiB;AAGtB,WAAK,uBAAuB;AAG5B,WAAK,iBAAiB;AAGtB,WAAK,kBAAkB;;AAnB3B,mBAAA,sBAAA,CAAA;MAAA,KAAA;MAAA,OAuBE,2BAAkB;AAChB,YAAM,WAAW,KAAK,cAAc,IAAI,cAAc,UAAU;AAChE,eAAO,WAAW;;OAzBtB;MAAA,KAAA;MAAA,OA6BE,2BAAkB;AAChB,eAAO,CAAC,KAAK,aAAa;;OA9B9B;MAAA,KAAA;MAAA,OAkCE,sBAAa,QAAQ;AACnB,YAAI,CAAC,OAAO,KAAK,gBAAgB,SAAS;AACxC,eAAK,eAAe,UAAU;AAC9B,eAAK;;AAGP,YACE,KAAK,kBACL,KAAK,mBACL,CAAC,KAAK,qBACN,CAAC,KAAK,aAAa,mBACnB;AACA;;AAGF,aAAK,kBAAkB;AACvB,aAAK,uBAAuB;;OAlDhC;MAAA,KAAA;MAAA,OAsDE,qBAAY,WAAW;AACrB,aAAK,iBAAiB;AACtB,aAAK,uBAAuB;AAC5B,YAAI,KAAK,oBAAoB,YAAY;AACvC,eAAK,aAAa;;;OA1DxB;MAAA,KAAA;MAAA,OAqEE,6BAAoB,WAAW;AAC7B,YAAM,WAAW,KAAK,cAAc,IAAI,cAAc,UAAU;AAChE,eAAO,WAAW,YAAY;;OAvElC;MAAA,KAAA;MAAA,OAgFE,2BAAkB;AAChB,eAAO,KAAK,wBAAwB;;OAjFxC;MAAA,KAAA;MAAA,OAyFE,gCAAuB,gBAAgB;AAAA,YAAA,QAAA;AACrC,YAAM,aAAa,KAAK,aAAa;AAGrC,YAAI,CAAC,WAAW,cAAc,WAAW,eAAe;AACtD,eAAK,aAAa;AAClB;;AAIF,YAAI,CAAC,WAAW,YAAY;AAC1B;;AAGF,aAAK,aACF,qBAAqB,gBAAgB,YACrC,KAAK,SAAC,gBAAmB;AACxB,gBAAK,kBAAkB;AACvB,cAAI,mBAAmB,eAAe,SAAS;AAE7C,kBAAK,iBAAiB;;;;;AA7GhC,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA,MAAM,4BAA4B;AAGlC,MAAM,sBAAsB;AAG5B,MAAM,oBAAoB;AAUnB,0BAAwB,aAAa,aAAa;AACvD,QAAI,CAAC,aAAa;AAChB,aAAO;;AAET,QAAM,gBAAgB,KAAK,KAAK,cAAe,eAAc;AAC7D,QAAM,YAAY,cAAc;AAChC,QAAM,YAAY,CAAC;AACnB,QAAM,WAAW,KAAK,KAAK,YAAY;AACvC,aAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,UAAM,WAAW,gBAAgB,WAAW;AAC5C,gBAAU,KAAK;;AAEjB,WAAO;;AAWF,0BAAwB,WAAW,gBAAgB;AACxD,QAAM,eAAe,KAAK,MAAM,YAAY;AAC5C,QAAM,aACJ,KAAK,WAAY,YAAY,iBAAkB;AACjD,QAAM,eAAe,aAAa,IAAI;AACtC,WAAO,KAAK,IAAI,eAAe,cAAc;;AAQ/C,MAAa,iCAAb,2BAAA;AAEE,6CAAY,cAAc,aAAa,qBAAqB;AAAA,wBAAA,MAAA;AAE1D,WAAK,eAAe;AAGpB,WAAK,kBAAkB,KAAK,sBAAsB;AAGlD,WAAK,gBAAgB,aAAa,IAAI,cAAc;AAGpD,WAAK,eAAe;AAGpB,WAAK,gBAAgB;;AAhBzB,mBAAA,iCAAA,CAAA;MAAA,KAAA;MAAA,OAoBE,2BAAkB;AAChB,YAAM,cAAc,KAAK,cAAc;AACvC,eAAO,cAAc,4BAA4B;;OAtBrD;MAAA,KAAA;MAAA,OA0BE,2BAAkB;AAChB,YAAM,cAAc,KAAK,cAAc;AACvC,YAAM,cAAc,eAAe,aAAa,KAAK;AACrD,aAAK,eAAe,eAAe,aAAa;AAChD,YAAI,aAAa;AAEf,iBAAO,CAAC,KAAK;;AAEf,eAAO;;OAlCX;MAAA,KAAA;MAAA,OAwCE,2BAAkB;AAAA,YAAA,QAAA;AAChB,YAAM,WAAW,KAAK,aAAa,KAAK;AACxC,YAAM,SAAS,KAAK,aAAa;AACjC,eAAO,qBAAqB,WAAM;AAEhC,gBAAK,aAAa,qBAChB,MAAK,cAAc,WAAW,IAC9B;;AAGJ,aAAK;AACL,eAAO;;OAnDX;MAAA,KAAA;MAAA,OA2DE,sBAAa,cAAc;;OA3D7B;MAAA,KAAA;MAAA,OA8DE,qBAAY,iBAAiB;AAC3B,YAAI,KAAK,gBAAgB,KAAK,aAAa,QAAQ;AACjD,eAAK;;;OAhEX;MAAA,KAAA;MAAA,OAyEE,+BAAsB,UAAU;AAC9B,YAAI,aAAa,kBAAkB,qBAAqB;AACtD,iBAAO;mBACE,aAAa,kBAAkB,mBAAmB;AAC3D,iBAAO;mBACE,aAAa,kBAAkB,sBAAsB;AAC9D,iBAAO;;;;AA/Eb,WAAA;;;;AC5CO,4BAA0B,KAAK,cAAc,aAAa;AAC/D,QAAM,sBAAsB,oBAAoB,KAAK,kBAAkB;AACvE,QACE,uBACA,wBAAwB,kBAAkB,SAC1C;AACA,aAAO,IAAI,+BACT,cACA,aACA;;AAGJ,WAAO,IAAI,oBAAoB,cAAc;;;;ACxCxC,MAAM,OAAM;;;ACAZ,MAAM,OAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmDnB,MAAM,OAAM;AAGZ,MAAM,SAAS;AAGf,MAAM,eAAe;AAGd,MAAM,aAAa;IACxB,YAAY;IACZ,gBAAgB;IAChB,KAAK;IACL,QAAQ;;AAGV,MAAa,kBAAb,yBAAA,kBAAA;AAAA,eAAA,kBAAA;AAAA,QAAA,SAAA,cAAA;AAEE,8BAAY,SAAS;AAAA,UAAA;AAAA,wBAAA,MAAA;AACnB,cAAA,OAAA,KAAA,MAAM;AAGN,YAAK,OAAO,MAAK,IAAI;AAGrB,YAAK,YAAY;AAGjB,YAAK,iBAAiB;AAGtB,YAAK,UAAU;AAGf,YAAK,aAAa;AAGlB,YAAK,oBAAoB;AAGzB,YAAK,yBAAyB;AAG9B,YAAK,gBAAgB;AAGrB,YAAK,sBAAsB;AAG3B,YAAK,iBAAiB;AA/BH,aAAA;;AAFvB,mBAAA,kBAAA,CAAA;MAAA,KAAA;MAAA,OAqCE,yBAAgB;AAAA,YAAA,SAAA;AACd,eAAO,SAAS,2BAA2B,KAAK,KAAK,KACnD,SAAC,cAAiB;AAChB,oBAAU,cAAc;AACxB,iBAAK,gBAAgB;AAErB,cAAI,CAAC,OAAK,kCAAkC;AAC1C;;AAGF,cAAM,kBAAkB,OAAK,QAAQ;AACrC,qBACE,gBAAgB,YAAY,aADpB,MAEJ,OAFI;AAKV,cAAM,SAAS,OAAK;AACpB,cAAM,mBAAmB,SAAS,cAAc,OAAK;AACrD,2BAAwB,uBAAuB,QAAQ;AACvD,iBAAO,gBAAgB,UAAU,KAAK,SAAC,MAAS;AAC9C,mBAAK,YAAY;;;;OAzD3B;MAAA,KAAA;MAAA,OAgEE,6BAAoB;AAClB,eAAO;;OAjEX;MAAA,KAAA;MAAA,OAqEE,0BAAiB;AAAA,YAAA,SAAA;AACf,YAAI,CAAC,KAAK,kCAAkC;AAC1C,iBAAO;;AAET,eAAO,KAAK,UACT,UACA,WAAW,cAAc,UACzB,KAAK,WAAM;AACV,iBAAK;AACL,iBAAK,iBAAiB,IAAI,mBACxB,OAAK,WACL,OAAK;AAEP,kCAAwB,OAAK;AAC7B,mCAAyB,OAAK;AAC9B,iBAAK,sBAAsB,iBACzB,OAAK,KACL,OAAK,eACL,OAAK;AAGP,cAAI,CAAC,OAAK,oBAAoB,mBAAmB;AAC/C;;AAEF,iBAAK,aAAa,wBAChB,OAAK,SACL;AAEF,iBAAK;AACL,iBAAK;AACL,iBAAK;AACL,iBAAK;;;OApGb;MAAA,KAAA;MAAA,OA6GE,gCAAuB,QAAQ;AAAA,YAAA,SAAA;AAC7B,YAAM,iBACJ,KAAK,cAAc,IAAI,cAAc;AAEvC,eAAO,qBAAqB,WAAA;AAAA,iBAC1B,OAAK,eACF,qBAAqB,gBAAgB,QACrC,KAAK,WAAA;AAAA,mBAAM,OAAK,uBAAuB;;;;OApHhD;MAAA,KAAA;MAAA,OA4HE,gCAAuB,QAAQ;AAC7B,YAAM,qBAAqB,OAAO;AAElC,2BAAmB,aAAa,YAAY;AAC5C,YAAM,UAAU,KAAK;UACnB,gBAAgB;UAChB,aAAa;;AAEf,YAAM,YAAY;UAAC,SAAS;;AAC5B,iBACE,KAAK,KACL,oBACA,UAAU,aACV,SACA;;OA1IN;MAAA,KAAA;MAAA,OAkJE,yBAAgB;AACd,aAAK,UAAU,IAAI,cAAc,KAAK,SAAS;AAC/C,YAAI,KAAK,QAAQ,YAAY,UAAU;AACrC,mBAAS,cAAc,KAAK,KAAY,uBACtC,KAAK,QAAQ,aACb,cACA;;;OAxJR;MAAA,KAAA;MAAA,OAmKE,0CAAiC;AAC/B,eAAO,CAAC,CAAC,KAAK,cAAc,IAAI,cAAc;;OApKlD;MAAA,KAAA;MAAA,OA2KE,gCAAuB;AAAA,YAAA,SAAA;AACrB,aAAK,cAAc,UAAU,cAAc,UAAU,SAAC,MAAS;AAC7D,iBAAK,iBAAiB;;AAGxB,aAAK,cAAc,UACjB,cAAc,WACd,SAAC,UAAa;AACZ,iBAAK,kBAAkB;WAEzB;AAGF,aAAK,cAAc,UACjB,cAAc,UACd,SAAC,SAAY;AACX,iBAAK,iBAAiB;WAExB;AAGF,aAAK,cAAc,UAAU,cAAc,iBAAiB,SAAC,QAAW;AACtE,cAAM,YAAY,OAAK,cAAc,IACnC,cAAc;AAGhB,iBAAK,wBACH,MAAM,aAAa,YACnB,MAAM,aAAa;;;OAvM3B;MAAA,KAAA;MAAA,OAiNE,0BAAiB,MAAM;AAAA,YAAA,SAAA;AACrB,aAAK,cAAc,WAAM;AACvB,cAAI,MAAM;AACR,mBAAK,kBAAkB,aAAa,WAAW,YAAY;AAE3D,mBAAK,0BACH,OAAK,uBAAuB,aAAa,WAAW,YAAY;iBAC7D;AACL,mBAAK,kBAAkB,gBAAgB,WAAW;AAElD,mBAAK,0BACH,OAAK,uBAAuB,gBAAgB,WAAW;;;;OA5NjE;MAAA,KAAA;MAAA,OAsOE,2BAAkB,UAAU;AAAA,YAAA,SAAA;AAC1B,aAAK,cAAc,WAAM;AACvB,qBACI,OAAK,kBAAkB,aAAa,WAAW,KAAK,SACpD,OAAK,kBAAkB,gBAAgB,WAAW;;;OA1O5D;MAAA,KAAA;MAAA,OAoPE,0BAAiB,SAAS;AAAA,YAAA,SAAA;AACxB,aAAK,cAAc,WAAM;AAAA,cAAA;AACvB,cAAO,iBAAkB,WAAlB;AACP,iBAAK,kBAAkB,gBAAgB;AAEvC,UAAA,yBAAA,OAAK,2BAAL,OAAA,SAAA,sBAA6B,gBAAgB;AAE7C,cAAI,YAAY,OAAO,gBAAgB;AAAA,gBAAA;AACrC,mBAAK,kBAAkB,aAAa,gBAAgB;AACpD,YAAA,0BAAA,OAAK,2BAAL,OAAA,SAAA,uBAA6B,aAAa,gBAAgB;;;;OA7PlE;MAAA,KAAA;MAAA,OAsQE,4BAAmB;AACjB,YAAM,OAAO,KAAK,KAAK,cAAc;AACrC,aAAK,YAAY;AAEjB,aAAK,oBAAoB,KAAK,KAAK,cAAc;AACjD,aAAK,kBAAkB,YAAY;AAEnC,YAAM,QAAQ,KAAK,KAAK,cAAc;AACtC,cAAM,YAAY;AAElB,aAAK,kBAAkB,YAAY;AACnC,kCAA0B,MAAM,KAAK,mBAAmB;AACxD,aAAK,UAAU,QAAQ,YAAY;;OAlRvC;MAAA,KAAA;MAAA,OAwRE,mCAA0B;AACxB,YAAM,uBAAuB,oBAC3B,KAAK,KACL,mBAAmB;AAGrB,YAAM,mBAAmB,SAAS,aAAa,KAAK,SAAS,SAC3D;AAEF,YACE,wBACA,yBAAyB,mBAAmB,SAC5C;AACA,eAAK,mBAAmB,iBAAiB;mBAChC,kBAAkB;AAC3B,eAAK,mBAAmB;;;OAvS9B;MAAA,KAAA;MAAA,OA+SE,4BAAmB,MAAM;AAAA,YAAA,SAAA;AACvB,YAAM,cAAc,KAAK,KAAK,cAAc;AAC5C,oBAAY,YAAY;AACxB,iBAAS,aAAa,qBAAqB;AAE3C,aAAK,yBAAyB,KAAK,KAAK,cAAc;AACtD,aAAK,uBAAuB,YAC1B;AAEF,YAAM,OAAO,KAAK,KAAK,cAAc;AACrC,aAAK,YAAY;AAEjB,aAAK,uBAAuB,YAAY;AACxC,kCAA0B,MAAM,KAAK,wBAAwB;AAC7D,aAAK,UAAU,QAAQ,YAAY;AAGnC,aAAK,cAAc,UAAU,cAAc,cAAc,SAAC,UAAa;AACrE,iBAAK,oBAAoB;;;OAjU/B;MAAA,KAAA;MAAA,OAyUE,6BAAoB,UAAU;AAC5B,YAAM,YAAY,KAAK,cAAc,IAAI,cAAc;AACvD,YAAI,CAAC,WAAW;AACd;;AAGF,wBAAgB,KAAK,wBAAwB,WAAW,QAAQ;;OA/UpE;MAAA,KAAA;MAAA,OAsVE,4BAAmB;AACjB,YAAM,QAAQ,KAAK,oBAAoB;AACvC,aAAK,uBAAuB,UAAU,MAAM;;OAxVhD;MAAA,KAAA;MAAA,OA+VE,gCAAuB,QAAQ;AAC7B,YACE,KAAK,QAAQ,aAAa,kBAC1B,KAAK,QAAQ,YAAY,QACzB;AACA,eAAK,uBAAuB;;;OApWlC;MAAA,KAAA;MAAA,OA+WE,iCAAwB,WAAW,QAAQ;AACzC,YAAI,KAAK,eAAe,yBAAyB,GAAG;AAIlD;;AAGF,aAAK,oBAAoB,aAAa;AAEtC,YAAI,KAAK,gBAAgB;AACvB,eAAK;;AAGP,YAAI,KAAK,eAAe,MAAM,SAAS;AACrC,eAAK,uBAAuB,WAAW;;;OA9X7C;MAAA,KAAA;MAAA,OAqYE,oCAA2B;AAAA,YAAA;AAEzB,YAAM,WAAW,KAAK,eAAe;AACrC,YAAM,UAAU,KAAK,eAAe,aAAa;AACjD,aAAK;AAEL,aAAK,gBAAgB,gBAAgB,WAArC,yBAAA,IAAA,sBACG,cAAc,aAAY,KAAK,OADlC,sBAEG,cAAc,YAAW,SAF5B;;OA3YJ;MAAA,KAAA;MAAA,OAsZE,gCAAuB,WAAW,UAAU;AAAA,YAAA;AAC1C,YAAM,SAAS,KAAK,eAAe,cAAc;AACjD,YAAM,UAAU,KAAK,eAAe,aAAa;AAEjD,YAAI,CAAC,OAAO,iBAAiB;AAC3B,eAAK,oBAAoB,YAAY;;AAIvC,aAAK,qBAAqB;AAG1B,aAAK,gBAAgB,gBAAgB,WAArC,0BAAA,IAAA,uBACG,cAAc,aAAY,KAAK,OADlC,uBAEG,cAAc,YAAW,SAF5B;;OAlaJ;MAAA,KAAA;MAAA,OA6aE,8BAAqB,QAAQ;AAAA,YAAA,UAAA;AAC3B,aAAK,cAAc,WAAM;AACvB,iBAAO;AACP,kBAAK,iBAAiB;;;OAhb5B;MAAA,KAAA;MAAA,OAubE,mCAA0B;AAAA,YAAA,UAAA;AACxB,aAAK,cAAc,WAAM;AACvB,cAAI,QAAK,gBAAgB;AACvB,oBAAK,eAAe;AACpB,oBAAK,iBAAiB;;;;OA3b9B;MAAA,KAAA;MAAA,OAscE,yBAAgB,WAAW,MAAM;AAAA,YAAA,UAAA;AAC/B,aAAK,WAAW,KAAK,SAAC,WAAD;AAAA,iBACnB,UAAU,UAAU,QAAK,SAAS,KAAK,YAAY,WAAW;;;;AAxcpE,WAAA;IAAqC,IAAI;AA6czC,MAAI,UAAU,sBAAsB,OAAO,SAAC,MAAQ;AAClD,SAAI,gBAAgB,sBAAsB,iBAAiB,OAAM;AACjE,SAAI,sBAAsB,oBAAoB;;",
  "names": []
}
