{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../src/core/types/array.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/config.js", "../../src/log.js", "../../src/core/window/index.js", "../../src/service.js", "../../src/core/minified-mode.js", "../../src/core/assert/dev.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/css-selectors.js", "../../src/core/dom/query.js", "../../src/dom.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../src/core/types/object/json.js", "../../extensions/amp-story/1.0/amp-story-store-service.js", "../../extensions/amp-story/1.0/variable-service.js", "../../extensions/amp-story/1.0/story-analytics.js", "../../build/amp-story-interactive-0.1.css.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../src/core/types/string/bytes.js", "../../src/core/types/string/base64.js", "../../src/localized-strings.js", "../../src/static-template.js", "../../extensions/amp-story-interactive/0.1/interactive-disclaimer.js", "../../third_party/webcomponentsjs/ShadowCSS.js", "../../src/core/dom/web-components.js", "../../src/style.js", "../../src/style-installer.js", "../../src/shadow-embed.js", "../../extensions/amp-story/1.0/utils.js", "../../extensions/amp-story-interactive/0.1/utils.js", "../../extensions/amp-story-interactive/0.1/interactive-confetti.js", "../../src/experiments/index.js", "../../extensions/amp-story-interactive/0.1/amp-story-interactive-abstract.js", "../../build/amp-story-interactive-binary-poll-0.1.css.js", "../../extensions/amp-story-interactive/0.1/amp-story-interactive-binary-poll.js", "../../build/amp-story-interactive-poll-0.1.css.js", "../../extensions/amp-story-interactive/0.1/amp-story-interactive-poll.js", "../../build/amp-story-interactive-quiz-0.1.css.js", "../../node_modules/obj-str/dist/obj-str.mjs", "../../extensions/amp-story-interactive/0.1/amp-story-interactive-quiz.js", "../../build/amp-story-interactive-results-0.1.css.js", "../../extensions/amp-story-interactive/0.1/amp-story-interactive-results.js", "../../extensions/amp-story-interactive/0.1/amp-story-interactive.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Magic constant that is replaced by babel.\n// IS_MINIFIED is always replaced with true when closure compiler is used\nconst IS_MINIFIED = false;\n\n/**\n * Returns true whenever closure compiler is used.\n * @return {boolean}\n */\nexport function isMinifiedMode() {\n  return IS_MINIFIED;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {isMinifiedMode} from '../minified-mode';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (isMinifiedMode()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../../../third_party/css-escape/css-escape';\nimport {devAssert} from '../assert';\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n * @suppress {uselessCode}\n */\nexport function escapeCssSelectorIdent(ident) {\n  // This gets rewritten to true/false during compilation. It will trigger an\n  // JSC_UNREACHABLE_CODE warning, but that's intentional for DCE.\n  if (IS_ESM) {\n    return CSS.escape(ident);\n  }\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isArray} from '../array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {EmbedMode, parseEmbedMode} from './embed-mode';\nimport {Observable} from '../../../src/core/data-structures/observable';\nimport {Services} from '../../../src/services';\nimport {deepEquals} from '../../../src/core/types/object/json';\nimport {dev} from '../../../src/log';\nimport {hasOwn} from '../../../src/core/types/object';\nimport {registerServiceBuilder} from '../../../src/service';\n\n/** @type {string} */\nconst TAG = 'amp-story';\n\n/**\n * Util function to retrieve the store service. Ensures we can retrieve the\n * service synchronously from the amp-story codebase without running into race\n * conditions.\n * @param  {!Window} win\n * @return {!AmpStoryStoreService}\n */\nexport const getStoreService = (win) => {\n  let service = Services.storyStoreService(win);\n\n  if (!service) {\n    service = new AmpStoryStoreService(win);\n    registerServiceBuilder(win, 'story-store', function () {\n      return service;\n    });\n  }\n\n  return service;\n};\n\n/**\n * Different UI experiences to display the story.\n * @const @enum {number}\n */\nexport const UIType = {\n  MOBILE: 0,\n  DESKTOP_PANELS: 1, // Default desktop UI.\n  DESKTOP_FULLBLEED: 2, // Desktop UI if landscape mode is enabled.\n  VERTICAL: 3, // Vertical scrolling versions, for search engine bots indexing.\n};\n\n/**\n * States in which an embedded component could be found in.\n * @enum {number}\n */\nexport const EmbeddedComponentState = {\n  HIDDEN: 0, // Component is present in page, but hasn't been interacted with.\n  FOCUSED: 1, // Component has been clicked, a tooltip should be shown.\n  EXPANDED: 2, // Component is in expanded mode.\n};\n\n/**\n * @typedef {{\n *    element: !Element,\n *    state: !EmbeddedComponentState,\n *    clientX: number,\n *    clientY: number,\n * }}\n */\nexport let InteractiveComponentDef;\n\n/**\n * @typedef {{\n *    option: ?../../amp-story-interactive/0.1/amp-story-interactive-abstract.OptionConfigType,\n *    interactiveId: string,\n *    type: ../../amp-story-interactive/0.1/amp-story-interactive-abstract.InteractiveType\n * }}\n */\nexport let InteractiveReactData;\n\n/**\n * @typedef {{\n *    canInsertAutomaticAd: boolean,\n *    canShowAudioUi: boolean,\n *    canShowNavigationOverlayHint: boolean,\n *    canShowPaginationButtons: boolean,\n *    canShowPreviousPageHelp: boolean,\n *    canShowSharingUis: boolean,\n *    canShowSystemLayerButtons: boolean,\n *    viewerCustomControls: !Array<!Object>,\n *    accessState: boolean,\n *    adState: boolean,\n *    pageAttachmentState: boolean,\n *    affiliateLinkState: !Element,\n *    desktopState: boolean,\n *    educationState: boolean,\n *    gyroscopeEnabledState: string,\n *    hasSidebarState: boolean,\n *    infoDialogState: boolean,\n *    interactiveEmbeddedComponentState: !InteractiveComponentDef,\n *    interactiveReactState: !Map<string, !InteractiveReactData>,\n *    keyboardActiveState: boolean,\n *    mutedState: boolean,\n *    pageAudioState: boolean,\n *    pageHasElementsWithPlaybackState: boolean,\n *    panningMediaState: !Map<string, ../../amp-story-panning-media/0.1/amp-story-panning-media.panningMediaPositionDef> ,\n *    pausedState: boolean,\n *    previewState: boolean,\n *    rtlState: boolean,\n *    shareMenuState: boolean,\n *    sidebarState: boolean,\n *    storyHasAudioState: boolean,\n *    storyHasPlaybackUiState: boolean,\n *    storyHasBackgroundAudioState: boolean,\n *    supportedBrowserState: boolean,\n *    systemUiIsVisibleState: boolean,\n *    uiState: !UIType,\n *    viewportWarningState: boolean,\n *    actionsAllowlist: !Array<{tagOrTarget: string, method: string}>,\n *    consentId: ?string,\n *    currentPageId: string,\n *    currentPageIndex: number,\n *    pageIds: !Array<string>,\n *    newPageAvailableId: string,\n *    pageSize: {width: number, height: number},\n * }}\n */\nexport let State;\n\n/** @const @enum {string} */\nexport const StateProperty = {\n  // Embed options.\n  CAN_INSERT_AUTOMATIC_AD: 'canInsertAutomaticAd',\n  CAN_SHOW_AUDIO_UI: 'canShowAudioUi',\n  CAN_SHOW_NAVIGATION_OVERLAY_HINT: 'canShowNavigationOverlayHint',\n  CAN_SHOW_PAGINATION_BUTTONS: 'canShowPaginationButtons',\n  CAN_SHOW_PREVIOUS_PAGE_HELP: 'canShowPreviousPageHelp',\n  CAN_SHOW_SHARING_UIS: 'canShowSharingUis',\n  CAN_SHOW_SYSTEM_LAYER_BUTTONS: 'canShowSystemLayerButtons',\n  VIEWER_CUSTOM_CONTROLS: 'viewerCustomControls',\n\n  // App States.\n  ACCESS_STATE: 'accessState', // amp-access paywall.\n  AD_STATE: 'adState',\n  PAGE_ATTACHMENT_STATE: 'pageAttachmentState',\n  AFFILIATE_LINK_STATE: 'affiliateLinkState',\n  DESKTOP_STATE: 'desktopState',\n  EDUCATION_STATE: 'educationState',\n  GYROSCOPE_PERMISSION_STATE: 'gyroscopePermissionState',\n  HAS_SIDEBAR_STATE: 'hasSidebarState',\n  INFO_DIALOG_STATE: 'infoDialogState',\n  INTERACTIVE_COMPONENT_STATE: 'interactiveEmbeddedComponentState',\n  // State of interactive components (polls, quizzes) on the story.\n  INTERACTIVE_REACT_STATE: 'interactiveReactState',\n  KEYBOARD_ACTIVE_STATE: 'keyboardActiveState',\n  MUTED_STATE: 'mutedState',\n  PAGE_HAS_AUDIO_STATE: 'pageAudioState',\n  PAGE_HAS_ELEMENTS_WITH_PLAYBACK_STATE: 'pageHasElementsWithPlaybackState',\n  PANNING_MEDIA_STATE: 'panningMediaState',\n  PAUSED_STATE: 'pausedState',\n  // Story preview state.\n  PREVIEW_STATE: 'previewState',\n  RTL_STATE: 'rtlState',\n  SHARE_MENU_STATE: 'shareMenuState',\n  SIDEBAR_STATE: 'sidebarState',\n  SUPPORTED_BROWSER_STATE: 'supportedBrowserState',\n  // Any page has audio, or amp-story has a `background-audio` attribute.\n  STORY_HAS_AUDIO_STATE: 'storyHasAudioState',\n  // amp-story has a `background-audio` attribute.\n  STORY_HAS_BACKGROUND_AUDIO_STATE: 'storyHasBackgroundAudioState',\n  // Any page has elements with playback.\n  STORY_HAS_PLAYBACK_UI_STATE: 'storyHasPlaybackUiState',\n  SYSTEM_UI_IS_VISIBLE_STATE: 'systemUiIsVisibleState',\n  UI_STATE: 'uiState',\n  VIEWPORT_WARNING_STATE: 'viewportWarningState',\n\n  // App data.\n  ACTIONS_ALLOWLIST: 'actionsAllowlist',\n  CONSENT_ID: 'consentId',\n  CURRENT_PAGE_ID: 'currentPageId',\n  CURRENT_PAGE_INDEX: 'currentPageIndex',\n  ADVANCEMENT_MODE: 'advancementMode',\n  NAVIGATION_PATH: 'navigationPath',\n  NEW_PAGE_AVAILABLE_ID: 'newPageAvailableId',\n  PAGE_IDS: 'pageIds',\n  PAGE_SIZE: 'pageSize',\n};\n\n/** @const @enum {string} */\nexport const Action = {\n  ADD_INTERACTIVE_REACT: 'addInteractiveReact',\n  ADD_TO_ACTIONS_ALLOWLIST: 'addToActionsAllowlist',\n  CHANGE_PAGE: 'setCurrentPageId',\n  SET_CONSENT_ID: 'setConsentId',\n  SET_ADVANCEMENT_MODE: 'setAdvancementMode',\n  SET_NAVIGATION_PATH: 'setNavigationPath',\n  SET_PAGE_IDS: 'setPageIds',\n  TOGGLE_ACCESS: 'toggleAccess',\n  TOGGLE_AD: 'toggleAd',\n  TOGGLE_AFFILIATE_LINK: 'toggleAffiliateLink',\n  TOGGLE_EDUCATION: 'toggleEducation',\n  TOGGLE_HAS_SIDEBAR: 'toggleHasSidebar',\n  TOGGLE_INFO_DIALOG: 'toggleInfoDialog',\n  TOGGLE_INTERACTIVE_COMPONENT: 'toggleInteractiveComponent',\n  TOGGLE_KEYBOARD_ACTIVE_STATE: 'toggleKeyboardActiveState',\n  TOGGLE_MUTED: 'toggleMuted',\n  TOGGLE_PAGE_ATTACHMENT_STATE: 'togglePageAttachmentState',\n  TOGGLE_PAGE_HAS_AUDIO: 'togglePageHasAudio',\n  TOGGLE_PAGE_HAS_ELEMENT_WITH_PLAYBACK: 'togglePageHasElementWithPlayblack',\n  TOGGLE_PAUSED: 'togglePaused',\n  TOGGLE_RTL: 'toggleRtl',\n  TOGGLE_SHARE_MENU: 'toggleShareMenu',\n  TOGGLE_SIDEBAR: 'toggleSidebar',\n  TOGGLE_SUPPORTED_BROWSER: 'toggleSupportedBrowser',\n  TOGGLE_STORY_HAS_AUDIO: 'toggleStoryHasAudio',\n  TOGGLE_STORY_HAS_BACKGROUND_AUDIO: 'toggleStoryHasBackgroundAudio',\n  TOGGLE_STORY_HAS_PLAYBACK_UI: 'toggleStoryHasPlaybackUi',\n  TOGGLE_SYSTEM_UI_IS_VISIBLE: 'toggleSystemUiIsVisible',\n  TOGGLE_UI: 'toggleUi',\n  SET_GYROSCOPE_PERMISSION: 'setGyroscopePermission',\n  TOGGLE_VIEWPORT_WARNING: 'toggleViewportWarning',\n  ADD_NEW_PAGE_ID: 'addNewPageId',\n  SET_PAGE_SIZE: 'updatePageSize',\n  ADD_PANNING_MEDIA_STATE: 'addPanningMediaState',\n  SET_VIEWER_CUSTOM_CONTROLS: 'setCustomControls',\n};\n\n/**\n * Functions to compare a data structure from the previous to the new state and\n * detect a mutation, when a simple equality test would not work.\n * @private @const {!Object<string, !function(*, *):boolean>}\n */\nconst stateComparisonFunctions = {\n  [StateProperty.ACTIONS_ALLOWLIST]: (old, curr) => old.length !== curr.length,\n  [StateProperty.INTERACTIVE_COMPONENT_STATE]:\n    /**\n     * @param {InteractiveComponentDef} old\n     * @param {InteractiveComponentDef} curr\n     */\n    (old, curr) => old.element !== curr.element || old.state !== curr.state,\n  [StateProperty.NAVIGATION_PATH]: (old, curr) => old.length !== curr.length,\n  [StateProperty.PAGE_IDS]: (old, curr) => old.length !== curr.length,\n  [StateProperty.PAGE_SIZE]: (old, curr) =>\n    old === null ||\n    curr === null ||\n    old.width !== curr.width ||\n    old.height !== curr.height,\n  [StateProperty.PANNING_MEDIA_STATE]: (old, curr) =>\n    old === null || curr === null || !deepEquals(old, curr, 2),\n  [StateProperty.INTERACTIVE_REACT_STATE]: (old, curr) =>\n    !deepEquals(old, curr, 3),\n};\n\n/**\n * Returns the new sate.\n * @param  {!State} state Immutable state\n * @param  {!Action} action\n * @param  {*} data\n * @return {!State} new state\n */\nconst actions = (state, action, data) => {\n  switch (action) {\n    case Action.ADD_INTERACTIVE_REACT:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.INTERACTIVE_REACT_STATE]: {\n          ...state[StateProperty.INTERACTIVE_REACT_STATE],\n          [data['interactiveId']]: data,\n        },\n      });\n    case Action.ADD_NEW_PAGE_ID:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.NEW_PAGE_AVAILABLE_ID]: data,\n      });\n    case Action.ADD_PANNING_MEDIA_STATE:\n      const updatedState = {\n        ...state[StateProperty.PANNING_MEDIA_STATE],\n        ...data,\n      };\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PANNING_MEDIA_STATE]: updatedState,\n      });\n    case Action.ADD_TO_ACTIONS_ALLOWLIST:\n      const newActionsAllowlist = [].concat(\n        state[StateProperty.ACTIONS_ALLOWLIST],\n        data\n      );\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.ACTIONS_ALLOWLIST]: newActionsAllowlist,\n      });\n    // Triggers the amp-acess paywall.\n    case Action.TOGGLE_ACCESS:\n      // Don't change the PAUSED_STATE if ACCESS_STATE is not changed.\n      if (state[StateProperty.ACCESS_STATE] === data) {\n        return state;\n      }\n\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.ACCESS_STATE]: !!data,\n        [StateProperty.PAUSED_STATE]: !!data,\n      });\n    case Action.TOGGLE_PAGE_ATTACHMENT_STATE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAGE_ATTACHMENT_STATE]: !!data,\n      });\n    // Triggers the ad UI.\n    case Action.TOGGLE_AD:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.AD_STATE]: !!data,\n      });\n    // Expands or collapses the affiliate link.\n    case Action.TOGGLE_AFFILIATE_LINK:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.AFFILIATE_LINK_STATE]: data,\n      });\n    case Action.TOGGLE_EDUCATION:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.EDUCATION_STATE]: !!data,\n      });\n    case Action.TOGGLE_INTERACTIVE_COMPONENT:\n      data = /** @type {InteractiveComponentDef} */ (data);\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAUSED_STATE]:\n          data.state === EmbeddedComponentState.EXPANDED ||\n          data.state === EmbeddedComponentState.FOCUSED,\n        [StateProperty.SYSTEM_UI_IS_VISIBLE_STATE]:\n          data.state !== EmbeddedComponentState.EXPANDED ||\n          state.uiState === UIType.DESKTOP_PANELS,\n        [StateProperty.INTERACTIVE_COMPONENT_STATE]: data,\n      });\n    // Shows or hides the info dialog.\n    case Action.TOGGLE_INFO_DIALOG:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.INFO_DIALOG_STATE]: !!data,\n        [StateProperty.PAUSED_STATE]: !!data,\n      });\n    // Shows or hides the audio controls.\n    case Action.TOGGLE_STORY_HAS_AUDIO:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.STORY_HAS_AUDIO_STATE]: !!data,\n      });\n    case Action.TOGGLE_STORY_HAS_BACKGROUND_AUDIO:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.STORY_HAS_BACKGROUND_AUDIO_STATE]: !!data,\n      });\n    // Shows or hides the play/pause controls.\n    case Action.TOGGLE_STORY_HAS_PLAYBACK_UI:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.STORY_HAS_PLAYBACK_UI_STATE]: !!data,\n      });\n    // Mutes or unmutes the story media.\n    case Action.TOGGLE_MUTED:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.MUTED_STATE]: !!data,\n      });\n    case Action.TOGGLE_PAGE_HAS_AUDIO:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAGE_HAS_AUDIO_STATE]: !!data,\n      });\n    case Action.TOGGLE_PAGE_HAS_ELEMENT_WITH_PLAYBACK:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAGE_HAS_ELEMENTS_WITH_PLAYBACK_STATE]: !!data,\n      });\n    case Action.TOGGLE_PAUSED:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAUSED_STATE]: !!data,\n      });\n    case Action.TOGGLE_RTL:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.RTL_STATE]: !!data,\n      });\n    case Action.TOGGLE_KEYBOARD_ACTIVE_STATE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.KEYBOARD_ACTIVE_STATE]: !!data,\n      });\n    case Action.TOGGLE_SIDEBAR:\n      // Don't change the PAUSED_STATE if SIDEBAR_STATE is not changed.\n      if (state[StateProperty.SIDEBAR_STATE] === data) {\n        return state;\n      }\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAUSED_STATE]: !!data,\n        [StateProperty.SIDEBAR_STATE]: !!data,\n      });\n    case Action.TOGGLE_HAS_SIDEBAR:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.HAS_SIDEBAR_STATE]: !!data,\n      });\n    case Action.TOGGLE_SUPPORTED_BROWSER:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.SUPPORTED_BROWSER_STATE]: !!data,\n      });\n    case Action.TOGGLE_SHARE_MENU:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAUSED_STATE]: !!data,\n        [StateProperty.SHARE_MENU_STATE]: !!data,\n      });\n    case Action.TOGGLE_SYSTEM_UI_IS_VISIBLE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.SYSTEM_UI_IS_VISIBLE_STATE]: !!data,\n      });\n    case Action.TOGGLE_UI:\n      if (\n        state[StateProperty.UI_STATE] === UIType.VERTICAL &&\n        data !== UIType.VERTICAL\n      ) {\n        dev().error(TAG, 'Cannot switch away from UIType.VERTICAL');\n        return state;\n      }\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.DESKTOP_STATE]: data === UIType.DESKTOP_PANELS,\n        [StateProperty.UI_STATE]: data,\n      });\n    case Action.SET_GYROSCOPE_PERMISSION:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.GYROSCOPE_PERMISSION_STATE]: data,\n      });\n    case Action.TOGGLE_VIEWPORT_WARNING:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.VIEWPORT_WARNING_STATE]: !!data,\n      });\n    case Action.SET_CONSENT_ID:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.CONSENT_ID]: data,\n      });\n    case Action.CHANGE_PAGE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.CURRENT_PAGE_ID]: data.id,\n        [StateProperty.CURRENT_PAGE_INDEX]: data.index,\n      });\n    case Action.SET_ADVANCEMENT_MODE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.ADVANCEMENT_MODE]: data,\n      });\n    case Action.SET_NAVIGATION_PATH:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.NAVIGATION_PATH]: data,\n      });\n    case Action.SET_PAGE_IDS:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAGE_IDS]: data,\n      });\n    case Action.SET_PAGE_SIZE:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.PAGE_SIZE]: data,\n      });\n    case Action.SET_VIEWER_CUSTOM_CONTROLS:\n      return /** @type {!State} */ ({\n        ...state,\n        [StateProperty.VIEWER_CUSTOM_CONTROLS]: data,\n      });\n    default:\n      dev().error(TAG, 'Unknown action %s.', action);\n      return state;\n  }\n};\n\n/**\n * Store service.\n */\nexport class AmpStoryStoreService {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @private @const {!Window} */\n    this.win_ = win;\n\n    /** @private {!Object<string, !Observable>} */\n    this.listeners_ = {};\n\n    /** @private {!State} */\n    this.state_ = /** @type {!State} */ ({\n      ...this.getDefaultState_(),\n      ...this.getEmbedOverrides_(),\n    });\n  }\n\n  /**\n   * Retrieves a state property.\n   * @param  {string} key Property to retrieve from the state.\n   * @return {*}\n   */\n  get(key) {\n    if (!hasOwn(this.state_, key)) {\n      dev().error(TAG, 'Unknown state %s.', key);\n      return;\n    }\n    return this.state_[key];\n  }\n\n  /**\n   * Subscribes to a state property mutations.\n   * @param  {string} key\n   * @param  {!Function} listener\n   * @param  {boolean=} callToInitialize Whether the listener should be\n   *                                     triggered with current value.\n   */\n  subscribe(key, listener, callToInitialize = false) {\n    if (!hasOwn(this.state_, key)) {\n      dev().error(TAG, \"Can't subscribe to unknown state %s.\", key);\n      return;\n    }\n    if (!this.listeners_[key]) {\n      this.listeners_[key] = new Observable();\n    }\n    this.listeners_[key].add(listener);\n\n    if (callToInitialize) {\n      listener(this.get(key));\n    }\n  }\n\n  /**\n   * Dispatches an action and triggers the listeners for the updated state\n   * properties.\n   * @param  {!Action} action\n   * @param  {*} data\n   */\n  dispatch(action, data) {\n    const oldState = {...this.state_};\n    this.state_ = actions(this.state_, action, data);\n\n    let comparisonFn;\n    Object.keys(this.listeners_).forEach((key) => {\n      comparisonFn = stateComparisonFunctions[key];\n      if (\n        comparisonFn\n          ? comparisonFn(oldState[key], this.state_[key])\n          : oldState[key] !== this.state_[key]\n      ) {\n        this.listeners_[key].fire(this.state_[key]);\n      }\n    });\n  }\n\n  /**\n   * Retrieves the default state, that could be overriden by an embed mode.\n   * @return {!State}\n   * @private\n   */\n  getDefaultState_() {\n    // Compiler won't resolve the object keys and trigger an error for missing\n    // properties, so we have to force the type.\n    return /** @type {!State} */ ({\n      [StateProperty.CAN_INSERT_AUTOMATIC_AD]: true,\n      [StateProperty.CAN_SHOW_AUDIO_UI]: true,\n      [StateProperty.CAN_SHOW_NAVIGATION_OVERLAY_HINT]: true,\n      [StateProperty.CAN_SHOW_PREVIOUS_PAGE_HELP]: true,\n      [StateProperty.CAN_SHOW_PAGINATION_BUTTONS]: true,\n      [StateProperty.CAN_SHOW_SHARING_UIS]: true,\n      [StateProperty.CAN_SHOW_SYSTEM_LAYER_BUTTONS]: true,\n      [StateProperty.VIEWER_CUSTOM_CONTROLS]: [],\n      [StateProperty.ACCESS_STATE]: false,\n      [StateProperty.AD_STATE]: false,\n      [StateProperty.AFFILIATE_LINK_STATE]: null,\n      [StateProperty.DESKTOP_STATE]: false,\n      [StateProperty.EDUCATION_STATE]: false,\n      [StateProperty.GYROSCOPE_PERMISSION_STATE]: '',\n      [StateProperty.HAS_SIDEBAR_STATE]: false,\n      [StateProperty.INFO_DIALOG_STATE]: false,\n      [StateProperty.INTERACTIVE_COMPONENT_STATE]: {\n        state: EmbeddedComponentState.HIDDEN,\n      },\n      [StateProperty.INTERACTIVE_REACT_STATE]: {},\n      [StateProperty.KEYBOARD_ACTIVE_STATE]: false,\n      [StateProperty.MUTED_STATE]: true,\n      [StateProperty.PAGE_ATTACHMENT_STATE]: false,\n      [StateProperty.PAGE_HAS_AUDIO_STATE]: false,\n      [StateProperty.PAGE_HAS_ELEMENTS_WITH_PLAYBACK_STATE]: false,\n      [StateProperty.PANNING_MEDIA_STATE]: {},\n      [StateProperty.PAUSED_STATE]: false,\n      [StateProperty.RTL_STATE]: false,\n      [StateProperty.SHARE_MENU_STATE]: false,\n      [StateProperty.SIDEBAR_STATE]: false,\n      [StateProperty.SUPPORTED_BROWSER_STATE]: true,\n      [StateProperty.STORY_HAS_AUDIO_STATE]: false,\n      [StateProperty.STORY_HAS_BACKGROUND_AUDIO_STATE]: false,\n      [StateProperty.STORY_HAS_PLAYBACK_UI_STATE]: false,\n      [StateProperty.SYSTEM_UI_IS_VISIBLE_STATE]: true,\n      [StateProperty.UI_STATE]: UIType.MOBILE,\n      [StateProperty.VIEWPORT_WARNING_STATE]: false,\n      // amp-story only allows actions on a case-by-case basis to preserve UX\n      // behaviors. By default, no actions are allowed.\n      [StateProperty.ACTIONS_ALLOWLIST]: [],\n      [StateProperty.CONSENT_ID]: null,\n      [StateProperty.CURRENT_PAGE_ID]: '',\n      [StateProperty.CURRENT_PAGE_INDEX]: 0,\n      [StateProperty.ADVANCEMENT_MODE]: '',\n      [StateProperty.NEW_PAGE_AVAILABLE_ID]: '',\n      [StateProperty.NAVIGATION_PATH]: [],\n      [StateProperty.PAGE_IDS]: [],\n      [StateProperty.PAGE_SIZE]: null,\n      [StateProperty.PREVIEW_STATE]: false,\n    });\n  }\n\n  // @TODO(gmajoulet): These should get their own file if they start growing.\n  /**\n   * Retrieves the embed mode config, that will override the default state.\n   * @return {!Object<StateProperty, *>} Partial state\n   * @protected\n   */\n  getEmbedOverrides_() {\n    const embedMode = parseEmbedMode(this.win_.location.hash);\n    switch (embedMode) {\n      case EmbedMode.NAME_TBD:\n        return {\n          [StateProperty.CAN_INSERT_AUTOMATIC_AD]: false,\n          [StateProperty.CAN_SHOW_NAVIGATION_OVERLAY_HINT]: false,\n          [StateProperty.CAN_SHOW_PAGINATION_BUTTONS]: false,\n          [StateProperty.CAN_SHOW_PREVIOUS_PAGE_HELP]: true,\n          [StateProperty.CAN_SHOW_SYSTEM_LAYER_BUTTONS]: false,\n          [StateProperty.MUTED_STATE]: false,\n        };\n      case EmbedMode.NO_SHARING:\n        return {\n          [StateProperty.CAN_SHOW_SHARING_UIS]: false,\n        };\n      case EmbedMode.PREVIEW:\n        return {\n          [StateProperty.PREVIEW_STATE]: true,\n          [StateProperty.CAN_INSERT_AUTOMATIC_AD]: false,\n          [StateProperty.CAN_SHOW_NAVIGATION_OVERLAY_HINT]: false,\n          [StateProperty.CAN_SHOW_PAGINATION_BUTTONS]: false,\n          [StateProperty.CAN_SHOW_PREVIOUS_PAGE_HELP]: false,\n          [StateProperty.CAN_SHOW_SYSTEM_LAYER_BUTTONS]: false,\n        };\n      case EmbedMode.NO_SHARING_NOR_AUDIO_UI:\n        return {\n          [StateProperty.CAN_SHOW_AUDIO_UI]: false,\n          [StateProperty.CAN_SHOW_SHARING_UIS]: false,\n        };\n      default:\n        return {};\n    }\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Services} from '../../../src/services';\nimport {StateProperty, getStoreService} from './amp-story-store-service';\nimport {dict} from '../../../src/core/types/object';\nimport {registerServiceBuilder} from '../../../src/service';\n\n/**\n * @typedef {!JsonObject}\n */\nexport let StoryVariableDef;\n\n/** @enum {string} */\nexport const AnalyticsVariable = {\n  STORY_INTERACTIVE_ID: 'storyInteractiveId',\n  STORY_INTERACTIVE_RESPONSE: 'storyInteractiveResponse',\n  STORY_INTERACTIVE_TYPE: 'storyInteractiveType',\n  STORY_PAGE_ID: 'storyPageId',\n  STORY_PAGE_INDEX: 'storyPageIndex',\n  STORY_PAGE_COUNT: 'storyPageCount',\n  STORY_IS_MUTED: 'storyIsMuted',\n  STORY_PROGRESS: 'storyProgress',\n  STORY_PREVIOUS_PAGE_ID: 'storyPreviousPageId',\n  STORY_ADVANCEMENT_MODE: 'storyAdvancementMode',\n};\n\n/**\n * Util function to retrieve the variable service. Ensures we can retrieve the\n * service synchronously from the amp-story codebase without running into race\n * conditions.\n * @param {!Window} win\n * @return {!AmpStoryVariableService}\n */\nexport const getVariableService = (win) => {\n  let service = Services.storyVariableService(win);\n\n  if (!service) {\n    service = new AmpStoryVariableService(win);\n    registerServiceBuilder(win, 'story-variable', function () {\n      return service;\n    });\n  }\n\n  return service;\n};\n\n/**\n * Variable service for amp-story.\n * Used for URL replacement service. See usage in src/url-replacements-impl.\n */\nexport class AmpStoryVariableService {\n  /**\n   * @param {!Window} win\n   * @public\n   */\n  constructor(win) {\n    /** @private {!StoryVariableDef} */\n    this.variables_ = dict({\n      [AnalyticsVariable.STORY_INTERACTIVE_ID]: null,\n      [AnalyticsVariable.STORY_INTERACTIVE_RESPONSE]: null,\n      [AnalyticsVariable.STORY_INTERACTIVE_TYPE]: null,\n      [AnalyticsVariable.STORY_PAGE_INDEX]: null,\n      [AnalyticsVariable.STORY_PAGE_ID]: null,\n      [AnalyticsVariable.STORY_PAGE_COUNT]: null,\n      [AnalyticsVariable.STORY_PROGRESS]: null,\n      [AnalyticsVariable.STORY_IS_MUTED]: null,\n      [AnalyticsVariable.STORY_PREVIOUS_PAGE_ID]: null,\n      [AnalyticsVariable.STORY_ADVANCEMENT_MODE]: null,\n    });\n\n    /** @private @const {!./amp-story-store-service.AmpStoryStoreService} */\n    this.storeService_ = getStoreService(win);\n\n    this.initializeListeners_();\n  }\n\n  /** @private */\n  initializeListeners_() {\n    this.storeService_.subscribe(StateProperty.PAGE_IDS, (pageIds) => {\n      this.variables_[AnalyticsVariable.STORY_PAGE_COUNT] = pageIds.length;\n    });\n\n    this.storeService_.subscribe(\n      StateProperty.CURRENT_PAGE_ID,\n      (pageId) => {\n        if (!pageId) {\n          return;\n        }\n\n        this.variables_[AnalyticsVariable.STORY_PREVIOUS_PAGE_ID] =\n          this.variables_[AnalyticsVariable.STORY_PAGE_ID];\n\n        this.variables_[AnalyticsVariable.STORY_PAGE_ID] = pageId;\n\n        const pageIndex = /** @type {number} */ (\n          this.storeService_.get(StateProperty.CURRENT_PAGE_INDEX)\n        );\n        this.variables_[AnalyticsVariable.STORY_PAGE_INDEX] = pageIndex;\n\n        const numberOfPages = this.storeService_.get(\n          StateProperty.PAGE_IDS\n        ).length;\n        if (numberOfPages > 0) {\n          if (numberOfPages === 1) {\n            this.variables_[AnalyticsVariable.STORY_PROGRESS] = 0;\n          } else {\n            this.variables_[AnalyticsVariable.STORY_PROGRESS] =\n              pageIndex / (numberOfPages - 1);\n          }\n        }\n      },\n      true /* callToInitialize */\n    );\n  }\n\n  /**\n   * Updates a variable with a new value\n   * @param {string} name\n   * @param {*} update\n   */\n  onVariableUpdate(name, update) {\n    this.variables_[name] = update;\n  }\n\n  /**\n   * @return {!StoryVariableDef}\n   */\n  get() {\n    // TODO(newmius): You should probably Object.freeze this in development.\n    return this.variables_;\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Services} from '../../../src/services';\nimport {StateProperty, getStoreService} from './amp-story-store-service';\nimport {getDataParamsFromAttributes} from '../../../src/dom';\nimport {getVariableService} from './variable-service';\nimport {map} from '../../../src/core/types/object';\nimport {registerServiceBuilder} from '../../../src/service';\nimport {triggerAnalyticsEvent} from '../../../src/analytics';\n\n/** @const {string} */\nexport const ANALYTICS_TAG_NAME = '__AMP_ANALYTICS_TAG_NAME__';\n\n/** @enum {string} */\nexport const StoryAnalyticsEvent = {\n  CLICK_THROUGH: 'story-click-through',\n  FOCUS: 'story-focus',\n  LAST_PAGE_VISIBLE: 'story-last-page-visible',\n  OPEN: 'story-open',\n  CLOSE: 'story-close',\n  PAGE_ATTACHMENT_ENTER: 'story-page-attachment-enter',\n  PAGE_ATTACHMENT_EXIT: 'story-page-attachment-exit',\n  PAGE_VISIBLE: 'story-page-visible',\n  INTERACTIVE: 'story-interactive',\n  STORY_CONTENT_LOADED: 'story-content-loaded',\n  STORY_MUTED: 'story-audio-muted',\n  STORY_UNMUTED: 'story-audio-unmuted',\n};\n\n/**\n * @enum {string}\n * Note: auto advance advancements should always be prefixed with \"autoAdvance\".\n */\nexport const AdvancementMode = {\n  GO_TO_PAGE: 'goToPageAction',\n  AUTO_ADVANCE_TIME: 'autoAdvanceTime',\n  AUTO_ADVANCE_MEDIA: 'autoAdvanceMedia',\n  MANUAL_ADVANCE: 'manualAdvance',\n  ADVANCE_TO_ADS: 'manualAdvanceFromAd',\n  VIEWER_SELECT_PAGE: 'viewerSelectPage',\n};\n\n/** @typedef {!Object<string, !PageEventCountDef>} */\nlet EventsPerPageDef;\n\n/** @typedef {!Object<string, number>} */\nlet PageEventCountDef;\n\n/**\n * Util function to retrieve the analytics service. Ensures we can retrieve the\n * service synchronously from the amp-story codebase without running into race\n * conditions.\n * @param {!Window} win\n * @param {!Element} el\n * @return {!StoryAnalyticsService}\n */\nexport const getAnalyticsService = (win, el) => {\n  let service = Services.storyAnalyticsService(win);\n\n  if (!service) {\n    service = new StoryAnalyticsService(win, el);\n    registerServiceBuilder(win, 'story-analytics', function () {\n      return service;\n    });\n  }\n\n  return service;\n};\n\n/**\n * Intermediate handler for amp-story specific analytics.\n */\nexport class StoryAnalyticsService {\n  /**\n   * @param {!Window} win\n   * @param {!Element} element\n   */\n  constructor(win, element) {\n    /** @protected @const {!Window} */\n    this.win_ = win;\n\n    /** @private @const {!Element} */\n    this.element_ = element;\n\n    /** @const @private {!./variable-service.AmpStoryVariableService} */\n    this.variableService_ = getVariableService(win);\n\n    /** @private {EventsPerPageDef} */\n    this.pageEventsMap_ = map();\n\n    /** @private @const {!./amp-story-store-service.AmpStoryStoreService} */\n    this.storeService_ = getStoreService(win);\n\n    this.initializeListeners_();\n  }\n\n  /** @private */\n  initializeListeners_() {\n    this.storeService_.subscribe(\n      StateProperty.CURRENT_PAGE_ID,\n      (pageId) => {\n        const isAd = this.storeService_.get(StateProperty.AD_STATE);\n        if (!pageId || isAd) {\n          return;\n        }\n\n        this.triggerEvent(StoryAnalyticsEvent.PAGE_VISIBLE);\n\n        const pageIds = this.storeService_.get(StateProperty.PAGE_IDS);\n        const pageIndex = this.storeService_.get(\n          StateProperty.CURRENT_PAGE_INDEX\n        );\n        if (pageIndex === pageIds.length - 1) {\n          this.triggerEvent(StoryAnalyticsEvent.LAST_PAGE_VISIBLE);\n        }\n      },\n      true /* callToInitialize */\n    );\n  }\n\n  /**\n   * @param {!StoryAnalyticsEvent} eventType\n   * @param {Element=} element\n   */\n  triggerEvent(eventType, element = null) {\n    this.incrementPageEventCount_(eventType);\n\n    triggerAnalyticsEvent(\n      this.element_,\n      eventType,\n      this.updateDetails(eventType, element)\n    );\n  }\n\n  /**\n   * Updates event details.\n   * @param {!StoryAnalyticsEvent} eventType\n   * @param {Element=} element\n   * @visibleForTesting\n   * @return {!JsonObject}}\n   */\n  updateDetails(eventType, element = null) {\n    const details = {};\n    const vars = this.variableService_.get();\n    const pageId = vars['storyPageId'];\n\n    if (this.pageEventsMap_[pageId][eventType] > 1) {\n      details.repeated = true;\n    }\n\n    if (element) {\n      details.tagName =\n        element[ANALYTICS_TAG_NAME] || element.tagName.toLowerCase();\n      Object.assign(\n        vars,\n        getDataParamsFromAttributes(\n          element,\n          /* computeParamNameFunc */ undefined,\n          /^vars(.+)/\n        )\n      );\n    }\n\n    return /** @type {!JsonObject} */ ({eventDetails: details, ...vars});\n  }\n\n  /**\n   * Keeps count of number of events emitted by page for an event type.\n   * @param {!StoryAnalyticsEvent} eventType\n   * @private\n   */\n  incrementPageEventCount_(eventType) {\n    const vars = this.variableService_.get();\n    const pageId = vars['storyPageId'];\n\n    this.pageEventsMap_[pageId] = this.pageEventsMap_[pageId] || {};\n    this.pageEventsMap_[pageId][eventType] =\n      this.pageEventsMap_[pageId][eventType] || 0;\n    this.pageEventsMap_[pageId][eventType]++;\n  }\n}\n", "export const CSS = \".i-amphtml-story-interactive-container{font-family:Poppins,sans-serif!important;background:var(--interactive-prompt-background)!important;border-radius:2em!important}.i-amphtml-story-interactive-prompt-container{display:-ms-flexbox!important;display:flex!important;justify-items:center!important;padding:1.25em!important;color:var(--interactive-prompt-text-color)!important}.i-amphtml-story-interactive-prompt{margin:0px!important;overflow:hidden!important;text-overflow:ellipsis!important;display:-webkit-box!important;-webkit-line-clamp:var(--i-amphtml-interactive-prompt-clamp)!important;-webkit-box-orient:vertical!important;visibility:visible!important;font-size:var(--i-amphtml-interactive-prompt-text-size)!important;line-height:var(--i-amphtml-interactive-prompt-line-height)!important;font-weight:700!important;text-align:var(--interactive-prompt-alignment)!important;width:100%!important}@keyframes i-amphtml-interactive-animation-flash-background{0%{opacity:.4}to{opacity:.2}}@keyframes i-amphtml-interactive-animation-flash-background-color{0%{background-color:var(--i-amphtml-interactive-theme-shading-flash)}to{background-color:var(--i-amphtml-interactive-theme-shading-base)}}.i-amphtml-story-interactive-container:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option{cursor:pointer!important;pointer-events:all}.i-amphtml-story-interactive-confetti-wrapper{position:absolute!important;top:50%!important;left:50%!important;display:-ms-flexbox!important;display:flex!important;-ms-flex-align:center!important;align-items:center!important;-ms-flex-pack:center;justify-content:center;z-index:1!important;transform:scale(0)!important;transition:transform .5s var(--i-amphtml-interactive-ease-out-curve),opacity .5s var(--i-amphtml-interactive-ease-out-curve)!important}.i-amphtml-story-interactive-confetti-wrapper.i-amphtml-story-interactive-confetti-wrapper-animate-in{transform:scale(1)!important}.i-amphtml-story-interactive-confetti-wrapper.i-amphtml-story-interactive-confetti-wrapper-animate-out{transform:scale(1.2)!important;opacity:0!important}.i-amphtml-story-interactive-confetti{position:absolute!important}.i-amphtml-story-interactive-active{--i-amphtml-interactive-landing-animation-delay:.5s;--i-amphtml-interactive-landing-animation-offset:.9;--i-amphtml-interactive-landing-animation-delay-offset-el1:var(--i-amphtml-interactive-landing-animation-delay);--i-amphtml-interactive-landing-animation-delay-offset-el2:calc(var(--i-amphtml-interactive-landing-animation-delay) + var(--i-amphtml-interactive-animation-time)*var(--i-amphtml-interactive-landing-animation-offset)*1);--i-amphtml-interactive-landing-animation-delay-offset-el3:calc(var(--i-amphtml-interactive-landing-animation-delay) + var(--i-amphtml-interactive-animation-time)*var(--i-amphtml-interactive-landing-animation-offset)*2);--i-amphtml-interactive-landing-animation-delay-offset-el4:calc(var(--i-amphtml-interactive-landing-animation-delay) + var(--i-amphtml-interactive-animation-time)*var(--i-amphtml-interactive-landing-animation-offset)*3)}@keyframes i-amphtml-interactive-animation-landing-animation-flash-background{30%{opacity:.4}}.i-amphtml-story-interactive-disclaimer{position:absolute!important;color:#000!important;bottom:calc(100% - 1.75em)!important;right:0!important;z-index:1!important;--i-amphtml-story-interactive-disclaimer-black-transparent:#00000040!important;--i-amphtml-story-interactive-disclaimer-blue:#005af0!important;pointer-events:all!important}.i-amphtml-story-interactive-disclaimer-alert{width:1.75em!important;height:1.75em!important;position:absolute!important;right:0!important;bottom:0!important;padding:.25em!important;font-size:inherit!important;transform-origin:bottom right!important;background-color:#fff!important;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='12'%3E%3Cpath d='M2 0a1.357 1.357 0 0 0-.97.408 1.34 1.34 0 0 0-.38.977l.271 5.497c.009.278.127.542.328.736a1.083 1.083 0 0 0 1.502 0 1.07 1.07 0 0 0 .328-.736l.27-5.497a1.334 1.334 0 0 0-.38-.977A1.35 1.35 0 0 0 2 0zM2 9.3A1.35 1.35 0 1 0 2 12a1.35 1.35 0 0 0 0-2.7z'/%3E%3C/svg%3E\\\")!important;background-repeat:no-repeat!important;background-position:50%!important;background-size:0.25em!important;border:.25em solid var(--interactive-accent-color)!important;border-radius:50%!important;box-shadow:0 .2em .2em 0 var(--i-amphtml-story-interactive-disclaimer-black-transparent)!important;box-sizing:border-box!important;cursor:pointer!important}.i-amphtml-story-interactive-disclaimer[active] .i-amphtml-story-interactive-disclaimer-alert{display:none!important}.i-amphtml-story-interactive-disclaimer-dialog{overflow:hidden!important;padding:1em!important;text-align:initial!important;box-sizing:border-box!important;font-size:1em!important;background:#fff;border-radius:1em;box-shadow:0px .2em .2em 0px var(--i-amphtml-story-interactive-disclaimer-black-transparent)!important}.i-amphtml-story-interactive-disclaimer:not([active]) .i-amphtml-story-interactive-disclaimer-dialog{display:none!important}.i-amphtml-story-interactive-disclaimer-url{color:#5f6368!important;padding-bottom:0.2em!important}.i-amphtml-story-interactive-disclaimer-link{color:var(--i-amphtml-story-interactive-disclaimer-blue)!important;font-weight:700!important;text-decoration:none!important}.i-amphtml-story-interactive-disclaimer-close{position:absolute!important;bottom:0!important;right:0!important;cursor:pointer!important;background:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%239AA0A6'%3E%3Crect x='.788' y='1.833' width='1.479' height='13.264' rx='.739' transform='rotate(-45 .788 1.833)'/%3E%3Crect x='10.167' y='.788' width='1.479' height='13.264' rx='.739' transform='rotate(45 10.167 .788)'/%3E%3C/svg%3E\\\")!important;width:3em!important;height:3em!important;background-size:1em!important;background-repeat:no-repeat!important;background-position:50%!important;border:none!important;font-size:inherit!important}\\n/*# sourceURL=/extensions/amp-story-interactive/0.1/amp-story-interactive.css*/\";\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './core/data-structures/lru-cache';\nimport {dict, hasOwn} from './core/types/object';\nimport {endsWith} from './core/types/string';\nimport {getMode} from './mode';\nimport {isArray} from './core/types';\nimport {parseQueryString} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {?} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../../assert';\n\n/**\n * Interpret a byte array as a UTF-8 string.\n * @param {!BufferSource} bytes\n * @return {string}\n */\nexport function utf8Decode(bytes) {\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder('utf-8').decode(bytes);\n  }\n  const asciiString = bytesToString(new Uint8Array(bytes.buffer || bytes));\n  return decodeURIComponent(escape(asciiString));\n}\n\n/**\n * Turn a string into UTF-8 bytes.\n * @param {string} string\n * @return {!Uint8Array}\n */\nexport function utf8Encode(string) {\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder('utf-8').encode(string);\n  }\n  return stringToBytes(unescape(encodeURIComponent(string)));\n}\n\n/**\n * Converts a string which holds 8-bit code points, such as the result of atob,\n * into a Uint8Array with the corresponding bytes.\n * If you have a string of characters, you probably want to be using utf8Encode.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function stringToBytes(str) {\n  const bytes = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    const charCode = str.charCodeAt(i);\n    devAssert(charCode <= 255, 'Characters must be in range [0,255]');\n    bytes[i] = charCode;\n  }\n  return bytes;\n}\n\n/**\n * Converts a 8-bit bytes array into a string\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function bytesToString(bytes) {\n  // Intentionally avoids String.fromCharCode.apply so we don't suffer a\n  // stack overflow. #10495, https://jsperf.com/bytesToString-2\n  const array = new Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = String.fromCharCode(bytes[i]);\n  }\n  return array.join('');\n}\n\n/**\n * Converts a 4-item byte array to an unsigned integer.\n * Assumes bytes are big endian.\n * @param {!Uint8Array} bytes\n * @return {number}\n */\nexport function bytesToUInt32(bytes) {\n  if (bytes.length != 4) {\n    throw new Error('Received byte array with length != 4');\n  }\n  const val =\n    ((bytes[0] & 0xff) << 24) |\n    ((bytes[1] & 0xff) << 16) |\n    ((bytes[2] & 0xff) << 8) |\n    (bytes[3] & 0xff);\n  // Convert to unsigned.\n  return val >>> 0;\n}\n\n/**\n * Generate a random bytes array with specific length using\n * win.crypto.getRandomValues. Return null if it is not available.\n * @param {!Window} win\n * @param {number} length\n * @return {?Uint8Array}\n */\nexport function getCryptoRandomBytesArray(win, length) {\n  let {crypto} = win;\n\n  // Support IE 11\n  if (!IS_ESM) {\n    crypto = /** @type {!webCrypto.Crypto|undefined} */ (\n      crypto || win.msCrypto\n    );\n    if (!crypto || !crypto.getRandomValues) {\n      return null;\n    }\n  }\n\n  // Widely available in browsers we support:\n  // http://caniuse.com/#search=getRandomValues\n  const uint8array = new Uint8Array(length);\n  crypto.getRandomValues(uint8array);\n  return uint8array;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {bytesToString, stringToBytes, utf8Decode, utf8Encode} from './bytes';\n\n/**\n * Character mapping from base64url to base64.\n * @const {!Object<string, string>}\n */\nconst base64UrlDecodeSubs = {'-': '+', '_': '/', '.': '='};\n\n/**\n * Character mapping from base64 to base64url.\n * @const {!Object<string, string>}\n */\nconst base64UrlEncodeSubs = {'+': '-', '/': '_', '=': '.'};\n\n/**\n * Converts a string which is in base64url encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64UrlDecodeToBytes(str) {\n  const encoded = atob(str.replace(/[-_.]/g, (ch) => base64UrlDecodeSubs[ch]));\n  return stringToBytes(encoded);\n}\n\n/**\n * Converts a string which is in base64 encoding into a Uint8Array\n * containing the decoded value.\n * @param {string} str\n * @return {!Uint8Array}\n */\nexport function base64DecodeToBytes(str) {\n  return stringToBytes(atob(str));\n}\n\n/**\n * Converts a bytes array into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64UrlEncodeFromBytes(bytes) {\n  const str = bytesToString(bytes);\n  return btoa(str).replace(/[+/=]/g, (ch) => base64UrlEncodeSubs[ch]);\n}\n\n/**\n * Converts a string into base64url encoded string.\n * base64url is defined in RFC 4648. It is sometimes referred to as \"web safe\".\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlEncodeFromString(str) {\n  const bytes = utf8Encode(str);\n  return base64UrlEncodeFromBytes(bytes);\n}\n\n/**\n * Decode a base64url encoded string by `base64UrlEncodeFromString`\n * @param {string} str\n * @return {string}\n */\nexport function base64UrlDecodeFromString(str) {\n  const bytes = base64UrlDecodeToBytes(str);\n  return utf8Decode(bytes);\n}\n\n/**\n * Converts a bytes array into base64 encoded string.\n * @param {!Uint8Array} bytes\n * @return {string}\n */\nexport function base64EncodeFromBytes(bytes) {\n  return btoa(bytesToString(bytes));\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {parseJson} from './core/types/object/json';\n\n/**\n * A unique identifier for each localized string.  Localized string IDs should:\n *\n *   - Maintain alphabetical order, by component\n *   - Be prefixed with the name of the extension that uses the string\n *     (e.g. \"AMP_STORY_\"), or with \"AMP_\" if they are general\n *   - NOT be reused; to deprecate an ID, comment it out and prefix its key with\n *     the string \"DEPRECATED_\"\n *\n * Next ID: 98\n *\n * @const @enum {string}\n */\nexport const LocalizedStringId = {\n  // amp-story\n  AMP_STORY_ACTIVATE_BUTTON_TEXT: '83',\n  AMP_STORY_AUDIO_MUTE_BUTTON_LABEL: '66',\n  AMP_STORY_AUDIO_MUTE_BUTTON_TEXT: '31',\n  AMP_STORY_AUDIO_UNMUTE_BUTTON_LABEL: '67',\n  AMP_STORY_AUDIO_UNMUTE_NO_SOUND_TEXT: '33',\n  AMP_STORY_AUDIO_UNMUTE_SOUND_TEXT: '32',\n  AMP_STORY_CLOSE_BUTTON_LABEL: '87',\n  AMP_STORY_CONSENT_ACCEPT_BUTTON_LABEL: '22',\n  AMP_STORY_CONSENT_DECLINE_BUTTON_LABEL: '23',\n  AMP_STORY_CONTINUE_ANYWAY_BUTTON_LABEL: '27',\n  AMP_STORY_DISCOVERY_DIALOG_TEXT: '96',\n  AMP_STORY_DOMAIN_DIALOG_HEADING_LABEL: '25',\n  AMP_STORY_DOMAIN_DIALOG_HEADING_LINK: '26',\n  AMP_STORY_EDUCATION_NAVIGATION_SWIPE_PROGRESS: '78',\n  AMP_STORY_EDUCATION_NAVIGATION_SWIPE_INSTRUCTIONS: '79',\n  AMP_STORY_EDUCATION_NAVIGATION_SWIPE_DISMISS: '80',\n  AMP_STORY_EDUCATION_NAVIGATION_TAP_PROGRESS: '75',\n  AMP_STORY_EDUCATION_NAVIGATION_TAP_PROGRESS_SINGLE: '81',\n  AMP_STORY_EDUCATION_NAVIGATION_TAP_INSTRUCTIONS: '76',\n  AMP_STORY_EDUCATION_NAVIGATION_TAP_DISMISS: '77',\n  AMP_STORY_HAS_NEW_PAGE_TEXT: '64',\n  AMP_STORY_HINT_UI_NEXT_LABEL: '2',\n  AMP_STORY_HINT_UI_PREVIOUS_LABEL: '3',\n  AMP_STORY_INFO_BUTTON_LABEL: '68',\n  AMP_STORY_NEXT_PAGE: '91',\n  AMP_STORY_NEXT_STORY: '90',\n  AMP_STORY_OPEN_OUTLINK_TEXT: '97',\n  AMP_STORY_PAGE_ATTACHMENT_OPEN_LABEL: '35',\n  AMP_STORY_PAGINATION_BUTTON_PREVIOUS_PAGE_LABEL: '82',\n  AMP_STORY_PAGE_ERROR_VIDEO: '65',\n  AMP_STORY_PAGE_PLAY_VIDEO: '34',\n  AMP_STORY_PAUSE_BUTTON_LABEL: '85',\n  AMP_STORY_PLAY_BUTTON_LABEL: '86',\n  AMP_STORY_PREVIOUS_PAGE: '93',\n  AMP_STORY_REPLAY: '92',\n  AMP_STORY_SHARE_BUTTON_LABEL: '69',\n  AMP_STORY_SHARING_CLIPBOARD_FAILURE_TEXT: '4',\n  AMP_STORY_SHARING_CLIPBOARD_SUCCESS_TEXT: '5',\n  AMP_STORY_SHARING_PAGE_LABEL: '62',\n  AMP_STORY_SHARING_PROVIDER_NAME_EMAIL: '6',\n  AMP_STORY_SHARING_PROVIDER_NAME_FACEBOOK: '7',\n  AMP_STORY_SHARING_PROVIDER_NAME_GOOGLE_PLUS: '8',\n  AMP_STORY_SHARING_PROVIDER_NAME_LINE: '63',\n  AMP_STORY_SHARING_PROVIDER_NAME_LINK: '9',\n  AMP_STORY_SHARING_PROVIDER_NAME_LINKEDIN: '10',\n  AMP_STORY_SHARING_PROVIDER_NAME_PINTEREST: '11',\n  AMP_STORY_SHARING_PROVIDER_NAME_SMS: '12',\n  AMP_STORY_SHARING_PROVIDER_NAME_SYSTEM: '13',\n  AMP_STORY_SHARING_PROVIDER_NAME_TUMBLR: '14',\n  AMP_STORY_SHARING_PROVIDER_NAME_TWITTER: '15',\n  AMP_STORY_SHARING_PROVIDER_NAME_WHATSAPP: '16',\n  AMP_STORY_SIDEBAR_BUTTON_LABEL: '70',\n  AMP_STORY_SKIP_TO_NEXT_BUTTON_LABEL: '88',\n  AMP_STORY_TOOLTIP_EXPAND_TWEET: '36',\n  AMP_STORY_WARNING_DESKTOP_HEIGHT_SIZE_TEXT: '37',\n  AMP_STORY_WARNING_DESKTOP_SIZE_TEXT: '18',\n  AMP_STORY_WARNING_DESKTOP_WIDTH_SIZE_TEXT: '38',\n  AMP_STORY_WARNING_EXPERIMENT_DISABLED_TEXT: '19',\n  AMP_STORY_WARNING_LANDSCAPE_ORIENTATION_TEXT: '20',\n  AMP_STORY_WARNING_UNSUPPORTED_BROWSER_TEXT: '21',\n\n  // amp-story-auto-ads\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_APPLY_NOW: '39',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_BOOK_NOW: '40',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_BUY_TICKETS: '41',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_DOWNLOAD: '42',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_EXPLORE: '43',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_GET_NOW: '44',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_INSTALL: '45',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_LEARN_MORE: '46',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_LISTEN: '47',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_MORE: '48',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_OPEN_APP: '49',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_ORDER_NOW: '50',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_PLAY: '51',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_READ: '52',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_SHOP: '53',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_SHOW: '54',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_SHOWTIMES: '55',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_SIGN_UP: '56',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_SUBSCRIBE: '57',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_USE_APP: '58',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_VIEW: '59',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_WATCH: '60',\n  AMP_STORY_AUTO_ADS_BUTTON_LABEL_WATCH_EPISODE: '61',\n\n  // amp-story-interactive\n  AMP_STORY_INTERACTIVE_DISCLAIMER_NOTE: '89',\n  AMP_STORY_INTERACTIVE_RESULTS_SCORE: '84',\n  AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_A: '71',\n  AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_B: '72',\n  AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_C: '73',\n  AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_D: '74',\n\n  // DEPRECATED_AMP_STORY_EXPERIMENT_ENABLE_BUTTON_LABEL: '0',\n  // DEPRECATED_AMP_STORY_EXPERIMENT_ENABLED_TEXT: '1',\n  // DEPRECATED_AMP_STORY_CONSENT_DISMISS_DIALOG_BUTTON_LABEL: '24',\n  // DEPRECATED_AMP_STORY_SYSTEM_LAYER_SHARE_WIDGET_LABEL: '17',\n};\n\n/**\n * @typedef {{\n *   string: string,\n *   description: string,\n * }}\n */\nexport let LocalizedStringDef;\n\n/**\n * @typedef {!Object<!LocalizedStringId, !LocalizedStringDef>}\n */\nexport let LocalizedStringBundleDef;\n\n/**\n * Creates a deep copy of the specified LocalizedStringBundle.\n * @param {!LocalizedStringBundleDef} localizedStringBundle\n * @return {!LocalizedStringBundleDef}\n */\nfunction cloneLocalizedStringBundle(localizedStringBundle) {\n  return /** @type {!LocalizedStringBundleDef} */ (\n    parseJson(\n      JSON.stringify(/** @type {!JsonObject} */ (localizedStringBundle))\n    )\n  );\n}\n\n/**\n * Creates a pseudo locale by applying string transformations (specified by the\n * localizationFn) to an existing string bundle, without modifying the original.\n * @param {!LocalizedStringBundleDef} localizedStringBundle The localized\n *     string bundle to be transformed.\n * @param {function(string): string} localizationFn The transformation to be\n *     applied to each string in the bundle.\n * @return {!LocalizedStringBundleDef} The new strings.\n */\nexport function createPseudoLocale(localizedStringBundle, localizationFn) {\n  /** @type {!LocalizedStringBundleDef} */\n  const pseudoLocaleStringBundle = cloneLocalizedStringBundle(\n    localizedStringBundle\n  );\n\n  Object.keys(pseudoLocaleStringBundle).forEach((localizedStringIdAsStr) => {\n    const localizedStringId = /** @type {!LocalizedStringId} */ (\n      localizedStringIdAsStr\n    );\n    pseudoLocaleStringBundle[localizedStringId].string = localizationFn(\n      localizedStringBundle[localizedStringId].string\n    );\n    pseudoLocaleStringBundle[localizedStringId].fallback = localizationFn(\n      localizedStringBundle[localizedStringId].fallback\n    );\n  });\n\n  return pseudoLocaleStringBundle;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from './log';\nimport {map} from './core/types/object';\n\nlet htmlContainer;\nlet svgContainer;\n\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function htmlFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function svgFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction createNode(container, strings) {\n  devAssert(strings.length === 1, 'Improper html template tag usage.');\n  container./*OK*/ innerHTML = strings[0];\n\n  const el = container.firstElementChild;\n  devAssert(el, 'No elements in template');\n  devAssert(!el.nextElementSibling, 'Too many root elements in template');\n\n  // Clear to free memory.\n  container.removeChild(el);\n\n  return el;\n}\n\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\nexport function htmlRefs(root) {\n  const elements = root.querySelectorAll('[ref]');\n  const refs = map();\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    const ref = devAssert(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    devAssert(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * Interactive components support a disclaimer bubble that tells users where their data is being sent to.\n * Disclaimers will retrieve the information from the lookup dictionary in disclaimer-backends-list.json.\n * In order to add a \"Learn more\" link or entity name (\"Your response will be sent to <Organization>\"),\n * submit a PR with a new entry on the DisclaimerBackendList and tag @ampproject/wg-stories to review it.\n */\n\nimport {LocalizedStringId} from '../../../src/localized-strings';\nimport {htmlFor} from '../../../src/static-template';\nimport DisclaimerBackendsList from './disclaimer-backends-list.json' assert {type: 'json'}; // lgtm[js/syntax-error]\n\n/**\n * Creates a disclaimer icon and dialog.\n * @param {!Element} element\n * @return {!Element}\n */\nfunction buildDisclaimerLayout(element) {\n  const html = htmlFor(element);\n  return html`<div class=\"i-amphtml-story-interactive-disclaimer\">\n    <button\n      class=\"i-amphtml-story-interactive-disclaimer-alert\"\n      aria-label=\"Open disclaimer\"\n    ></button>\n    <div\n      class=\"i-amphtml-story-interactive-disclaimer-dialog\"\n      role=\"alertdialog\"\n    >\n      <div class=\"i-amphtml-story-interactive-disclaimer-description\">\n        <span class=\"i-amphtml-story-interactive-disclaimer-note\"\n          >Your response will be sent to\n        </span>\n        <span class=\"i-amphtml-story-interactive-disclaimer-entity\"></span>\n        <div class=\"i-amphtml-story-interactive-disclaimer-url\"></div>\n      </div>\n      <div>\n        <a target=\"_blank\" class=\"i-amphtml-story-interactive-disclaimer-link\"\n          >Learn more</a\n        >\n      </div>\n      <button\n        class=\"i-amphtml-story-interactive-disclaimer-close\"\n        aria-label=\"Close disclaimer\"\n      ></button>\n    </div>\n  </div>`;\n}\n\n/**\n * Creates a disclaimer icon and dialog from the interactive element passed in.\n * @param {!AmpStoryInteractive} interactive the interactive element.\n * @return {!Element} the icon with the dialog that should be added to the shadowRoot.\n */\nexport function buildInteractiveDisclaimer(interactive) {\n  const {element} = interactive;\n  const backendUrl = element.getAttribute('endpoint').replace('https://', '');\n\n  const disclaimer = buildDisclaimerLayout(element);\n  const dialogEl = disclaimer.querySelector(\n    '.i-amphtml-story-interactive-disclaimer-dialog'\n  );\n  const descriptionEl = disclaimer.querySelector(\n    '.i-amphtml-story-interactive-disclaimer-description'\n  );\n  const urlEl = disclaimer.querySelector(\n    '.i-amphtml-story-interactive-disclaimer-url'\n  );\n  const linkEl = disclaimer.querySelector(\n    '.i-amphtml-story-interactive-disclaimer-link'\n  );\n  const entityEl = disclaimer.querySelector(\n    '.i-amphtml-story-interactive-disclaimer-entity'\n  );\n  const noteEl = disclaimer.querySelector(\n    '.i-amphtml-story-interactive-disclaimer-note'\n  );\n\n  // Fill information\n  const backendSpecs = getBackendSpecs(backendUrl, DisclaimerBackendsList);\n  const disclaimerDescriptionId = `i-amphtml-story-disclaimer-${interactive.element.id}-description`;\n  interactive.mutateElement(() => {\n    if (backendSpecs) {\n      entityEl.textContent = backendSpecs[1].entityName;\n      urlEl.textContent = backendSpecs[0];\n      backendSpecs[1].learnMoreUrl\n        ? (linkEl.href = backendSpecs[1].learnMoreUrl)\n        : linkEl.remove();\n    } else {\n      entityEl.remove();\n      urlEl.textContent = backendUrl;\n      linkEl.remove();\n    }\n    noteEl.textContent = interactive.localizationService.getLocalizedString(\n      LocalizedStringId.AMP_STORY_INTERACTIVE_DISCLAIMER_NOTE\n    );\n    descriptionEl.id = disclaimerDescriptionId;\n    dialogEl.setAttribute('aria-describedby', disclaimerDescriptionId); // For screen readers.\n    return closeDisclaimer(interactive, disclaimer);\n  });\n\n  // Add click listener to open or close the dialog.\n  disclaimer.addEventListener('click', (event) => {\n    if (\n      event.target.classList.contains(\n        'i-amphtml-story-interactive-disclaimer-close'\n      )\n    ) {\n      closeDisclaimer(interactive, disclaimer);\n    } else if (\n      event.target.classList.contains(\n        'i-amphtml-story-interactive-disclaimer-alert'\n      )\n    ) {\n      openDisclaimer(interactive, disclaimer);\n    }\n  });\n  return disclaimer;\n}\n\n/**\n * Sets the styles to open the disclaimer dialog.\n * @param {!AmpStoryInteractive} interactive\n * @param {!Element} disclaimerEl\n */\nfunction openDisclaimer(interactive, disclaimerEl) {\n  interactive.mutateElement(() => {\n    disclaimerEl.setAttribute('active', '');\n  });\n}\n\n/**\n * Sets the styles to close the disclaimer dialog.\n * @param {!AmpStoryInteractive} interactive\n * @param {!Element} disclaimerEl\n * @return {!Promise}\n */\nfunction closeDisclaimer(interactive, disclaimerEl) {\n  return interactive.mutateElement(() => {\n    disclaimerEl.removeAttribute('active');\n  });\n}\n\n/**\n * Close the disclaimer if it's open.\n * @param {!AmpStoryInteractive} interactive\n * @param {?Element} disclaimerEl\n * @return {!Promise}\n */\nexport function tryCloseDisclaimer(interactive, disclaimerEl) {\n  if (disclaimerEl && disclaimerEl.hasAttribute('active')) {\n    return closeDisclaimer(interactive, disclaimerEl);\n  }\n  return Promise.resolve();\n}\n\n/**\n * Returns the corresponding backend specs (as an array of url and specs), or undefined.\n * @param {string} backendUrl\n * @param {!Object<string, !Object<string, string>>} backendsList\n * @return {?Array<string|Object<string, string>>} array that contains: base url of backend, {learnMoreUrl, entity}.\n */\nexport function getBackendSpecs(backendUrl, backendsList) {\n  return Object.entries(backendsList).find((element) => {\n    return element[0] === backendUrl.substring(0, element[0].length);\n  });\n}\n", "/**\n* @license\n* Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n* Use of this source code is governed by a BSD-style\n* license that can be found in the LICENSE file or at\n* https://developers.google.com/open-source/licenses/bsd\n*/\n\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsultion: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to imlement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\n\nexport const ShadowCSS = {\n  strictStyling: false,\n  // change a selector like 'div' to 'name div'\n  /** @this {ShadowCSS} */\n  scopeRules: function(cssRules, scopeSelector, opt_transformer) {\n    var cssText = '';\n    if (cssRules) {\n      Array.prototype.forEach.call(cssRules, function(rule) {\n        if (rule.selectorText && (rule.style && rule.style.cssText !== undefined)) {\n          cssText += this.scopeSelector(rule.selectorText, scopeSelector,\n            this.strictStyling, opt_transformer) + ' {\\n\\t';\n          cssText += this.propertiesFromRule(rule) + '\\n}\\n\\n';\n        } else if (rule.type === CSSRule.MEDIA_RULE) {\n          cssText += '@media ' + rule.media.mediaText + ' {\\n';\n          cssText += this.scopeRules(rule.cssRules, scopeSelector);\n          cssText += '\\n}\\n\\n';\n        } else {\n          // KEYFRAMES_RULE in IE throws when we query cssText\n          // when it contains a -webkit- property.\n          // if this happens, we fallback to constructing the rule\n          // from the CSSRuleSet\n          // https://connect.microsoft.com/IE/feedbackdetail/view/955703/accessing-csstext-of-a-keyframe-rule-that-contains-a-webkit-property-via-cssom-generates-exception\n          try {\n            if (rule.cssText) {\n              cssText += rule.cssText + '\\n\\n';\n            }\n          } catch(x) {\n            if (rule.type === CSSRule.KEYFRAMES_RULE && rule.cssRules) {\n              cssText += this.ieSafeCssTextFromKeyFrameRule(rule);\n            }\n          }\n        }\n      }, this);\n    }\n    return cssText;\n  },\n  /** @this {ShadowCSS} */\n  ieSafeCssTextFromKeyFrameRule: function(rule) {\n    var cssText = '@keyframes ' + rule.name + ' {';\n    Array.prototype.forEach.call(rule.cssRules, function(rule) {\n      cssText += ' ' + rule.keyText + ' {' + rule.style.cssText + '}';\n    });\n    cssText += ' }';\n    return cssText;\n  },\n  /** @this {ShadowCSS} */\n  scopeSelector: function(selector, scopeSelector, strict, opt_transformer) {\n    var r = [], parts = selector.split(',');\n    parts.forEach(function(p) {\n      p = p.trim();\n      if (opt_transformer) {\n        p = opt_transformer(p);\n      }\n      if (this.selectorNeedsScoping(p, scopeSelector)) {\n        p = (strict && !p.match(polyfillHostNoCombinator)) ?\n            this.applyStrictSelectorScope(p, scopeSelector) :\n            this.applySelectorScope(p, scopeSelector);\n      }\n      r.push(p);\n    }, this);\n    return r.join(', ');\n  },\n  /** @this {ShadowCSS} */\n  selectorNeedsScoping: function(selector, scopeSelector) {\n    if (Array.isArray(scopeSelector)) {\n      return true;\n    }\n    var re = this.makeScopeMatcher(scopeSelector);\n    return !selector.match(re);\n  },\n  /** @this {ShadowCSS} */\n  makeScopeMatcher: function(scopeSelector) {\n    scopeSelector = scopeSelector.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + selectorReSuffix, 'm');\n  },\n  /** @this {ShadowCSS} */\n  applySelectorScope: function(selector, selectorScope) {\n    return Array.isArray(selectorScope) ?\n        this.applySelectorScopeList(selector, selectorScope) :\n        this.applySimpleSelectorScope(selector, selectorScope);\n  },\n  // apply an array of selectors\n  /** @this {ShadowCSS} */\n  applySelectorScopeList: function(selector, scopeSelectorList) {\n    var r = [];\n    for (var i=0, s; (s=scopeSelectorList[i]); i++) {\n      r.push(this.applySimpleSelectorScope(selector, s));\n    }\n    return r.join(', ');\n  },\n  // scope via name and [is=name]\n  /** @this {ShadowCSS} */\n  applySimpleSelectorScope: function(selector, scopeSelector) {\n    if (selector.match(polyfillHostRe)) {\n      selector = selector.replace(polyfillHostNoCombinator, scopeSelector);\n      return selector.replace(polyfillHostRe, scopeSelector + ' ');\n    } else {\n      return scopeSelector + ' ' + selector;\n    }\n  },\n  // return a selector with [name] suffix on each simple selector\n  // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]\n  /** @this {ShadowCSS} */\n  applyStrictSelectorScope: function(selector, scopeSelector) {\n    scopeSelector = scopeSelector.replace(/\\[is=([^\\]]*)\\]/g, '$1');\n    var splits = [' ', '>', '+', '~'],\n      scoped = selector,\n      attrName = '[' + scopeSelector + ']';\n    splits.forEach(function(sep) {\n      var parts = scoped.split(sep);\n      scoped = parts.map(function(p) {\n        // remove :host since it should be unnecessary\n        var t = p.trim().replace(polyfillHostRe, '');\n        if (t && (splits.indexOf(t) < 0) && (t.indexOf(attrName) < 0)) {\n          p = t.replace(/([^:]*)(:*)(.*)/, '$1' + attrName + '$2$3');\n        }\n        return p;\n      }).join(sep);\n    });\n    return scoped;\n  },\n  /** @this {ShadowCSS} */\n  propertiesFromRule: function(rule) {\n    var cssText = rule.style.cssText;\n    // TODO(sorvell): Safari cssom incorrectly removes quotes from the content\n    // property. (https://bugs.webkit.org/show_bug.cgi?id=118045)\n    // don't replace attr rules\n    if (rule.style.content && !rule.style.content.match(/['\"]+|attr/)) {\n      cssText = cssText.replace(/content:[^;]*;/g, 'content: \\'' +\n          rule.style.content + '\\';');\n    }\n    // TODO(sorvell): we can workaround this issue here, but we need a list\n    // of troublesome properties to fix https://github.com/Polymer/platform/issues/53\n    //\n    // inherit rules can be omitted from cssText\n    // TODO(sorvell): remove when Blink bug is fixed:\n    // https://code.google.com/p/chromium/issues/detail?id=358273\n    var style = rule.style;\n    for (var i in style) {\n      if (style[i] === 'initial') {\n        cssText += i + ': initial; ';\n      }\n    }\n    return cssText;\n  }\n};\n\nvar selectorRe = /([^{]*)({[\\s\\S]*?})/gim,\n    cssCommentRe = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentNextSelectorRe = /\\/\\*\\s*@polyfill ([^*]*\\*+([^/*][^*]*\\*+)*\\/)([^{]*?){/gim,\n    cssContentNextSelectorRe = /polyfill-next-selector[^}]*content\\:[\\s]*?['\"](.*?)['\"][;\\s]*}([^{]*?){/gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentRuleRe = /\\/\\*\\s@polyfill-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim,\n    cssContentRuleRe = /(polyfill-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentUnscopedRuleRe = /\\/\\*\\s@polyfill-unscoped-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim,\n    cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim,\n    cssPseudoRe = /::(x-[^\\s{,(]*)/gim,\n    cssPartRe = /::part\\(([^)]*)\\)/gim,\n    // note: :host pre-processed to -shadowcsshost.\n    polyfillHost = '-shadowcsshost',\n    // note: :host-context pre-processed to -shadowcsshostcontext.\n    polyfillHostContext = '-shadowcsscontext',\n    parenSuffix = ')(?:\\\\((' +\n        '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n        ')\\\\))?([^,{]*)';\n    var cssColonHostRe = new RegExp('(' + polyfillHost + parenSuffix, 'gim'),\n    cssColonHostContextRe = new RegExp('(' + polyfillHostContext + parenSuffix, 'gim'),\n    selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$',\n    colonHostRe = /\\:host/gim,\n    colonHostContextRe = /\\:host-context/gim,\n    /* host name without combinator */\n    polyfillHostNoCombinator = polyfillHost + '-no-combinator',\n    polyfillHostRe = new RegExp(polyfillHost, 'gim'),\n    polyfillHostContextRe = new RegExp(polyfillHostContext, 'gim'),\n    shadowDOMSelectorsRe = [\n      />>>/g,\n      /::shadow/g,\n      /::content/g,\n      // Deprecated selectors\n      /\\/deep\\//g, // former >>>\n      /\\/shadow\\//g, // former ::shadow\n      /\\/shadow-deep\\//g, // former /deep/\n      /\\^\\^/g,     // former /shadow/\n      /\\^(?!=)/g   // former /shadow-deep/\n    ];\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Possible versions of Shadow DOM spec\n * @enum {string}\n */\nexport const ShadowDomVersion = {\n  NONE: 'none',\n  V0: 'v0',\n  V1: 'v1',\n};\n\n/**\n * @type {!ShadowDomVersion|undefined}\n * @visibleForTesting\n */\nlet shadowDomSupportedVersion;\n\n/**\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet shadowCssSupported;\n\n/**\n * @param {!ShadowDomVersion|undefined} val\n * @visibleForTesting\n */\nexport function setShadowDomSupportedVersionForTesting(val) {\n  shadowDomSupportedVersion = val;\n}\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setShadowCssSupportedForTesting(val) {\n  shadowCssSupported = val;\n}\n\n/**\n * Returns `true` if the Shadow DOM is supported.\n * @return {boolean}\n */\nexport function isShadowDomSupported() {\n  return getShadowDomSupportedVersion() != ShadowDomVersion.NONE;\n}\n\n/**\n * Returns `true` if Shadow CSS encapsulation is supported.\n * @return {boolean}\n */\nexport function isShadowCssSupported() {\n  if (shadowCssSupported === undefined) {\n    shadowCssSupported =\n      isShadowDomSupported() &&\n      (isNative(Element.prototype.attachShadow) ||\n        isNative(Element.prototype.createShadowRoot));\n  }\n  return shadowCssSupported;\n}\n\n/**\n * Returns `true` if the passed function is native to the browser, and is not\n * polyfilled\n * @param {Function|undefined} func A function that is attatched to a JS\n * object.\n * @return {boolean}\n */\nfunction isNative(func) {\n  return !!func && func.toString().indexOf('[native code]') != -1;\n}\n\n/**\n * Returns the supported version of Shadow DOM spec.\n * @param {typeof Element=} opt_elementClass optional for testing\n * @return {!ShadowDomVersion}\n */\nexport function getShadowDomSupportedVersion(opt_elementClass) {\n  if (shadowDomSupportedVersion === undefined) {\n    shadowDomSupportedVersion = getShadowDomVersion(\n      opt_elementClass || Element\n    );\n  }\n  return shadowDomSupportedVersion;\n}\n\n/**\n * Returns shadow dom version.\n *\n * @param {!typeof Element} element\n * @return {!ShadowDomVersion}\n */\nfunction getShadowDomVersion(element) {\n  if (!!element.prototype.attachShadow) {\n    return ShadowDomVersion.V1;\n  } else if (!!element.prototype.createShadowRoot) {\n    return ShadowDomVersion.V0;\n  }\n  return ShadowDomVersion.NONE;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './core/constants/common-signals';\nimport {Services} from './services';\nimport {TickLabel} from './core/constants/enums';\nimport {dev, devAssert} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './core/types/object';\nimport {rethrowAsync} from './core/error';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch((reason) => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then((services) => {\n      bodyMadeVisible = true;\n      if (INI_LOAD_INOB) {\n        // Force sync measurement to ensure that style recalc is complete\n        // before showing body, which would trigger FCP. This should reduce\n        // make it less likely that a CLS would be triggered after FCP.\n        doc.body./*OK*/ getBoundingClientRect();\n      }\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick(TickLabel.MAKE_BODY_VISIBLE);\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DomWriterBulk, DomWriterStreamer} from './utils/dom-writer';\nimport {Services} from './services';\nimport {ShadowCSS} from '../third_party/webcomponentsjs/ShadowCSS';\nimport {\n  ShadowDomVersion,\n  getShadowDomSupportedVersion,\n  isShadowCssSupported,\n} from './core/dom/web-components';\nimport {dev, devAssert} from './log';\nimport {escapeCssSelectorIdent} from './core/dom/css-selectors';\nimport {installCssTransformer} from './style-installer';\nimport {iterateCursor} from './dom';\nimport {setInitialDisplay, setStyle} from './style';\nimport {toArray} from './core/types/array';\nimport {toWin} from './core/window';\n\n/** @const {!RegExp} */\nconst CSS_SELECTOR_BEG_REGEX = /[^\\.\\-\\_0-9a-zA-Z]/;\n\n/** @const {!RegExp} */\nconst CSS_SELECTOR_END_REGEX = /[^\\-\\_0-9a-zA-Z]/;\n\nconst SHADOW_CSS_CACHE = '__AMP_SHADOW_CSS';\n\n/**\n * @type {boolean|undefined}\n */\nlet shadowDomStreamingSupported;\n\n/**\n * Creates a shadow root for the specified host and returns it. Polyfills\n * shadow root creation if necessary.\n * @param {!Element} hostElement\n * @return {!ShadowRoot}\n */\nexport function createShadowRoot(hostElement) {\n  const win = toWin(hostElement.ownerDocument.defaultView);\n\n  const existingRoot = hostElement.shadowRoot || hostElement.__AMP_SHADOW_ROOT;\n  if (existingRoot) {\n    existingRoot./*OK*/ innerHTML = '';\n    return existingRoot;\n  }\n\n  let shadowRoot;\n  const shadowDomSupported = getShadowDomSupportedVersion();\n  if (shadowDomSupported == ShadowDomVersion.V1) {\n    shadowRoot = hostElement.attachShadow({mode: 'open'});\n    if (!shadowRoot.styleSheets) {\n      Object.defineProperty(shadowRoot, 'styleSheets', {\n        get: function () {\n          const items = [];\n          iterateCursor(shadowRoot.childNodes, (child) => {\n            if (child.tagName === 'STYLE') {\n              items.push(child.sheet);\n            }\n          });\n          return items;\n        },\n      });\n    }\n  } else if (shadowDomSupported == ShadowDomVersion.V0) {\n    shadowRoot = hostElement.createShadowRoot();\n  } else {\n    shadowRoot = createShadowRootPolyfill(hostElement);\n  }\n\n  if (!isShadowCssSupported()) {\n    const rootId = `i-amphtml-sd-${win.Math.floor(win.Math.random() * 10000)}`;\n    shadowRoot['id'] = rootId;\n    shadowRoot.host.classList.add(rootId);\n\n    // CSS isolation.\n    installCssTransformer(shadowRoot, (css) => {\n      return transformShadowCss(shadowRoot, css);\n    });\n  }\n\n  return shadowRoot;\n}\n\n/**\n * Shadow root polyfill.\n * @param {!Element} hostElement\n * @return {!ShadowRoot}\n */\nfunction createShadowRootPolyfill(hostElement) {\n  const doc = hostElement.ownerDocument;\n\n  // Host CSS polyfill.\n  hostElement.classList.add('i-amphtml-shadow-host-polyfill');\n  const hostStyle = doc.createElement('style');\n  hostStyle.textContent =\n    '.i-amphtml-shadow-host-polyfill>:not(i-amphtml-shadow-root)' +\n    '{display:none!important}';\n  hostElement.appendChild(hostStyle);\n\n  // Shadow root.\n  const shadowRoot /** @type {!ShadowRoot} */ =\n    // Cast to ShadowRoot even though it is an Element\n    // TODO(@dvoytenko) Consider to switch to a type union instead.\n    /** @type {?}  */ (doc.createElement('i-amphtml-shadow-root'));\n  hostElement.appendChild(shadowRoot);\n  hostElement.__AMP_SHADOW_ROOT = shadowRoot;\n  Object.defineProperty(hostElement, 'shadowRoot', {\n    enumerable: true,\n    configurable: true,\n    value: shadowRoot,\n  });\n\n  // API: https://www.w3.org/TR/shadow-dom/#the-shadowroot-interface\n\n  shadowRoot.host = hostElement;\n\n  // `getElementById` is resolved via `querySelector('#id')`.\n  shadowRoot.getElementById = function (id) {\n    const escapedId = escapeCssSelectorIdent(id);\n    return /** @type {?HTMLElement} */ (\n      shadowRoot./*OK*/ querySelector(`#${escapedId}`)\n    );\n  };\n\n  // The styleSheets property should have a list of local styles.\n  Object.defineProperty(shadowRoot, 'styleSheets', {\n    get: () => {\n      if (!doc.styleSheets) {\n        return [];\n      }\n      return toArray(doc.styleSheets).filter((styleSheet) =>\n        shadowRoot.contains(styleSheet.ownerNode)\n      );\n    },\n  });\n\n  return shadowRoot;\n}\n\n/**\n * Imports a body into a shadow root with the workaround for a polyfill case.\n * @param {!ShadowRoot} shadowRoot\n * @param {!Element} body\n * @param {boolean} deep\n * @return {!Element}\n */\nexport function importShadowBody(shadowRoot, body, deep) {\n  const doc = shadowRoot.ownerDocument;\n  let resultBody;\n  if (isShadowCssSupported()) {\n    resultBody = dev().assertElement(doc.importNode(body, deep));\n  } else {\n    resultBody = doc.createElement('amp-body');\n    setInitialDisplay(resultBody, 'block');\n    for (let i = 0; i < body.attributes.length; i++) {\n      resultBody.setAttribute(\n        body.attributes[0].name,\n        body.attributes[0].value\n      );\n    }\n    if (deep) {\n      for (let n = body.firstChild; !!n; n = n.nextSibling) {\n        resultBody.appendChild(doc.importNode(n, true));\n      }\n    }\n  }\n  setStyle(resultBody, 'position', 'relative');\n  const oldBody = shadowRoot['body'];\n  if (oldBody) {\n    shadowRoot.removeChild(oldBody);\n  }\n  shadowRoot.appendChild(resultBody);\n  Object.defineProperty(shadowRoot, 'body', {\n    configurable: true,\n    value: resultBody,\n  });\n  return resultBody;\n}\n\n/**\n * If necessary, transforms CSS to isolate AMP CSS within the shaodw root and\n * reduce the possibility of high-level conflicts.\n * @param {!ShadowRoot} shadowRoot\n * @param {string} css\n * @return {string}\n */\nexport function transformShadowCss(shadowRoot, css) {\n  return scopeShadowCss(shadowRoot, css);\n}\n\n/**\n * Transforms CSS to isolate AMP CSS within the shadow root and reduce the\n * possibility of high-level conflicts. There are two types of transformations:\n * 1. Root transformation: `body` -> `amp-body`, etc.\n * 2. Scoping: `a {}` -> `.i-amphtml-sd-123 a {}`.\n *\n * @param {!ShadowRoot} shadowRoot\n * @param {string} css\n * @return {string}\n * @visibleForTesting\n */\nexport function scopeShadowCss(shadowRoot, css) {\n  const id = devAssert(shadowRoot['id']);\n  const doc = shadowRoot.ownerDocument;\n  let rules = null;\n  // Try to use a separate document.\n  try {\n    rules = getStylesheetRules(doc.implementation.createHTMLDocument(''), css);\n  } catch (e) {\n    // Ignore.\n  }\n  // Try to use the current document.\n  if (!rules) {\n    try {\n      rules = getStylesheetRules(doc, css);\n    } catch (e) {\n      // Ignore.\n    }\n  }\n\n  // No rules could be parsed - return css as is.\n  if (!rules) {\n    return css;\n  }\n\n  // Patch selectors.\n  // Invoke `ShadowCSS.scopeRules` via `call` because the way it uses `this`\n  // internally conflicts with Closure compiler's advanced optimizations.\n  const {scopeRules} = ShadowCSS;\n  return scopeRules.call(ShadowCSS, rules, `.${id}`, transformRootSelectors);\n}\n\n/**\n * Replaces top-level selectors such as `html` and `body` with their polyfill\n * counterparts: `amp-html` and `amp-body`.\n * @param {string} selector\n * @return {string}\n */\nfunction transformRootSelectors(selector) {\n  return selector.replace(/(html|body)/g, rootSelectorPrefixer);\n}\n\n/**\n * See `transformRootSelectors`.\n * @param {string} match\n * @param {string} name\n * @param {number} pos\n * @param {string} selector\n * @return {string}\n * @private\n */\nfunction rootSelectorPrefixer(match, name, pos, selector) {\n  const prev = selector.charAt(pos - 1);\n  const next = selector.charAt(pos + match.length);\n  if (\n    (!prev || CSS_SELECTOR_BEG_REGEX.test(prev)) &&\n    (!next || CSS_SELECTOR_END_REGEX.test(next))\n  ) {\n    return 'amp-' + match;\n  }\n  return match;\n}\n\n/**\n * @param {!Document} doc\n * @param {string} css\n * @return {?CSSRuleList}\n */\nfunction getStylesheetRules(doc, css) {\n  const style = /** @type {!HTMLStyleElement} */ (doc.createElement('style'));\n  style./*OK*/ textContent = css;\n  try {\n    (doc.head || doc.documentElement).appendChild(style);\n    if (style.sheet) {\n      return /** @type {!CSSStyleSheet} */ (style.sheet).cssRules;\n    }\n    return null;\n  } finally {\n    if (style.parentNode) {\n      style.parentNode.removeChild(style);\n    }\n  }\n}\n\n/**\n * @param {!ShadowRoot} shadowRoot\n * @param {string} name\n * @param {string} cssText\n */\nexport function installShadowStyle(shadowRoot, name, cssText) {\n  const doc = shadowRoot.ownerDocument;\n  const win = toWin(doc.defaultView);\n  if (\n    shadowRoot.adoptedStyleSheets !== undefined &&\n    win.CSSStyleSheet.prototype.replaceSync !== undefined\n  ) {\n    const cache = win[SHADOW_CSS_CACHE] || (win[SHADOW_CSS_CACHE] = {});\n    let styleSheet = cache[name];\n    if (!styleSheet) {\n      styleSheet = new win.CSSStyleSheet();\n      styleSheet.replaceSync(cssText);\n      cache[name] = styleSheet;\n    }\n    shadowRoot.adoptedStyleSheets =\n      shadowRoot.adoptedStyleSheets.concat(styleSheet);\n  } else {\n    const styleEl = doc.createElement('style');\n    styleEl.setAttribute('data-name', name);\n    styleEl.textContent = cssText;\n    shadowRoot.appendChild(styleEl);\n  }\n}\n\n/**\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetShadowStyleCacheForTesting(win) {\n  win[SHADOW_CSS_CACHE] = null;\n}\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setShadowDomStreamingSupportedForTesting(val) {\n  shadowDomStreamingSupported = val;\n}\n\n/**\n * Returns `true` if the Shadow DOM streaming is supported.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isShadowDomStreamingSupported(win) {\n  if (shadowDomStreamingSupported === undefined) {\n    shadowDomStreamingSupported = calcShadowDomStreamingSupported(win);\n  }\n  return shadowDomStreamingSupported;\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nfunction calcShadowDomStreamingSupported(win) {\n  // API must be supported.\n  if (\n    !win.document.implementation ||\n    typeof win.document.implementation.createHTMLDocument != 'function'\n  ) {\n    return false;\n  }\n  // Firefox does not support DOM streaming.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=867102\n  if (Services.platformFor(win).isFirefox()) {\n    return false;\n  }\n  // Assume full streaming support.\n  return true;\n}\n\n/**\n * Creates the Shadow DOM writer available on this platform.\n * @param {!Window} win\n * @return {!./utils/dom-writer.DomWriter}\n */\nexport function createShadowDomWriter(win) {\n  if (isShadowDomStreamingSupported(win)) {\n    return new DomWriterStreamer(win);\n  }\n  return new DomWriterBulk(win);\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {\n  assertHttpsUrl,\n  getSourceOrigin,\n  isProxyOrigin,\n  resolveRelativeUrl,\n} from '../../../src/url';\nimport {\n  closestAncestorElementBySelector,\n  scopedQuerySelectorAll,\n} from '../../../src/core/dom/query';\nimport {createShadowRoot} from '../../../src/shadow-embed';\nimport {dev, user, userAssert} from '../../../src/log';\nimport {getMode} from '../../../src/mode';\n\nimport {setStyle, toggle} from '../../../src/style';\n\n/**\n * Returns millis as number if given a string(e.g. 1s, 200ms etc)\n * @param {string} time\n * @param {number=} fallbackMs Used when `time` is not a valid time string.\n * @return {number|undefined}\n */\nexport function timeStrToMillis(time, fallbackMs = NaN) {\n  const match = time.toLowerCase().match(/^([0-9\\.]+)\\s*(s|ms)$/);\n\n  const num = match ? match[1] : undefined;\n  const units = match ? match[2] : undefined;\n\n  if (!match || match.length !== 3 || (units !== 's' && units !== 'ms')) {\n    return fallbackMs;\n  }\n\n  return Math.round((units == 's' ? 1000 : 1) * parseFloat(num));\n}\n\n/**\n * Determines whether the specified element has an action for its on=\"tap:...\"\n * handler.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function hasTapAction(el) {\n  // There are better ways to determine this, but they're all bound to action\n  // service race conditions. This is good enough for our use case.\n  return (\n    el.hasAttribute('on') && !!el.getAttribute('on').match(/(^|;)\\s*tap\\s*:/)\n  );\n}\n\n/**\n * Calculates a client rect without applying scaling transformations.\n * Note: must be run in a vsync measure context.\n * @param {!Element} el\n * @return {!ClientRect}\n */\nexport function unscaledClientRect(el) {\n  const {height, left, top, width} = el./*OK*/ getBoundingClientRect();\n\n  const scaleFactorX = width == 0 ? 1 : width / el./*OK*/ offsetWidth;\n  const scaleFactorY = height == 0 ? 1 : height / el./*OK*/ offsetHeight;\n\n  return /** @type {!ClientRect} */ ({\n    left: left / scaleFactorX,\n    top: top / scaleFactorY,\n    width: width / scaleFactorX,\n    height: height / scaleFactorY,\n  });\n}\n\n/**\n * Finds an amp-video/amp-audio ancestor.\n * @param {!Element} el\n * @return {?AmpElement}\n */\nexport function ampMediaElementFor(el) {\n  return closestAncestorElementBySelector(el, 'amp-video, amp-audio');\n}\n\n/**\n * Creates a shadow root for the provided container, and appends the element\n * along with its CSS.\n * @param  {!Element} container\n * @param  {!Element} element\n * @param  {string} css\n */\nexport function createShadowRootWithStyle(container, element, css) {\n  const style = self.document.createElement('style');\n  style./*OK*/ textContent = css;\n\n  const containerToUse = getMode().test\n    ? container\n    : createShadowRoot(container);\n\n  containerToUse.appendChild(style);\n  containerToUse.appendChild(element);\n}\n\n/**\n * Parses the resolved CSS color property, that is always in the form of\n * `rgba(0, 0, 0, 1)` or `rgb(0, 0, 0)`, that can be retrieved using\n * `getComputedStyle`.\n * Returns an object containing the R, G, and B 8bit numbers.\n * @param  {string} cssValue\n * @return {!Object<string, number>}\n */\nexport function getRGBFromCssColorValue(cssValue) {\n  const regexPattern = /rgba?\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})/;\n\n  if (!cssValue.match(regexPattern)) {\n    user().error(\n      'UTILS',\n      'getRGBFromCssColorValue expects a parameter in ' +\n        `the form of 'rgba(0, 0, 0, 1)' or 'rgb(0, 0, 0)' but got ${cssValue}`\n    );\n    // Returns a fallback value, to fail 'gracefully' in case a browser we don't\n    // know about gave an unexpected value.\n    return {r: 0, g: 0, b: 0};\n  }\n\n  const matches = regexPattern.exec(cssValue);\n\n  return {\n    r: Number(matches[1]),\n    g: Number(matches[2]),\n    b: Number(matches[3]),\n  };\n}\n\n/**\n * Returns the color, either black or white, that has the best contrast ratio\n * against the provided RGB 8bit values.\n * @param  {!Object<string, number>} rgb  ie: {r: 0, g: 0, b: 0}\n * @return {string} '#fff' or '#000'\n */\nexport function getTextColorForRGB(rgb) {\n  const {b, g, r} = rgb;\n  // Calculates the relative luminance L.\n  // https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n  const getLinearRGBValue = (x) => {\n    // 8bit to sRGB.\n    x /= 255;\n\n    // Converts the gamma-compressed RGB values to linear RGB.\n    return x <= 0.03928 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  };\n\n  const linearR = getLinearRGBValue(r);\n  const linearG = getLinearRGBValue(g);\n  const linearB = getLinearRGBValue(b);\n\n  const L = 0.2126 * linearR + 0.7152 * linearG + 0.0722 * linearB;\n\n  // Determines which one of the white and black text have a better contrast\n  // ratio against the used background color.\n  // https://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n  // @TODO(gmajoulet): Improve the text color for high contrast ratio.\n  // 1 is L for #FFF, and 0 is L for #000.\n  // (1 + 0.05) / (L + 0.05) > (L + 0.05) / (0 + 0.05) toggles for L = 0.179.\n  return L > 0.179 ? '#000' : '#FFF';\n}\n\n/**\n * Sets given attribute to the given element in next `mutate` phase.\n * @param {!AMP.BaseElement} elementImpl\n * @param {string} name\n * @param {string=} opt_value\n */\nexport function setAttributeInMutate(elementImpl, name, opt_value) {\n  const value = opt_value || '';\n  elementImpl.mutateElement(() => {\n    elementImpl.element.setAttribute(name, value);\n  });\n}\n\n/**\n * Removes given attribute from the given element in next `mutate` phase.\n * @param {!AMP.BaseElement} elementImpl\n * @param {string} name\n */\nexport function removeAttributeInMutate(elementImpl, name) {\n  elementImpl.mutateElement(() => {\n    elementImpl.element.removeAttribute(name);\n  });\n}\n\n/**\n * @param {!Element} element\n * @param {string|!Location} url\n */\nexport function userAssertValidProtocol(element, url) {\n  userAssert(\n    Services.urlForDoc(element).isProtocolValid(url),\n    'Unsupported protocol for URL %s',\n    url\n  );\n}\n\n/**\n * Gets the origin url for elements that display a url. It\n * trims the protocol prefix and returns only the hostname of the origin.\n * @param {!Element} element\n * @param {string} url\n * @return {string}\n */\nexport function getSourceOriginForElement(element, url) {\n  let domainName;\n\n  try {\n    domainName = getSourceOrigin(Services.urlForDoc(element).parse(url));\n    // Remove protocol prefix.\n    domainName = Services.urlForDoc(element).parse(domainName).hostname;\n  } catch (e) {\n    // Unknown path prefix in url.\n    domainName = Services.urlForDoc(element).parse(url).hostname;\n  }\n  return domainName;\n}\n\n/**\n * Resolves an image url and optimizes it if served from the cache.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function resolveImgSrc(win, url) {\n  let urlSrc = resolveRelativeUrl(url, win.location);\n  if (isProxyOrigin(win.location.href)) {\n    // TODO(Enriqe): add extra params for resized image, for example:\n    // (/ii/w${width}/s)\n    urlSrc = urlSrc.replace('/c/s/', '/i/s/');\n  }\n  return urlSrc;\n}\n\n/**\n * Whether a Story should show the URL info dialog.\n * @param {!../../../src/service/viewer-interface.ViewerInterface} viewer\n * @return {boolean}\n */\nexport function shouldShowStoryUrlInfo(viewer) {\n  const showStoryUrlInfo = viewer.getParam('showStoryUrlInfo');\n  return showStoryUrlInfo ? showStoryUrlInfo !== '0' : viewer.isEmbedded();\n}\n\n/**\n * Retrieves an attribute src from the <amp-story> element.\n * @param {!Element} element\n * @param {string} attribute\n * @param {string=} warn\n * @return {?string}\n */\nexport function getStoryAttributeSrc(element, attribute, warn = false) {\n  const storyEl = dev().assertElement(\n    closestAncestorElementBySelector(element, 'AMP-STORY')\n  );\n  const attrSrc = storyEl && storyEl.getAttribute(attribute);\n\n  if (attrSrc) {\n    assertHttpsUrl(attrSrc, storyEl, attribute);\n  } else if (warn) {\n    user().warn('AMP-STORY', `Expected ${attribute} attribute on <amp-story>`);\n  }\n\n  return attrSrc;\n}\n\n/**\n * The attribute name for text background color\n * @private @const {string}\n */\nconst TEXT_BACKGROUND_COLOR_ATTRIBUTE_NAME = 'data-text-background-color';\n\n/**\n * The selector for text background color\n * @private @const {string}\n */\nconst TEXT_BACKGROUND_COLOR_SELECTOR = `[${TEXT_BACKGROUND_COLOR_ATTRIBUTE_NAME}]`;\n\n/**\n * Styles text with a background color based on the value of\n * the data-text-background-color attribute\n * @param {!Element} element\n */\nexport function setTextBackgroundColor(element) {\n  const elementsToUpgradeStyles = scopedQuerySelectorAll(\n    element,\n    TEXT_BACKGROUND_COLOR_SELECTOR\n  );\n\n  Array.prototype.forEach.call(elementsToUpgradeStyles, (el) => {\n    const color = el.getAttribute(TEXT_BACKGROUND_COLOR_ATTRIBUTE_NAME);\n    setStyle(el, 'background-color', color);\n  });\n}\n\n/**\n * Click a clone of the anchor in the context of the light dom.\n * Used to apply linker logic on shadow-dom anchors.\n * @param {!Element} anchorElement\n * @param {!Element} domElement element from the light dom\n */\nexport function triggerClickFromLightDom(anchorElement, domElement) {\n  const outerAnchor = anchorElement.cloneNode();\n  toggle(outerAnchor, false);\n  domElement.appendChild(outerAnchor);\n  outerAnchor.click();\n  outerAnchor.remove();\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../../../src/core/types/object';\nimport {user} from '../../../src/log';\n\n/** @private Whether ids are deduplicated or not */\nlet deduplicatedIds = false;\n\n/**\n * Deduplicates the interactive Ids, only called once\n * @param {!Document} doc\n */\nexport const deduplicateInteractiveIds = (doc) => {\n  if (deduplicatedIds) {\n    return;\n  }\n  deduplicatedIds = true;\n  const interactiveEls = doc.querySelectorAll(\n    'amp-story-interactive-binary-poll, amp-story-interactive-poll, amp-story-interactive-quiz'\n  );\n  const idsMap = map();\n  for (let i = 0; i < interactiveEls.length; i++) {\n    const currId = interactiveEls[i].id || 'interactive-id';\n    if (idsMap[currId] === undefined) {\n      idsMap[currId] = 0;\n    } else {\n      user().error(\n        'AMP-STORY-INTERACTIVE',\n        `Duplicate interactive ID ${currId}`\n      );\n      const newId = `${currId}__${++idsMap[currId]}`;\n      interactiveEls[i].id = newId;\n    }\n  }\n};\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {htmlFor} from '../../../src/static-template';\nimport {setStyles} from '../../../src/style';\n\n/**\n * Generates the template for the confetti wrapper.\n *\n * @param {!Element} element\n * @return {!Element}\n */\nconst buildConfettiWrapperTemplate = (element) => {\n  const html = htmlFor(element);\n  return html`\n    <div\n      class=\"i-amphtml-story-interactive-confetti-wrapper\"\n      aria-hidden=\"true\"\n    ></div>\n  `;\n};\n\n/**\n * Generates a template for a confetti.\n *\n * @param {!Element} element\n * @return {!Element}\n */\nconst buildconfettiTemplate = (element) => {\n  const html = htmlFor(element);\n  return html` <div class=\"i-amphtml-story-interactive-confetti\"></div> `;\n};\n\n/**\n * Creates a radial burst of emoji.\n * The burst begins from the center of the parent element and\n * animates to the edges of the parent element.\n * Nodes are removed from the dom at the end of the animation.\n *\n * @param {!Element} rootEl\n * @param {!Window} win\n * @param {string} confettiEmoji\n * @return {void}\n */\nexport function emojiConfetti(rootEl, win, confettiEmoji) {\n  const confettiCount = 5;\n  const angleSlice = (Math.PI * 2) / confettiCount;\n\n  const angleRandomness = angleSlice * 0.2;\n  const fontSizeRandomRange = [30, 50];\n  const rotationRandomness = 20;\n  const additionalDistance = 5;\n\n  const animationTime = 300;\n  const animationOutDelay = 1000;\n\n  // To calculate confetti transform distance.\n  const rootElRect = rootEl./*OK*/ getBoundingClientRect();\n\n  /** @private @const {!../../../src/service/timer-impl.Timer} */\n  const timer = Services.timerFor(win);\n\n  const confettiWrapper = buildConfettiWrapperTemplate(rootEl);\n  rootEl.appendChild(confettiWrapper);\n\n  timer.delay(() => {\n    // Generate confetti. Set their ending position, size and rotation.\n    for (let i = 0; i < confettiCount; i++) {\n      const confetti = buildconfettiTemplate(rootEl);\n      confettiWrapper.appendChild(confetti);\n      confetti.textContent = confettiEmoji;\n\n      const fontSize =\n        randomInRange(fontSizeRandomRange[0], fontSizeRandomRange[1]) + 'px';\n      const angle =\n        angleSlice * i + randomInRange(-angleRandomness, angleRandomness);\n      const x = Math.sin(angle) * (rootElRect.width / 2 + additionalDistance);\n      const y = Math.cos(angle) * (rootElRect.height / 2 + additionalDistance);\n      const rotation = randomInRange(-rotationRandomness, rotationRandomness);\n      setStyles(confetti, {\n        fontSize,\n        transform: `translate(${x}px, ${y}px) rotate(${rotation}deg)`,\n      });\n    }\n    // Scale up confetti container.\n    confettiWrapper.classList.add(\n      'i-amphtml-story-interactive-confetti-wrapper-animate-in'\n    );\n\n    // Animate out the wrapper\n    timer.delay(() => {\n      confettiWrapper.classList.add(\n        'i-amphtml-story-interactive-confetti-wrapper-animate-out'\n      );\n      // Remove the wrapper from the dom.\n      timer.delay(() => rootEl.removeChild(confettiWrapper), animationTime);\n    }, animationOutDelay);\n  }, animationTime);\n}\n\n/**\n * Returns a random number between the min and max values.\n *\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nfunction randomInRange(min, max) {\n  return Math.random() * (max - min) + min;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from '../log';\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service';\nimport {hasOwn, map} from '../core/types/object';\nimport {isArray} from '../core/types';\nimport {parseQueryString} from '../core/types/string/url';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANALYTICS_TAG_NAME,\n  StoryAnalyticsEvent,\n} from '../../amp-story/1.0/story-analytics';\nimport {\n  Action,\n  StateProperty,\n} from '../../amp-story/1.0/amp-story-store-service';\nimport {AnalyticsVariable} from '../../amp-story/1.0/variable-service';\nimport {CSS} from '../../../build/amp-story-interactive-0.1.css';\nimport {Services} from '../../../src/services';\nimport {\n  addParamsToUrl,\n  appendPathToUrl,\n  assertAbsoluteHttpOrHttpsUrl,\n} from '../../../src/url';\nimport {base64UrlEncodeFromString} from '../../../src/core/types/string/base64';\nimport {\n  buildInteractiveDisclaimer,\n  tryCloseDisclaimer,\n} from './interactive-disclaimer';\nimport {closest} from '../../../src/core/dom/query';\nimport {createShadowRootWithStyle} from '../../amp-story/1.0/utils';\nimport {deduplicateInteractiveIds} from './utils';\nimport {dev, devAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {emojiConfetti} from './interactive-confetti';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {toArray} from '../../../src/core/types/array';\n\n/** @const {string} */\nconst TAG = 'amp-story-interactive';\n\n/**\n * @const @enum {number}\n */\nexport const InteractiveType = {\n  QUIZ: 0,\n  POLL: 1,\n  RESULTS: 2,\n};\n\n/** @const {string} */\nconst ENDPOINT_INVALID_ERROR =\n  'The publisher has specified an invalid datastore endpoint';\n\n/** @const {string} */\nconst INTERACTIVE_ACTIVE_CLASS = 'i-amphtml-story-interactive-active';\n\n/**\n * @typedef {{\n *    index: number,\n *    count: number,\n *    selected: boolean,\n * }}\n */\nexport let InteractiveOptionType;\n\n/**\n * @typedef {{\n *    options: !Array<InteractiveOptionType>,\n * }}\n */\nexport let InteractiveResponseType;\n\n/**\n * @typedef {{\n *    optionIndex: number,\n *    text: string,\n *    correct: ?string,\n *    resultscategory: ?string,\n *    image: ?string,\n *    confetti: ?string,\n *    resultsthreshold: ?string,\n * }}\n */\nexport let OptionConfigType;\n\n/** @const {Array<Object>} fontFaces with urls from https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&amp;display=swap */\nconst fontsToLoad = [\n  {\n    family: 'Poppins',\n    weight: '400',\n    src: \"url(https://fonts.gstatic.com/s/poppins/v9/pxiEyp8kv8JHgFVrJJfecnFHGPc.woff2) format('woff2')\",\n  },\n  {\n    family: 'Poppins',\n    weight: '700',\n    src: \"url(https://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLCz7Z1xlFd2JQEk.woff2) format('woff2')\",\n  },\n];\n\n/**\n * Interactive abstract class with shared functionality for interactive components.\n *\n * Lifecycle:\n * 1) When created, the abstract class will call the buildComponent() method implemented by each concrete class.\n *   NOTE: When created, the component will receive a .i-amphtml-story-interactive-component, inheriting useful CSS variables.\n *\n * 2) If an endpoint is specified, it will retrieve aggregate results from the backend and process them. If the clientId\n *   has responded in a previous session, the component will change to a post-selection state. Otherwise it will wait\n *   for user selection.\n *   NOTE: Click listeners will be attached to all options, which require .i-amphtml-story-interactive-option.\n *\n * 3) On user selection, it will process the backend results (if endpoint specified) and display the selected option.\n *   Analytic events will be sent, percentages updated (implemented by the concrete class), and backend posted with the\n *   user response. Classes will be added to the component and options accordingly.\n *   NOTE: On option selected, the selection will receive a .i-amphtml-story-interactive-option-selected, and the root element\n *   will receive a .i-amphtml-story-interactive-post-selection. Optionally, if the endpoint returned aggregate results,\n *   the root element will also receive a .i-amphtml-story-interactive-has-data.\n *\n * @abstract\n */\nexport class AmpStoryInteractive extends AMP.BaseElement {\n  /**\n   * @param {!AmpElement} element\n   * @param {!InteractiveType} type\n   * @param {!Array<number>} bounds the bounds on number of options, inclusive\n   */\n  constructor(element, type, bounds = [2, 4]) {\n    super(element);\n\n    /** @protected @const {InteractiveType} */\n    this.interactiveType_ = type;\n\n    /** @protected {?../../amp-story/1.0/story-analytics.StoryAnalyticsService} */\n    this.analyticsService_ = null;\n\n    /** @protected {?Promise<?InteractiveResponseType|?JsonObject|undefined>} */\n    this.backendDataPromise_ = null;\n\n    /** @protected {?Promise<JsonObject>} */\n    this.clientIdPromise_ = null;\n\n    /** @protected {boolean} */\n    this.hasUserSelection_ = false;\n\n    /** @private {!Array<number>} min and max number of options, inclusive */\n    this.optionBounds_ = bounds;\n\n    /** @private {?Array<!Element>} DOM elements that have the i-amphtml-story-interactive-option class */\n    this.optionElements_ = null;\n\n    /** @protected {?Array<!OptionConfigType>} option config values from attributes (text, correct...) */\n    this.options_ = null;\n\n    /** @protected {?Array<!InteractiveOptionType>} retrieved results from the backend */\n    this.optionsData_ = null;\n\n    /** @private {?string} the page id of the component */\n    this.pageId_ = null;\n\n    /** @protected {?Element} */\n    this.rootEl_ = null;\n\n    /** @public {../../../src/service/localizationService} */\n    this.localizationService = null;\n\n    /** @protected {?../../amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n    this.requestService_ = null;\n\n    /** @protected {?../../amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n    this.storeService_ = null;\n\n    /** @protected {?../../../src/service/url-impl.Url} */\n    this.urlService_ = null;\n\n    /** @protected {?../../amp-story/1.0/variable-service.AmpStoryVariableService} */\n    this.variableService_ = null;\n  }\n\n  /**\n   * Gets the root element.\n   * @visibleForTesting\n   * @return {?Element}\n   */\n  getRootElement() {\n    return this.rootEl_;\n  }\n\n  /**\n   * Gets the options.\n   * @protected\n   * @return {!Array<!Element>}\n   */\n  getOptionElements() {\n    if (!this.optionElements_) {\n      this.optionElements_ = toArray(\n        this.rootEl_.querySelectorAll('.i-amphtml-story-interactive-option')\n      );\n    }\n    return this.optionElements_;\n  }\n\n  /**\n   * Gets the interactive ID\n   * @private\n   * @return {string}\n   */\n  getInteractiveId_() {\n    if (!AmpStoryInteractive.canonicalUrl64) {\n      deduplicateInteractiveIds(this.win.document);\n      AmpStoryInteractive.canonicalUrl64 = base64UrlEncodeFromString(\n        Services.documentInfoForDoc(this.element).canonicalUrl\n      );\n    }\n    return `${AmpStoryInteractive.canonicalUrl64}+${this.element.id}`;\n  }\n\n  /**\n   * @private\n   * @return {string} the page id\n   */\n  getPageId_() {\n    if (this.pageId_ == null) {\n      this.pageId_ = closest(dev().assertElement(this.element), (el) => {\n        return el.tagName.toLowerCase() === 'amp-story-page';\n      }).getAttribute('id');\n    }\n    return this.pageId_;\n  }\n\n  /** @override */\n  buildCallback(concreteCSS = '') {\n    this.loadFonts_();\n    this.options_ = this.parseOptions_();\n    this.element.classList.add('i-amphtml-story-interactive-component');\n    this.adjustGridLayer_();\n    devAssert(this.element.children.length == 0, 'Too many children');\n\n    // Initialize all the services before proceeding, and update store with state\n    this.urlService_ = Services.urlForDoc(this.element);\n    return Promise.all([\n      Services.storyVariableServiceForOrNull(this.win).then((service) => {\n        this.variableService_ = service;\n      }),\n      Services.storyStoreServiceForOrNull(this.win).then((service) => {\n        this.storeService_ = service;\n        this.updateStoryStoreState_(null);\n      }),\n      Services.storyRequestServiceForOrNull(this.win).then((service) => {\n        this.requestService_ = service;\n      }),\n      Services.storyAnalyticsServiceForOrNull(this.win).then((service) => {\n        this.analyticsService_ = service;\n      }),\n      Services.localizationServiceForOrNull(this.element).then((service) => {\n        this.localizationService = service;\n      }),\n    ]).then(() => {\n      this.rootEl_ = this.buildComponent();\n      this.rootEl_.classList.add('i-amphtml-story-interactive-container');\n      createShadowRootWithStyle(\n        this.element,\n        dev().assertElement(this.rootEl_),\n        CSS + concreteCSS\n      );\n      return Promise.resolve();\n    });\n  }\n\n  /**\n   * @private\n   */\n  loadFonts_() {\n    if (\n      !AmpStoryInteractive.loadedFonts &&\n      this.win.document.fonts &&\n      FontFace\n    ) {\n      fontsToLoad.forEach((fontProperties) => {\n        const font = new FontFace(fontProperties.family, fontProperties.src, {\n          weight: fontProperties.weight,\n          style: 'normal',\n        });\n        font.load().then(() => {\n          this.win.document.fonts.add(font);\n        });\n      });\n    }\n    AmpStoryInteractive.loadedFonts = true;\n  }\n\n  /**\n   * Reads the element attributes prefixed with option- and returns them as a list.\n   * eg: [\n   *      {optionIndex: 0, text: 'Koala'},\n   *      {optionIndex: 1, text: 'Developers', correct: ''}\n   *    ]\n   * @protected\n   * @return {?Array<!OptionConfigType>}\n   */\n  parseOptions_() {\n    const options = [];\n    toArray(this.element.attributes).forEach((attr) => {\n      // Match 'option-#-type' (eg: option-1-text, option-2-image, option-3-correct...)\n      if (attr.name.match(/^option-\\d+(-\\w+)+$/)) {\n        const splitParts = attr.name.split('-');\n        const optionNumber = parseInt(splitParts[1], 10);\n        // Add all options in order on the array with correct index.\n        while (options.length < optionNumber) {\n          options.push({'optionIndex': options.length});\n        }\n        options[optionNumber - 1][splitParts.slice(2).join('')] = attr.value;\n      }\n    });\n    if (\n      options.length >= this.optionBounds_[0] &&\n      options.length <= this.optionBounds_[1]\n    ) {\n      return options;\n    }\n    devAssert(\n      options.length >= this.optionBounds_[0] &&\n        options.length <= this.optionBounds_[1],\n      `Improper number of options. Expected ${this.optionBounds_[0]} <= options <= ${this.optionBounds_[1]} but got ${options.length}.`\n    );\n    dev().error(\n      TAG,\n      `Improper number of options. Expected ${this.optionBounds_[0]} <= options <= ${this.optionBounds_[1]} but got ${options.length}.`\n    );\n  }\n\n  /**\n   * Finds the prompt and adds it to the prompt-container\n   *\n   * @protected\n   * @param {Element} root\n   */\n  attachPrompt_(root) {\n    const promptContainer = root.querySelector(\n      '.i-amphtml-story-interactive-prompt-container'\n    );\n\n    if (!this.element.hasAttribute('prompt-text')) {\n      this.rootEl_.removeChild(promptContainer);\n    } else {\n      const prompt = document.createElement('p');\n      prompt.textContent = this.element.getAttribute('prompt-text');\n      prompt.classList.add('i-amphtml-story-interactive-prompt');\n      promptContainer.appendChild(prompt);\n    }\n  }\n\n  /**\n   * Generates the template from the config_ Map.\n   *\n   * @return {!Element} rootEl_\n   * @protected @abstract\n   */\n  buildComponent() {\n    // Subclass must override.\n  }\n\n  /** @override */\n  layoutCallback() {\n    if (\n      isExperimentOn(this.win, 'amp-story-interactive-disclaimer') &&\n      this.element.hasAttribute('endpoint')\n    ) {\n      // Needs to be called after buildCallback to measure properly.\n      this.disclaimerEl_ = buildInteractiveDisclaimer(this);\n      this.rootEl_.prepend(this.disclaimerEl_);\n    }\n    this.initializeListeners_();\n    return (this.backendDataPromise_ = this.element.hasAttribute('endpoint')\n      ? this.retrieveInteractiveData_()\n      : Promise.resolve());\n  }\n\n  /**\n   * Gets a Promise to return the unique AMP clientId\n   * @private\n   * @return {Promise<string>}\n   */\n  getClientId_() {\n    if (!this.clientIdPromise_) {\n      this.clientIdPromise_ = Services.cidForDoc(this.element).then((data) => {\n        return data.get(\n          {scope: 'amp-story', createCookieIfNotPresent: true},\n          /* consent */ Promise.resolve()\n        );\n      });\n    }\n    return this.clientIdPromise_;\n  }\n\n  /**\n   * Reacts to RTL state updates and triggers the UI for RTL.\n   * @param {boolean} rtlState\n   * @private\n   */\n  onRtlStateUpdate_(rtlState) {\n    this.mutateElement(() => {\n      rtlState\n        ? this.rootEl_.setAttribute('dir', 'rtl')\n        : this.rootEl_.removeAttribute('dir');\n    });\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    return layout === 'container';\n  }\n\n  /**\n   * Add classes to adjust the bottom padding on the grid-layer\n   * to prevent overlap with the component.\n   *\n   * @private\n   */\n  adjustGridLayer_() {\n    const gridLayer = closest(dev().assertElement(this.element), (el) => {\n      return el.tagName.toLowerCase() === 'amp-story-grid-layer';\n    });\n\n    gridLayer.classList.add('i-amphtml-story-has-interactive');\n\n    if (gridLayer.parentElement.querySelector('amp-story-cta-layer')) {\n      gridLayer.classList.add('i-amphtml-story-has-CTA-layer');\n    }\n\n    if (gridLayer.parentElement.querySelector('amp-story-page-attachment')) {\n      gridLayer.classList.add('i-amphtml-story-has-page-attachment');\n    }\n  }\n\n  /**\n   * Attaches functions to each option to handle state transition.\n   * @private\n   */\n  initializeListeners_() {\n    this.storeService_.subscribe(\n      StateProperty.RTL_STATE,\n      (rtlState) => {\n        this.onRtlStateUpdate_(rtlState);\n      },\n      true /** callToInitialize */\n    );\n\n    // Check if the component page is active, and add class.\n    this.storeService_.subscribe(\n      StateProperty.CURRENT_PAGE_ID,\n      (currPageId) => {\n        this.mutateElement(() => {\n          this.rootEl_.classList.toggle(\n            INTERACTIVE_ACTIVE_CLASS,\n            currPageId === this.getPageId_()\n          );\n          this.toggleTabbableElements_(currPageId === this.getPageId_());\n        });\n        tryCloseDisclaimer(this, this.disclaimerEl_);\n      },\n      true /** callToInitialize */\n    );\n\n    this.rootEl_.addEventListener('click', (e) => this.handleTap_(e));\n  }\n\n  /**\n   * Handles a tap event on the quiz element.\n   * @param {Event} e\n   * @protected\n   */\n  handleTap_(e) {\n    if (this.hasUserSelection_) {\n      return;\n    }\n\n    const optionEl = closest(\n      dev().assertElement(e.target),\n      (element) => {\n        return element.classList.contains('i-amphtml-story-interactive-option');\n      },\n      this.rootEl_\n    );\n\n    if (optionEl) {\n      this.updateStoryStoreState_(optionEl.optionIndex_);\n      this.handleOptionSelection_(optionEl);\n      const confettiEmoji = this.options_[optionEl.optionIndex_].confetti;\n      if (confettiEmoji) {\n        emojiConfetti(\n          dev().assertElement(this.rootEl_),\n          this.win,\n          confettiEmoji\n        );\n      }\n      tryCloseDisclaimer(this, this.disclaimerEl_);\n    }\n  }\n\n  /**\n   * Triggers the analytics event for quiz response.\n   *\n   * @param {!Element} optionEl\n   * @private\n   */\n  triggerAnalytics_(optionEl) {\n    this.variableService_.onVariableUpdate(\n      AnalyticsVariable.STORY_INTERACTIVE_ID,\n      this.element.getAttribute('id')\n    );\n    this.variableService_.onVariableUpdate(\n      AnalyticsVariable.STORY_INTERACTIVE_RESPONSE,\n      optionEl.optionIndex_\n    );\n    this.variableService_.onVariableUpdate(\n      AnalyticsVariable.STORY_INTERACTIVE_TYPE,\n      this.interactiveType_\n    );\n\n    this.element[ANALYTICS_TAG_NAME] = this.element.tagName;\n    this.analyticsService_.triggerEvent(\n      StoryAnalyticsEvent.INTERACTIVE,\n      this.element\n    );\n  }\n\n  /**\n   * Update component to reflect values in the data obtained.\n   * Called when user has responded (in this session or before).\n   *\n   * @protected @abstract\n   * @param {!Array<!InteractiveOptionType>} unusedOptionsData\n   */\n  displayOptionsData(unusedOptionsData) {\n    // Subclass must implement\n  }\n\n  /**\n   * Preprocess the percentages for display.\n   *\n   * @param {!Array<!InteractiveOptionType>} optionsData\n   * @return {Array<number>}\n   * @protected\n   */\n  preprocessPercentages_(optionsData) {\n    const totalResponseCount = optionsData.reduce(\n      (acc, response) => acc + response['count'],\n      0\n    );\n\n    let percentages = optionsData.map((e) =>\n      ((100 * e['count']) / totalResponseCount).toFixed(2)\n    );\n    let total = percentages.reduce((acc, x) => acc + Math.round(x), 0);\n\n    // Special case: divide remainders by three if they break 100,\n    // 3 is the maximum above 100 the remainders can add.\n    if (total > 100) {\n      percentages = percentages.map((percentage) =>\n        (percentage - (2 * (percentage - Math.floor(percentage))) / 3).toFixed(\n          2\n        )\n      );\n      total = percentages.reduce((acc, x) => (acc += Math.round(x)), 0);\n    }\n\n    if (total === 100) {\n      return percentages.map((percentage) => Math.round(percentage));\n    }\n\n    // Truncate all and round up those with the highest remainders,\n    // preserving order and ties and adding to 100 (if possible given ties and ordering).\n    let remainder = 100 - total;\n\n    let preserveOriginal = percentages.map((percentage, index) => {\n      return {\n        originalIndex: index,\n        value: percentage,\n        remainder: (percentage - Math.floor(percentage)).toFixed(2),\n      };\n    });\n    preserveOriginal.sort(\n      (left, right) =>\n        // Break remainder ties using the higher value.\n        right.remainder - left.remainder || right.value - left.value\n    );\n\n    const finalPercentages = [];\n    while (remainder > 0 && preserveOriginal.length !== 0) {\n      const highestRemainderObj = preserveOriginal[0];\n\n      const ties = preserveOriginal.filter(\n        (percentageObj) => percentageObj.value === highestRemainderObj.value\n      );\n      preserveOriginal = preserveOriginal.filter(\n        (percentageObj) => percentageObj.value !== highestRemainderObj.value\n      );\n\n      const toRoundUp =\n        ties.length <= remainder && highestRemainderObj.remainder !== '0.00';\n\n      ties.forEach((percentageObj) => {\n        finalPercentages[percentageObj.originalIndex] =\n          Math.floor(percentageObj.value) + (toRoundUp ? 1 : 0);\n      });\n\n      // Update the remainder given additions to the percentages.\n      remainder -= toRoundUp ? ties.length : 0;\n    }\n\n    preserveOriginal.forEach((percentageObj) => {\n      finalPercentages[percentageObj.originalIndex] = Math.floor(\n        percentageObj.value\n      );\n    });\n\n    return finalPercentages;\n  }\n\n  /**\n   * Triggers changes to component state on response interactive.\n   *\n   * @param {!Element} optionEl\n   * @private\n   */\n  handleOptionSelection_(optionEl) {\n    this.backendDataPromise_\n      .then(() => {\n        if (this.hasUserSelection_) {\n          return;\n        }\n\n        this.triggerAnalytics_(optionEl);\n        this.hasUserSelection_ = true;\n\n        if (this.optionsData_) {\n          this.optionsData_[optionEl.optionIndex_]['count']++;\n          this.optionsData_[optionEl.optionIndex_]['selected'] = true;\n        }\n\n        this.mutateElement(() => {\n          this.updateToPostSelectionState_(optionEl);\n        });\n\n        if (this.element.hasAttribute('endpoint')) {\n          this.executeInteractiveRequest_('POST', optionEl.optionIndex_);\n        }\n      })\n      .catch(() => {\n        // If backend is not properly connected, still update state.\n        this.triggerAnalytics_(optionEl);\n        this.hasUserSelection_ = true;\n        this.mutateElement(() => {\n          this.updateToPostSelectionState_(optionEl);\n        });\n      });\n  }\n\n  /**\n   * Get the Interactive data from the datastore\n   *\n   * @return {?Promise<?InteractiveResponseType|?JsonObject|undefined>}\n   * @private\n   */\n  retrieveInteractiveData_() {\n    return this.executeInteractiveRequest_('GET').then((response) => {\n      this.handleSuccessfulDataRetrieval_(\n        /** @type {InteractiveResponseType} */ (response)\n      );\n    });\n  }\n\n  /**\n   * Executes a Interactive API call.\n   *\n   * @param {string} method GET or POST.\n   * @param {number=} optionSelected\n   * @return {!Promise<!InteractiveResponseType|string>}\n   * @private\n   */\n  executeInteractiveRequest_(method, optionSelected = undefined) {\n    let url = this.element.getAttribute('endpoint');\n    if (!assertAbsoluteHttpOrHttpsUrl(url)) {\n      return Promise.reject(ENDPOINT_INVALID_ERROR);\n    }\n\n    return this.getClientId_().then((clientId) => {\n      const requestOptions = {'method': method};\n      const requestParams = dict({\n        'type': this.interactiveType_,\n        'client': clientId,\n      });\n      url = appendPathToUrl(\n        this.urlService_.parse(url),\n        this.getInteractiveId_()\n      );\n      if (requestOptions['method'] === 'POST') {\n        requestOptions['body'] = {'option_selected': optionSelected};\n        requestOptions['headers'] = {'Content-Type': 'application/json'};\n        url = appendPathToUrl(this.urlService_.parse(url), ':vote');\n      }\n      url = addParamsToUrl(url, requestParams);\n      return this.requestService_\n        .executeRequest(url, requestOptions)\n        .catch((err) => dev().error(TAG, err));\n    });\n  }\n\n  /**\n   * Handles incoming interactive data response\n   *\n   * RESPONSE FORMAT\n   * {\n   *  options: [\n   *    {\n   *      index:\n   *      count:\n   *      selected:\n   *    },\n   *    ...\n   *  ]\n   * }\n   * @param {InteractiveResponseType|undefined} response\n   * @private\n   */\n  handleSuccessfulDataRetrieval_(response) {\n    if (!(response && response['options'])) {\n      devAssert(\n        response && 'options' in response,\n        `Invalid interactive response, expected { data: InteractiveResponseType, ...} but received ${response}`\n      );\n      dev().error(\n        TAG,\n        `Invalid interactive response, expected { data: InteractiveResponseType, ...} but received ${response}`\n      );\n      return;\n    }\n    const numOptions = this.rootEl_.querySelectorAll(\n      '.i-amphtml-story-interactive-option'\n    ).length;\n    // Only keep the visible options to ensure visible percentages add up to 100.\n    this.updateComponentOnDataRetrieval_(\n      response['options'].slice(0, numOptions)\n    );\n  }\n\n  /**\n   * Updates the quiz to reflect the state of the remote data.\n   * @param {!Array<InteractiveOptionType>} data\n   * @private\n   */\n  updateComponentOnDataRetrieval_(data) {\n    const options = this.rootEl_.querySelectorAll(\n      '.i-amphtml-story-interactive-option'\n    );\n\n    this.optionsData_ = data;\n    data.forEach((response, index) => {\n      if (response.selected) {\n        this.hasUserSelection_ = true;\n        this.updateStoryStoreState_(index);\n        this.mutateElement(() => {\n          this.updateToPostSelectionState_(options[index]);\n        });\n      }\n    });\n  }\n\n  /**\n   * Updates the selected classes on component and option selected.\n   * @param {?Element} selectedOption\n   * @protected\n   */\n  updateToPostSelectionState_(selectedOption) {\n    this.rootEl_.classList.add('i-amphtml-story-interactive-post-selection');\n    if (selectedOption != null) {\n      selectedOption.classList.add(\n        'i-amphtml-story-interactive-option-selected'\n      );\n    }\n\n    if (this.optionsData_) {\n      this.rootEl_.classList.add('i-amphtml-story-interactive-has-data');\n      this.displayOptionsData(this.optionsData_);\n    }\n    this.getOptionElements().forEach((el) => {\n      el.setAttribute('tabindex', -1);\n    });\n  }\n\n  /**\n   * @public\n   * @param {?number} option\n   */\n  updateStoryStoreState_(option = null) {\n    const update = {\n      option: option != null ? this.options_[option] : null,\n      interactiveId: this.getInteractiveId_(),\n      type: this.interactiveType_,\n    };\n    this.storeService_.dispatch(Action.ADD_INTERACTIVE_REACT, update);\n  }\n\n  /**\n   * Toggles the tabbable elements (buttons, links, etc) to only reach them when page is active.\n   * @param {boolean} toggle\n   */\n  toggleTabbableElements_(toggle) {\n    this.rootEl_.querySelectorAll('button, a').forEach((el) => {\n      // Disable tabbing through options if already selected.\n      if (\n        el.classList.contains('i-amphtml-story-interactive-option') &&\n        this.hasUserSelection_\n      ) {\n        el.setAttribute('tabindex', -1);\n      } else {\n        el.setAttribute('tabindex', toggle ? 0 : -1);\n      }\n    });\n  }\n}\n", "export const CSS = \".i-amphtml-story-interactive-binary-poll-container{color:var(--i-amphtml-interactive-option-accent-color)!important;--post-select-scale:0.5!important;--post-select-scale-variable:1;border-radius:2em!important}.i-amphtml-story-interactive-binary-poll-option-container{background:var(--i-amphtml-interactive-option-background-color)!important;height:5.625em!important;border-radius:1em!important;overflow:hidden!important;box-shadow:var(--i-amphtml-interactive-component-shadow)!important;transform:translateZ(0)!important}.i-amphtml-story-interactive-binary-poll-option-container,.i-amphtml-story-interactive-option{display:-ms-flexbox!important;display:flex!important;-ms-flex-pack:center!important;justify-content:center!important}.i-amphtml-story-interactive-option{-ms-flex-align:center!important;align-items:center!important;text-align:center!important;-ms-flex-direction:column!important;flex-direction:column!important;width:50%;position:relative!important;background-color:transparent!important;font:inherit!important;border:none!important;outline:none!important;color:inherit!important}.i-amphtml-story-interactive-prompt{text-align:center!important}.i-amphtml-story-interactive-option-text-container{width:100%!important;display:-ms-flexbox!important;display:flex!important;-ms-flex-align:center!important;align-items:center!important;-ms-flex-direction:column!important;flex-direction:column!important;transform:translateY(calc(1em + 1px))!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option-text-container{transition:transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve),opacity var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve)!important;transform:translateY(0)!important}.i-amphtml-story-interactive-binary-poll-container:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option-divider{height:100%!important;width:1px!important;opacity:0.3!important;background-color:var(--i-amphtml-interactive-theme-border)!important}.i-amphtml-story-interactive-option .i-amphtml-story-interactive-option-percent-bar{height:100%!important;width:100%!important;position:absolute!important;opacity:0!important;transform-origin:left!important;transition:transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve)!important}.i-amphtml-story-interactive-option:last-child .i-amphtml-story-interactive-option-percent-bar,[dir=rtl] .i-amphtml-story-interactive-option .i-amphtml-story-interactive-option-percent-bar{transform-origin:right!important}[dir=rtl] .i-amphtml-story-interactive-option:last-child .i-amphtml-story-interactive-option-percent-bar{transform-origin:left!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option.i-amphtml-story-interactive-option-selected .i-amphtml-story-interactive-option-percent-bar{background-color:var(--i-amphtml-interactive-option-accent-color)!important;opacity:0.2!important;animation:i-amphtml-interactive-animation-flash-background forwards var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve)}.i-amphtml-story-interactive-option-title{font-weight:800!important;font-size:1.75em!important;margin:0!important;line-height:1.3em!important;width:4.42em!important;display:-ms-flexbox!important;display:flex!important;-ms-flex-align:center!important;align-items:center!important;-ms-flex-pack:center!important;justify-content:center!important;transition:transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve)!important;height:2.6em!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option-title{transform:scale(var(--post-select-scale))!important}.i-amphtml-story-interactive-option-title-text{overflow:hidden!important;text-overflow:ellipsis!important;display:-webkit-box!important;-webkit-line-clamp:2!important;-webkit-box-orient:vertical!important;transition:transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve)!important;max-height:2.6em!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option-title-text{transform:scale(var(--post-select-scale-variable))!important}.i-amphtml-story-interactive-option-percentage-text{font-weight:700!important;font-size:1.375em!important;transform:scale(0)!important;display:inline-block!important;transition:transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve)!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option-percentage-text{transform:scale(1) translateY(-0.75em)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:before{background-color:var(--i-amphtml-interactive-theme-shading-flash)!important;content:\\\"\\\"!important;position:absolute!important;width:100%!important;height:100%!important;left:0!important;opacity:0!important;animation:i-amphtml-interactive-animation-landing-animation-flash-background var(--i-amphtml-interactive-animation-time)!important;animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el1)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:nth-of-type(2):before{animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el2)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:focus:before{opacity:1!important;background-color:var(--i-amphtml-interactive-theme-shading)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option .i-amphtml-story-interactive-option-title-text{animation:i-amphtml-story-interactive-option-title-text-landing-animation var(--i-amphtml-interactive-animation-time)!important;animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el1)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:nth-of-type(2) .i-amphtml-story-interactive-option-title-text{animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el2)!important}@keyframes i-amphtml-story-interactive-option-title-text-landing-animation{33%{transform:scale(.95)}}\\n/*# sourceURL=/extensions/amp-story-interactive/0.1/amp-story-interactive-binary-poll.css*/\";\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AmpStoryInteractive,\n  InteractiveType,\n} from './amp-story-interactive-abstract';\nimport {CSS} from '../../../build/amp-story-interactive-binary-poll-0.1.css';\nimport {computedStyle, setStyle} from '../../../src/style';\nimport {dev} from '../../../src/log';\nimport {htmlFor} from '../../../src/static-template';\nimport {toArray} from '../../../src/core/types/array';\n\n/** @const @enum {number} */\nexport const FontSize = {\n  EMOJI: 28,\n  SINGLE_LINE: 16,\n  DOUBLE_LINE: 14,\n};\n\n/**\n * Minimum transformX value.\n * Prevents small percentages from moving outside of poll.\n *\n/** @const {number} */\nconst MIN_HORIZONTAL_TRANSFORM = -20;\n\n/**\n * Generates the template for the binary poll.\n *\n * @param {!Element} element\n * @return {!Element}\n */\nconst buildBinaryPollTemplate = (element) => {\n  const html = htmlFor(element);\n  return html`\n    <div class=\"i-amphtml-story-interactive-binary-poll-container\">\n      <div class=\"i-amphtml-story-interactive-prompt-container\"></div>\n      <div\n        class=\"i-amphtml-story-interactive-binary-poll-option-container\"\n      ></div>\n    </div>\n  `;\n};\n\n/**\n * Generates the template for the binary poll option.\n *\n * @param {!Element} element\n * @return {!Element}\n */\nconst buildOptionTemplate = (element) => {\n  const html = htmlFor(element);\n  return html`\n    <button class=\"i-amphtml-story-interactive-option\" aria-live=\"polite\">\n      <span class=\"i-amphtml-story-interactive-option-percent-bar\"></span>\n      <span class=\"i-amphtml-story-interactive-option-text-container\">\n        <span class=\"i-amphtml-story-interactive-option-title\"\n          ><span class=\"i-amphtml-story-interactive-option-title-text\"></span\n        ></span>\n        <span\n          class=\"i-amphtml-story-interactive-option-percentage-text\"\n          aria-hidden=\"true\"\n          >0%</span\n        >\n      </span>\n    </button>\n  `;\n};\n\n/**\n * Generates the template for the option divider.\n *\n * @param {!Element} element\n * @return {!Element}\n */\nconst buildBinaryOptionDividerTemplate = (element) => {\n  const html = htmlFor(element);\n  return html`\n    <span class=\"i-amphtml-story-interactive-option-divider\"></span>\n  `;\n};\n\nexport class AmpStoryInteractiveBinaryPoll extends AmpStoryInteractive {\n  /**\n   * @param {!AmpElement} element\n   */\n  constructor(element) {\n    super(element, InteractiveType.POLL, /* bounds */ [2, 2]);\n  }\n\n  /** @override */\n  buildCallback() {\n    return super.buildCallback(CSS);\n  }\n\n  /** @override */\n  buildComponent() {\n    this.rootEl_ = buildBinaryPollTemplate(this.element);\n    this.attachContent_(this.rootEl_);\n    return this.rootEl_;\n  }\n\n  /** @override */\n  layoutCallback() {\n    return this.adaptFontSize_(dev().assertElement(this.rootEl_)).then(() =>\n      super.layoutCallback()\n    );\n  }\n\n  /**\n   * Gets the options and adds them to the element\n   *\n   * @private\n   * @param {!Element} root\n   */\n  attachContent_(root) {\n    this.attachPrompt_(root);\n    const options = root.querySelector(\n      '.i-amphtml-story-interactive-binary-poll-option-container'\n    );\n    options.appendChild(this.generateOption_(this.options_[0]));\n    options.appendChild(buildBinaryOptionDividerTemplate(root));\n    options.appendChild(this.generateOption_(this.options_[1]));\n  }\n\n  /**\n   * This method changes the font-size on post-select to best display the titles.\n   *\n   * It measures the number of lines and chars on the titles and generates an appropriate font-size.\n   * - font-size: 28px - Both titles are emojis or short text (yes/no)\n   * - font-size: 16px - Both titles have at most one line\n   * - font-size: 14px - At least one title has two lines\n   *\n   * The title container will shrink 50% on post-select to indicate the safe-zone for the title is smaller.\n   * To keep the font-size (original font-size:28px) true to the guidelines above, a post-select-scale is applied counteracting it.\n   * Eg. post-select-scale:1 corresponds to font-size:14px after the 50% scale (for 2-lined title),\n   * but post-select-scale:1.14 corresponds to font-size:16px after the 50% scale (for 1-lined titles),\n   * and post-select-scale:2 corresponds to font-size:28px after the 50% scale (for emoji titles).\n   * @private\n   * @param {!Element} root\n   * @return {!Promise}\n   */\n  adaptFontSize_(root) {\n    let largestFontSize = FontSize.EMOJI;\n    const allTitles = toArray(\n      root.querySelectorAll('.i-amphtml-story-interactive-option-title-text')\n    );\n    return this.measureMutateElement(\n      () => {\n        allTitles.forEach((e) => {\n          const lines = Math.round(\n            e./*OK*/ clientHeight /\n              parseFloat(\n                computedStyle(this.win, e)['line-height'].replace('px', '')\n              )\n          );\n          if (e.textContent.length <= 3 && largestFontSize >= FontSize.EMOJI) {\n            largestFontSize = FontSize.EMOJI;\n          } else if (lines == 1 && largestFontSize >= FontSize.SINGLE_LINE) {\n            largestFontSize = FontSize.SINGLE_LINE;\n          } else if (lines == 2) {\n            largestFontSize = FontSize.DOUBLE_LINE;\n          }\n        });\n      },\n      () => {\n        setStyle(\n          root,\n          '--post-select-scale-variable',\n          `${(largestFontSize / FontSize.DOUBLE_LINE).toFixed(2)}`\n        );\n      },\n      root\n    );\n  }\n\n  /**\n   * Creates an option template filled with the details the attributes.\n   * @param {./amp-story-interactive-abstract.OptionConfigType} option\n   * @return {Element} option element\n   * @private\n   */\n  generateOption_(option) {\n    const convertedOption = buildOptionTemplate(this.element);\n\n    const optionText = convertedOption.querySelector(\n      '.i-amphtml-story-interactive-option-title-text'\n    );\n    optionText.textContent = option['text'];\n    convertedOption.optionIndex_ = option['optionIndex'];\n    return convertedOption;\n  }\n\n  /**\n   * Creates a number to transfrom the x axis of binary poll text.\n   * @param {number} percentage\n   * @return {number}\n   * @private\n   */\n  getTransformVal_(percentage) {\n    let mappedVal = Math.max(percentage - 50, MIN_HORIZONTAL_TRANSFORM);\n    if (document.dir === 'rtl') {\n      mappedVal *= -1;\n    }\n    return mappedVal;\n  }\n\n  /**\n   * @override\n   */\n  displayOptionsData(responseData) {\n    if (!responseData) {\n      return;\n    }\n\n    const percentages = this.preprocessPercentages_(responseData);\n\n    this.getOptionElements().forEach((el, index) => {\n      // TODO(jackbsteinberg): Add i18n support for various ways of displaying percentages.\n      const percentage = percentages[index];\n      const percentageEl = el.querySelector(\n        '.i-amphtml-story-interactive-option-percentage-text'\n      );\n      percentageEl.textContent = `${percentage}%`;\n      percentageEl.removeAttribute('aria-hidden');\n\n      setStyle(\n        el.querySelector('.i-amphtml-story-interactive-option-percent-bar'),\n        'transform',\n        `scaleX(${percentage * 0.01 * 2})`\n      );\n\n      const textContainer = el.querySelector(\n        '.i-amphtml-story-interactive-option-text-container'\n      );\n\n      textContainer.setAttribute(\n        'style',\n        `transform: translateX(${\n          this.getTransformVal_(percentage) * (index === 0 ? 1 : -1)\n        }%) !important`\n      );\n      if (responseData[index].selected) {\n        textContainer.setAttribute(\n          'aria-label',\n          'selected ' + textContainer.textContent\n        );\n      }\n\n      if (percentage === 0) {\n        setStyle(textContainer, 'opacity', '0');\n      }\n    });\n  }\n}\n", "export const CSS = \".i-amphtml-story-interactive-option-container{background-color:var(--i-amphtml-interactive-options-chip-background-color)!important;border-radius:1em!important;color:var(--i-amphtml-interactive-strong-text-color)!important;font-weight:700!important;padding:.5em!important}.i-amphtml-story-interactive-option{display:-ms-flexbox!important;display:flex!important;-ms-flex-align:center!important;align-items:center!important;-ms-flex-pack:justify!important;justify-content:space-between!important;height:3.5em!important;overflow:hidden!important;padding:0px .75em!important;position:relative!important;box-shadow:var(--i-amphtml-interactive-chip-shadow),inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border)!important;-webkit-box-shadow:var(--i-amphtml-interactive-chip-shadow),inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border)!important;-moz-box-shadow:var(--i-amphtml-interactive-chip-shadow),inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border)!important;border-radius:.5em!important;background-color:var(--i-amphtml-interactive-option-background-color);border:none!important;font:inherit!important;color:inherit!important;width:100%!important;outline:none!important;text-align:start!important}.i-amphtml-story-interactive-option:not(:first-child){margin-top:.5em!important}.i-amphtml-story-interactive-option.i-amphtml-story-interactive-option-selected{background-color:var(--i-amphtml-interactive-theme-shading-base);box-shadow:var(--i-amphtml-interactive-chip-shadow-inset),inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border)!important;-webkit-box-shadow:var(--i-amphtml-interactive-chip-shadow-inset),inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border)!important;-moz-box-shadow:var(--i-amphtml-interactive-chip-shadow-inset),inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border)!important;animation:i-amphtml-interactive-animation-flash-background-color forwards var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve)!important}.i-amphtml-story-interactive-option:after{content:\\\"\\\"!important;background-color:var(--i-amphtml-interactive-theme-shading)!important;position:absolute!important;height:100%!important;width:100%!important;left:0!important;top:0!important;transform:translateX(-100%)!important;transition:transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:focus:before{opacity:1!important;background-color:var(--i-amphtml-interactive-theme-shading)!important}.i-amphtml-story-interactive-poll-container[dir=rtl] .i-amphtml-story-interactive-option:after{transform:translateX(100%)!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option:after{transform:translateX(calc(var(--option-percentage) - 100%))!important}.i-amphtml-story-interactive-poll-container.i-amphtml-story-interactive-post-selection[dir=rtl] .i-amphtml-story-interactive-option:after{transform:translateX(calc(100% - var(--option-percentage)))!important}.i-amphtml-story-interactive-poll-container:not(.i-amphtml-story-interactive-has-data) .i-amphtml-story-interactive-option:after{visibility:hidden!important}.i-amphtml-story-interactive-option-text{font-size:1.375em!important;margin:0!important;z-index:1!important;transition:transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve)!important;transform-origin:left!important;line-height:1.3em!important;word-wrap:break-word!important;overflow:hidden!important;text-overflow:ellipsis!important;display:-webkit-box!important;-webkit-line-clamp:2!important;-webkit-box-orient:vertical!important;max-height:2.6em!important}.i-amphtml-story-interactive-poll-two-lines .i-amphtml-story-interactive-option-text{font-size:1.125em!important}.i-amphtml-story-interactive-poll-container[dir=rtl] .i-amphtml-story-interactive-option-text{transform-origin:right!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option-text{transform:scale(0.72)!important}.i-amphtml-story-interactive-option-percentage{font-weight:700!important;font-size:1.75em!important;margin:0!important;opacity:0!important;transition:transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve)!important;transform:translateX(2em)!important;-ms-flex-negative:0!important;flex-shrink:0!important;direction:ltr!important}.i-amphtml-story-interactive-poll-container[dir=rtl] .i-amphtml-story-interactive-option-percentage{transform:translateX(-2em)!important}.i-amphtml-story-interactive-has-data.i-amphtml-story-interactive-post-selection:not([dir=rtl]) .i-amphtml-story-interactive-option-percentage,.i-amphtml-story-interactive-has-data.i-amphtml-story-interactive-post-selection[dir=rtl] .i-amphtml-story-interactive-option-percentage{opacity:1!important;transform:translateX(0px)!important}.i-amphtml-story-interactive-option-percentage-sign{font-size:.6em!important;margin-left:-.25em!important;display:inline-block!important}.i-amphtml-story-interactive-poll-container:not(.i-amphtml-story-interactive-has-data) .i-amphtml-story-interactive-option-percentage{visibility:hidden!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:before{background-color:var(--i-amphtml-interactive-theme-shading-flash)!important;content:\\\"\\\"!important;position:absolute!important;width:100%!important;height:100%!important;left:0!important;opacity:0!important;animation:i-amphtml-interactive-animation-landing-animation-flash-background var(--i-amphtml-interactive-animation-time)!important;animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el1)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:nth-of-type(2):before{animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el2)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:nth-of-type(3):before{animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el3)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:nth-of-type(4):before{animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el4)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option .i-amphtml-story-interactive-option-text{transform-origin:center!important;animation:i-amphtml-story-interactive-option-text-landing-text var(--i-amphtml-interactive-animation-time)!important;animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el1)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:nth-of-type(2) .i-amphtml-story-interactive-option-text{animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el2)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:nth-of-type(3) .i-amphtml-story-interactive-option-text{animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el3)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:nth-of-type(4) .i-amphtml-story-interactive-option-text{animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el4)!important}@keyframes i-amphtml-story-interactive-option-text-landing-text{33%{transform:translateY(.2em)}}\\n/*# sourceURL=/extensions/amp-story-interactive/0.1/amp-story-interactive-poll.css*/\";\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AmpStoryInteractive,\n  InteractiveType,\n} from './amp-story-interactive-abstract';\nimport {CSS} from '../../../build/amp-story-interactive-poll-0.1.css';\nimport {computedStyle, setStyle} from '../../../src/style';\nimport {dev} from '../../../src/log';\nimport {htmlFor} from '../../../src/static-template';\nimport {toArray} from '../../../src/core/types/array';\n\n/**\n * Generates the template for the poll.\n *\n * @param {!Element} element\n * @return {!Element}\n */\nconst buildPollTemplate = (element) => {\n  const html = htmlFor(element);\n  return html`\n    <div class=\"i-amphtml-story-interactive-poll-container\">\n      <div class=\"i-amphtml-story-interactive-prompt-container\"></div>\n      <div class=\"i-amphtml-story-interactive-option-container\"></div>\n    </div>\n  `;\n};\n\n/**\n * Generates the template for each option.\n *\n * @param {!Element} option\n * @return {!Element}\n */\nconst buildOptionTemplate = (option) => {\n  const html = htmlFor(option);\n  return html`\n    <button class=\"i-amphtml-story-interactive-option\" aria-live=\"polite\">\n      <span class=\"i-amphtml-story-interactive-option-text\"></span>\n      <span class=\"i-amphtml-story-interactive-option-percentage\">\n        <span class=\"i-amphtml-story-interactive-option-percentage-text\"></span>\n        <span class=\"i-amphtml-story-interactive-option-percentage-sign\"\n          >%</span\n        >\n      </span>\n    </button>\n  `;\n};\n\nexport class AmpStoryInteractivePoll extends AmpStoryInteractive {\n  /**\n   * @param {!AmpElement} element\n   */\n  constructor(element) {\n    super(element, InteractiveType.POLL, [2, 4]);\n  }\n\n  /** @override */\n  buildCallback() {\n    return super.buildCallback(CSS);\n  }\n\n  /** @override */\n  buildComponent() {\n    this.rootEl_ = buildPollTemplate(this.element);\n    this.attachContent_(this.rootEl_);\n    return this.rootEl_;\n  }\n\n  /** @override */\n  layoutCallback() {\n    return this.adaptFontSize_(dev().assertElement(this.rootEl_)).then(() =>\n      super.layoutCallback()\n    );\n  }\n\n  /**\n   * Finds the prompt and options content\n   * and adds it to the quiz element.\n   *\n   * @private\n   * @param {Element} root\n   */\n  attachContent_(root) {\n    this.attachPrompt_(root);\n    this.options_.forEach((option, index) =>\n      this.configureOption_(option, index)\n    );\n  }\n\n  /**\n   * Creates an option container with option content,\n   * adds styling and answer choices,\n   * and adds it to the quiz element.\n   *\n   * @param {!./amp-story-interactive-abstract.OptionConfigType} option\n   * @param {number} index\n   * @private\n   */\n  configureOption_(option, index) {\n    const convertedOption = buildOptionTemplate(this.element);\n    convertedOption.optionIndex_ = index;\n\n    // Extract and structure the option information\n    convertedOption.querySelector(\n      '.i-amphtml-story-interactive-option-text'\n    ).textContent = option.text;\n\n    this.rootEl_\n      .querySelector('.i-amphtml-story-interactive-option-container')\n      .appendChild(convertedOption);\n  }\n\n  /**\n   * @override\n   */\n  displayOptionsData(optionsData) {\n    if (!optionsData) {\n      return;\n    }\n\n    const percentages = this.preprocessPercentages_(optionsData);\n\n    this.getOptionElements().forEach((el, index) => {\n      if (optionsData[index].selected) {\n        const textEl = el.querySelector(\n          '.i-amphtml-story-interactive-option-text'\n        );\n        textEl.setAttribute('aria-label', 'selected ' + textEl.textContent);\n      }\n      el.querySelector(\n        '.i-amphtml-story-interactive-option-percentage-text'\n      ).textContent = percentages[index];\n      setStyle(el, '--option-percentage', percentages[index] + '%');\n    });\n  }\n\n  /**\n   * This method changes the font-size to best display the options, measured only once on create.\n   *\n   * If two lines appear, it will add the class 'i-amphtml-story-interactive-poll-two-lines'\n   * It measures the number of lines on all options and generates the best size.\n   * - font-size: 22px (1.375em) - All options are one line\n   * - font-size: 18px (1.125em) - Any option is two lines if displayed at 22px.\n   *\n   * @private\n   * @param {!Element} root\n   * @return {!Promise}\n   */\n  adaptFontSize_(root) {\n    let hasTwoLines = false;\n    const allOptionTexts = toArray(\n      root.querySelectorAll('.i-amphtml-story-interactive-option-text')\n    );\n    return this.measureMutateElement(\n      () => {\n        hasTwoLines = allOptionTexts.some((e) => {\n          const lines = Math.round(\n            e./*OK*/ clientHeight /\n              parseFloat(\n                computedStyle(this.win, e)['line-height'].replace('px', '')\n              )\n          );\n          return lines >= 2;\n        });\n      },\n      () => {\n        this.rootEl_.classList.toggle(\n          'i-amphtml-story-interactive-poll-two-lines',\n          hasTwoLines\n        );\n      },\n      root\n    );\n  }\n}\n", "export const CSS = \".i-amphtml-story-interactive-quiz-container{--correct-color:#5bba74!important;--correct-color-shaded:#00600f!important;--incorrect-color:#f34e4e!important;--incorrect-color-shaded:#b71c1c!important}.i-amphtml-story-interactive-quiz-option-container{display:-ms-flexbox!important;display:flex!important;-ms-flex-direction:column;flex-direction:column;background-color:var(\\n    --i-amphtml-interactive-options-chip-background-color\\n  )!important;border-radius:2em!important;padding:0.5em 0.5em 0!important;box-shadow:var(--i-amphtml-interactive-component-shadow)!important}.i-amphtml-story-interactive-quiz-option{font-family:inherit!important;position:relative!important;display:-ms-flexbox!important;display:flex!important;justify-items:start!important;-ms-flex-align:center!important;align-items:center!important;border-radius:1.649em!important;padding:0.5em 1em 0.5em 0.5em!important;background-color:var(\\n    --i-amphtml-interactive-option-background-color\\n  )!important;margin-bottom:0.5em!important;color:var(--i-amphtml-interactive-option-text-color)!important;box-shadow:var(--i-amphtml-interactive-chip-shadow),inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border)!important;-webkit-box-shadow:var(--i-amphtml-interactive-chip-shadow),inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border)!important;-moz-box-shadow:var(--i-amphtml-interactive-chip-shadow),inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border)!important;font-size:1em!important;line-height:1.25em!important;overflow:hidden!important;z-index:0!important;border:none!important;outline:none!important;text-align:start!important}[dir=rtl] .i-amphtml-story-interactive-quiz-option{padding:0.5em 0.5em 0.5em 1em!important}.i-amphtml-story-interactive-quiz-option-text{max-height:2.5em!important;overflow:hidden!important;text-overflow:ellipsis!important;display:-webkit-box!important;-webkit-line-clamp:2!important;-webkit-box-orient:vertical!important;visibility:visible!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option-selected{color:#fff!important;border:1px solid transparent!important}.i-amphtml-story-interactive-quiz-answer-choice{display:-ms-flexbox!important;display:flex!important;-ms-flex-pack:center!important;justify-content:center!important;-ms-flex-align:center!important;align-items:center!important;height:1.5em!important;width:1.5em!important;min-width:1.5em!important;border-radius:50%!important;padding:.31em!important;margin-right:1em!important;color:var(--interactive-accent-color)!important;border:0.125em solid!important;border-color:var(--i-amphtml-interactive-answer-choice-border)!important;font-size:1em!important;line-height:1em!important;font-weight:700!important;background-repeat:no-repeat!important;background-position:50%!important;background-size:1.5em!important}[dir=rtl] .i-amphtml-story-interactive-quiz-answer-choice{margin-left:16px!important;margin-right:0px!important}.i-amphtml-story-interactive-quiz-percentage-text{display:-ms-flexbox!important;display:flex!important;padding-left:1em!important;margin-left:auto!important;visibility:hidden!important;-ms-flex-negative:0!important;flex-shrink:0!important}.i-amphtml-story-interactive-quiz-option:not(.i-amphtml-story-interactive-option-selected) .i-amphtml-story-interactive-quiz-percentage-text{opacity:0.5!important}[dir=rtl] .i-amphtml-story-interactive-quiz-percentage-text{padding-left:0px!important;padding-right:1em!important;margin-right:auto!important;margin-left:0px!important}.i-amphtml-story-interactive-post-selection.i-amphtml-story-interactive-has-data .i-amphtml-story-interactive-quiz-percentage-text{visibility:visible!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option-selected>.i-amphtml-story-interactive-quiz-percentage-text{color:#fff!important}.i-amphtml-story-interactive-post-selection :not([correct])>.i-amphtml-story-interactive-quiz-answer-choice{color:var(--incorrect-color)!important;border-color:var(--incorrect-color)!important}.i-amphtml-story-interactive-post-selection [correct]>.i-amphtml-story-interactive-quiz-answer-choice{color:var(--correct-color)!important;border-color:var(--correct-color)!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option-selected>.i-amphtml-story-interactive-quiz-answer-choice{border-color:transparent!important;animation:answer-choice-bounce 600ms linear forwards;background-color:var(\\n    --i-amphtml-interactive-answer-choice-background\\n  )!important}.i-amphtml-story-interactive-post-selection [correct]>.i-amphtml-story-interactive-quiz-answer-choice{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='%235BBA74'%3E%3Cpath fill='none' d='M0 0h24v24H0z'/%3E%3Cpath d='M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z'/%3E%3C/svg%3E\\\")!important;color:transparent!important}.i-amphtml-story-interactive-post-selection :not([correct])>.i-amphtml-story-interactive-quiz-answer-choice{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='%23F34E4E'%3E%3Cpath d='M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z'/%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3C/svg%3E\\\")!important;color:transparent!important}.i-amphtml-story-interactive-quiz-option>*{position:relative!important}.i-amphtml-story-interactive-quiz-option:before{content:\\\"\\\"!important;position:absolute!important;left:0px!important;width:100%!important;height:100%!important;border-radius:var(--i-amphtml-interactive-chip-radius)!important;line-height:1.25em!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-quiz-option:focus:before{background:var(--i-amphtml-interactive-theme-shading)!important}.i-amphtml-story-interactive-post-selection:not(.i-amphtml-story-interactive-has-data) .i-amphtml-story-interactive-quiz-option-selected[correct].i-amphtml-story-interactive-quiz-option:before{animation:option-select-correct 150ms cubic-bezier(0,0,0.2,1) forwards!important}.i-amphtml-story-interactive-post-selection:not(.i-amphtml-story-interactive-has-data) .i-amphtml-story-interactive-quiz-option-selected:not([correct]).i-amphtml-story-interactive-quiz-option:before{animation:option-select-incorrect 150ms cubic-bezier(0,0,0.2,1) forwards!important}.i-amphtml-story-interactive-post-selection.i-amphtml-story-interactive-has-data .i-amphtml-story-interactive-quiz-option:before{transform:translateX(var(--option-percentage,0%))!important}.i-amphtml-story-interactive-post-selection.i-amphtml-story-interactive-has-data[dir=rtl] .i-amphtml-story-interactive-quiz-option:before{transform:translateX(calc(var(--option-percentage, 0%)*-1))!important}.i-amphtml-story-interactive-post-selection.i-amphtml-story-interactive-has-data .i-amphtml-story-interactive-quiz-option:before{left:-100%!important;width:100%!important;height:100%!important;border-radius:0px!important;background:var(--i-amphtml-interactive-theme-shading)!important;color:var(--i-amphtml-interactive-theme-shading)!important;transition:transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve)!important}.i-amphtml-story-interactive-post-selection.i-amphtml-story-interactive-has-data[dir=rtl] .i-amphtml-story-interactive-quiz-option:before{left:101%!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option-selected[correct].i-amphtml-story-interactive-quiz-option{background:var(--correct-color)!important;box-shadow:var(--i-amphtml-interactive-chip-shadow-inset)!important}.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option-selected:not([correct]).i-amphtml-story-interactive-quiz-option{background:var(--incorrect-color)!important;box-shadow:var(--i-amphtml-interactive-chip-shadow-inset)!important}.i-amphtml-story-interactive-option-selected.i-amphtml-story-interactive-quiz-option{border:none!important;box-shadow:var(--i-amphtml-interactive-chip-shadow-inset)!important}.i-amphtml-story-interactive-post-selection.i-amphtml-story-interactive-has-data .i-amphtml-story-interactive-option-selected[correct].i-amphtml-story-interactive-quiz-option:before{background:var(--correct-color-shaded)!important;color:var(--correct-color-shaded)!important}.i-amphtml-story-interactive-post-selection.i-amphtml-story-interactive-has-data .i-amphtml-story-interactive-option-selected:not([correct]).i-amphtml-story-interactive-quiz-option:before{background:var(--incorrect-color-shaded)!important;color:var(--incorrect-color-shaded)!important}@keyframes answer-choice-bounce{0%{border:2px solid var(--i-amphtml-interactive-answer-choice-background);transform:scale(0);visibility:hidden}21%{visibility:visible;transform:scale(.01);animation-timing-function:cubic-bezier(.3,.5,.7,1)}43%{transform:scale(1.203);animation-timing-function:ease-in-out}62%{transform:scale(0.956)}83%{transform:scale(1.008)}96%{transform:scale(1)}99%{transform:scale(.998)}to{transform:scale(1)}}@keyframes option-select-incorrect{0%{border-color:var(--incorrect-color);background:var(--incorrect-color);opacity:0.2;transform:scale(0.1);color:var(--incorrect-color)}50%{opacity:1;color:var(--incorrect-color)}to{border-color:var(--incorrect-color);background:var(--incorrect-color);transform:scale(1);color:#fff}}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option .i-amphtml-story-interactive-quiz-answer-choice{animation:i-amphtml-story-interactive-quiz-answer-choice-landing-animation var(--i-amphtml-interactive-animation-time)!important;animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el1)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:nth-of-type(2) .i-amphtml-story-interactive-quiz-answer-choice{animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el2)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:nth-of-type(3) .i-amphtml-story-interactive-quiz-answer-choice{animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el3)!important}.i-amphtml-story-interactive-active:not(.i-amphtml-story-interactive-post-selection) .i-amphtml-story-interactive-option:nth-of-type(4) .i-amphtml-story-interactive-quiz-answer-choice{animation-delay:var(--i-amphtml-interactive-landing-animation-delay-offset-el4)!important}@keyframes i-amphtml-story-interactive-quiz-answer-choice-landing-animation{33%{transform:scale(.8)}}\\n/*# sourceURL=/extensions/amp-story-interactive/0.1/amp-story-interactive-quiz.css*/\";\n", "export default function (obj) {\n\tvar k, cls='';\n\tfor (k in obj) {\n\t\tif (obj[k]) {\n\t\t\tcls && (cls += ' ');\n\t\t\tcls += k;\n\t\t}\n\t}\n\treturn cls;\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AmpStoryInteractive,\n  InteractiveType,\n} from './amp-story-interactive-abstract';\nimport {CSS} from '../../../build/amp-story-interactive-quiz-0.1.css';\nimport {LocalizedStringId} from '../../../src/localized-strings';\nimport {htmlFor} from '../../../src/static-template';\nimport {setStyle} from '../../../src/style';\nimport objstr from 'obj-str';\n\n/**\n * Generates the template for the quiz.\n *\n * @param {!Element} element\n * @return {!Element}\n */\nconst buildQuizTemplate = (element) => {\n  const html = htmlFor(element);\n  return html`\n    <div class=\"i-amphtml-story-interactive-quiz-container\">\n      <div class=\"i-amphtml-story-interactive-prompt-container\"></div>\n      <div class=\"i-amphtml-story-interactive-quiz-option-container\"></div>\n    </div>\n  `;\n};\n\n/**\n * Generates the template for each option.\n *\n * @param {!Element} option\n * @return {!Element}\n */\nconst buildOptionTemplate = (option) => {\n  const html = htmlFor(option);\n  return html`\n    <button\n      class=\"i-amphtml-story-interactive-quiz-option i-amphtml-story-interactive-option\"\n      aria-live=\"polite\"\n    >\n      <span\n        class=\"i-amphtml-story-interactive-quiz-answer-choice notranslate\"\n      ></span>\n    </button>\n  `;\n};\n\nexport class AmpStoryInteractiveQuiz extends AmpStoryInteractive {\n  /**\n   * @param {!AmpElement} element\n   */\n  constructor(element) {\n    super(element, InteractiveType.QUIZ);\n\n    /** @private {!Array<string>} */\n    this.localizedAnswerChoices_ = [];\n  }\n\n  /** @override */\n  buildCallback() {\n    return super.buildCallback(CSS);\n  }\n\n  /** @override */\n  buildComponent() {\n    this.rootEl_ = buildQuizTemplate(this.element);\n    this.attachContent_(this.rootEl_);\n    return this.rootEl_;\n  }\n\n  /**\n   * Finds the prompt and options content\n   * and adds it to the quiz element.\n   *\n   * @private\n   * @param {Element} root\n   */\n  attachContent_(root) {\n    this.attachPrompt_(root);\n\n    // Localize the answer choice options\n    this.localizedAnswerChoices_ = [\n      LocalizedStringId.AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_A,\n      LocalizedStringId.AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_B,\n      LocalizedStringId.AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_C,\n      LocalizedStringId.AMP_STORY_INTERACTIVE_QUIZ_ANSWER_CHOICE_D,\n    ].map((choice) => this.localizationService.getLocalizedString(choice));\n    const optionContainer = this.rootEl_.querySelector(\n      '.i-amphtml-story-interactive-quiz-option-container'\n    );\n    this.options_.forEach((option, index) =>\n      optionContainer.appendChild(this.configureOption_(option, index))\n    );\n  }\n\n  /**\n   * Creates an option container with option content,\n   * adds styling and answer choices,\n   * and adds it to the quiz element.\n   *\n   * @param {!./amp-story-interactive-abstract.OptionConfigType} option\n   * @param {number} index\n   * @return {!Element}\n   * @private\n   */\n  configureOption_(option, index) {\n    const convertedOption = buildOptionTemplate(this.element);\n\n    // Fill in the answer choice and set the option ID\n    const answerChoiceEl = convertedOption.querySelector(\n      '.i-amphtml-story-interactive-quiz-answer-choice'\n    );\n    answerChoiceEl.textContent = this.localizedAnswerChoices_[index];\n    convertedOption.optionIndex_ = option['optionIndex'];\n\n    // Extract and structure the option information\n    const optionText = document.createElement('span');\n    optionText.classList.add('i-amphtml-story-interactive-quiz-option-text');\n    optionText.textContent = option['text'];\n    convertedOption.appendChild(optionText);\n\n    // Add text container for percentage display\n    const percentageText = document.createElement('span');\n    percentageText.classList.add(\n      'i-amphtml-story-interactive-quiz-percentage-text'\n    );\n    convertedOption.appendChild(percentageText);\n\n    if ('correct' in option) {\n      convertedOption.setAttribute('correct', 'correct');\n    }\n    return convertedOption;\n  }\n\n  /**\n   * @override\n   */\n  displayOptionsData(optionsData) {\n    if (!optionsData) {\n      return;\n    }\n\n    const percentages = this.preprocessPercentages_(optionsData);\n\n    this.getOptionElements().forEach((el, index) => {\n      // Update the aria-label so they read \"selected\" and \"correct\" or \"incorrect\"\n      const ariaDescription = objstr({\n        selected: optionsData[index].selected,\n        correct: el.hasAttribute('correct'),\n        incorrect: !el.hasAttribute('correct'),\n      });\n      el.querySelector(\n        '.i-amphtml-story-interactive-quiz-answer-choice'\n      ).setAttribute('aria-hidden', true);\n      const optionText = el.querySelector(\n        '.i-amphtml-story-interactive-quiz-option-text'\n      );\n      optionText.setAttribute(\n        'aria-label',\n        ariaDescription + ' ' + optionText.textContent\n      );\n      // Update percentage text\n      el.querySelector(\n        '.i-amphtml-story-interactive-quiz-percentage-text'\n      ).textContent = `${percentages[index]}%`;\n      setStyle(el, '--option-percentage', `${percentages[index]}%`);\n    });\n  }\n}\n", "export const CSS = \".i-amphtml-story-interactive-results-container{font-family:Poppins,sans-serif!important;background:var(--i-amphtml-interactive-options-chip-background-color)!important;border-radius:var(--i-amphtml-interactive-chip-radius)!important;color:var(--i-amphtml-interactive-strong-text-color)!important;text-align:center!important;box-shadow:var(--i-amphtml-interactive-component-shadow)!important;display:-ms-flexbox!important;display:flex!important;-ms-flex-direction:column!important;flex-direction:column!important;-ms-flex-align:center!important;align-items:center!important;padding-bottom:1.25em!important}.i-amphtml-story-interactive-results-container.i-amphtml-story-interactive-has-image:not(.i-amphtml-story-interactive-has-score){padding-top:2.5em!important}.i-amphtml-story-interactive-has-score .i-amphtml-story-interactive-results-top{display:-ms-flexbox!important;display:flex!important;-ms-flex-align:center!important;align-items:center!important;-ms-flex-pack:justify!important;justify-content:space-between!important;padding:1em 1.5em!important;box-sizing:border-box!important;color:var(--interactive-prompt-text-color)!important}.i-amphtml-story-interactive-results-top{width:100%!important;border-top-left-radius:var(--i-amphtml-interactive-chip-radius)!important;border-top-right-radius:var(--i-amphtml-interactive-chip-radius)!important;display:none!important}.i-amphtml-story-interactive-has-score:not(.i-amphtml-story-interactive-has-image) .i-amphtml-story-interactive-results-top{background:var(--interactive-prompt-background)!important}.i-amphtml-story-interactive-results-top-score{font-weight:700!important;font-size:.75em!important;line-height:1em!important;letter-spacing:.15em!important;text-transform:uppercase!important}[dir=rtl] .i-amphtml-story-interactive-results-top-score{left:auto!important;right:1.25em!important}.i-amphtml-story-interactive-results-top-value{font-weight:700!important;font-size:1.75em!important;line-height:1!important}.i-amphtml-story-interactive-results-top-value>span:nth-child(2){font-size:.5em!important}[dir=rtl] .i-amphtml-story-interactive-results-top-value{left:.7em!important;right:auto!important}.i-amphtml-story-interactive-results-container:not(.i-amphtml-story-interactive-has-score){--i-amphtml-story-interactive-score-display:none!important}.i-amphtml-story-interactive-results-container:not(.i-amphtml-story-interactive-has-image) .i-amphtml-story-interactive-results-image-border{display:none!important}.i-amphtml-story-interactive-results-image{width:8.75em!important;height:8.75em!important;background-size:cover!important;background-position:50%!important;border-radius:50%!important}.i-amphtml-story-interactive-results-image-border{margin:0px 10px!important;padding:8px!important;border-radius:50%!important;border:2px solid var(--interactive-accent-color)!important}.i-amphtml-story-interactive-results-prompt{text-transform:uppercase!important;font-size:.75em!important;margin-top:1.75em!important;font-weight:700!important;letter-spacing:.2em!important}.i-amphtml-story-interactive-results-top-transparent.i-amphtml-story-interactive-has-score:not(.i-amphtml-story-interactive-has-image) .i-amphtml-story-interactive-results-prompt{margin-top:0px!important}.i-amphtml-story-interactive-results-title{font-size:1.75em!important;font-weight:700!important}.i-amphtml-story-interactive-results-description{font-size:.875em!important;text-align:center!important;color:var(--i-amphtml-interactive-option-text-color)!important;margin-top:.5em!important;padding:0px 1.4em!important}\\n/*# sourceURL=/extensions/amp-story-interactive/0.1/amp-story-interactive-results.css*/\";\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AmpStoryInteractive,\n  InteractiveType,\n} from './amp-story-interactive-abstract';\nimport {CSS} from '../../../build/amp-story-interactive-results-0.1.css';\nimport {StateProperty} from '../../amp-story/1.0/amp-story-store-service';\nimport {computedStyle, setStyle} from '../../../src/style';\nimport {dev} from '../../../src/log';\nimport {htmlFor} from '../../../src/static-template';\n\n/**\n * @typedef {{\n *    category: ?string,\n *    percentage: ?number,\n * }}\n */\nexport let InteractiveResultsDef;\n\n/**\n * Generates the template for the quiz.\n *\n * @param {!Element} element\n * @return {!Element}\n */\nconst buildResultsTemplate = (element) => {\n  const html = htmlFor(element);\n  return html`\n    <div class=\"i-amphtml-story-interactive-results-container\">\n      <div class=\"i-amphtml-story-interactive-results-top\">\n        <div class=\"i-amphtml-story-interactive-results-top-score\">SCORE:</div>\n        <div class=\"i-amphtml-story-interactive-results-top-value\">\n          <span class=\"i-amphtml-story-interactive-results-top-value-number\"\n            >100</span\n          ><span>%</span>\n        </div>\n      </div>\n      <div class=\"i-amphtml-story-interactive-results-image-border\">\n        <div class=\"i-amphtml-story-interactive-results-image\"></div>\n      </div>\n      <div class=\"i-amphtml-story-interactive-results-prompt\"></div>\n      <div class=\"i-amphtml-story-interactive-results-title\"></div>\n      <div class=\"i-amphtml-story-interactive-results-description\"></div>\n    </div>\n  `;\n};\n\nconst HAS_IMAGE_CLASS = 'i-amphtml-story-interactive-has-image';\nconst HAS_SCORE_CLASS = 'i-amphtml-story-interactive-has-score';\n\n/**\n * Processes the state and returns the condensed results.\n * @param {!Map<string, {option: ?./amp-story-interactive-abstract.OptionConfigType, interactiveId: string}>} interactiveState\n * @param {?Array<!./amp-story-interactive-abstract.OptionConfigType>} options needed to ensure the first options take precedence on ties\n * @return {InteractiveResultsDef} the results\n */\nconst processResults = (interactiveState, options) => {\n  const processStrategy =\n    decideStrategy(options) === 'category'\n      ? processResultsCategory\n      : processResultsPercentage;\n  return processStrategy(interactiveState, options);\n};\n\n/**\n * Processes the state and returns the condensed results for a category strategy\n * @param {!Map<string, {option: ?./amp-story-interactive-abstract.OptionConfigType, interactiveId: string}>} interactiveState\n * @param {?Array<!./amp-story-interactive-abstract.OptionConfigType>} options the attributes on the component\n * @return {InteractiveResultsDef} the results\n * @package\n */\nexport const processResultsCategory = (interactiveState, options) => {\n  const result = {category: null, percentage: null};\n\n  // Add all categories in order to the map with value 0\n  const categories = {};\n  options.forEach((option) => {\n    if (option.resultscategory) {\n      categories[option.resultscategory] = 0;\n    }\n  });\n\n  // Vote for category for each answered poll\n  Object.values(interactiveState).forEach((e) => {\n    if (e.type == InteractiveType.POLL) {\n      if (\n        e.option &&\n        e.option.resultscategory &&\n        categories[e.option.resultscategory] != null\n      ) {\n        categories[e.option.resultscategory] += 1;\n      }\n    }\n  });\n\n  // Returns category with most votes, first ones take precedence in ties\n  result.category = Object.keys(categories).reduce((a, b) =>\n    categories[a] >= categories[b] ? a : b\n  );\n  return result;\n};\n\n/**\n * Processes the state and returns the condensed results for a percentage strategy\n * @param {!Map<string, {option: ?./amp-story-interactive-abstract.OptionConfigType, interactiveId: string}>} interactiveState\n * @param {?Array<!./amp-story-interactive-abstract.OptionConfigType>} options the attributes on the component\n * @return {InteractiveResultsDef} the results\n * @package\n */\nexport const processResultsPercentage = (interactiveState, options) => {\n  const result = {category: null, percentage: null};\n\n  // Count quizzes and correct quizzes\n  let quizCount = 0;\n  let quizCorrect = 0;\n  Object.values(interactiveState).forEach((e) => {\n    if (e.type == InteractiveType.QUIZ) {\n      quizCount += 1;\n      if (e.option && e.option.correct != null) {\n        quizCorrect += 1;\n      }\n    }\n  });\n\n  // Percentage = (correct / total) but avoid divide by 0 error\n  result.percentage = quizCount == 0 ? 0 : 100 * (quizCorrect / quizCount);\n\n  // Get closest threshold that is lower than percentage, or lowest one if percentage is too low\n  let minThresholdDiff = -100;\n  options.forEach((option) => {\n    // ThresholdDiff is positive if it's lower than percentage (desired)\n    const currThresholdDiff =\n      result.percentage - parseFloat(option.resultsthreshold);\n    if (\n      // Curr meets the requirement and (is better or min doesnt meet)\n      (currThresholdDiff >= 0 &&\n        (minThresholdDiff > currThresholdDiff || minThresholdDiff < 0)) ||\n      // Curr doesnt meet the requirement, but min also doesnt and curr is better than min\n      (currThresholdDiff < 0 &&\n        minThresholdDiff < 0 &&\n        currThresholdDiff > minThresholdDiff)\n    ) {\n      result.category = option.resultscategory;\n      minThresholdDiff = currThresholdDiff;\n    }\n  });\n  return result;\n};\n\n/**\n * Decides what strategy to use.\n * If there are thresholds specified, it uses percentage; otherwise it uses category.\n * @param {?Array<!./amp-story-interactive-abstract.OptionConfigType>} options the attributes on the component\n * @return {string} the strategy\n * @package\n */\nexport const decideStrategy = (options) => {\n  return options.some((o) => {\n    return o.resultsthreshold != undefined;\n  })\n    ? 'percentage'\n    : 'category';\n};\n\nexport class AmpStoryInteractiveResults extends AmpStoryInteractive {\n  /**\n   * @param {!AmpElement} element\n   */\n  constructor(element) {\n    super(element, InteractiveType.RESULTS, [2, 4]);\n  }\n\n  /** @override */\n  buildCallback() {\n    return super.buildCallback(CSS);\n  }\n\n  /** @override */\n  buildComponent() {\n    this.rootEl_ = buildResultsTemplate(this.element);\n    return this.rootEl_;\n  }\n\n  /** @override */\n  layoutCallback() {\n    if (this.element.hasAttribute('prompt-text')) {\n      this.rootEl_.querySelector(\n        '.i-amphtml-story-interactive-results-prompt'\n      ).textContent = this.element.getAttribute('prompt-text');\n    }\n    this.storeService_.subscribe(\n      StateProperty.INTERACTIVE_REACT_STATE,\n      (data) => this.onInteractiveReactStateUpdate_(data),\n      true\n    );\n  }\n\n  /**\n   * Receives state updates and fills up DOM with the result\n   * @param {!Map<string, {option: ?./amp-story-interactive-abstract.OptionConfigType, interactiveId: string}>} interactiveState\n   * @private\n   */\n  onInteractiveReactStateUpdate_(interactiveState) {\n    const results = processResults(interactiveState, this.options_);\n    this.rootEl_.classList.toggle(HAS_SCORE_CLASS, results.percentage != null);\n    this.rootEl_.querySelector(\n      '.i-amphtml-story-interactive-results-top-value-number'\n    ).textContent = (results.percentage || 0).toFixed(0);\n    this.options_.forEach((e) => {\n      if (e.resultscategory === results.category) {\n        this.mutateElement(() => {\n          this.updateCategory_(e);\n          this.updateToPostSelectionState_(null);\n        });\n      }\n    });\n  }\n\n  /**\n   * Updates the element with the correct category\n   * @param {./amp-story-interactive-abstract.OptionConfigType} categorySelected\n   * @private\n   */\n  updateCategory_(categorySelected) {\n    this.rootEl_.classList.toggle(\n      HAS_IMAGE_CLASS,\n      categorySelected.image != null\n    );\n    if (categorySelected.image) {\n      setStyle(\n        this.rootEl_.querySelector(\n          '.i-amphtml-story-interactive-results-image'\n        ),\n        'background',\n        'url(' + categorySelected.image + ')'\n      );\n    }\n    this.rootEl_.querySelector(\n      '.i-amphtml-story-interactive-results-title'\n    ).textContent = categorySelected.resultscategory;\n    this.rootEl_.querySelector(\n      '.i-amphtml-story-interactive-results-description'\n    ).textContent = categorySelected.text || '';\n    this.rootEl_.classList.toggle(\n      'i-amphtml-story-interactive-results-top-transparent',\n      this.scoreBackgroundIsTransparent_()\n    );\n  }\n\n  /** @override */\n  handleTap_(unusedEvent) {\n    // Disallow click handler since there are no options.\n  }\n\n  /** @override */\n  displayOptionsData(unusedOptionsData) {\n    // TODO(mszylkowski): Show percentages of categories if endpoint.\n  }\n\n  /** @override */\n  updateStoryStoreState_(unusedOption) {\n    // Prevent from updating the state.\n  }\n\n  /**\n   * Check score background has a color with alpha 0, used to adjust layout\n   * @return {boolean}\n   * @private\n   **/\n  scoreBackgroundIsTransparent_() {\n    const bgColor = computedStyle(\n      this.win,\n      dev().assertElement(\n        this.rootEl_.querySelector('.i-amphtml-story-interactive-results-top')\n      )\n    )['background'];\n    // Check the background starts with rgba and doesn't contain other colors (no gradients)\n    if (bgColor.startsWith('rgba') && bgColor.lastIndexOf('rgb') == 0) {\n      // If single rgba color, return alpha == 0\n      return parseFloat(bgColor.split(', ')[3].split(')')[0]) == 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpStoryInteractiveBinaryPoll} from './amp-story-interactive-binary-poll';\nimport {AmpStoryInteractivePoll} from './amp-story-interactive-poll';\nimport {AmpStoryInteractiveQuiz} from './amp-story-interactive-quiz';\nimport {AmpStoryInteractiveResults} from './amp-story-interactive-results';\n\n/**\n * This extension imports the interactive components into amp-story.\n */\n\nAMP.extension('amp-story-interactive', '0.1', (AMP) => {\n  AMP.registerElement(\n    'amp-story-interactive-binary-poll',\n    AmpStoryInteractiveBinaryPoll\n  );\n  AMP.registerElement('amp-story-interactive-poll', AmpStoryInteractivePoll);\n  AMP.registerElement('amp-story-interactive-quiz', AmpStoryInteractiveQuiz);\n  AMP.registerElement(\n    'amp-story-interactive-results',\n    AmpStoryInteractiveResults\n  );\n});\n"],
  "mappings": "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",
  "names": []
}
