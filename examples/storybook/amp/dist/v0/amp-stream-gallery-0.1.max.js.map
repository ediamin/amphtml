{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../extensions/amp-base-carousel/0.1/action-source.js", "../../src/core/types/array.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/types/index.js", "../../src/core/error/message-helpers.js", "../../src/core/assert/base.js", "../../src/core/minified-mode.js", "../../src/core/assert/dev.js", "../../src/core/constants/action-constants.js", "../../build/amp-stream-gallery-0.1.css.js", "../../src/core/math/index.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/core/types/function/index.js", "../../src/config.js", "../../src/log.js", "../../src/style.js", "../../extensions/amp-base-carousel/0.1/dimensions.js", "../../extensions/amp-base-carousel/0.1/carousel-events.js", "../../src/core/dom/event-helper-listen.js", "../../third_party/css-escape/css-escape.js", "../../src/event-helper.js", "../../extensions/amp-base-carousel/0.1/auto-advance.js", "../../extensions/amp-base-carousel/0.1/carousel-accessibility.js", "../../extensions/amp-base-carousel/0.1/array-util.js", "../../src/core/window/index.js", "../../src/dom.js", "../../extensions/amp-base-carousel/0.1/carousel.js", "../../src/service.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../extensions/amp-base-carousel/0.1/child-layout-manager.js", "../../extensions/amp-base-carousel/0.1/responsive-attributes.js", "../../src/static-template.js", "../../src/experiments/index.js", "../../src/layout.js", "../../extensions/amp-stream-gallery/0.1/amp-stream-gallery.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @enum {number}\n */\nexport const ActionSource = {\n  GENERIC_HIGH_TRUST: 0,\n  GENERIC_LOW_TRUST: 1,\n  WHEEL: 2,\n  TOUCH: 3,\n  AUTOPLAY: 4,\n};\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Export all type-checking helpers for convenience\nexport {isArray} from './array';\nexport {isEnumValue} from './enum';\nexport {isString} from './string';\nexport {isObject} from './object';\n\n/**\n * Determines if value is an ELement\n * @param {*} value\n * @return {boolean}\n */\nexport function isElement(value) {\n  return value?.nodeType == /* Node.ELEMENT_NODE */ 1;\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {elementStringOrPassThru} from '../error/message-helpers';\nimport {includes} from '../types/string';\nimport {isArray, isElement, isString} from '../types';\nimport {remove} from '../types/array';\n\n/**\n * @fileoverview This file provides the base implementation for assertion\n * functions. Most files should never import from this; instead, import from\n * `dev` or `user`. It is also used by the Log class for its assertions.\n */\n\n/**\n * A base assertion function, provided to various assertion helpers.\n * @typedef {function(?, string=, ...*):?|function(?, !Array<*>)}\n */\nexport let AssertionFunctionDef;\n\n/**\n * Throws an error if the second argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n * @param {?string} sentinel\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nexport function assert(\n  sentinel,\n  shouldBeTruthy,\n  opt_message = 'Assertion failed',\n  var_args\n) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Include the sentinel string if provided and not already present\n  if (sentinel && !includes(opt_message, sentinel)) {\n    opt_message += sentinel;\n  }\n\n  // Skip the first 3 arguments to isolate format params\n  // const messageArgs = Array.prototype.slice.call(arguments, 3);\n  // Index at which message args start\n  let i = 3;\n\n  // Substitute provided values into format string in message\n  const splitMessage = opt_message.split('%s');\n  let message = splitMessage.shift();\n  const messageArray = [message];\n\n  while (splitMessage.length) {\n    const subValue = arguments[i++];\n    const nextConstant = splitMessage.shift();\n\n    message += elementStringOrPassThru(subValue) + nextConstant;\n    messageArray.push(subValue, nextConstant.trim());\n  }\n\n  const error = new Error(message);\n  error.messageArray = remove(messageArray, (x) => x !== '');\n  // __AMP_REPORT_ERROR is installed globally per window in the entry point in\n  // AMP documents. It may not be present for Bento/Preact elements on non-AMP\n  // pages.\n  self.__AMP_REPORT_ERROR?.(error);\n  throw error;\n}\n\n/**\n * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n *\n * It understands array-based \"id\"-contracted messages.\n *\n * Otherwise creates a sprintf syntax string containing the optional message or the\n * default. The `subject` of the assertion is added at the end.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {T} subject\n * @param {*} shouldBeTruthy\n * @param {string} defaultMessage\n * @param {!Array<*>|string=} opt_message\n * @return {T}\n * @template T\n * @private\n */\nfunction assertType_(\n  assertFn,\n  subject,\n  shouldBeTruthy,\n  defaultMessage,\n  opt_message\n) {\n  if (isArray(opt_message)) {\n    assertFn(\n      shouldBeTruthy,\n      /** @type {!Array} */ (opt_message).concat([subject])\n    );\n  } else {\n    assertFn(shouldBeTruthy, `${opt_message || defaultMessage}: %s`, subject);\n  }\n\n  return subject;\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertElement(assertFn, shouldBeElement, opt_message) {\n  return /** @type {!Element} */ (\n    assertType_(\n      assertFn,\n      shouldBeElement,\n      isElement(shouldBeElement),\n      'Element expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertString(assertFn, shouldBeString, opt_message) {\n  return /** @type {string} */ (\n    assertType_(\n      assertFn,\n      shouldBeString,\n      isString(shouldBeString),\n      'String expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertNumber(assertFn, shouldBeNumber, opt_message) {\n  return /** @type {number} */ (\n    assertType_(\n      assertFn,\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertArray(assertFn, shouldBeArray, opt_message) {\n  return /** @type {!Array} */ (\n    assertType_(\n      assertFn,\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    )\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {!AssertionFunctionDef} assertFn underlying assertion function to call\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertBoolean(assertFn, shouldBeBoolean, opt_message) {\n  return /** @type {boolean} */ (\n    assertType_(\n      assertFn,\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    )\n  );\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Magic constant that is replaced by babel.\n// IS_MINIFIED is always replaced with true when closure compiler is used\nconst IS_MINIFIED = false;\n\n/**\n * Returns true whenever closure compiler is used.\n * @return {boolean}\n */\nexport function isMinifiedMode() {\n  return IS_MINIFIED;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './base';\nimport {isMinifiedMode} from '../minified-mode';\n\n/**\n * @fileoverview This file provides the entrypoint for dev assertions. It's\n * designed so all functions are pure function calls to improve inlining. All\n * functions in this file get DCE'd away during compilation.\n */\n\n/**\n * This will never execute regardless, but will be included on unminified builds\n * builds. It will be DCE'd away from minified builds, and so can be used to\n * validate that Babel is properly removing dev assertions in minified builds.\n */\nfunction devAssertDceCheck() {\n  if (self.__AMP_ASSERTION_CHECK) {\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string=} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @template T\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (isMinifiedMode()) {\n    return shouldBeTruthy;\n  }\n  devAssertDceCheck();\n\n  return assertions.assert(\n    '',\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't an Element.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeElement\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Element} The value of shouldBeTrueish.\n * @throws {Error} when shouldBeElement is not an Element\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertElement(shouldBeElement, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertElement(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeElement,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a string. The string can\n * be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeString\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {string} The string value. Can be an empty string.\n * @throws {Error} when shouldBeString is not an String\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertString(shouldBeString, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {string} */ (shouldBeString);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertString(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeString,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a number. The allowed values\n * include `0` and `NaN`.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeNumber\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {number} The number value. The allowed values include `0`\n *   and `NaN`.\n * @throws {Error} when shouldBeNumber is not an Number\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertNumber(shouldBeNumber, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {number} */ (shouldBeNumber);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertNumber(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeNumber,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument is not an array.\n * The array can be empty.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeArray\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {!Array} The array value\n * @throws {Error} when shouldBeArray is not an Array\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertArray(shouldBeArray, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertArray(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeArray,\n    opt_message\n  );\n}\n\n/**\n * Throws an error if the first argument isn't a boolean.\n *\n * For more details see `assert`.\n *\n * @param {*} shouldBeBoolean\n * @param {!Array<*>|string=} opt_message The assertion message\n * @return {boolean} The boolean value.\n * @throws {Error} when shouldBeBoolean is not an Boolean\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssertBoolean(shouldBeBoolean, opt_message) {\n  if (isMinifiedMode()) {\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n  devAssertDceCheck();\n\n  return assertions.assertBoolean(\n    /** @type {!assertions.AssertionFunctionDef} */ (devAssert),\n    shouldBeBoolean,\n    opt_message\n  );\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nexport const RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n\n/**\n * Identifier for an element's default action.\n *\n * @const {string}\n */\nexport const DEFAULT_ACTION = 'activate';\n\n/**\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\nexport const ActionTrust = {\n  /**\n   * Events that are triggered without a user gesture, or triggered by a user\n   * gesture with weak intent (e.g. scroll) are \"low trust\".\n   *\n   * Actions that have low impact on the page's visual state should require\n   * \"low trust\" (e.g. pausing a video).\n   */\n  LOW: 1,\n  /**\n   * Events that are triggered nearly immediately (up to a few seconds) after\n   * a user gesture with strong intent (e.g. tap or swipe) are \"default trust\".\n   *\n   * Actions that can modify the page's visual state (e.g. content jumping)\n   * should require \"default trust\". This is the default required trust level\n   * for actions.\n   */\n  DEFAULT: 2,\n  /**\n   * Events that are triggered immediately after a user gesture with\n   * strong intent (e.g. tap or swipe) are \"high trust\".\n   *\n   * There are no actions yet that require high trust.\n   */\n  HIGH: 3,\n};\n\n/**\n * @param {!ActionTrust} actionTrust\n * @return {string}\n */\nexport function actionTrustToString(actionTrust) {\n  switch (actionTrust) {\n    case ActionTrust.LOW:\n      return 'low';\n    case ActionTrust.HIGH:\n      return 'high';\n    default:\n      devAssert(actionTrust === ActionTrust.DEFAULT);\n      return 'default';\n  }\n}\n", "export const CSS = \".i-amphtml-carousel-content{position:absolute;top:0;left:0;bottom:0;right:0}.i-amphtml-carousel-scroll{display:-ms-flexbox;display:flex;width:100%;height:100%;-ms-flex-align:center;align-items:center;outline:none;scroll-behavior:smooth;-webkit-overflow-scrolling:touch!important;--visible-count:1}.i-amphtml-carousel-scroll[hide-scrollbar=true]{scrollbar-width:none}.i-amphtml-carousel-scroll[hide-scrollbar=true]::-webkit-scrollbar{display:none;box-sizing:content-box!important}.i-amphtml-carousel-scroll[horizontal=true]{-ms-flex-direction:row;flex-direction:row;scroll-snap-type-x:mandatory;scroll-snap-type:x mandatory;padding-bottom:20px!important;overflow-y:hidden}.i-amphtml-carousel-scroll[horizontal=false]{-ms-flex-direction:column;flex-direction:column;scroll-snap-type-y:mandatory;scroll-snap-type:y mandatory;padding-right:20px!important;overflow-x:hidden}.i-amphtml-carousel-scroll[snap=false]{scroll-snap-type:none}.i-amphtml-carousel-scroll[user-scrollable=false]{overflow:hidden}.i-amphtml-carousel-spacer{visibility:hidden;z-index:-1}.i-amphtml-carousel-slotted,.i-amphtml-carousel-spacer{box-sizing:border-box!important;margin:0!important;-ms-flex-negative:0!important;flex-shrink:0!important;width:100%;height:100%;scroll-snap-stop:always}.i-amphtml-carousel-scroll[horizontal=true][mixed-length=false]>.i-amphtml-carousel-slotted,.i-amphtml-carousel-scroll[horizontal=true][mixed-length=false]>.i-amphtml-carousel-spacer{width:calc(100%/var(--visible-count))!important;min-width:auto!important;max-width:none!important}.i-amphtml-carousel-scroll[horizontal=false][mixed-length=false]>.i-amphtml-carousel-slotted,.i-amphtml-carousel-scroll[horizontal=false][mixed-length=false]>.i-amphtml-carousel-spacer{height:calc(100%/var(--visible-count))!important;min-height:auto!important;max-height:none!important}.i-amphtml-carousel-scroll[horizontal=true][snap=true][mixed-length=true]>.i-amphtml-carousel-slotted,.i-amphtml-carousel-scroll[horizontal=true][snap=true][mixed-length=true]>.i-amphtml-carousel-spacer{max-width:100%!important}.i-amphtml-carousel-scroll[horizontal=false][snap=true][mixed-length=true]>.i-amphtml-carousel-slotted,.i-amphtml-carousel-scroll[horizontal=false][snap=true][mixed-length=true]>.i-amphtml-carousel-spacer{max-height:100%!important}.i-amphtml-carousel-scroll>.i-amphtml-carousel-slotted{will-change:transform}:not([amp-stream-gallery-outset-arrows])>.i-amphtml-stream-gallery-arrow-prev-slot{width:0;-ms-flex-pack:start;justify-content:flex-start}:not([amp-stream-gallery-outset-arrows])>.i-amphtml-stream-gallery-arrow-next-slot{width:0;-ms-flex-pack:end;justify-content:flex-end}:not([amp-stream-gallery-outset-arrows])>.i-amphtml-stream-gallery-arrow-next-slot>[disabled],:not([amp-stream-gallery-outset-arrows])>.i-amphtml-stream-gallery-arrow-prev-slot>[disabled],[i-amphtml-stream-gallery-hide-inset-buttons]:not([amp-stream-gallery-outset-arrows]) .i-amphtml-stream-gallery-arrow-next-slot>*,[i-amphtml-stream-gallery-hide-inset-buttons]:not([amp-stream-gallery-outset-arrows]) .i-amphtml-stream-gallery-arrow-prev-slot>*{opacity:0;pointer-events:none!important}:not([amp-stream-gallery-outset-arrows])>.i-amphtml-stream-gallery-arrow-next-slot>.i-amphtml-stream-gallery-next,:not([amp-stream-gallery-outset-arrows])>.i-amphtml-stream-gallery-arrow-prev-slot>.i-amphtml-stream-gallery-prev{-ms-flex-negative:0;flex-shrink:0;width:40px;height:40px}:not([amp-stream-gallery-outset-arrows])>.i-amphtml-stream-gallery-arrow-prev-slot>.i-amphtml-stream-gallery-prev{border-radius:0px 4px 4px 0px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M14 7.4 9.4 12l4.6 4.6' fill='none' stroke='%23000' stroke-width='2' stroke-linejoin='round' stroke-linecap='round'/%3E%3C/svg%3E\\\")}:not([amp-stream-gallery-outset-arrows])>.i-amphtml-stream-gallery-arrow-next-slot>.i-amphtml-stream-gallery-next{border-radius:4px 0px 0px 4px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m10 7.4 4.6 4.6-4.6 4.6' fill='none' stroke='%23000' stroke-width='2' stroke-linejoin='round' stroke-linecap='round'/%3E%3C/svg%3E\\\")}[amp-stream-gallery-outset-arrows]>.i-amphtml-stream-gallery-arrow-next-slot>[disabled],[amp-stream-gallery-outset-arrows]>.i-amphtml-stream-gallery-arrow-prev-slot>[disabled]{opacity:0.4}[amp-stream-gallery-outset-arrows]>.i-amphtml-stream-gallery-arrow-next-slot>.i-amphtml-stream-gallery-next,[amp-stream-gallery-outset-arrows]>.i-amphtml-stream-gallery-arrow-prev-slot>.i-amphtml-stream-gallery-prev{width:32px;height:32px;border-radius:50%;background-size:24px 24px}[amp-stream-gallery-outset-arrows]>.i-amphtml-stream-gallery-arrow-prev-slot>.i-amphtml-stream-gallery-prev{margin-inline-start:6px;margin-inline-end:12px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M14 7.4 9.4 12l4.6 4.6' fill='none' stroke='%23000' stroke-width='2' stroke-linejoin='round' stroke-linecap='round'/%3E%3C/svg%3E\\\")}[amp-stream-gallery-outset-arrows]>.i-amphtml-stream-gallery-arrow-next-slot>.i-amphtml-stream-gallery-next{margin-inline-start:12px;margin-inline-end:6px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m10 7.4 4.6 4.6-4.6 4.6' fill='none' stroke='%23000' stroke-width='2' stroke-linejoin='round' stroke-linecap='round'/%3E%3C/svg%3E\\\")}.i-amphtml-stream-gallery-inset-arrows{position:absolute;top:0;bottom:0;left:0;right:0;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;pointer-events:none}.i-amphtml-stream-gallery-arrow-prev-slot{-ms-flex-order:0;order:0}.i-amphtml-stream-gallery-arrow-next-slot{-ms-flex-order:2;order:2}.i-amphtml-stream-gallery-arrow-next-slot,.i-amphtml-stream-gallery-arrow-prev-slot{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;pointer-events:all}.i-amphtml-stream-gallery-arrow-next-slot>*,.i-amphtml-stream-gallery-arrow-prev-slot>*{-ms-flex-negative:0;flex-shrink:0}.i-amphtml-stream-gallery-next,.i-amphtml-stream-gallery-prev{position:relative;z-index:1;padding:0;border:none;outline:none;box-shadow:0px 2px 6px 0px rgba(0,0,0,.4);background-color:rgba(255,255,255,0.6);background-size:24px 24px;background-position:50%;background-repeat:no-repeat;-webkit-backdrop-filter:blur(3px);backdrop-filter:blur(3px);transition:opacity 200ms ease-in}.i-amphtml-stream-gallery-next[disabled],.i-amphtml-stream-gallery-prev[disabled]{transition-timing-function:ease-out}[dir=rtl] .i-amphtml-stream-gallery-next,[dir=rtl] .i-amphtml-stream-gallery-prev{transform:scaleX(-1)}amp-stream-gallery .i-amphtml-carousel-content{display:-ms-flexbox;display:flex}.i-amphtml-stream-gallery-slides{-ms-flex-order:1;order:1;-ms-flex-positive:1;flex-grow:1;min-width:1px}[i-amphtml-stream-gallery-extra-space=around]{-ms-flex-pack:center;justify-content:center}amp-stream-gallery .i-amphtml-carousel-slotted>.i-amphtml-replaced-content{-o-object-fit:contain;object-fit:contain}\\n/*# sourceURL=/extensions/amp-stream-gallery/0.1/amp-stream-gallery.css*/\";\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\n\n/**\n * Maps a value in a first range to its equivalent in a second range\n * Ex.: 5 in the range [0,10] gives 60 in the range[40,80]\n *\n * NOTE: lower/upper bounds on the source range are detected automatically,\n * however the bounds on the target range are not altered (thus the target\n * range could be decreasing).\n * Ex1: 8 in the range [0, 10] gives 2 in the range [10, 0]\n * Ex2: also, 8 in the range [10, 0] gives 2 in the range [10, 0]\n *\n * NOTE: Input value is enforced to be bounded inside the source range\n * Ex1: -2 in the range [0, 10] is interpreted as 0 and thus gives 40 in [40,80]\n * Ex2: 19 in the range [0, 5] is interpreted as 5 and thus gives 80 in [40,80]\n *\n * @param {number} val the value in the source range\n * @param {number} min1 the lower bound of the source range\n * @param {number} max1 the upper bound of the source range\n * @param {number} min2 the lower bound of the target range\n * @param {number} max2 the upper bound of the target range\n * @return {number} the equivalent value in the target range\n */\nexport function mapRange(val, min1, max1, min2, max2) {\n  let max1Bound = max1;\n  let min1Bound = min1;\n  if (min1 > max1) {\n    max1Bound = min1;\n    min1Bound = max1;\n  }\n\n  if (val < min1Bound) {\n    val = min1Bound;\n  } else if (val > max1Bound) {\n    val = max1Bound;\n  }\n\n  return ((val - min1) * (max2 - min2)) / (max1 - min1) + min2;\n}\n\n/**\n * Computes the modulus of values `a` and `b`.\n *\n * This is needed because the % operator in JavaScript doesn't implement\n * modulus behavior as can be seen by the spec here:\n * http://www.ecma-international.org/ecma-262/5.1/#sec-11.5.3.\n * It instead is used to obtain the remainder of a division.\n * This function uses the remainder (%) operator to determine the modulus.\n * Derived from here:\n * https://stackoverflow.com/questions/25726760/javascript-modular-arithmetic/47354356#47354356\n *\n * @param {number} a\n * @param {number} b\n * @return {number} returns the modulus of the two numbers.\n * @example\n *\n * _.min(10, 5);\n * // => 0\n *\n * _.mod(-1, 5);\n * // => 4\n */\nexport function mod(a, b) {\n  return a > 0 && b > 0 ? a % b : ((a % b) + b) % b;\n}\n\n/**\n * Restricts a number to be in the given min/max range. The minimum value must\n * be less than or equal to the maximum value.\n *\n * Examples:\n * clamp(0.5, 0, 1) -> 0.5\n * clamp(1.5, 0, 1) -> 1\n * clamp(-0.5, 0, 1) -> 0\n *\n * @param {number} val the value to clamp.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound.\n * @return {number} the clamped value.\n */\nexport function clamp(val, min, max) {\n  devAssert(min <= max, 'Minimum value is greater than the maximum.');\n  return Math.min(Math.max(val, min), max);\n}\n\n/**\n * Returns value bound to min and max values +/- extent. The lower bound must\n * be less than or equal to the upper bound.\n * @param {number} val the value to bound.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound\n * @param {number} extent the allowed extent beyond the bounds.\n * @return {number} the bounded value.\n */\nexport function boundValue(val, min, max, extent) {\n  devAssert(min <= max, 'Lower bound is greater than the upper bound.');\n  return clamp(val, min - extent, max + extent);\n}\n\n/**\n * Returns the length of a vector given in X- and Y-coordinates.\n * @param {number} deltaX distance in the X direction.\n * @param {number} deltaY distance in the Y direction.\n * @return {number} the magnitude of the vector.\n */\nexport function magnitude(deltaX, deltaY) {\n  return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\n/**\n * Returns the distance between two points.\n * @param {number} x1 X-coordinate of the first point.\n * @param {number} y1 Y-coordinate of the first point.\n * @param {number} x2 X-coordinate of the second point.\n * @param {number} y2 Y-coordinate of the second point.\n * @return {number} the distance between the two points.\n */\nexport function distance(x1, y1, x2, y2) {\n  return magnitude(x2 - x1, y2 - y1);\n}\n\n/**\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} angleInDegrees\n * @return {{\n *  x: number,\n *  y: number,\n * }}\n */\nexport function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  };\n}\n\n/**\n * Sums up the values of the given array and returns the result\n * @param {Array<number>} values\n * @return {number}\n */\nexport function sum(values) {\n  return values.reduce(function (a, b) {\n    return a + b;\n  });\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @fileoverview Helpers to wrap functions. */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function throttle(win, callback, minInterval) {\n  let locker = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {!Object} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    // Lock the fire for minInterval milliseconds\n    locker = win.setTimeout(waiter, minInterval);\n\n    callback.apply(null, args);\n  }\n\n  /**\n   * Waiter function\n   */\n  function waiter() {\n    locker = 0;\n    // If during the period there're invocations queued up, fire once.\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function debounce(win, callback, minInterval) {\n  let locker = 0;\n  let timestamp = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {?Array} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n\n  /**\n   * Wait function for debounce\n   */\n  function waiter() {\n    locker = 0;\n    const remaining = minInterval - (win.Date.now() - timestamp);\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    timestamp = win.Date.now();\n    nextCallArgs = args;\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {mod} from '../../../src/core/math';\nimport {setImportantStyles, setStyle} from '../../../src/style';\n\n/**\n * @enum {number}\n */\nexport const Axis = {\n  X: 0,\n  Y: 1,\n};\n\n/**\n * @enum {string}\n */\nexport const Alignment = {\n  START: 'start',\n  CENTER: 'center',\n};\n\n/**\n * @typedef {{\n *   start: number,\n *   end: number,\n *   length: number,\n * }}\n */\nlet DimensionDef;\n\n/**\n * @param {!Axis} axis The Axis to get the Dimension for.\n * @param {*} el The Element to get the Dimension For.\n * @return {!DimensionDef} The dimension for the Element along the given Axis.\n */\nexport function getDimension(axis, el) {\n  const {bottom, height, left, right, top, width} =\n    el./*OK*/ getBoundingClientRect();\n\n  return {\n    start: axis == Axis.X ? left : top,\n    end: axis == Axis.X ? right : bottom,\n    length: axis == Axis.X ? width : height,\n  };\n}\n\n/**\n * @param {!Axis} axis The axis to get the center point for.\n * @param {!Element} el The Element to get the center point for.\n * @return {number} The center point.\n */\nexport function getCenter(axis, el) {\n  const {end, start} = getDimension(axis, el);\n  return (start + end) / 2;\n}\n\n/**\n * @param {!Axis} axis The axis to get the start point for.\n * @param {!Element} el The Element to get the start point for.\n * @return {number} The start point.\n */\nexport function getStart(axis, el) {\n  const {start} = getDimension(axis, el);\n  return start;\n}\n\n/**\n * @param {!Axis} axis The Axis to get the position for.\n * @param {!Alignment} alignment The Alignment to get the position for.\n * @param {!Element} el The Element to get the position for.\n * @return {number} The position for the given Element along the given axis for\n *    the given alignment.\n */\nexport function getPosition(axis, alignment, el) {\n  return alignment == Alignment.START\n    ? getStart(axis, el)\n    : getCenter(axis, el);\n}\n\n/**\n * @param {!Axis} axis The axis along which to set the length.\n * @param {!Element} el The Element to set the length for.\n * @param {number} length The length value, in pixels, to set.\n */\nexport function updateLengthStyle(axis, el, length) {\n  if (axis == Axis.X) {\n    setStyle(el, 'width', `${length}px`);\n  } else {\n    setStyle(el, 'height', `${length}px`);\n  }\n}\n\n/**\n * Sets a transform translate style for a given delta along a given axis.\n * @param {!Axis} axis The axis along which to translate.\n * @param {!Element} el The Element to translate.\n * @param {number} delta How much to move the Element.\n */\nexport function setTransformTranslateStyle(axis, el, delta) {\n  const deltaX = axis == Axis.X ? delta : 0;\n  const deltaY = axis == Axis.X ? 0 : delta;\n  setStyle(el, 'transform', `translate(${deltaX}px, ${deltaY}px)`);\n  // Set a custom property so that the slide itself can determine how to\n  // translate the content if it so chooses.\n  setImportantStyles(el, {\n    '--content-transform': `translate(${deltaX}px, ${deltaY}px)`,\n  });\n}\n\n/**\n * @param {!Axis} axis The axis to check for overlap.\n * @param {!Element} el The Element to check for overlap.\n * @param {number} position A position to check.\n * @return {boolean} If the element overlaps the position along the given axis.\n */\nexport function overlaps(axis, el, position) {\n  const {end, start} = getDimension(axis, el);\n  // Ignore the end point, since that is shared with the adjacent Element.\n  return start <= position && position < end;\n}\n\n/**\n * @param {!Axis} axis The axis to align on.\n * @param {!Alignment} alignment The desired alignment.\n * @param {!Element} container The container to align against.\n * @param {!Element} el The Element get the offset for.\n * @return {number} How far el is from alignment, as a percentage of its length.\n */\nexport function getPercentageOffsetFromAlignment(\n  axis,\n  alignment,\n  container,\n  el\n) {\n  const elPos = getPosition(axis, alignment, el);\n  const containerPos = getPosition(axis, alignment, container);\n  const {length: elLength} = getDimension(axis, el);\n  return (elPos - containerPos) / elLength;\n}\n\n/**\n * Finds the index of a child that overlaps a point within the parent,\n * determined by an axis and alignment. A startIndex is used to look at the\n * children that are more likely to overlap first.\n * @param {!Axis} axis The axis to look along.\n * @param {!Alignment} alignment The alignment to look for within the parent\n *    container.\n * @param {!Element} container  The parent container to look in.\n * @param {!Array<!Element>} children The children to look among.\n * @param {number} startIndex The index to start looking at.\n * @return {number|undefined} The overlapping index, if one exists.\n */\nexport function findOverlappingIndex(\n  axis,\n  alignment,\n  container,\n  children,\n  startIndex\n) {\n  const pos = getPosition(axis, alignment, container);\n\n  // First look at the start index, since is the most likely to overlap.\n  if (overlaps(axis, children[startIndex], pos)) {\n    return startIndex;\n  }\n\n  // Move outwards, since the closer indicies are more likely to overlap.\n  for (let i = 1; i <= children.length / 2; i++) {\n    const nextIndex = mod(startIndex + i, children.length);\n    const prevIndex = mod(startIndex - i, children.length);\n\n    if (overlaps(axis, children[nextIndex], pos)) {\n      return nextIndex;\n    }\n\n    if (overlaps(axis, children[prevIndex], pos)) {\n      return prevIndex;\n    }\n  }\n}\n\n/**\n * Gets the current scroll position for an element along a given axis.\n * @param {!Axis} axis The axis to set the scroll position for.\n * @param {!Element} el The Element to set the scroll position for.\n * @return {number} The scroll position.\n */\nexport function getScrollPosition(axis, el) {\n  if (axis == Axis.X) {\n    return el./*OK*/ scrollLeft;\n  }\n\n  return el./*OK*/ scrollTop;\n}\n\n/**\n * Sets the scroll position for an element along a given axis.\n * @param {!Axis} axis The axis to set the scroll position for.\n * @param {!Element} el The Element to set the scroll position for.\n * @param {number} position The scroll position.\n */\nexport function setScrollPosition(axis, el, position) {\n  if (axis == Axis.X) {\n    el./*OK*/ scrollLeft = position;\n  } else {\n    el./*OK*/ scrollTop = position;\n  }\n}\n\n/**\n * Updates the scroll position for an element along a given axis.\n * @param {!Axis} axis The axis to set the scroll position for.\n * @param {!Element} el The Element to set the scroll position for.\n * @param {number} delta The scroll delta.\n */\nexport function updateScrollPosition(axis, el, delta) {\n  setScrollPosition(axis, el, getScrollPosition(axis, el) + delta);\n}\n\n/**\n * Scrolls the position within a scrolling container to an Element. Unlike\n * `scrollIntoView`, this function does not scroll the container itself into\n * view.\n * @param {!Axis} axis The axis to scroll along.\n * @param {!Alignment} alignment How to align the element within the container.\n * @param {!Element} container The scrolling container.\n * @param {!Element} el The Element to scroll to.\n * @param {number} offset A percentage offset within the element to scroll to.\n */\nexport function scrollContainerToElement(\n  axis,\n  alignment,\n  container,\n  el,\n  offset = 0\n) {\n  const startAligned = alignment == Alignment.START;\n  const {length} = getDimension(axis, el);\n  const snapOffset = startAligned ? getStart(axis, el) : getCenter(axis, el);\n  const scrollOffset = startAligned\n    ? getStart(axis, container)\n    : getCenter(axis, container);\n  const delta = snapOffset - scrollOffset - offset * length;\n\n  updateScrollPosition(axis, container, delta);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nexport const CarouselEvents = {\n  OFFSET_CHANGE: 'amp-carousel:offsetchange',\n  INDEX_CHANGE: 'amp-carousel:indexchange',\n  SCROLL_START: 'amp-carousel:scrollstart',\n  SCROLL_POSITION_CHANGED: 'amp-carousel:scrollpositionchange',\n};\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {lastChildElement} from './core/dom/query';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ActionSource} from './action-source';\nimport {CarouselEvents} from './carousel-events';\nimport {debounce} from '../../../src/core/types/function';\nimport {getDetail, listen, listenOnce} from '../../../src/event-helper';\n\nconst MIN_AUTO_ADVANCE_INTERVAL = 1000;\n\n/**\n * @typedef {{\n *   advance: function(number, {\n *     actionSource: (!ActionSource|undefined),\n *     allowWrap: (boolean|undefined),\n *   }),\n * }}\n */\nlet AdvanceDef;\n\n/**\n * Handles auto advance for a carousel. This pauses autoadvance whenever a\n * scroll / touch  occurs and resumes it when it ends.\n *\n * When the auto advance timer expires, it tells the provided Advanceable to\n * advance by the configured auto advance count.\n */\nexport class AutoAdvance {\n  /**\n   * @param {{\n   *   win: !Window,\n   *   element: !Element,\n   *   scrollContainer: !Element,\n   *   advanceable: !AdvanceDef\n   * }} config\n   */\n  constructor(config) {\n    const {advanceable, element, scrollContainer, win} = config;\n    /** @private @const */\n    this.win_ = win;\n\n    /** @private @const */\n    this.scrollContainer_ = scrollContainer;\n\n    /** @private @const */\n    this.advanceable_ = advanceable;\n\n    /** @private {number} */\n    this.advances_ = 0;\n\n    /** @private {boolean} */\n    this.autoAdvance_ = false;\n\n    /** @private {number} */\n    this.autoAdvanceCount_ = 1;\n\n    /** @private {number} */\n    this.autoAdvanceInterval_ = MIN_AUTO_ADVANCE_INTERVAL;\n\n    /** @private {boolean} */\n    this.paused_ = false;\n\n    /** @private {boolean} */\n    this.stopped_ = false;\n\n    /** @private {?function()} */\n    this.debouncedAdvance_ = null;\n\n    /** @private {number} */\n    this.maxAdvances_ = Number.POSITIVE_INFINITY;\n\n    /** @private {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = element.getAmpDoc();\n\n    this.createDebouncedAdvance_(this.autoAdvanceInterval_);\n    this.scrollContainer_.addEventListener(\n      'scroll',\n      () => this.handleScroll_(),\n      true\n    );\n    listen(\n      this.scrollContainer_,\n      'touchstart',\n      () => this.handleTouchStart_(),\n      {capture: true, passive: true}\n    );\n    listen(element, CarouselEvents.INDEX_CHANGE, (event) => {\n      this.handleIndexChange_(event);\n    });\n  }\n\n  /**\n   * Stops the auto advance. Once stopped, auto advance cannot be started\n   * again. This  sets the `stopped_` flag, which is checked in\n   * `shouldAutoAdvance_`.\n   */\n  stop() {\n    this.stopped_ = true;\n  }\n\n  /**\n   * Pauses the auto advance. It can be resumed again by calling `resume`. This\n   * sets the `paused_` flag, which is checked in `shouldAutoAdvance_`.\n   *\n   * This should only be used internally, rather than by an external developer.\n   * If the functionallity is desired, `stop` shoould be used instead.\n   */\n  pause() {\n    this.paused_ = true;\n  }\n\n  /**\n   * Resumes the auto advance as long as it is not stopped. This clears the\n   * `paused_` flag, which is checked in `shouldAutoAdvance_`.\n   *\n   * This should only be used internally, rather than by an external developer\n   * If the functionallity is desired, a `start` function, undoing\n   * `stop` should be implemented instead.\n   */\n  resume() {\n    this.paused_ = false;\n    this.resetAutoAdvance_();\n  }\n\n  /**\n   * @param {boolean} autoAdvance Whether or not to autoadvance. Changing this\n   *    will start or stop autoadvance.\n   */\n  updateAutoAdvance(autoAdvance) {\n    this.autoAdvance_ = autoAdvance;\n    this.resetAutoAdvance_();\n  }\n\n  /**\n   * @param {number} autoAdvanceCount How many items to advance by. A positive\n   *    number advances forwards, a negative number advances backwards.\n   */\n  updateAutoAdvanceCount(autoAdvanceCount) {\n    this.autoAdvanceCount_ = autoAdvanceCount;\n    this.resetAutoAdvance_();\n  }\n\n  /**\n   * @param {number} autoAdvanceInterval How much time between auto advances.\n   *    This time starts counting from when scrolling has stopped.\n   */\n  updateAutoAdvanceInterval(autoAdvanceInterval) {\n    this.autoAdvanceInterval_ = Math.max(\n      autoAdvanceInterval,\n      MIN_AUTO_ADVANCE_INTERVAL\n    );\n    this.createDebouncedAdvance_(this.autoAdvanceInterval_);\n    this.resetAutoAdvance_();\n  }\n\n  /**\n   * @param {number} maxAdvances The maximum number of advances that should be\n   *    performed.\n   */\n  updateMaxAdvances(maxAdvances) {\n    this.maxAdvances_ = maxAdvances;\n  }\n\n  /**\n   * Creates a debounced advance function.\n   * @param {number} interval\n   * @private\n   */\n  createDebouncedAdvance_(interval) {\n    const debouncedAdvance = debounce(\n      this.win_,\n      () => {\n        if (debouncedAdvance != this.debouncedAdvance_) {\n          return;\n        }\n\n        this.advance_();\n      },\n      interval\n    );\n    this.debouncedAdvance_ = debouncedAdvance;\n  }\n\n  /**\n   * Handles touchstart, pausing the autoadvance until the user lets go.\n   */\n  handleTouchStart_() {\n    this.pause();\n\n    listenOnce(\n      window,\n      'touchend',\n      () => {\n        this.resume();\n      },\n      {capture: true, passive: true}\n    );\n  }\n\n  /**\n   * @return {boolean} Whether or not autodadvancing should occur.\n   * @private\n   */\n  shouldAutoAdvance_() {\n    return (\n      this.autoAdvance_ &&\n      this.ampdoc_.isVisible() &&\n      !this.paused_ &&\n      !this.stopped_ &&\n      this.advances_ < this.maxAdvances_\n    );\n  }\n\n  /**\n   * Handles scroll, resetting the auto advance.\n   */\n  handleScroll_() {\n    this.resetAutoAdvance_();\n  }\n\n  /**\n   * @param {!Event} event\n   */\n  handleIndexChange_(event) {\n    const detail = getDetail(event);\n    const actionSource = detail['actionSource'];\n\n    if (actionSource && actionSource !== ActionSource.AUTOPLAY) {\n      this.stop();\n    }\n  }\n\n  /**\n   * Advances, as long as we should still auto advance.\n   */\n  advance_() {\n    if (!this.shouldAutoAdvance_()) {\n      return;\n    }\n\n    this.advanceable_.advance(this.autoAdvanceCount_, {\n      actionSource: ActionSource.AUTOPLAY,\n      allowWrap: true,\n    });\n    this.advances_ += this.autoAdvanceCount_;\n  }\n\n  /**\n   * Resets auto advance. If auto advance is disabled, this is a no-op. If it\n   * is enabled, it starts a debounced timer for advancing.\n   */\n  resetAutoAdvance_() {\n    if (!this.shouldAutoAdvance_()) {\n      return;\n    }\n\n    // For auto advance, we simply set a timeout to advance once. When\n    // scrolling stops, we will get called again. This makes sure we do not\n    // advance while the user is scrolling (either by touching, mousewheel or\n    // momentum).\n    this.debouncedAdvance_();\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CarouselEvents} from './carousel-events';\nimport {getDetail} from '../../../src/event-helper';\n\n/**\n * @typedef {{\n *   stop: function(),\n * }}\n */\nlet StoppableDef;\n\n/**\n * Accessibility for the carousel. This behaves either as a list or by\n * exposing a single item at a time using `aria-hidden`.\n */\nexport class CarouselAccessibility {\n  /**\n   * @param {{\n   *   win: !Window,\n   *   element: !Element,\n   *   scrollContainer: !Element,\n   *   runMutate: function(function()),\n   *   stoppable: !StoppableDef,\n   * }} config\n   */\n  constructor(config) {\n    const {element, runMutate, scrollContainer, stoppable, win} = config;\n    /** @protected @const */\n    this.win_ = win;\n\n    /** @private @const */\n    this.scrollContainer_ = scrollContainer;\n\n    /** @private @const */\n    this.runMutate_ = runMutate;\n\n    /** @private {!Array<!Element>} */\n    this.slides_ = [];\n\n    /** @private {number} */\n    this.visibleCount_ = 1;\n\n    /** @private {boolean} */\n    this.mixedLength_ = false;\n\n    /** @private {boolean} */\n    this.updating_ = false;\n\n    /** @private {number} */\n    this.index_ = 0;\n\n    element.addEventListener(\n      'focus',\n      () => {\n        stoppable.stop();\n      },\n      true\n    );\n    element.addEventListener(CarouselEvents.INDEX_CHANGE, (event) => {\n      this.onIndexChanged_(event);\n    });\n  }\n\n  /**\n   * Updates whether or not the carousel is using mixed lengths. When using\n   * mixed lengths, the carousel is treated as a list.\n   * @param {boolean} mixedLength\n   */\n  updateMixedLength(mixedLength) {\n    this.mixedLength_ = mixedLength;\n  }\n\n  /**\n   * Updates the UI in response to configuration changes.\n   */\n  updateUi() {\n    if (this.updating_) {\n      return;\n    }\n\n    this.updating_ = true;\n    this.runMutate_(() => {\n      this.updating_ = false;\n\n      this.updateConfiguration_();\n      this.updateAriaHidden_();\n    });\n  }\n\n  /**\n   * Updates the slides, setting aria properties.\n   * @param {!Array<!Element>} slides\n   */\n  updateSlides(slides) {\n    this.slides_ = slides;\n    this.updateUi();\n  }\n\n  /**\n   * Updates the visible count. When not in mixed length mode, this causes the\n   * carousel to be treated as a list when it is set to a value of two or\n   * greater.\n   * @param {number} visibleCount\n   */\n  updateVisibleCount(visibleCount) {\n    this.visibleCount_ = visibleCount;\n    this.updateUi();\n  }\n\n  /**\n   * @return {boolean} True if we should treat the carousel as a list, false if\n   *    we should expose a single slide at a time.\n   */\n  treatAsList_() {\n    return this.mixedLength_ || this.visibleCount_ >= 2;\n  }\n\n  /**\n   * Updates the configuration, setting attributes correctly depending on\n   * whether the carousel is a list or we are exposing a single item at a time.\n   */\n  updateConfiguration_() {\n    if (this.treatAsList_()) {\n      this.scrollContainer_.removeAttribute('aria-live');\n      this.scrollContainer_.setAttribute('role', 'list');\n      this.slides_.forEach((slide) => {\n        slide.setAttribute('role', 'listitem');\n      });\n    } else {\n      this.scrollContainer_.setAttribute('aria-live', 'polite');\n      this.scrollContainer_.removeAttribute('role');\n      this.slides_.forEach((slide) => {\n        slide.removeAttribute('role');\n      });\n    }\n  }\n\n  /**\n   * Updates `aria-hidden` for the slides. When in list mode, this will be\n   * `false` for all the slides. When not in list mode, the current slide will\n   * have `aria-hidden=\"false\"`, with the rest having `aria-hidden=\"true\"`.\n   */\n  updateAriaHidden_() {\n    this.slides_.forEach((slide, i) => {\n      const hide = !this.treatAsList_() && i !== this.index_;\n      slide.setAttribute('aria-hidden', hide);\n    });\n  }\n\n  /**\n   * @param {!Event} event\n   * @private\n   */\n  onIndexChanged_(event) {\n    const detail = getDetail(event);\n    const index = detail['index'];\n\n    this.index_ = index;\n    this.runMutate_(() => {\n      this.updateAriaHidden_();\n    });\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {mod} from '../../../src/core/math';\n\n/**\n * Calculates the forwards distance between two indicies in an Array, treating\n * the first and last indicies as adjacent. In the array ['a', 'b', 'c'], the\n * forwardWrappingDistance between 'b' and 'a' is 2.\n * @param {number} a A start index.\n * @param {number} b An end index.\n * @param {!IArrayLike} arr An array like Object.\n * @return {number}\n */\nexport function forwardWrappingDistance(a, b, arr) {\n  const {length} = arr;\n  return a === b ? length : mod(b - a, length);\n}\n\n/**\n * Calculates the backwards distance between two indicies in an Array, treating\n * the first and last indicies as adjacent. In the array ['a', 'b', 'c'], the\n * backwardWrappingDistance between 'a' and 'b' is 2.\n * @param {number} a A start index.\n * @param {number} b An end index.\n * @param {!IArrayLike} arr An array like Object.\n * @return {number}\n */\nexport function backwardWrappingDistance(a, b, arr) {\n  const {length} = arr;\n  return a === b ? length : mod(a - b, length);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ActionSource} from './action-source';\nimport {\n  Alignment,\n  Axis,\n  findOverlappingIndex,\n  getDimension,\n  getPercentageOffsetFromAlignment,\n  scrollContainerToElement,\n  setTransformTranslateStyle,\n  updateLengthStyle,\n  updateScrollPosition,\n} from './dimensions.js';\nimport {AutoAdvance} from './auto-advance';\nimport {CarouselAccessibility} from './carousel-accessibility';\nimport {CarouselEvents} from './carousel-events';\nimport {backwardWrappingDistance, forwardWrappingDistance} from './array-util';\nimport {clamp, mod} from '../../../src/core/math';\nimport {createCustomEvent, listen, listenOnce} from '../../../src/event-helper';\nimport {debounce} from '../../../src/core/types/function';\nimport {dev} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {\n  getStyle,\n  setImportantStyles,\n  setStyle,\n  setStyles,\n} from '../../../src/style';\nimport {iterateCursor} from '../../../src/dom';\n\n/**\n * How long to wait prior to resetting the scrolling position after the last\n * scroll event. Ideally this should be low, so that once the user stops\n * scrolling, things are immediately centered again. Since there can be some\n * delay between scroll events, and we do not want to move things during a\n * scroll, it cannot be too small. 200ms seems to be around the lower limit for\n * this value on Android / iOS.\n */\nconst RESET_SCROLL_REFERENCE_POINT_WAIT_MS = 200;\n\nconst SPACER_CLASS = 'i-amphtml-carousel-spacer';\n\n/**\n * Runs a callback while disabling smooth scrolling by temporarily setting\n * the `scrollBehavior` to `auto`.\n * @param {!Element} el\n * @param {Function} cb\n */\nfunction runDisablingSmoothScroll(el, cb) {\n  const scrollBehavior = getStyle(el, 'scrollBehavior');\n\n  setStyle(el, 'scrollBehavior', 'auto');\n  cb();\n  setStyle(el, 'scrollBehavior', scrollBehavior);\n}\n\n/**\n * @param {!Array<number>} arr\n * @return {number}\n */\nfunction sum(arr) {\n  return arr.reduce((p, c) => p + c, 0);\n}\n\n/**\n * How the carousel works when looping:\n *\n * We want to make sure that the user can scroll all the way to the opposite\n * end (either forwards or backwards) of the carousel, but no further (no\n * looping back past where you started). We use spacer elements to adjust the\n * scroll width of the scrolling area to allow the browser to scroll as well as\n * providing targets for the browser to snap on. This is important as these\n * targets need to be present before the scroll starts for things to work\n * correctly.\n *\n * The spacers come in 3 types:\n *\n * - beforeSpacers: These provide scroll/snap before the first slide\n * - replacementSpacers: These take up the spot of the slides as they are\n *   translated around\n * - afterSpacers: These provide scroll/snap targets after the last slide\n *\n * The spacers are then hidden/shown depending on the reference point, called\n * the restingIndex to allow full movement forwards and backwards. You can\n * imagine this looks like the following if you have 5 slides:\n *\n *                [r][r][r][r][r]\n * [b][b][b][b][b][1][2][3][4][5][a][a][a][a][a]\n *\n * b = beforeSpacer, r = replacementSpacer, a = afterSpacer\n *\n * The replacement spacers are stacked on top of the slides.\n * When the restingIndex is the first index, we should translate slides and\n * hide the spacers as follows:\n *\n * [h][ ][ ][4][5][1][2][3][ ][ ][h][h][h][h][h]\n *\n * h = hidden\n *\n * This ensures that if you move left or right, there is a slide to show. Note\n * that we have two empty slots at the start, where slides '2' and '3' will\n * be moved as the user scrolls. Likewise, we have two slots at the end, where\n * slides '4' and '5' will move. Since the other spacers are hidden, the\n * browser cannot scroll into that area.\n *\n * When the user stops scrolling, we update the restingIndex and show/hide the\n * appropriate spacers. For example, if the user started at slide '1' and moved\n * left to slide '4', the UI would update to the following as they scrolled:\n *\n * [h][2][3][4][5][1][ ][ ][ ][ ][h][h][h][h][h]\n *\n * Once scrolling stopped, the reference point would be reset and this would\n * update to:\n *\n * [h][h][h][h][ ][ ][2][3][4][5][1][ ][ ][h][h]\n *\n * Moving slides:\n *\n * Slides are moved around using `transform: translate` relative to their\n * original resting spot. Slides are moved to be before or after the current\n * slide as the user scrolls. Currently, half the slides are moved before and\n * half the slides are moved after. This could be a bit smarter and only move\n * as many as are necessary to have a sufficient amount of buffer. When slides\n * are moved, they are positioned on top of an existing spacer.\n *\n * Initial index:\n *\n * The initial index can be specified, which will make the carousel scroll to\n * the desired index when it first renders. Since the layout of the slides is\n * asynchronous, this should be used instead of calling `goToSlide` after\n * creating the carousel.\n */\nexport class Carousel {\n  /**\n   * @param {{\n   *   win: !Window,\n   *   element: !Element,\n   *   scrollContainer: !Element,\n   *   runMutate: function(function()),\n   * }} config\n   */\n  constructor(config) {\n    const {element, initialIndex, runMutate, scrollContainer, win} = config;\n    /** @private @const */\n    this.win_ = win;\n\n    /** @private @const */\n    this.runMutate_ = runMutate;\n\n    /** @private @const */\n    this.element_ = element;\n\n    /** @private @const */\n    this.scrollContainer_ = scrollContainer;\n\n    /** @private @const */\n    this.autoAdvance_ = new AutoAdvance({\n      win,\n      element,\n      scrollContainer,\n      advanceable: this,\n    });\n\n    /** @private @const */\n    this.carouselAccessibility_ = new CarouselAccessibility({\n      win,\n      element,\n      scrollContainer,\n      runMutate,\n      stoppable: this.autoAdvance_,\n    });\n\n    /** @private @const */\n    this.debouncedResetScrollReferencePoint_ = debounce(\n      win,\n      () => this.resetScrollReferencePoint_(),\n      RESET_SCROLL_REFERENCE_POINT_WAIT_MS\n    );\n\n    /** @private {number} */\n    this.advanceCount_ = 1;\n\n    /** @private {number} */\n    this.autoAdvanceLoops_ = Number.POSITIVE_INFINITY;\n\n    /** @private {boolean} */\n    this.mixedLength_ = false;\n\n    /** @private {!Array<!Element>} */\n    this.slides_ = [];\n\n    /** @private {boolean} */\n    this.userScrollable_ = true;\n\n    /** @private {boolean} */\n    this.updating_ = false;\n\n    /**@private {!Array<!Element>} */\n    this.beforeSpacers_ = [];\n\n    /** @private {!Array<!Element>} */\n    this.replacementSpacers_ = [];\n\n    /** @private {!Array<!Element>} */\n    this.afterSpacers_ = [];\n\n    /** @protected {!Array<!Element>} */\n    this.allSpacers_ = [];\n\n    /**\n     * @private {boolean}\n     */\n    this.layoutPaused_ = false;\n\n    /**\n     * Set from sources of programmatic scrolls to avoid doing work associated\n     * with regular scrolling.\n     * @private {boolean}\n     */\n    this.ignoreNextScroll_ = false;\n\n    /**\n     * The offset for the current element, based on the alignment and axis. This\n     * is a percentage of the Element's length along the current axis. This is\n     * used to preserve relative scroll position when updating the UI after\n     * things have moved (e.g. on rotate).\n     * @private {number}\n     */\n    this.currentElementOffset_ = 0;\n\n    /**\n     * Keeps track of an index that was requested to be scrolled to\n     * programmatically. This is used to make sure that the carousel ends on\n     * the  right slide if a UI update was requested during a programmatic\n     * scroll. This is cleared when the user manually scrolls.\n     * @private {number?}\n     */\n    this.requestedIndex_ = null;\n\n    /**\n     * The reference index where the the scrollable area last stopped\n     * scrolling. This slide is not translated and other slides are translated\n     * to move before or after as needed. This is also used when looping to\n     * prevent a single swipe from wrapping past the starting point.\n     * @private {number}\n     */\n    this.restingIndex_ = NaN;\n\n    /**\n     * Whether or not the user is currently touching the scrollable area. This\n     * is used to avoid resetting the resting point while the user is touching\n     * (e.g. they have dragged part way to the next slide, but have not yet\n     * released their finger).\n     * @private {boolean}\n     */\n    this.touching_ = false;\n\n    /**\n     * Whether or not there is a scroll in progress. This is tracked from the\n     * first scroll event, until RESET_SCROLL_REFERENCE_POINT_WAIT_MS after the\n     * last scroll event is received. This is used to prevent programmatic\n     * scroll requests while a scroll is in progress.\n     * @private {boolean}\n     */\n    this.scrolling_ = false;\n\n    /**\n     * Tracks the source of what cause the carousel to change index. This can\n     * be provided when moving the carousel programmatically, and the value\n     * will be propagated.\n     * @private {!ActionSource|undefined}\n     */\n    this.actionSource_ = undefined;\n\n    /** @private {!Alignment} */\n    this.alignment_ = Alignment.START;\n\n    /** @private {!Axis} */\n    this.axis_ = Axis.X;\n\n    /**\n     * Whether slides are laid out in the forwards or reverse direction. When\n     * using rtl (right to left), this should be false. This is used to set the\n     * transforms for slides and spacers correctly when the flex direction is\n     * reversed due to a rtl direction. TODO(sparhami) is there some way we\n     * could get this to work without needing to be explicitly told what the\n     * direction is?\n     * @private {boolean}\n     */\n    this.forwards_ = true;\n\n    /** @private {boolean} */\n    this.hideScrollbar_ = true;\n\n    /**\n     * TODO(sparhami) Rename this to `activeIndex`. We do not want to expose\n     * this as it changes, only when the user stops scrolling. Also change\n     * restingIndex to currentIndex.\n     * @private {number}\n     */\n    this.currentIndex_ = initialIndex || 0;\n\n    /**\n     * Whether or not looping is requested. Do not use directly, but rather use\n     * `isLooping` instead.\n     * @private {boolean}\n     */\n    this.loop_ = false;\n\n    /** @private {boolean} */\n    this.snap_ = true;\n\n    /** @private {number} */\n    this.snapBy_ = 1;\n\n    /** @private {number} */\n    this.visibleCount_ = 1;\n\n    this.scrollContainer_.addEventListener(\n      'scroll',\n      () => this.handleScroll_(),\n      true\n    );\n    this.scrollContainer_.addEventListener(\n      'scrollend',\n      () => this.handleScrollEnd_(),\n      true\n    );\n    listen(\n      this.scrollContainer_,\n      'touchstart',\n      () => this.handleTouchStart_(),\n      {capture: true, passive: true}\n    );\n    listen(this.scrollContainer_, 'wheel', () => this.handleWheel_(), {\n      capture: true,\n      passive: true,\n    });\n  }\n\n  /**\n   * Moves forward by the current advance count.\n   * @param {!ActionSource=} actionSource\n   */\n  next(actionSource) {\n    this.advance(this.advanceCount_, {actionSource});\n  }\n\n  /**\n   * Moves backwards by the current advance count.\n   * @param {!ActionSource=} actionSource\n   */\n  prev(actionSource) {\n    this.advance(-this.advanceCount_, {actionSource});\n  }\n\n  /**\n   * Moves the current index forward/backwards by a given delta and scrolls\n   * the new index into view. There are a few cases where this behaves\n   * differently than might be expected when not looping:\n   *\n   * 1. The current index is in the last group, then the new index will be the\n   * zeroth index. For example, say you have four slides, 'a', 'b', 'c' and 'd',\n   * you are showing two at a time, start aligning slides and are advancing one\n   * slide at a time. If you are on slide 'c', advancing will move back to 'a'\n   * instead of moving to 'd', which would cause no scrolling since 'd' is\n   * already visible and cannot start align itself.\n   * 2. The delta would go past the start or the end and the the current index\n   * is not at the start or end, then the advancement is capped to the start\n   * or end respectively.\n   * 3. The delta would go past the start or the end and the current index is\n   * at the start or end, then the next index will be the opposite end of the\n   * carousel.\n   *\n   * TODO(sparhami) How can we make this work well for accessibility?\n   * @param {number} delta\n   * @param {{\n   *   actionSource: (!ActionSource|undefined),\n   *   allowWrap: (boolean|undefined),\n   * }=} options\n   */\n  advance(delta, options = {}) {\n    const {currentIndex_, requestedIndex_, slides_} = this;\n    const {actionSource, allowWrap = false} = options;\n\n    // If we have a requested index, use that as the reference point. The\n    // current index may not be updated yet.This allows calling `advance`\n    // multiple times in a row and ending on the correct slide.\n    const index = requestedIndex_ !== null ? requestedIndex_ : currentIndex_;\n    const newIndex = index + delta;\n    const endIndex = slides_.length - 1;\n    const atStart = index === 0;\n    const atEnd = index === endIndex;\n    const passingStart = newIndex < 0;\n    const passingEnd = newIndex > endIndex;\n    const forwardWithinLastWindow =\n      delta > 0 && this.inLastWindow_(index) && this.inLastWindow_(newIndex);\n\n    let slideIndex;\n    if (this.isLooping()) {\n      slideIndex = mod(newIndex, endIndex + 1);\n    } else if (!allowWrap) {\n      // We only need to bail out if both indices are in the\n      // the last window. If we didn't bail, we would attempt\n      // to scroll the container, when it shouldn't.\n      slideIndex = forwardWithinLastWindow\n        ? index\n        : clamp(newIndex, 0, endIndex);\n    } else if (forwardWithinLastWindow) {\n      slideIndex = 0;\n    } else if ((passingStart && atStart) || (passingEnd && !atEnd)) {\n      slideIndex = endIndex;\n    } else if ((passingStart && !atStart) || (passingEnd && atEnd)) {\n      slideIndex = 0;\n    } else {\n      slideIndex = newIndex;\n    }\n\n    this.goToSlide(slideIndex, {actionSource});\n  }\n\n  /**\n   * Pauses the layout temporarily. This can be resumed by calling\n   * `resumseLayout`.\n   */\n  pauseLayout() {\n    this.layoutPaused_ = true;\n    this.autoAdvance_.pause();\n  }\n\n  /**\n   * Resumes layout of the component. This will update the UI to the correct\n   * state if there were changes since pausing layout.\n   */\n  resumeLayout() {\n    this.layoutPaused_ = false;\n    this.updateUi();\n    this.autoAdvance_.resume();\n  }\n\n  /**\n   * @return {number} The current index of the carousel.\n   */\n  getCurrentIndex() {\n    return this.currentIndex_;\n  }\n\n  /**\n   * @return {number} The number of items visible at a time.\n   */\n  getVisibleCount() {\n    return this.visibleCount_;\n  }\n\n  /**\n   * Checks whether or not looping is enabled. This requires that looping is\n   * configured and that there are enough slides to do looping.\n   * @return {boolean} Whether or not looping is enabled.\n   */\n  isLooping() {\n    return this.loop_ && this.slides_.length / this.visibleCount_ >= 3;\n  }\n\n  /**\n   * Moves the carousel to a given index. If the index is out of range, the\n   * carousel is not moved.\n   * @param {number} index\n   * @param {{\n   *   smoothScroll: (boolean|undefined),\n   *   actionSource: (!ActionSource|undefined),\n   * }=} options\n   */\n  goToSlide(index, options = {}) {\n    const {actionSource, smoothScroll = true} = options;\n    if (index < 0 || index > this.slides_.length - 1 || isNaN(index)) {\n      return;\n    }\n\n    if (index === this.currentIndex_) {\n      return;\n    }\n\n    // If the user is interacting with the carousel, either by touching or by\n    // a momentum scroll, ignore programmatic requests as the user's\n    // interaction is much more important.\n    if (this.touching_ || this.isUserScrolling_()) {\n      return;\n    }\n\n    this.ignoreNextScroll_ = false;\n    this.requestedIndex_ = index;\n    this.actionSource_ = actionSource;\n    this.scrollSlideIntoView_(this.slides_[index], {smoothScroll});\n  }\n\n  /**\n   * @param {number} advanceCount How many slides to advance by. This is the\n   *    number of slides moved forwards/backwards when calling prev/next.\n   */\n  updateAdvanceCount(advanceCount) {\n    this.advanceCount_ = advanceCount;\n  }\n\n  /**\n   * @param {string} alignment How to align slides when snapping or scrolling\n   *    to the propgramatticaly (auto advance or next/prev). This should be\n   *    either \"start\" or \"cemter\".\n   */\n  updateAlignment(alignment) {\n    this.alignment_ =\n      alignment === 'start' ? Alignment.START : Alignment.CENTER;\n    this.updateUi();\n  }\n\n  /**\n   * @param {boolean} autoAdvance Whether or not to autoadvance. Changing this\n   *    will start or stop autoadvance.\n   */\n  updateAutoAdvance(autoAdvance) {\n    this.autoAdvance_.updateAutoAdvance(autoAdvance);\n  }\n\n  /**\n   * @param {number} autoAdvanceCount How many items to advance by. A positive\n   *    number advances forwards, a negative number advances backwards.\n   */\n  updateAutoAdvanceCount(autoAdvanceCount) {\n    this.autoAdvance_.updateAutoAdvanceCount(autoAdvanceCount);\n  }\n\n  /**\n   * @param {number} autoAdvanceInterval How much time between auto advances.\n   *    This time starts counting from when scrolling has stopped.\n   */\n  updateAutoAdvanceInterval(autoAdvanceInterval) {\n    this.autoAdvance_.updateAutoAdvanceInterval(autoAdvanceInterval);\n  }\n\n  /**\n   * @param {number} autoAdvanceLoops The number of loops through the carousel\n   *    that should be autoadvanced before stopping. This defaults to infinite\n   *    loops.\n   */\n  updateAutoAdvanceLoops(autoAdvanceLoops) {\n    this.autoAdvanceLoops_ = autoAdvanceLoops;\n    this.updateUi();\n  }\n\n  /**\n   * @param {boolean} forwards Whether or not the advancement direction is\n   *    forwards (e.g. ltr) or reverse (e.g. rtl).\n   */\n  updateForwards(forwards) {\n    this.forwards_ = forwards;\n    this.updateUi();\n  }\n\n  /**\n   * @param {boolean} hideScrollbar Whether or not the scrollbar should be\n   *    hidden.\n   */\n  updateHideScrollbar(hideScrollbar) {\n    this.hideScrollbar_ = hideScrollbar;\n    this.updateUi();\n  }\n\n  /**\n   * @param {boolean} horizontal Whether the scrollable should lay out\n   *    horizontally or vertically.\n   */\n  updateHorizontal(horizontal) {\n    this.axis_ = horizontal ? Axis.X : Axis.Y;\n    this.updateUi();\n  }\n\n  /**\n   * @param {boolean} loop Whether or not the scrollable should loop when\n   *    reaching the last slide.\n   */\n  updateLoop(loop) {\n    this.loop_ = loop;\n    this.updateUi();\n  }\n\n  /**\n   * @param {boolean} mixedLength Whether the slides used mixed lengths or they\n   *    should be have a length assigned in accordance to the visible count.\n   */\n  updateMixedLength(mixedLength) {\n    this.mixedLength_ = mixedLength;\n    this.carouselAccessibility_.updateMixedLength(mixedLength);\n    this.updateUi();\n  }\n\n  /**\n   * Lets the scrollable know that the slides have changed. This is needed for\n   * various internal calculations.\n   * @param {!Array<!Element>} slides\n   */\n  updateSlides(slides) {\n    const {length} = slides;\n    if (!length) {\n      const TAG = this.element_.tagName.toUpperCase();\n      dev().warn(TAG, 'No slides were found.');\n      return;\n    }\n    this.slides_ = slides;\n    // Normalize current index to updated slide length.\n    this.currentIndex_ = this.isLooping()\n      ? mod(this.currentIndex_, length)\n      : clamp(this.currentIndex_, 0, length - 1) || 0;\n    this.carouselAccessibility_.updateSlides(slides);\n    this.updateUi();\n  }\n\n  /**\n   * @param {boolean} snap Whether or not to snap.\n   */\n  updateSnap(snap) {\n    this.snap_ = snap;\n    this.updateUi();\n  }\n\n  /**\n   * @param {number} snapBy Snaps on every nth slide, including the zeroth\n   *    slide.\n   */\n  updateSnapBy(snapBy) {\n    this.snapBy_ = Math.max(1, snapBy);\n    this.updateUi();\n  }\n\n  /**\n   *\n   * @param {boolean} userScrollable Whether or not the carousel can be\n   *    scrolled (e.g. via touch). If false, then the carousel can only be\n   *    advanced via next, prev, goToSlide or autoAdvance.\n   */\n  updateUserScrollable(userScrollable) {\n    this.userScrollable_ = userScrollable;\n    this.updateUi();\n  }\n\n  /**\n   * Updates the UI of the carousel. Since screen rotation can change scroll\n   * position, this should be called to restore the scroll position (i.e. which\n   * slide is at the start / center of the scrollable, depending on alignment).\n   */\n  updateUi() {\n    if (this.updating_ || this.layoutPaused_) {\n      return;\n    }\n\n    this.updating_ = true;\n    this.runMutate_(() => {\n      this.updating_ = false;\n      this.scrollContainer_.setAttribute('mixed-length', this.mixedLength_);\n      this.scrollContainer_.setAttribute(\n        'user-scrollable',\n        this.userScrollable_\n      );\n      this.scrollContainer_.setAttribute('hide-scrollbar', this.hideScrollbar_);\n      this.scrollContainer_.setAttribute('horizontal', this.axis_ === Axis.X);\n      this.scrollContainer_.setAttribute('loop', this.isLooping());\n      this.scrollContainer_.setAttribute('snap', this.snap_);\n      // TODO(sparhami) Do not use CSS custom property\n      setImportantStyles(this.scrollContainer_, {\n        '--visible-count': this.visibleCount_,\n      });\n\n      if (!this.slides_.length) {\n        return;\n      }\n\n      this.autoAdvance_.updateMaxAdvances(\n        this.autoAdvanceLoops_ * this.slides_.length - 1\n      );\n      this.updateSpacers_();\n      this.setChildrenSnapAlign_();\n      this.hideSpacersAndSlides_();\n      this.resetScrollReferencePoint_(/* force */ true);\n    });\n  }\n\n  /**\n   * @param {number} visibleCount How many slides to show at a time within the\n   *    scrollable. This option is ignored if mixed lengths is set.\n   */\n  updateVisibleCount(visibleCount) {\n    this.visibleCount_ = Math.max(1, visibleCount);\n    this.carouselAccessibility_.updateVisibleCount(visibleCount);\n    this.updateUi();\n  }\n\n  /**\n   * Updates the resting index as well as firing an event, if it actually\n   * changed.\n   * @param {number} restingIndex The new resting index.\n   * @param {ActionSource=} actionSource The actionSource associated with this\n   *    change.\n   * @private\n   */\n  updateRestingIndex_(restingIndex, actionSource) {\n    if (this.restingIndex_ === restingIndex) {\n      return;\n    }\n\n    this.restingIndex_ = restingIndex;\n    this.element_.dispatchEvent(\n      createCustomEvent(\n        this.win_,\n        CarouselEvents.INDEX_CHANGE,\n        dict({\n          'index': restingIndex,\n          'total': this.slides_.length,\n          'actionSource': actionSource,\n          'slides': this.slides_,\n        }),\n        {\n          bubbles: true,\n        }\n      )\n    );\n  }\n\n  /**\n   * Updates the current offset within the current Element as well as firing an\n   * event.\n   * @param {number} index The index of the Element.\n   * @param {number} offset The offset, as a percentage of the Element's width.\n   */\n  updateCurrentElementOffset_(index, offset) {\n    this.currentIndex_ = index;\n    this.currentElementOffset_ = offset;\n    this.element_.dispatchEvent(\n      createCustomEvent(\n        this.win_,\n        CarouselEvents.OFFSET_CHANGE,\n        dict({\n          'index': index,\n          'total': this.slides_.length,\n          'offset': this.forwards_ ? -offset : offset,\n          'slides': this.slides_,\n        }),\n        {\n          bubbles: true,\n        }\n      )\n    );\n  }\n\n  /**\n   * Fires an event when the scroll position has changed, once scrolling has\n   * settled. In some situations, the index may not change, but you still want\n   * to react to the scroll position changing.\n   */\n  notifyScrollStart() {\n    this.element_.dispatchEvent(\n      createCustomEvent(this.win_, CarouselEvents.SCROLL_START, null)\n    );\n  }\n\n  /**\n   * Fires an event when the scroll position has changed, once scrolling has\n   * settled. In some situations, the index may not change, but you still want\n   * to react to the scroll position changing.\n   */\n  notifyScrollPositionChanged_() {\n    this.element_.dispatchEvent(\n      createCustomEvent(this.win_, CarouselEvents.SCROLL_POSITION_CHANGED, null)\n    );\n  }\n\n  /**\n   * Handles a touch start, preventing `resetScrollReferencePoint_` from\n   * running until the user stops touching.\n   * @private\n   */\n  handleTouchStart_() {\n    this.touching_ = true;\n    this.actionSource_ = ActionSource.TOUCH;\n    this.requestedIndex_ = null;\n    this.ignoreNextScroll_ = false;\n\n    listenOnce(\n      window,\n      'touchend',\n      () => {\n        this.touching_ = false;\n        this.debouncedResetScrollReferencePoint_();\n      },\n      {\n        capture: true,\n        passive: true,\n      }\n    );\n  }\n\n  /**\n   * Handles a wheel event.\n   * @private\n   */\n  handleWheel_() {\n    this.actionSource_ = ActionSource.WHEEL;\n    this.requestedIndex_ = null;\n    this.ignoreNextScroll_ = false;\n  }\n\n  /**\n   * Handles a scroll event, updating the the current index as well as moving\n   * slides around as needed.\n   * @private\n   */\n  handleScroll_() {\n    if (this.ignoreNextScroll_) {\n      this.ignoreNextScroll_ = false;\n      return;\n    }\n\n    this.scrolling_ = true;\n    this.updateCurrent_();\n    this.notifyScrollStart();\n    this.debouncedResetScrollReferencePoint_();\n  }\n\n  /**\n   * For browsers that support the scrollend event, reset the reference point\n   * immediately. This prevents users from hitting the wrapping point while\n   * scrolling continually.\n   */\n  handleScrollEnd_() {\n    // For now, do not handle scrollend when requestedIndex_ is set (e.g.\n    // from a call to advance, via arrow buttons). This is because updating\n    // the scroll position causes a scrollend, so if you advance while a\n    // smooth scroll is in progress, the resetScrollReferencePoint_ would cause\n    // it to jump to the final slide.\n    // The scrollend is likely triggered due to what causes\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1018842, though it\n    // is unclear if this will ever be changed.\n    // TODO(https://bugs.chromium.org/p/chromium/issues/detail?id=1018842):\n    // Remove this if/when scrollend stops firing when adjusting the scroll\n    // position. We will want to make sure that this works if/when Safari\n    // impelemnts scrollend as well.\n    if (this.requestedIndex_ !== null) {\n      return;\n    }\n\n    this.resetScrollReferencePoint_();\n  }\n\n  /**\n   * @return {boolean} Whether or not the user is scrolling. For example, the\n   *    user flicked the carousel and there is a momentum scroll in progress.\n   */\n  isUserScrolling_() {\n    return (\n      this.scrolling_ &&\n      (this.actionSource_ === ActionSource.TOUCH ||\n        this.actionSource_ === ActionSource.WHEEL)\n    );\n  }\n\n  /**\n   * @param {!Element} el The slide or spacer to move.\n   * @param {number} revolutions How many revolutions forwards (or backwards)\n   *    the slide or spacer should move.\n   * @param {number} revolutionLength The length of a single revolution around\n   *    the scrollable area.\n   * @private\n   */\n  setElementTransform_(el, revolutions, revolutionLength) {\n    const dir = this.forwards_ ? 1 : -1;\n    const delta = revolutions * revolutionLength * dir;\n    setTransformTranslateStyle(this.axis_, el, delta);\n    el._revolutions = revolutions;\n  }\n\n  /**\n   * Resets the transforms for all the slides, putting them back in their\n   * natural position.\n   * @param {number} totalLength The total length of all the slides.\n   * @private\n   */\n  resetSlideTransforms_(totalLength) {\n    const revolutions = 0; // Sets the slide back to the initial position.\n    this.slides_.forEach((slide) => {\n      this.setElementTransform_(slide, revolutions, totalLength);\n    });\n  }\n\n  /**\n   * @return {!Array<number>}} An array of the lengths of the slides.\n   * @private\n   */\n  getSlideLengths_() {\n    return this.slides_.map((s) => getDimension(this.axis_, s).length);\n  }\n\n  /**\n   * @return {boolean} True if the carousel is not looping, and is at the\n   *    start, false otherwise.\n   */\n  isAtEnd() {\n    if (this.isLooping()) {\n      return false;\n    }\n\n    return this.isScrollAtEndingEdge_();\n  }\n\n  /**\n   * @return {boolean} True if the carousel is not looping, and is at the\n   *    end, false otherwise.\n   */\n  isAtStart() {\n    if (this.isLooping()) {\n      return false;\n    }\n\n    return this.isScrollAtBeginningEdge_();\n  }\n\n  /**\n   * @return {boolean} True if the scrolling is at the right edge of the\n   *    carousel in LTR and left edge of the carousel if RTL.\n   * @private\n   */\n  isScrollAtEndingEdge_() {\n    const el = this.scrollContainer_;\n    const vector =\n      el./*OK*/ getBoundingClientRect().width * (this.forwards_ ? 1 : -1);\n    const roundedVector = this.forwards_\n      ? Math.ceil(vector)\n      : Math.floor(vector);\n    const edgeClosestToEnd = el./*OK*/ scrollLeft + roundedVector;\n    const containerScrollWidth = el./*OK*/ scrollWidth;\n\n    const atEndingEdge = this.forwards_\n      ? edgeClosestToEnd >= containerScrollWidth\n      : edgeClosestToEnd <= -containerScrollWidth;\n    return atEndingEdge;\n  }\n\n  /**\n   * @return {boolean} True if the scrolling is at the left edge of the\n   *    carousel for LTR and right edge for RTL.\n   * @private\n   */\n  isScrollAtBeginningEdge_() {\n    const currentScrollPos = this.scrollContainer_./*OK*/ scrollLeft;\n    return this.forwards_ ? currentScrollPos <= 0 : currentScrollPos >= 0;\n  }\n\n  /**\n   * @param {number} count The number of spacers to create\n   * @return {!Array<!Element>} An array of spacers.\n   * @private\n   */\n  createSpacers_(count) {\n    const spacers = [];\n    for (let i = 0; i < count; i++) {\n      const spacer = document.createElement('div');\n      spacer.className = SPACER_CLASS;\n      spacers.push(spacer);\n    }\n    return spacers;\n  }\n\n  /**\n   * Updates the spacers, removing the old ones and creating new ones.\n   * @private\n   */\n  updateSpacers_() {\n    const {axis_, slides_} = this;\n    const slideLengths = this.getSlideLengths_();\n    const totalLength = sum(slideLengths);\n    const count = this.isLooping() ? slides_.length : 0;\n\n    // Replace the before spacers.\n    this.beforeSpacers_.forEach((spacer) => {\n      this.scrollContainer_.removeChild(spacer);\n    });\n    this.beforeSpacers_ = this.createSpacers_(count);\n    this.beforeSpacers_.forEach((spacer, i) => {\n      updateLengthStyle(axis_, spacer, slideLengths[i]);\n      this.scrollContainer_.insertBefore(spacer, slides_[0]);\n    });\n\n    // Replace the replacement spacers.\n    this.replacementSpacers_.forEach((spacer) => {\n      this.scrollContainer_.removeChild(spacer);\n    });\n    this.replacementSpacers_ = this.createSpacers_(count);\n    this.replacementSpacers_.forEach((spacer, i) => {\n      updateLengthStyle(axis_, spacer, slideLengths[i]);\n      // Translate these 1 revolution up, so they end up on top of the slides.\n      this.setElementTransform_(spacer, -1, totalLength);\n      this.scrollContainer_.appendChild(spacer);\n    });\n\n    // Replace the after spacers.\n    this.afterSpacers_.forEach((spacer) => {\n      this.scrollContainer_.removeChild(spacer);\n    });\n    this.afterSpacers_ = this.createSpacers_(count);\n    this.afterSpacers_.forEach((spacer, i) => {\n      updateLengthStyle(axis_, spacer, slideLengths[i]);\n      // Translate these 1 revolution up, so they end up right after the\n      // slides (where the replacement spacers were).\n      this.setElementTransform_(spacer, -1, totalLength);\n      this.scrollContainer_.appendChild(spacer);\n    });\n\n    this.allSpacers_ = this.beforeSpacers_.concat(\n      this.replacementSpacers_,\n      this.afterSpacers_\n    );\n  }\n\n  /**\n   * Updates the snap-align for all spacers/slides. The spacers have the same\n   * snap property as the associated slide.\n   * @private\n   */\n  setChildrenSnapAlign_() {\n    const slideCount = this.slides_.length;\n    const startAligned = this.alignment_ === Alignment.START;\n    const oddVisibleCount = mod(this.visibleCount_, 2) === 1;\n    // For the legacy scroll-snap-coordinate, when center aligning with an odd\n    // count, actually use a start coordinate. Otherwise it will snap to the\n    // center of the slides near the edge of the container. That is\n    //    ______________             _____________\n    // [ | ][   ][   ][ | ]   vs.   [   ][   ][   ]\n    //    \u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E             \u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\u203E\n    const coordinate = startAligned || oddVisibleCount ? '0%' : '50%';\n\n    iterateCursor(this.scrollContainer_.children, (child, index) => {\n      // Note that we are dealing with both spacers, so we need to make sure\n      // we are always dealing with the slideIndex. Since we have the same\n      // number of each type of spacer as we do slides, we can simply do a mod\n      // to do the mapping.\n      const slideIndex = mod(index, slideCount);\n      // If an item is at the start of the group, it gets an aligned.\n      const shouldSnap = mod(slideIndex, this.snapBy_) === 0;\n\n      // Only apply `snap` feature on non-looping carousels\n      // or only the spacers of the looping carousels.\n      // Adding `snap` feature to non-spacers in a looping carousel\n      // causes all weird behaviors due to non-homogenous siblings,\n      // i.e. <amp-img> with lots of non-fixed sized children, etc.\n      if (child.classList.contains(SPACER_CLASS) || !this.isLooping()) {\n        setStyles(child, {\n          'scroll-snap-align': shouldSnap ? this.alignment_ : 'none',\n          'scroll-snap-coordinate': shouldSnap ? coordinate : 'none',\n        });\n      }\n    });\n  }\n\n  /**\n   * Hides any spacers or slides that are not currently necessary. Enough\n   * spacers are shown to allow 1 revolution of scrolling (not including the\n   * current slide) before / after the current slide. The rest of the spacers\n   * are hidden.\n   *\n   * Note that spacers are sized the same as the slide that they replace. As a\n   * result, we need to hide the correct spacers rather than simply the\n   * correct number of them.\n   *\n   * @private\n   */\n  hideSpacersAndSlides_() {\n    const {afterSpacers_, beforeSpacers_, currentIndex_, slides_} = this;\n    const numBeforeSpacers = Math.max(0, slides_.length - currentIndex_ - 1);\n    const numAfterSpacers = Math.max(0, currentIndex_ - 1);\n\n    beforeSpacers_.forEach((el, i) => {\n      const distance = backwardWrappingDistance(\n        currentIndex_,\n        i,\n        beforeSpacers_\n      );\n      const tooFar = distance > slides_.length - 1;\n      el.hidden = tooFar || i < slides_.length - numBeforeSpacers;\n    });\n\n    afterSpacers_.forEach((el, i) => {\n      const distance = forwardWrappingDistance(currentIndex_, i, afterSpacers_);\n      const tooFar = distance > slides_.length - 1;\n      el.hidden = tooFar || i > numAfterSpacers;\n    });\n  }\n\n  /**\n   * Updates the current element. If the current element has changed, then\n   * slides are moved around as necessary before/after the current slide.\n   * @private\n   */\n  updateCurrent_() {\n    const {\n      alignment_,\n      allSpacers_,\n      axis_,\n      currentIndex_,\n      scrollContainer_,\n      slides_,\n    } = this;\n    const totalLength = sum(this.getSlideLengths_());\n    // When looping, we translate the slides, but the slides might decide to\n    // translate their content instead of the whole slide. As a result, we need\n    // to use the spacers to figure out where we are rather than the slides\n    // themselves.\n    // Note: we do not check looping directly, since the spacers / layout are\n    // updated asynchronously.\n    const hasSpacers = !!allSpacers_.length;\n    const items = hasSpacers ? allSpacers_ : slides_;\n    const startIndex = hasSpacers\n      ? currentIndex_ + slides_.length\n      : currentIndex_;\n    const overlappingIndex = findOverlappingIndex(\n      axis_,\n      alignment_,\n      scrollContainer_,\n      items,\n      startIndex\n    );\n\n    // Currently not over a slide (e.g. on top of overscroll area).\n    if (overlappingIndex === undefined) {\n      return;\n    }\n\n    // The overlapping element, may be a spacer.\n    const overlappingElement = items[overlappingIndex];\n    // Since we are potentially looking accross all spacers, we need to convert\n    // to a slide index.\n    const newIndex = overlappingIndex % slides_.length;\n\n    // Update the current offset on each scroll so that we have it up to date\n    // in case of a resize. Also notifies interested parties about where we are\n    // within the current index.\n    const offset = getPercentageOffsetFromAlignment(\n      axis_,\n      alignment_,\n      scrollContainer_,\n      overlappingElement\n    );\n    this.updateCurrentElementOffset_(newIndex, offset);\n\n    // We did not move at all.\n    if (newIndex === currentIndex_) {\n      return;\n    }\n\n    this.runMutate_(() => {\n      this.moveSlides_(totalLength);\n    });\n  }\n\n  /**\n   * Resets the frame of reference for scrolling, centering things around the\n   * current index and moving things as appropriate.\n   * @param {boolean} force Whether or not to force the window reset, ignoring\n   *    whether or not the resting index has changed.\n   * @private\n   */\n  resetScrollReferencePoint_(force = false) {\n    const {actionSource_} = this;\n\n    // Make sure if the user is in the middle of a drag, we do not move\n    // anything. The touch end will cause us to get called again.\n    if (this.touching_) {\n      return;\n    }\n\n    // Scrolling has stopped, so clear the action source from whatever caused\n    // the scrolling in the first place.\n    this.actionSource_ = undefined;\n    this.scrolling_ = false;\n\n    this.runMutate_(() => {\n      this.notifyScrollPositionChanged_();\n    });\n\n    // Check if the resting index we are centered around is the same as where\n    // we stopped scrolling. If so, we do not want move anything or fire an\n    // event. If we have a programmatic scroll request, we still need to move\n    // to that index.\n    if (\n      this.restingIndex_ === this.currentIndex_ &&\n      this.requestedIndex_ === null &&\n      !force\n    ) {\n      return;\n    }\n\n    // We are updating during a programmatic scroll, so go to the correct\n    // index (and update offset accordingly).\n    if (this.requestedIndex_ !== null) {\n      this.currentIndex_ = this.requestedIndex_;\n      this.requestedIndex_ = null;\n      this.currentElementOffset_ = 0;\n    }\n\n    const totalLength = sum(this.getSlideLengths_());\n\n    this.runMutate_(() => {\n      this.updateRestingIndex_(this.currentIndex_, actionSource_);\n      this.updateCurrentElementOffset_(\n        this.currentIndex_,\n        this.currentElementOffset_\n      );\n      this.resetSlideTransforms_(totalLength);\n      this.hideSpacersAndSlides_();\n      this.moveSlides_(totalLength);\n      this.restoreScrollStart_();\n    });\n  }\n\n  /**\n   * Updates the scroll start of the scrolling element. This restores the\n   * scroll position to the same offset within the currentElement as before.\n   * This is useful when some layout has occured that may change the existing\n   * scroll position.\n   * @private\n   */\n  restoreScrollStart_() {\n    const {\n      alignment_,\n      axis_,\n      currentElementOffset_,\n      currentIndex_,\n      scrollContainer_,\n      slides_,\n    } = this;\n    const currentElement = slides_[currentIndex_];\n    // Figure out what is the difference between where the Element is, and\n    // where it should be as a percentage of its length.\n    const actualOffset = getPercentageOffsetFromAlignment(\n      axis_,\n      alignment_,\n      scrollContainer_,\n      currentElement\n    );\n    const deltaOffset = actualOffset - currentElementOffset_;\n    // Now convert the offset into pixels.\n    const {length} = getDimension(axis_, currentElement);\n    const deltaInPixels = deltaOffset * length;\n\n    // No scroll will happen, make sure the `ignoreNextScroll_` flag is not\n    // set.\n    if (!deltaInPixels) {\n      return;\n    }\n\n    this.ignoreNextScroll_ = true;\n    runDisablingSmoothScroll(scrollContainer_, () => {\n      updateScrollPosition(axis_, scrollContainer_, deltaInPixels);\n    });\n  }\n\n  /**\n   * Scrolls a slide into view based on its alignment.\n   * @param {!Element} slide\n   * @param {{\n   *   smoothScroll: boolean,\n   * }} options\n   * @private\n   */\n  scrollSlideIntoView_(slide, options) {\n    const {smoothScroll} = options;\n    const runner = smoothScroll ? (el, cb) => cb() : runDisablingSmoothScroll;\n    runner(this.scrollContainer_, () => {\n      scrollContainerToElement(\n        this.axis_,\n        this.alignment_,\n        this.scrollContainer_,\n        slide\n      );\n    });\n  }\n\n  /**\n   * Moves slides before or after the current index by setting setting a\n   * translate.\n   * @param {number} totalLength The total length of all the slides.\n   * @param {number} count How many slides to move.\n   * @param {boolean} isAfter Whether the slides should move after or before.\n   * @private\n   */\n  moveSlidesBeforeOrAfter__(totalLength, count, isAfter) {\n    const {currentIndex_, restingIndex_, slides_} = this;\n    const current = slides_[currentIndex_];\n    const currentRevolutions = current._revolutions || 0;\n    const dir = isAfter ? 1 : -1;\n\n    for (let i = 1; i <= count; i++) {\n      const elIndex = mod(currentIndex_ + i * dir, slides_.length);\n\n      // We do not want to move the slide that we started at.\n      if (elIndex === restingIndex_ && currentIndex_ !== restingIndex_) {\n        break;\n      }\n\n      const el = slides_[elIndex];\n      // Check if the element is on the wrong side of the current index.\n      const needsMove = elIndex > currentIndex_ !== isAfter;\n      const revolutions = needsMove\n        ? currentRevolutions + dir\n        : currentRevolutions;\n\n      this.setElementTransform_(el, revolutions, totalLength);\n    }\n  }\n\n  /**\n   * Moves slides that are not at the current index before or after by\n   * translating them if necessary.\n   * @param {number} totalLength The total length of all the slides.\n   * @private\n   */\n  moveSlides_(totalLength) {\n    if (!this.isLooping()) {\n      return;\n    }\n\n    // TODO(sparhami) We could only the number of slides needed to have enough\n    // buffer between scrolls. One thing we need to look out for is to make\n    // sure the mixed length and visibleCount cases are handled correctly.\n    // TODO(sparhami) The current approach of moving a set number of slides\n    // does not work well for the mixed length use case.\n    const {alignment_, slides_, visibleCount_} = this;\n    const isStartAligned = alignment_ === Alignment.START;\n    // How many slides fit into the current \"window\" of slides. When center\n    // aligning, we can ignore this as we want to have the same amount on both\n    // sides.\n    const windowSlideCount = isStartAligned ? visibleCount_ - 1 : 0;\n    const beforeCount = (slides_.length - 1 - windowSlideCount) / 2;\n    const afterCount = (slides_.length - 1 + windowSlideCount) / 2;\n\n    this.moveSlidesBeforeOrAfter__(totalLength, Math.round(beforeCount), false);\n    this.moveSlidesBeforeOrAfter__(totalLength, Math.round(afterCount), true);\n  }\n\n  /**\n   * Checks if a given index is in the last window of items. For example, if\n   * showing two slides at a time with the slides [a, b, c, d], both slide\n   * c and d are in the last window.\n   * @param {number} index The index to check.\n   * @return {boolean} True if the slide is in the last window, false\n   *    otherwise.\n   */\n  inLastWindow_(index) {\n    const {alignment_, slides_, visibleCount_} = this;\n    const startAligned = alignment_ === Alignment.START;\n    const lastWindowSize = startAligned ? visibleCount_ : visibleCount_ / 2;\n\n    return index >= slides_.length - lastWindowSize;\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\n\n/**\n * Used for tracking whether or not an item is near the viewport. This is set\n * from the IntersectionObserver and consumed by a flush.\n */\nconst NEAR_VIEWPORT_FLAG = '__AMP_CAROUSEL_NEAR_VIEWPORT';\n\n/**\n * Used for tracking whether or not an item is in the viewport. This is set\n * from the IntersectionObserver and consumed by a flush.\n */\nconst IN_VIEWPORT_FLAG = '__AMP_CAROUSEL_IN_VIEWPORT';\n\n/**\n * The value for having no margin for intersection. That is, the item must\n * intersect the intersection root itself.\n */\nconst NO_INTERSECTION_MARGIN = '0%';\n\n/**\n * The default margin around the scrolling element. This is a percentage of the\n * width of the element.\n */\nconst DEFAULT_NEARBY_MARGIN = 100;\n\n/**\n * Additional margin before something is unlaidout. This is a percentage of the\n * width of the element. This is used to avoid a rapid back and forth between\n * layout and unlayout at the threshold of the nearby margin.\n */\nconst UNLAYOUT_MARGIN = 10;\n\n/**\n * What percentage of an Element must intersect before being considered as\n * visible. This defaults to 1%, as the value for zero is not intuitive. For\n * example, a horizontal scrolling container that has full width items will\n * intersect on the second element if you have an intersection margin/threshold\n * of 0, since the left edge of the second element \"intersects\" with the\n * scrolling container, even though none of element is visible (not even 1 pixel).\n *\n * While the sepc says a value of \"0\" means \"any non-zero number of pixels\",\n * there are actual no pixels actually visible at this threshold.\n */\nconst DEFAULT_INTERSECTION_THRESHOLD = 0.01;\n\n/**\n * @enum {number}\n */\nconst ViewportChangeState = {\n  ENTER: 0,\n  LEAVE: 1,\n};\n\n/**\n * Manages scheduling layout/unlayout for children of an AMP component as they\n * intersect with the AMP component. The parent AMP component should notify the\n * manager as its own layout state changes so that the children can be updated\n * accordingly.\n *\n * Note: For Safari 12, this does not schedule layout for slides until they\n * enter the viewport, since `rootMargin` on `IntersectionObserver` is not\n * properly handled.\n *\n * Usage:\n *\n * Parent element:\n * ```\n * constructor() {\n *   this.childLayoutManager = new ChildLayoutManager({\n *     ampElement: this,\n *   });\n * }\n\n * buildCallback() {\n *   // Call this each time the effective children you want to manage change.\n *   this.childLayoutManager.updateChildren(children);\n * }\n *\n * layoutCallback() {\n *   this.childLayoutManager.wasLaidOut();\n * }\n *\n *\n * unlayoutCallback() {\n *   this.childLayoutManager.wasUnlaidOut();\n * }\n * ```\n */\nexport class ChildLayoutManager {\n  /**\n   * Creates a ChildLayoutManager for a given intersection container.\n   *\n   * Note: If the children live within a scrolling container, the\n   * intersectionElement must be the scrolling container, and not an\n   * ancestor in order for `nearbyMarginInPercent` to work.\n   * @param {{\n   *  ampElement: !AMP.BaseElement,\n   *  intersectionElement: !Element,\n   *  intersectionThreshold: (number|undefined),\n   *  nearbyMarginInPercent: (number|undefined),\n   *  viewportIntersectionThreshold: (number|undefined),\n   *  viewportIntersectionCallback: (function(!Element, boolean)|undefined)\n   * }} config\n   */\n  constructor(config) {\n    const {\n      ampElement,\n      intersectionElement,\n      intersectionThreshold = DEFAULT_INTERSECTION_THRESHOLD,\n      nearbyMarginInPercent = DEFAULT_NEARBY_MARGIN,\n      viewportIntersectionThreshold = intersectionThreshold,\n      viewportIntersectionCallback = () => {},\n    } = config;\n\n    /** @private @const */\n    this.ampElement_ = ampElement;\n\n    /** @private @const */\n    this.owners_ = Services.ownersForDoc(ampElement.element);\n\n    /** @private @const */\n    this.intersectionElement_ = intersectionElement;\n\n    /** @private @const */\n    this.intersectionThreshold_ = intersectionThreshold;\n\n    /** @private @const */\n    this.nearbyMarginInPercent_ = nearbyMarginInPercent;\n\n    /** @private @const */\n    this.viewportIntersectionThreshold_ = viewportIntersectionThreshold;\n\n    /** @private @const */\n    this.viewportIntersectionCallback_ = viewportIntersectionCallback;\n\n    /** @private */\n    this.queueChanges_ = false;\n\n    /** @private {!IArrayLike<!Element>} */\n    this.children_ = [];\n\n    /** @private {?IntersectionObserver} */\n    this.nearingViewportObserver_ = null;\n\n    /** @private {?IntersectionObserver} */\n    this.backingAwayViewportObserver_ = null;\n\n    /** @private {?IntersectionObserver} */\n    this.inViewportObserver_ = null;\n\n    /** @private {boolean} */\n    this.laidOut_ = false;\n  }\n\n  /**\n   * Sets whether visibility changes should be applied immediately or queued\n   * for a later flush. This is useful on iOS, as doing layout during scrolling\n   * can cause flickering due to paint.\n   * @param {boolean} queueChanges\n   */\n  setQueueChanges(queueChanges) {\n    this.queueChanges_ = queueChanges;\n  }\n\n  /**\n   * @param {!Element} target\n   * @param {boolean} isIntersecting\n   */\n  triggerLayout_(target, isIntersecting) {\n    if (isIntersecting) {\n      // TODO(sparhami) do we want to delay the layout for the farther\n      // away elements? Do we want schedule preload farther away elements?\n      this.owners_.scheduleLayout(this.ampElement_.element, target);\n    } else {\n      this.owners_./*OK */ scheduleUnlayout(this.ampElement_.element, target);\n    }\n  }\n\n  /**\n   * @param {!Element} target\n   * @param {boolean} isIntersecting\n   */\n  triggerVisibility_(target, isIntersecting) {\n    this.viewportIntersectionCallback_(target, isIntersecting);\n  }\n\n  /**\n   * Sets up for intersection monitoring, creating IntersectionObserver\n   * instances for doing layout  as well as those that are actually visible.\n   *\n   * We set up separate observers for layout and unlayout. When the element is\n   * near to the viewport, we trigger layout. However, we have some extra\n   * buffer space before triggering unlayout, to prevent cycling between the\n   * two on the threshold, which can cause problems in Safari.\n   */\n  setup_() {\n    if (\n      this.nearingViewportObserver_ &&\n      this.backingAwayViewportObserver_ &&\n      this.inViewportObserver_\n    ) {\n      return;\n    }\n\n    const {win} = this.ampElement_;\n\n    this.nearingViewportObserver_ = new win.IntersectionObserver(\n      (entries) => this.processNearingChanges_(entries),\n      {\n        root: this.intersectionElement_,\n        rootMargin: `${this.nearbyMarginInPercent_}%`,\n        threshold: this.intersectionThreshold_,\n      }\n    );\n\n    this.backingAwayViewportObserver_ = new win.IntersectionObserver(\n      (entries) => this.processBackingAwayChanges_(entries),\n      {\n        root: this.intersectionElement_,\n        rootMargin: `${this.nearbyMarginInPercent_ + UNLAYOUT_MARGIN}%`,\n        threshold: this.intersectionThreshold_,\n      }\n    );\n\n    this.inViewportObserver_ = new win.IntersectionObserver(\n      (entries) => this.processInViewportChanges_(entries),\n      {\n        root: this.intersectionElement_,\n        rootMargin: NO_INTERSECTION_MARGIN,\n        threshold: this.viewportIntersectionThreshold_,\n      }\n    );\n  }\n\n  /**\n   * Processes the intersection entries for things nearing the viewport,\n   * marking them applying the changes if needed.\n   * @param {!Array<!IntersectionObserverEntry>} entries\n   */\n  processNearingChanges_(entries) {\n    entries\n      .filter((entry) => {\n        const {isIntersecting} = entry;\n        return isIntersecting;\n      })\n      .forEach((entry) => {\n        const {target} = entry;\n        target[NEAR_VIEWPORT_FLAG] = ViewportChangeState.ENTER;\n      });\n\n    if (!this.queueChanges_) {\n      this.flushNearingViewportChanges_();\n    }\n  }\n\n  /**\n   * Processes the intersection entries for things backing away from viewport,\n   * marking them applying the changes if needed.\n   * @param {!Array<!IntersectionObserverEntry>} entries\n   */\n  processBackingAwayChanges_(entries) {\n    entries\n      .filter((entry) => {\n        const {isIntersecting} = entry;\n        return !isIntersecting;\n      })\n      .forEach((entry) => {\n        const {target} = entry;\n        target[NEAR_VIEWPORT_FLAG] = ViewportChangeState.LEAVE;\n      });\n\n    if (!this.queueChanges_) {\n      this.flushBackingAwayViewportChanges_();\n    }\n  }\n\n  /**\n   * Processes the intersection entries for things in the viewport,\n   * marking them applying the changes if needed.\n   * @param {!Array<!IntersectionObserverEntry>} entries\n   */\n  processInViewportChanges_(entries) {\n    entries.forEach((entry) => {\n      const {isIntersecting, target} = entry;\n      target[IN_VIEWPORT_FLAG] = isIntersecting\n        ? ViewportChangeState.ENTER\n        : ViewportChangeState.LEAVE;\n    });\n\n    if (!this.queueChanges_) {\n      this.flushInViewportChanges_();\n    }\n  }\n\n  /**\n   * Flush all intersection changes previously picked up.\n   */\n  flushChanges() {\n    this.flushNearingViewportChanges_();\n    this.flushBackingAwayViewportChanges_();\n    this.flushInViewportChanges_();\n  }\n\n  /**\n   * Flush changes for things nearing the viewport.\n   */\n  flushNearingViewportChanges_() {\n    for (let i = 0; i < this.children_.length; i++) {\n      const child = this.children_[i];\n\n      if (child[NEAR_VIEWPORT_FLAG] == ViewportChangeState.ENTER) {\n        this.triggerLayout_(child, true);\n        child[NEAR_VIEWPORT_FLAG] = null;\n      }\n    }\n  }\n\n  /**\n   * Flush changes for things backing away from the viewport.\n   */\n  flushBackingAwayViewportChanges_() {\n    for (let i = 0; i < this.children_.length; i++) {\n      const child = this.children_[i];\n\n      if (child[NEAR_VIEWPORT_FLAG] == ViewportChangeState.LEAVE) {\n        this.triggerLayout_(child, false);\n        child[NEAR_VIEWPORT_FLAG] = null;\n      }\n    }\n  }\n\n  /**\n   * Flush changes for things in the viewport.\n   */\n  flushInViewportChanges_() {\n    for (let i = 0; i < this.children_.length; i++) {\n      const child = this.children_[i];\n\n      if (child[IN_VIEWPORT_FLAG] == ViewportChangeState.ENTER) {\n        this.triggerLayout_(child, true);\n        this.triggerVisibility_(child, true);\n      } else if (child[IN_VIEWPORT_FLAG] == ViewportChangeState.LEAVE) {\n        this.triggerVisibility_(child, false);\n      }\n\n      child[IN_VIEWPORT_FLAG] = null;\n    }\n  }\n\n  /**\n   * @param {boolean} observe Whether or not the parent element is laid out.\n   */\n  monitorChildren_(observe) {\n    // TODO(sparhami) Load a polyfill for browsers that do not support it? We\n    // currently just rely on Resource's periodic scan if we do not have\n    // IntersectionObserver. This means slides may get loaded later than might\n    // be ideal.\n    if (!('IntersectionObserver' in this.ampElement_.win)) {\n      return;\n    }\n\n    this.setup_();\n\n    // Simply disconnect, in case the children have changed, we can make sure\n    // everything is detached.\n    if (!observe) {\n      this.nearingViewportObserver_.disconnect();\n      this.backingAwayViewportObserver_.disconnect();\n      this.inViewportObserver_.disconnect();\n      return;\n    }\n\n    for (let i = 0; i < this.children_.length; i++) {\n      this.nearingViewportObserver_.observe(this.children_[i]);\n      this.backingAwayViewportObserver_.observe(this.children_[i]);\n      this.inViewportObserver_.observe(this.children_[i]);\n    }\n  }\n\n  /**\n   * Updates the children that should have their layout managed. Should be\n   * called whenever the children change.\n   * @param {!IArrayLike<!Element>} children\n   */\n  updateChildren(children) {\n    this.children_ = children;\n\n    if (!('IntersectionObserver' in this.ampElement_.win)) {\n      return;\n    }\n\n    for (let i = 0; i < this.children_.length; i++) {\n      this.owners_.setOwner(this.children_[i], this.ampElement_.element);\n    }\n\n    // Update the layout state to false so that we stop observing (and holding\n    // on to a reference for) any children that stopped existing.\n    this.monitorChildren_(false);\n    this.monitorChildren_(this.laidOut_);\n  }\n\n  /**\n   * This should be called from the `layoutCallback` of the AMP element that\n   * constructed this manager.\n   */\n  wasLaidOut() {\n    this.laidOut_ = true;\n    this.monitorChildren_(this.laidOut_);\n  }\n\n  /**\n   * This should be called from the `unlayoutCallback` of the AMP element that\n   * constructed this manager.\n   */\n  wasUnlaidOut() {\n    this.laidOut_ = false;\n    this.monitorChildren_(this.laidOut_);\n\n    for (let i = 0; i < this.children_.length; i++) {\n      this.triggerLayout_(this.children_[i], false);\n      this.triggerVisibility_(this.children_[i], false);\n    }\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   mediaQueryList: MediaQueryList,\n *   value: string,\n * }}\n */\nlet MediaQueriesListAndValueDef;\n\n/**\n * @param {string} value\n * @return {!Array<!MediaQueriesListAndValueDef>}\n */\nfunction getMediaQueryListsAndValues(value) {\n  return (\n    value\n      .split(',')\n      .map((part) => {\n        // Find the value portion by looking at the end.\n        const result = /[a-z0-9.]+$/.exec(part);\n        if (!result) {\n          return;\n        }\n\n        const {index} = result;\n        const value = part.slice(index);\n        // The media query is everything before the value.\n        const mediaQuery = part.slice(0, index).trim();\n        const mediaQueryList = window.matchMedia(mediaQuery);\n\n        return {\n          mediaQueryList,\n          value,\n        };\n      })\n      // Remove any items that did not match the regex above and are\n      // undefined as a result.\n      .filter(Boolean)\n  );\n}\n\n/**\n * @param {!Array<!MediaQueriesListAndValueDef>} mediaQueryListsAndValues\n * @return {string} The value for the first matching MediaQuery, or an empty\n *    string if none match.\n */\nfunction getMatchingValue(mediaQueryListsAndValues) {\n  for (let i = 0; i < mediaQueryListsAndValues.length; i++) {\n    const {mediaQueryList, value} = mediaQueryListsAndValues[i];\n    if (mediaQueryList.matches) {\n      return value;\n    }\n  }\n\n  return '';\n}\n\n/**\n * Given a string of media query, value pairs, gets the value for the first\n * matching media query, Some examples of the string:\n *\n * * \"(min-width: 600px) true, false\"\n * * \"(min-width: 600px) 5, (min-width: 500px) 4, 3\"\n * * \"(min-width: 600px) and (min-height: 800px) 5, 3\"\n * * \"false\"\n * * \"(min-width: 600px) true\"\n *\n * @param {string} str The media query/value string.\n * @return {*} TODO(#23582): Specify return type\n */\nexport function getResponsiveAttributeValue(str) {\n  return getMatchingValue(getMediaQueryListsAndValues(str));\n}\n\n/**\n * Manages attributes that can respond to media queries. Uses a provided config\n * Object invoke callback functions when the matching value changes. When an\n * attribute changes, `updateAttribute` should be called with the name of the\n * attribute along with the responsive MediaQuery/value pairs. This is a comma\n * separated list of media queries followed by values see\n * {@link getResponsiveAttributeValue} for details on the format.\n *\n * The first value for the first media query in the list that matches is used.\n * If there are no matching media queries, the value is an empty string.\n */\nexport class ResponsiveAttributes {\n  /**\n   * @param {!Object<string, function(string)>} config A mapping of attribute\n   *    names to functions that should handle them.\n   */\n  constructor(config) {\n    /** @private @const */\n    this.config_ = config;\n\n    /** @private @const {!Object<string, string>} */\n    this.existingValuesMap_ = {};\n\n    /** @private @const {!Object<string, !Array<!MediaQueriesListAndValueDef>>} */\n    this.mediaQueryListsAndValues_ = {};\n  }\n\n  /**\n   * Updates an attribute, calling the configured attribute handler with the\n   * new matching value, if it has changed. Whenever the matching media query\n   * changes, the matching value will be checked to see if it has changed. If\n   * so, the attribute handler is called.\n   * @param {string} name The name of the attribute.\n   * @param {string} newValue The new value for the attribute.\n   */\n  updateAttribute(name, newValue) {\n    // Not an attribute we are managing.\n    if (!this.config_[name]) {\n      return;\n    }\n\n    const prevMqlv = this.mediaQueryListsAndValues_[name];\n    // Need to explicitly clear the onchange. Otherwise the underlying\n    // MediqaQueryLists will still be active with their callbacks.\n    if (prevMqlv) {\n      this.setOnchange_(prevMqlv, null);\n    }\n\n    const mqlv = getMediaQueryListsAndValues(newValue);\n    const notifyIfChanged = () => {\n      this.notifyIfChanged_(name, getMatchingValue(mqlv));\n    };\n    // Listen for future changes.\n    this.setOnchange_(mqlv, notifyIfChanged);\n    // Make sure to run once with the current value.\n    notifyIfChanged();\n    this.mediaQueryListsAndValues_[name] = mqlv;\n  }\n\n  /**\n   * Notifies the configured handler function if the value of the attribute\n   * has changed since the previous call.\n   * @param {string} name The name of the attribute.\n   * @param {string} value The value of the attribute.\n   * @private\n   */\n  notifyIfChanged_(name, value) {\n    if (this.existingValuesMap_[name] === value) {\n      return;\n    }\n\n    const fn = this.config_[name];\n    if (fn) {\n      fn(value);\n    }\n\n    this.existingValuesMap_[name] = value;\n  }\n\n  /**\n   * Sets the onchange for each of the associated MediaQueryLists.\n   * @param {!Array<!MediaQueriesListAndValueDef>} mediaQueryListsAndValues\n   * @param {?function()} fn\n   * @private\n   */\n  setOnchange_(mediaQueryListsAndValues, fn) {\n    mediaQueryListsAndValues.forEach((mediaQueryDef) => {\n      const {mediaQueryList} = mediaQueryDef;\n      mediaQueryList.onchange = fn;\n    });\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from './log';\nimport {map} from './core/types/object';\n\nlet htmlContainer;\nlet svgContainer;\n\n/**\n * Creates the html helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function htmlFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!htmlContainer || htmlContainer.ownerDocument !== doc) {\n    htmlContainer = doc.createElement('div');\n  }\n\n  return html;\n}\n\n/**\n * Creates the svg helper for the doc.\n *\n * @param {!Element|!Document} nodeOrDoc\n * @return {function(!Array<string>):!Element}\n */\nexport function svgFor(nodeOrDoc) {\n  const doc = nodeOrDoc.ownerDocument || nodeOrDoc;\n  if (!svgContainer || svgContainer.ownerDocument !== svgContainer) {\n    svgContainer = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  }\n\n  return svg;\n}\n\n/**\n * A tagged template literal helper to generate static SVG trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const circle = svg`<circle cx=\"60\" cy=\"60\" r=\"22\"></circle>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction svg(strings) {\n  return createNode(svgContainer, strings);\n}\n\n/**\n * A tagged template literal helper to generate static DOM trees.\n * This must be used as a tagged template, ie\n *\n * ```\n * const div = html`<div><span></span></div>`;\n * ```\n *\n * Only the root element and its subtree will be returned. DO NOT use this to\n * render subtree's with dynamic content, it WILL result in an error!\n *\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction html(strings) {\n  return createNode(htmlContainer, strings);\n}\n\n/**\n * Helper used by html and svg string literal functions.\n * @param {!Element} container\n * @param {!Array<string>} strings\n * @return {!Element}\n */\nfunction createNode(container, strings) {\n  devAssert(strings.length === 1, 'Improper html template tag usage.');\n  container./*OK*/ innerHTML = strings[0];\n\n  const el = container.firstElementChild;\n  devAssert(el, 'No elements in template');\n  devAssert(!el.nextElementSibling, 'Too many root elements in template');\n\n  // Clear to free memory.\n  container.removeChild(el);\n\n  return el;\n}\n\n/**\n * Queries an element for all elements with a \"ref\" attribute, removing\n * the attribute afterwards.\n * Returns a named map of all ref elements.\n *\n * @param {!Element} root\n * @return {!Object<string, !Element>}\n */\nexport function htmlRefs(root) {\n  const elements = root.querySelectorAll('[ref]');\n  const refs = map();\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    const ref = devAssert(element.getAttribute('ref'), 'Empty ref attr');\n    element.removeAttribute('ref');\n    devAssert(refs[ref] === undefined, 'Duplicate ref');\n    refs[ref] = element;\n  }\n\n  return refs;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from '../log';\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service';\nimport {hasOwn, map} from '../core/types/object';\nimport {isArray} from '../core/types';\nimport {parseQueryString} from '../core/types/string/url';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isExperimentOn} from './experiments';\nimport {isFiniteNumber} from './core/types';\nimport {setStyle, setStyles, toggle} from './style';\nimport {toWin} from './core/window';\nimport {transparentPng} from './core/dom/img';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-RENDER': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe =\n  /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n * @type {?boolean}\n */\nlet aspectRatioCssCache = null;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && tagName.toLowerCase().startsWith('i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  const m = userAssert(\n    /[a-z]+/i.exec(length),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element allowlisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified element. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ allowlist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @param {boolean} fixIeIntrinsic\n * @return {!Layout}\n */\nexport function applyStaticLayout(element, fixIeIntrinsic = false) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (\n      devAssert(parseLayout(completedLayoutAttr))\n    );\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n      if (element.sizerElement) {\n        element.sizerElement.setAttribute('slot', 'i-amphtml-svc');\n      }\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(\n    inputLayout !== undefined,\n    'Invalid \"layout\" value: %s, %s',\n    layoutAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(\n    inputWidth !== undefined,\n    'Invalid \"width\" value: %s, %s',\n    widthAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(\n    inputHeight !== undefined,\n    'Invalid \"height\" value: %s, %s',\n    heightAttr,\n    element\n  );\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'The \"height\" attribute is missing: %s', element);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'The \"width\" attribute must be missing or \"auto\": %s',\n      element\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'The \"width\" attribute must be present and not \"auto\": %s',\n      element\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for \"width\" and \"height\": %s, %s, %s',\n      widthAttr,\n      heightAttr,\n      element\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      '\"heights\" attribute must be missing: %s',\n      element\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    if (shouldUseAspectRatioCss(toWin(element.ownerDocument.defaultView))) {\n      setStyle(\n        element,\n        'aspect-ratio',\n        `${getLengthNumeral(width)}/${getLengthNumeral(height)}`\n      );\n    } else {\n      const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n      sizer.setAttribute('slot', 'i-amphtml-svc');\n      setStyles(sizer, {\n        paddingTop:\n          (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n      });\n      element.insertBefore(sizer, element.firstChild);\n      element.sizerElement = sizer;\n    }\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\" slot=\"i-amphtml-svc\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      !IS_ESM && fixIeIntrinsic && element.ownerDocument\n        ? transparentPng(\n            element.ownerDocument,\n            dev().assertNumber(getLengthNumeral(width)),\n            dev().assertNumber(getLengthNumeral(height))\n          )\n        : `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n *\n * @param {!Window} win\n * @return {boolean}\n */\nfunction shouldUseAspectRatioCss(win) {\n  if (aspectRatioCssCache == null) {\n    aspectRatioCssCache =\n      (isExperimentOn(win, 'layout-aspect-ratio-css') &&\n        win.CSS &&\n        win.CSS.supports &&\n        win.CSS.supports('aspect-ratio: 1/1')) ||\n      false;\n  }\n  return aspectRatioCssCache;\n}\n\n/** @visibleForTesting */\nexport function resetShouldUseAspectRatioCssForTesting() {\n  aspectRatioCssCache = null;\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ActionSource} from '../../amp-base-carousel/0.1/action-source';\nimport {ActionTrust} from '../../../src/core/constants/action-constants';\nimport {CSS} from '../../../build/amp-stream-gallery-0.1.css';\nimport {Carousel} from '../../amp-base-carousel/0.1/carousel.js';\nimport {CarouselEvents} from '../../amp-base-carousel/0.1/carousel-events';\nimport {ChildLayoutManager} from '../../amp-base-carousel/0.1/child-layout-manager';\nimport {\n  ResponsiveAttributes,\n  getResponsiveAttributeValue,\n} from '../../amp-base-carousel/0.1/responsive-attributes';\nimport {Services} from '../../../src/services';\nimport {createCustomEvent, getDetail} from '../../../src/event-helper';\nimport {dev, devAssert, user, userAssert} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {\n  dispatchCustomEvent,\n  isRTL,\n  iterateCursor,\n  toggleAttribute,\n} from '../../../src/dom';\nimport {htmlFor} from '../../../src/static-template';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {isLayoutSizeDefined} from '../../../src/layout';\nimport {setStyle} from '../../../src/style';\nimport {toArray} from '../../../src/core/types/array';\n\n/** @enum {number} */\nconst InsetArrowVisibility = {\n  NEVER: 0,\n  AUTO: 1,\n  ALWAYS: 2,\n};\n\n/** Maps attribute values to enum values. */\nconst insetArrowVisibilityMapping = dict({\n  'never': InsetArrowVisibility.NEVER,\n  'auto': InsetArrowVisibility.AUTO,\n  'always': InsetArrowVisibility.ALWAYS,\n});\n\n/**\n * @param {!Element} el The Element to check.\n * @return {boolean} Whether or not the Element is a sizer Element.\n */\nfunction isSizer(el) {\n  return el.tagName == 'I-AMPHTML-SIZER';\n}\n\nconst TAG = 'amp-stream-gallery';\n\n/**\n * A gallery of slides, used for things like related products or articles. The\n * main way of using this component is to specify the min and max width for\n * each slide, which the carousel uses to determine how many slides should be\n * shown at a time.\n *\n * This component differs from amp-base-carousel in the following ways:\n *\n * - Supports sizing via min-item-width and max-item-width\n * - Supports outset arrows\n * - Does not snap by default\n * - Does not support autoplay\n */\nclass AmpStreamGallery extends AMP.BaseElement {\n  /** @override @nocollapse */\n  static prerenderAllowed() {\n    return true;\n  }\n\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private @const */\n    this.responsiveAttributes_ = new ResponsiveAttributes(\n      this.getAttributeConfig_()\n    );\n\n    /** @private @const {boolean} */\n    this.isIos_ = Services.platformFor(this.win).isIos();\n\n    /** @private {?../../../src/service/action-impl.ActionService} */\n    this.action_ = null;\n\n    /** @private {?Carousel} */\n    this.carousel_ = null;\n\n    /** @private {?Element} */\n    this.content_ = null;\n\n    /** @private {?Element} */\n    this.nextArrowSlot_ = null;\n\n    /** @private {?Element} */\n    this.prevArrowSlot_ = null;\n\n    /** @private {?Element} */\n    this.scrollContainer_ = null;\n\n    /** @private {?Element} */\n    this.slidesContainer_ = null;\n\n    /** @private {!InsetArrowVisibility} */\n    this.insetArrowVisibility_ = InsetArrowVisibility.AUTO;\n\n    /** @private {number} */\n    this.maxItemWidth_ = Number.MAX_VALUE;\n\n    /** @private {number} */\n    this.maxVisibleCount_ = Number.MAX_VALUE;\n\n    /** @private {number} */\n    this.minItemWidth_ = 1;\n\n    /** @private {number} */\n    this.minVisibleCount_ = 1;\n\n    /** @private {boolean} */\n    this.outsetArrows_ = false;\n\n    /** @private {number} */\n    this.peek_ = 0;\n\n    /** @private {!Array<!Element>} */\n    this.slides_ = [];\n\n    /** @private {?number} */\n    this.currentIndex_ = null;\n\n    /**\n     * Whether or not the user has interacted with the carousel using touch in\n     * the past at any point.\n     * @private {boolean}\n     */\n    this.hadTouch_ = false;\n\n    /** @private {?ChildLayoutManager} */\n    this.childLayoutManager_ = null;\n  }\n\n  /**\n   * The configuration for handling attributes on this element.\n   * @return {!Object<string, function(string)>}\n   * @private\n   */\n  getAttributeConfig_() {\n    return {\n      'extra-space': (newValue) => {\n        this.updateExtraSpace_(newValue);\n      },\n      'inset-arrow-visibility': (newValue) => {\n        this.updateInsetArrowVisibility_(newValue);\n      },\n      'loop': (newValue) => {\n        this.updateLoop_(newValue == 'true');\n      },\n      'outset-arrows': (newValue) => {\n        this.updateOutsetArrows_(newValue == 'true');\n      },\n      'peek': (newValue) => {\n        this.updatePeek_(Number(newValue));\n      },\n      'slide': (newValue) => {\n        this.carousel_.goToSlide(Number(newValue));\n      },\n      'slide-align': (newValue) => {\n        this.carousel_.updateAlignment(newValue);\n      },\n      'snap': (newValue) => {\n        this.carousel_.updateSnap(newValue != 'false');\n      },\n      'max-item-width': (newValue) => {\n        this.updateMaxItemWidth_(Number(newValue));\n      },\n      'max-visible-count': (newValue) => {\n        this.updateMaxVisibleCount_(Number(newValue));\n      },\n      'min-item-width': (newValue) => {\n        this.updateMinItemWidth_(Number(newValue));\n      },\n      'min-visible-count': (newValue) => {\n        this.updateMinVisibleCount_(Number(newValue));\n      },\n    };\n  }\n\n  /**\n   * Sets up the actions supported by this element.\n   * @private\n   */\n  initializeActions_() {\n    this.registerAction(\n      'prev',\n      (invocation) => {\n        const {trust} = invocation;\n        this.carousel_.prev(this.getActionSource_(trust));\n      },\n      ActionTrust.LOW\n    );\n    this.registerAction(\n      'next',\n      (invocation) => {\n        const {trust} = invocation;\n        this.carousel_.next(this.getActionSource_(trust));\n      },\n      ActionTrust.LOW\n    );\n    this.registerAction(\n      'goToSlide',\n      (invocation) => {\n        const {args, trust} = invocation;\n        this.carousel_.goToSlide(args['index'] || -1, {\n          actionSource: this.getActionSource_(trust),\n        });\n      },\n      ActionTrust.LOW\n    );\n  }\n\n  /**\n   * @private\n   */\n  initializeListeners_() {\n    this.element.addEventListener(CarouselEvents.INDEX_CHANGE, (event) => {\n      this.onIndexChanged_(event);\n    });\n    this.element.addEventListener(CarouselEvents.SCROLL_START, () => {\n      this.onScrollStarted_();\n    });\n    this.element.addEventListener(\n      CarouselEvents.SCROLL_POSITION_CHANGED,\n      () => {\n        this.onScrollPositionChanged_();\n      }\n    );\n    this.prevArrowSlot_.addEventListener('click', (event) => {\n      // Make sure the slot itself was not clicked, since that fills the\n      // entire height of the gallery.\n      if (event.target != event.currentTarget) {\n        this.carousel_.prev(ActionSource.GENERIC_HIGH_TRUST);\n      }\n    });\n    this.nextArrowSlot_.addEventListener('click', (event) => {\n      // Make sure the slot itself was not clicked, since that fills the\n      // entire height of the gallery.\n      if (event.target != event.currentTarget) {\n        this.carousel_.next(ActionSource.GENERIC_HIGH_TRUST);\n      }\n    });\n  }\n\n  /**\n   * Moves the Carousel to a given index.\n   * @param {number} index\n   */\n  goToSlide(index) {\n    this.carousel_.goToSlide(index, {smoothScroll: false});\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    return isLayoutSizeDefined(layout);\n  }\n\n  /** @override */\n  buildCallback() {\n    userAssert(\n      isExperimentOn(this.win, 'amp-stream-gallery'),\n      'The amp-stream-gallery experiment must be enabled to use the ' +\n        'component'\n    );\n\n    this.action_ = Services.actionServiceForDoc(this.element);\n\n    this.buildCarouselDom_();\n\n    // Create the internal carousel implementation.\n    this.carousel_ = new Carousel({\n      win: this.win,\n      element: this.element,\n      scrollContainer: dev().assertElement(this.scrollContainer_),\n      initialIndex: this.getInitialIndex_(),\n      runMutate: (cb) => this.mutateElement(cb),\n    });\n    this.carousel_.updateSnap(false);\n    // This is not correct, we really get the computed style of the element\n    // and check the direction, but that will force a style calculation.\n    this.carousel_.updateForwards(\n      !isRTL(devAssert(this.element.ownerDocument))\n    );\n\n    // Handle the initial set of attributes\n    toArray(this.element.attributes).forEach((attr) => {\n      this.attributeMutated_(attr.name, attr.value);\n    });\n\n    this.carousel_.updateSlides(this.slides_);\n    this.initializeChildLayoutManagement_();\n    this.initializeActions_();\n    this.initializeListeners_();\n    this.updateUi_();\n  }\n\n  /**\n   * Creates the DOM for the carousel, placing the children into their correct\n   * spot.\n   */\n  buildCarouselDom_() {\n    const {element} = this;\n    const children = toArray(element.children);\n    let prevArrow;\n    let nextArrow;\n\n    // Figure out which \"slot\" the children go into.\n    children.forEach((c) => {\n      const slot = c.getAttribute('slot');\n      if (slot == 'prev-arrow') {\n        prevArrow = c;\n      } else if (slot == 'next-arrow') {\n        nextArrow = c;\n      } else if (!isSizer(c)) {\n        this.slides_.push(c);\n      }\n    });\n\n    // Create the DOM, get references to elements.\n    element.appendChild(this.renderContainerDom_());\n    this.scrollContainer_ = element.querySelector('.i-amphtml-carousel-scroll');\n    this.slidesContainer_ = element.querySelector(\n      '.i-amphtml-stream-gallery-slides'\n    );\n    this.content_ = element.querySelector('.i-amphtml-carousel-content');\n    this.prevArrowSlot_ = element.querySelector(\n      '.i-amphtml-stream-gallery-arrow-prev-slot'\n    );\n    this.nextArrowSlot_ = element.querySelector(\n      '.i-amphtml-stream-gallery-arrow-next-slot'\n    );\n\n    // Do some manual \"slot\" distribution\n    this.slides_.forEach((slide) => {\n      slide.classList.add('i-amphtml-carousel-slotted');\n      this.scrollContainer_.appendChild(slide);\n    });\n    this.prevArrowSlot_.appendChild(prevArrow || this.createPrevArrow_());\n    this.nextArrowSlot_.appendChild(nextArrow || this.createNextArrow_());\n  }\n\n  /** @override */\n  isRelayoutNeeded() {\n    return true;\n  }\n\n  /** @override */\n  pauseCallback() {\n    this.carousel_.pauseLayout();\n  }\n\n  /** @override */\n  resumeCallback() {\n    this.carousel_.resumeLayout();\n  }\n\n  /** @override */\n  layoutCallback() {\n    this.updateVisibleCount_();\n    this.carousel_.updateUi();\n    this.childLayoutManager_.wasLaidOut();\n\n    return Promise.resolve();\n  }\n\n  /** @override */\n  unlayoutCallback() {\n    this.childLayoutManager_.wasUnlaidOut();\n    return true;\n  }\n\n  /** @override */\n  mutatedAttributesCallback(mutations) {\n    for (const key in mutations) {\n      // Stringify since the attribute logic deals with strings and amp-bind\n      // may not (e.g. value could be a Number).\n      this.attributeMutated_(key, String(mutations[key]));\n    }\n  }\n\n  /**\n   * @param {string} name The name of the attribute.\n   * @param {string} newValue The new value of the attribute.\n   * @private\n   */\n  attributeMutated_(name, newValue) {\n    this.responsiveAttributes_.updateAttribute(name, newValue);\n  }\n\n  /**\n   * @return {!Element}\n   * @private\n   */\n  renderContainerDom_() {\n    const html = htmlFor(this.element);\n    return html`\n      <div class=\"i-amphtml-carousel-content\">\n        <div class=\"i-amphtml-stream-gallery-slides\">\n          <div class=\"i-amphtml-carousel-scroll\"></div>\n        </div>\n        <div class=\"i-amphtml-stream-gallery-arrow-prev-slot\"></div>\n        <div class=\"i-amphtml-stream-gallery-arrow-next-slot\"></div>\n      </div>\n    `;\n  }\n\n  /**\n   * @return {!Element}\n   * @private\n   */\n  createNextArrow_() {\n    const html = htmlFor(this.element);\n    return html`\n      <button class=\"i-amphtml-stream-gallery-next\" aria-hidden=\"true\"></button>\n    `;\n  }\n\n  /**\n   * @return {!Element}\n   * @private\n   */\n  createPrevArrow_() {\n    const html = htmlFor(this.element);\n    return html`\n      <button class=\"i-amphtml-stream-gallery-prev\" aria-hidden=\"true\"></button>\n    `;\n  }\n\n  /**\n   * Gets the ActionSource to use for a given ActionTrust.\n   * @param {!ActionTrust} trust\n   * @return {!ActionSource}\n   * @private\n   */\n  getActionSource_(trust) {\n    return trust == ActionTrust.HIGH\n      ? ActionSource.GENERIC_HIGH_TRUST\n      : ActionSource.GENERIC_LOW_TRUST;\n  }\n\n  /**\n   * @return {number} The initial index for the carousel.\n   * @private\n   */\n  getInitialIndex_() {\n    const attr = this.element.getAttribute('slide') || '0';\n    return Number(getResponsiveAttributeValue(attr));\n  }\n\n  /**\n   * Determines how many whole items in addition to the current peek value can\n   * fit for a given item width. This can be rounded up or down to satisfy a\n   * max/min size constraint.\n   * @param {number} containerWidth The width of the container element.\n   * @param {number} itemWidth The width of each item.\n   * @return {number} The number of items to show.\n   */\n  getItemsForWidth_(containerWidth, itemWidth) {\n    const availableWidth = containerWidth - this.peek_ * itemWidth;\n    const fractionalItems = availableWidth / itemWidth;\n    const wholeItems = Math.floor(fractionalItems);\n    // Always show at least 1 whole item.\n    return Math.max(1, wholeItems) + this.peek_;\n  }\n\n  /**\n   * @return {number} The amount of horizontal space the arrows require. When\n   * the arrows are inset, this is zero as they do not take space.\n   * @private\n   */\n  getWidthTakenByArrows_() {\n    if (!this.outsetArrows_) {\n      return 0;\n    }\n\n    return (\n      this.prevArrowSlot_./* OK */ getBoundingClientRect().width +\n      this.nextArrowSlot_./* OK */ getBoundingClientRect().width\n    );\n  }\n\n  /**\n   * @param {!ActionSource|undefined} actionSource\n   * @return {boolean} Whether or not the action is a high trust action.\n   * @private\n   */\n  isHighTrustActionSource_(actionSource) {\n    return (\n      actionSource == ActionSource.WHEEL ||\n      actionSource == ActionSource.TOUCH ||\n      actionSource == ActionSource.GENERIC_HIGH_TRUST\n    );\n  }\n\n  /**\n   * TODO(sparhami) If swipe is disabled, then auto should show the inset arrow\n   * buttons, even if there is a peek value.\n   * @return {boolean}\n   * @private\n   */\n  shouldHideInsetButtons_() {\n    if (this.insetArrowVisibility_ == InsetArrowVisibility.ALWAYS) {\n      return false;\n    }\n\n    if (this.insetArrowVisibility_ == InsetArrowVisibility.NEVER) {\n      return true;\n    }\n\n    return this.hadTouch_ || this.peek_ != 0;\n  }\n\n  /**\n   *\n   * @param {number} peek\n   */\n  updatePeek_(peek) {\n    this.peek_ = Math.max(0, peek || 0);\n    this.updateVisibleCount_();\n  }\n\n  /**\n   *\n   * @param {number} maxItemWidth\n   */\n  updateMaxItemWidth_(maxItemWidth) {\n    this.maxItemWidth_ = maxItemWidth || Number.MAX_VALUE;\n    this.updateVisibleCount_();\n  }\n\n  /**\n   *\n   * @param {number} maxVisibleCount\n   */\n  updateMaxVisibleCount_(maxVisibleCount) {\n    this.maxVisibleCount_ = maxVisibleCount || Number.MAX_VALUE;\n    this.updateVisibleCount_();\n  }\n\n  /**\n   *\n   * @param {number} minItemWidth\n   */\n  updateMinItemWidth_(minItemWidth) {\n    this.minItemWidth_ = minItemWidth || 1;\n    this.updateVisibleCount_();\n  }\n\n  /**\n   *\n   * @param {number} minVisibleCount\n   */\n  updateMinVisibleCount_(minVisibleCount) {\n    this.minVisibleCount_ = minVisibleCount || 1;\n    this.updateVisibleCount_();\n  }\n\n  /**\n   * Updates the number of items visible for the internal carousel based on\n   * the min/max item widths and how much space is available.\n   */\n  updateVisibleCount_() {\n    const {\n      maxItemWidth_,\n      maxVisibleCount_,\n      minItemWidth_,\n      minVisibleCount_,\n      slides_,\n    } = this;\n    // Need to subtract out the width of the next/prev arrows. If these are\n    // inset, they will have no width.\n    const width =\n      this.element./* OK */ getBoundingClientRect().width -\n      this.getWidthTakenByArrows_();\n    const items = this.getItemsForWidth_(width, minItemWidth_);\n    const maxVisibleSlides = Math.min(slides_.length, maxVisibleCount_);\n    // Cannot use clamp, maxVisibleSlides can be less than minVisibleCount_.\n    const visibleCount = Math.min(\n      Math.max(minVisibleCount_, items),\n      maxVisibleSlides\n    );\n    const advanceCount = Math.floor(visibleCount);\n\n    this.mutateElement(() => {\n      /*\n       * When we are going to show more slides than we have, cap the width so\n       * that we do not go over the max requested slide width. Otherwise,\n       * cap the max width based on how many items are showing and the max\n       * width for each item.\n       */\n      const maxContainerWidth =\n        items > maxVisibleSlides\n          ? `${maxVisibleSlides * maxItemWidth_}px`\n          : `${items * maxItemWidth_}px`;\n\n      setStyle(this.slidesContainer_, 'max-width', maxContainerWidth);\n    });\n    this.carousel_.updateSlides(this.slides_);\n    this.carousel_.updateAdvanceCount(advanceCount);\n    this.carousel_.updateSnapBy(advanceCount);\n    this.carousel_.updateVisibleCount(visibleCount);\n  }\n\n  /**\n   * @param {boolean} outsetArrows\n   * @private\n   */\n  updateOutsetArrows_(outsetArrows) {\n    this.outsetArrows_ = outsetArrows;\n    this.updateUi_();\n  }\n\n  /**\n   * @param {string} extraSpace\n   * @private\n   */\n  updateExtraSpace_(extraSpace) {\n    this.content_.setAttribute(\n      'i-amphtml-stream-gallery-extra-space',\n      extraSpace\n    );\n  }\n\n  /**\n   * @param {string} insetArrowVisibility\n   * @private\n   */\n  updateInsetArrowVisibility_(insetArrowVisibility) {\n    this.insetArrowVisibility_ =\n      insetArrowVisibilityMapping[insetArrowVisibility] ||\n      InsetArrowVisibility.AUTO;\n    this.updateUi_();\n  }\n\n  /**\n   * @param {boolean} loop\n   */\n  updateLoop_(loop) {\n    // For iOS, do not allow looping as scrolling, then touching during the\n    // momentum scrolling can cause very broken behavior, since the carousel\n    // is not aware that the user is touching the carousel.\n    if (loop && Services.platformFor(this.win).isIos()) {\n      user().warn(\n        TAG,\n        'amp-stream-gallery does not support looping on iOS due ' +\n          'to https://bugs.webkit.org/show_bug.cgi?id=191218.'\n      );\n      return;\n    }\n\n    this.carousel_.updateLoop(loop);\n  }\n\n  /**\n   * Updates the UI of the <amp-base-carousel> itself, but not the internal\n   * implementation.\n   * @private\n   */\n  updateUi_() {\n    // TODO(sparhami) for Shadow DOM, we will need to get the assigned nodes\n    // instead.\n    iterateCursor(this.prevArrowSlot_.children, (child) => {\n      toggleAttribute(child, 'disabled', this.carousel_.isAtStart());\n    });\n    iterateCursor(this.nextArrowSlot_.children, (child) => {\n      toggleAttribute(child, 'disabled', this.carousel_.isAtEnd());\n    });\n    toggleAttribute(\n      dev().assertElement(this.content_),\n      'i-amphtml-stream-gallery-hide-inset-buttons',\n      this.shouldHideInsetButtons_()\n    );\n    toggleAttribute(\n      dev().assertElement(this.content_),\n      'amp-stream-gallery-outset-arrows',\n      this.outsetArrows_\n    );\n  }\n\n  /**\n   * Setups up visibility tracking for the child elements, laying them out\n   * when needed.\n   */\n  initializeChildLayoutManagement_() {\n    // Set up management of layout for the child slides.\n    const owners = Services.ownersForDoc(this.element);\n    this.childLayoutManager_ = new ChildLayoutManager({\n      ampElement: this,\n      intersectionElement: dev().assertElement(this.scrollContainer_),\n      // For iOS, we queue changes until scrolling stops, which we detect\n      // ~200ms after it actually stops. Load items earlier so they have time\n      // to load.\n      nearbyMarginInPercent: this.isIos_ ? 200 : 100,\n      viewportIntersectionCallback: (child, isIntersecting) => {\n        if (isIntersecting) {\n          owners.scheduleResume(this.element, child);\n        } else {\n          owners.schedulePause(this.element, child);\n        }\n      },\n    });\n    // For iOS, we cannot trigger layout during scrolling or the UI will\n    // flicker, so tell the layout to simply queue the changes, which we\n    // flush after scrolling stops.\n    this.childLayoutManager_.setQueueChanges(this.isIos_);\n\n    this.childLayoutManager_.updateChildren(this.slides_);\n  }\n\n  /**\n   * Starts queuing all intersection based changes when scrolling starts, to\n   * prevent paint flickering on iOS.\n   */\n  onScrollStarted_() {\n    this.childLayoutManager_.setQueueChanges(this.isIos_);\n  }\n\n  /**\n   * Update the UI (buttons) for the new scroll position. This occurs when\n   * scrolling has settled.\n   */\n  onScrollPositionChanged_() {\n    // Now that scrolling has settled, flush any layout changes for iOS since\n    // it will not cause flickering.\n    this.childLayoutManager_.flushChanges();\n    this.childLayoutManager_.setQueueChanges(false);\n\n    this.updateUi_();\n  }\n\n  /**\n   * Updates the current index, triggering actions and analytics events.\n   * @param {number} index\n   * @param {!ActionSource} actionSource\n   */\n  updateCurrentIndex_(index, actionSource) {\n    const prevIndex = this.currentIndex_;\n    this.currentIndex_ = index;\n\n    // Ignore the first indexChange, we do not want to trigger any events.\n    if (prevIndex == null) {\n      return;\n    }\n\n    const data = dict({'index': index});\n    const name = 'slideChange';\n    const isHighTrust = this.isHighTrustActionSource_(actionSource);\n    const trust = isHighTrust ? ActionTrust.HIGH : ActionTrust.LOW;\n\n    const action = createCustomEvent(this.win, `streamGallery.${name}`, data);\n    this.action_.trigger(this.element, name, action, trust);\n    dispatchCustomEvent(this.element, name, data);\n  }\n\n  /**\n   * @param {!Event} event\n   * @private\n   */\n  onIndexChanged_(event) {\n    const detail = getDetail(event);\n    const index = detail['index'];\n    const actionSource = detail['actionSource'];\n\n    this.hadTouch_ = this.hadTouch_ || actionSource == ActionSource.TOUCH;\n    this.updateCurrentIndex_(index, actionSource);\n    this.updateUi_();\n  }\n}\n\nAMP.extension(TAG, '0.1', (AMP) => {\n  AMP.registerElement(TAG, AmpStreamGallery, CSS);\n});\n"],
  "mappings": "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",
  "names": []
}
