{
  "version": 3,
  "sources": ["../../src/core/data-structures/promise.js", "../../src/core/types/array.js", "../../src/core/types/string/index.js", "../../src/core/types/object/index.js", "../../src/core/data-structures/curve.js", "../../src/core/error/message-helpers.js", "../../src/internal-version.js", "../../src/core/types/string/url.js", "../../src/mode.js", "../../src/core/types/function/index.js", "../../src/config.js", "../../src/log.js", "../../src/core/window/index.js", "../../src/service.js", "../../third_party/css-escape/css-escape.js", "../../src/core/dom/query.js", "../../src/dom.js", "../../src/service/extension-script.js", "../../src/element-service.js", "../../src/services.js", "../../src/animation.js", "../../src/pass.js", "../../src/style.js", "../../src/service/fixed-layer.js", "../../src/core/dom/event-helper-listen.js", "../../src/event-helper.js", "../../extensions/amp-viewer-integration/0.1/focus-handler.js", "../../extensions/amp-viewer-integration/0.1/findtext.js", "../../src/experiments/index.js", "../../src/core/math/layout-rect.js", "../../src/core/types/object/json.js", "../../src/core/document-ready.js", "../../extensions/amp-viewer-integration/0.1/highlight-handler.js", "../../src/core/constants/key-codes.js", "../../extensions/amp-viewer-integration/0.1/keyboard-handler.js", "../../extensions/amp-viewer-integration/0.1/messaging/messaging.js", "../../extensions/amp-viewer-integration/0.1/touch-handler.js", "../../src/core/data-structures/lru-cache.js", "../../src/url.js", "../../extensions/amp-viewer-integration/0.1/amp-viewer-integration.js"],
  "sourcesContent": ["/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Babel converts direct calls to Promise.resolve() (with no arguments) into\n * calls to this.\n *\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /** Constructor. */\n  constructor() {\n    /** @const {!Promise<T>} */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      /** @const {function(T=)} */\n      this.resolve = res;\n      /** @const {function(*=)} */\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!IThenable>=} opt_promises\n   */\n  constructor(opt_promises) {\n    /** @private @const {!Deferred} */\n    this.deferred_ = new Deferred();\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (const promise of opt_promises) {\n        this.add(promise);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!IThenable} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    promise.then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.deferred_.resolve(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.deferred_.reject(error);\n        }\n      }\n    );\n    return this.deferred_.promise;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.deferred_.promise.then(opt_resolve, opt_reject);\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport const {isArray} = Array;\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n *\n * The double-template pattern here solves a bug where CC can be passed a value\n * with declared type {string|!Array<string>} and return a value with a type of\n * {!Array<string|Array<string>>}.\n *\n * @param {!Array<T>|S} arrayOrSingleItem\n * @return {!Array<T>|!Array<S>}\n * @template S\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [/** @type {!S} */ (arrayOrSingleItem)];\n}\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (isString(replacer)) {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n\n/**\n * Tests if a value is a string.\n * @param {?} s\n * @return {boolean}\n */\nexport function isString(s) {\n  return typeof s == 'string';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst {hasOwnProperty: hasOwn_, toString: toString_} = Object.prototype;\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString_.call(value) === '[object Object]';\n}\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {d, s, t} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    for (const key of Object.keys(s)) {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          continue;\n        }\n      }\n      t[key] = newValue;\n    }\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = map();\n  for (const k in obj) {\n    if (!hasOwn(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (const part of parts) {\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      typeof value == 'object' &&\n      hasOwn(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isString} from '../types';\n\n/**\n * Number between 0 and 1 that designates normalized time, as in \"from start to\n * end\".\n * @typedef {number}\n */\nexport let NormTimeDef;\n\n/**\n * A CurveDef is a function that returns a normtime value (0 to 1) for another\n * normtime value.\n * @typedef {function(NormTimeDef): NormTimeDef}\n */\nexport let CurveDef;\n\n/**\n * Returns a cubic bezier curve.\n * @param {number} x1 X coordinate of the first control point.\n * @param {number} y1 Y coordinate of the first control point.\n * @param {number} x2 X coordinate of the second control point.\n * @param {number} y2 Y coordinate of the second control point.\n * @return {!CurveDef}\n */\nexport function bezierCurve(x1, y1, x2, y2) {\n  return (xVal) =>\n    Bezier.solveYValueFromXValue(xVal, 0, 0, x1, y1, x2, y2, 1, 1);\n}\n\n/**\n * Thanks to\n * https://closure-library.googlecode.com/git-history/docs/local_closure_goog_math_bezier.js.source.html\n */\nclass Bezier {\n  /**\n   * Computes the y coordinate of a point on the curve given its x coordinate.\n   * @param {number} xVal The x coordinate of the point on the curve.\n   * @param {number} x0 X coordinate of the start point.\n   * @param {number} y0 Y coordinate of the start point.\n   * @param {number} x1 X coordinate of the first control point.\n   * @param {number} y1 Y coordinate of the first control point.\n   * @param {number} x2 X coordinate of the second control point.\n   * @param {number} y2 Y coordinate of the second control point.\n   * @param {number} x3 X coordinate of the end point.\n   * @param {number} y3 Y coordinate of the end point.\n   * @return {number} The y coordinate of the point on the curve.\n   */\n  static solveYValueFromXValue(xVal, x0, y0, x1, y1, x2, y2, x3, y3) {\n    return Bezier.getPointY_(\n      Bezier.solvePositionFromXValue_(xVal, x0, x1, x2, x3),\n      y0,\n      y1,\n      y2,\n      y3\n    );\n  }\n\n  /**\n   * Computes the position t of a point on the curve given its x coordinate.\n   * That is, for an input xVal, finds t s.t. getPointX(t) = xVal.\n   * As such, the following should always be true up to some small epsilon:\n   * t ~ solvePositionFromXValue(getPointX(t)) for t in [0, 1].\n   * @param {number} xVal The x coordinate of the point to find on the curve.\n   * @param {number} x0 X coordinate of the start point.\n   * @param {number} x1 X coordinate of the first control point.\n   * @param {number} x2 X coordinate of the second control point.\n   * @param {number} x3 X coordinate of the end point.\n   * @return {number} The position t.\n   * @private\n   */\n  static solvePositionFromXValue_(xVal, x0, x1, x2, x3) {\n    // Desired precision on the computation.\n    const epsilon = 1e-6;\n\n    // Initial estimate of t using linear interpolation.\n    let t = (xVal - x0) / (x3 - x0);\n    if (t <= 0) {\n      return 0;\n    } else if (t >= 1) {\n      return 1;\n    }\n\n    // Try gradient descent to solve for t. If it works, it is very fast.\n    let tMin = 0;\n    let tMax = 1;\n    let value = 0;\n    for (let i = 0; i < 8; i++) {\n      value = Bezier.getPointX_(t, x0, x1, x2, x3);\n      const derivative =\n        (Bezier.getPointX_(t + epsilon, x0, x1, x2, x3) - value) / epsilon;\n      if (Math.abs(value - xVal) < epsilon) {\n        return t;\n      } else if (Math.abs(derivative) < epsilon) {\n        break;\n      } else {\n        if (value < xVal) {\n          tMin = t;\n        } else {\n          tMax = t;\n        }\n        t -= (value - xVal) / derivative;\n      }\n    }\n\n    // If the gradient descent got stuck in a local minimum, e.g. because\n    // the derivative was close to 0, use a Dichotomy refinement instead.\n    // We limit the number of iterations to 8.\n    for (let i = 0; Math.abs(value - xVal) > epsilon && i < 8; i++) {\n      if (value < xVal) {\n        tMin = t;\n        t = (t + tMax) / 2;\n      } else {\n        tMax = t;\n        t = (t + tMin) / 2;\n      }\n      value = Bezier.getPointX_(t, x0, x1, x2, x3);\n    }\n    return t;\n  }\n\n  /**\n   * Computes the curve's X coordinate at a point between 0 and 1.\n   * @param {number} t The point on the curve to find.\n   * @param {number} x0 X coordinate of the start point.\n   * @param {number} x1 X coordinate of the first control point.\n   * @param {number} x2 X coordinate of the second control point.\n   * @param {number} x3 X coordinate of the end point.\n   * @return {number} The computed coordinate.\n   * @private\n   */\n  static getPointX_(t, x0, x1, x2, x3) {\n    // Special case start and end.\n    if (t == 0) {\n      return x0;\n    } else if (t == 1) {\n      return x3;\n    }\n\n    // Step one - from 4 points to 3\n    let ix0 = Bezier.lerp_(x0, x1, t);\n    let ix1 = Bezier.lerp_(x1, x2, t);\n    const ix2 = Bezier.lerp_(x2, x3, t);\n\n    // Step two - from 3 points to 2\n    ix0 = Bezier.lerp_(ix0, ix1, t);\n    ix1 = Bezier.lerp_(ix1, ix2, t);\n\n    // Final step - last point\n    return Bezier.lerp_(ix0, ix1, t);\n  }\n\n  /**\n   * Computes the curve's Y coordinate at a point between 0 and 1.\n   * @param {number} t The point on the curve to find.\n   * @param {number} y0 Y coordinate of the start point.\n   * @param {number} y1 Y coordinate of the first control point.\n   * @param {number} y2 Y coordinate of the second control point.\n   * @param {number} y3 Y coordinate of the end point.\n   * @return {number} The computed coordinate.\n   * @private\n   */\n  static getPointY_(t, y0, y1, y2, y3) {\n    // Special case start and end.\n    if (t == 0) {\n      return y0;\n    } else if (t == 1) {\n      return y3;\n    }\n\n    // Step one - from 4 points to 3\n    let iy0 = Bezier.lerp_(y0, y1, t);\n    let iy1 = Bezier.lerp_(y1, y2, t);\n    const iy2 = Bezier.lerp_(y2, y3, t);\n\n    // Step two - from 3 points to 2\n    iy0 = Bezier.lerp_(iy0, iy1, t);\n    iy1 = Bezier.lerp_(iy1, iy2, t);\n\n    // Final step - last point\n    return Bezier.lerp_(iy0, iy1, t);\n  }\n\n  /**\n   * Performs linear interpolation between values a and b. Returns the value\n   * between a and b proportional to x (when x is between 0 and 1. When x is\n   * outside this range, the return value is a linear extrapolation).\n   * @param {number} a A number.\n   * @param {number} b A number.\n   * @param {number} x The proportion between a and b.\n   * @return {number} The interpolated value between a and b.\n   * @private\n   */\n  static lerp_(a, b, x) {\n    return a + x * (b - a);\n  }\n}\n\n/**\n * A collection of common curves.\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function\n * @enum {!CurveDef}\n */\nexport const Curves = {\n  /**\n   * linear\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  LINEAR(xVal) {\n    return xVal;\n  },\n\n  /**\n   * ease\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.25, 0.1, 0.25, 1.0, 1, 1);\n  },\n\n  /**\n   * ease-in: slow out, fast in\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE_IN(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.42, 0.0, 1.0, 1.0, 1, 1);\n  },\n\n  /**\n   * ease-out: fast out, slow in\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE_OUT(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.0, 0.0, 0.58, 1.0, 1, 1);\n  },\n\n  /**\n   * ease-in-out\n   * @param {!NormTimeDef} xVal\n   * @return {!NormTimeDef}\n   */\n  EASE_IN_OUT(xVal) {\n    return Bezier.solveYValueFromXValue(xVal, 0, 0, 0.42, 0.0, 0.58, 1.0, 1, 1);\n  },\n};\n\n/**\n * @const {!Object<string, !CurveDef>}\n */\nconst NAME_MAP = {\n  'linear': Curves.LINEAR,\n  'ease': Curves.EASE,\n  'ease-in': Curves.EASE_IN,\n  'ease-out': Curves.EASE_OUT,\n  'ease-in-out': Curves.EASE_IN_OUT,\n};\n\n/**\n * If the argument is a string, this methods matches an existing curve by name.\n * @param {?CurveDef|string|undefined} curve\n * @return {?CurveDef}\n */\nexport function getCurve(curve) {\n  if (!curve) {\n    return null;\n  }\n  if (isString(curve)) {\n    curve = /** @type {string} */ (curve);\n    // If the curve is a custom cubic-bezier curve\n    if (curve.indexOf('cubic-bezier') != -1) {\n      const match = curve.match(/cubic-bezier\\((.+)\\)/);\n      if (match) {\n        const values = match[1].split(',').map(parseFloat);\n        if (values.length == 4) {\n          for (let i = 0; i < 4; i++) {\n            if (isNaN(values[i])) {\n              return null;\n            }\n          }\n          return bezierCurve(values[0], values[1], values[2], values[3]);\n        }\n      }\n      return null;\n    }\n    return NAME_MAP[curve];\n  }\n  return /** @type {!CurveDef} */ (curve);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isElement} from '../types';\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Converts an element to a readable string; all other types are unchanged.\n * TODO(rcebulko): Unify with log.js\n * @param {*} val\n * @return {*}\n */\nexport function elementStringOrPassThru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (isElement(val)) {\n    val = /** @type {Element} */ (val);\n    return val.tagName.toLowerCase() + (val.id ? `#${val.id}` : '');\n  }\n  return val;\n}\n\n/**\n * Tests if an error message contains the user sentinel.\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * Strips the user error sentinel from an error message.\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../object';\n\nconst QUERY_STRING_REGEX = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  const params = map();\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = QUERY_STRING_REGEX.exec(queryString))) {\n    const name = tryDecodeUriComponent(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString} from './core/types/string/url';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   test: boolean,\n *   examiner: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined),\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_FORTESTING is only replaced when `amp dist` is called without the\n  // --fortesting flag.\n  const IS_FORTESTING = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_FORTESTING && !!(AMP_CONFIG.test || win.__AMP_TEST || win['__karma__']);\n  const isLocalDev = IS_FORTESTING && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location['originalHash'] || win.location.hash\n  );\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `amp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    development: isModeDevelopment(win),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * Triggers validation or enable pub level logging. Validation can be\n * bypassed via #validate=0.\n * Note that AMP_DEV_MODE flag is used for testing purposes.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isModeDevelopment(win) {\n  const hashQuery = parseQueryString(\n    win.location['originalHash'] || win.location.hash\n  );\n  return !!(\n    ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].includes(\n      hashQuery['development']\n    ) || win.AMP_DEV_MODE\n  );\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @fileoverview Helpers to wrap functions. */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function throttle(win, callback, minInterval) {\n  let locker = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {!Object} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    // Lock the fire for minInterval milliseconds\n    locker = win.setTimeout(waiter, minInterval);\n\n    callback.apply(null, args);\n  }\n\n  /**\n   * Waiter function\n   */\n  function waiter() {\n    locker = 0;\n    // If during the period there're invocations queued up, fire once.\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function debounce(win, callback, minInterval) {\n  let locker = 0;\n  let timestamp = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {?Array} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n\n  /**\n   * Wait function for debounce\n   */\n  function waiter() {\n    locker = 0;\n    const remaining = minInterval - (win.Date.now() - timestamp);\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    timestamp = win.Date.now();\n    nextCallArgs = args;\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/**\n * @typedef {{\n *   thirdParty: string,\n *   thirdPartyFrameHost: string,\n *   thirdPartyFrameRegex: !RegExp,\n *   cdn: string,\n *   cdnProxyRegex: !RegExp,\n *   localhostRegex: !RegExp,\n *   errorReporting: string,\n *   betaErrorReporting: string,\n *   localDev: boolean,\n *   trustedViewerHosts: !Array<!RegExp>,\n *   geoApi: ?string,\n * }}\n */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/main/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as assertions from './core/assert/base';\nimport {\n  USER_ERROR_SENTINEL,\n  elementStringOrPassThru,\n  isUserErrorMessage,\n  stripUserError,\n} from './core/error/message-helpers';\nimport {createErrorVargs, duplicateErrorIfNecessary} from './core/error';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray} from './core/types';\nimport {once} from './core/types/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n// These are exported here despite being defined in core to avoid updating\n// imports for now.\nexport {USER_ERROR_SENTINEL, isUserErrorMessage, stripUserError};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error-reporting.js to break cyclic\n * dependency.\n * @param {function(this:Window, Error, (?Element)=): ?|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassThru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n\n    // This bound assertion function is capable of handling the format used when\n    // error/assertion messages are extracted. This logic hasn't yet been\n    // migrated to an AMP-independent form for use in core. This binding allows\n    // Log assertion helpers to maintain message-extraction capabilities until\n    // that logic can be moved to core.\n    this.boundAssertFn_ = /** @type {!assertions.AssertionFunctionDef} */ (\n      this.assert.bind(this)\n    );\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {!LogLevel} level\n   * @param {!Array} messages\n   * @return {boolean} true if a message was logged\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() < level) {\n      return false;\n    }\n    let fn = this.win.console.log;\n    if (level == LogLevel.ERROR) {\n      fn = this.win.console.error || fn;\n    } else if (level == LogLevel.INFO) {\n      fn = this.win.console.info || fn;\n    } else if (level == LogLevel.WARN) {\n      fn = this.win.console.warn || fn;\n    }\n    const args = this.maybeExpandMessageArgs_(messages);\n    // Prefix console message with \"[tag]\".\n    const prefix = `[${tag}]`;\n    if (typeof args[0] === 'string') {\n      // Prepend string to avoid breaking string substitutions e.g. %s.\n      args[0] = prefix + ' ' + args[0];\n    } else {\n      args.unshift(prefix);\n    }\n    fn.apply(this.win.console, args);\n    return true;\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  fine(tag, ...args) {\n    this.msg_(tag, LogLevel.FINE, args);\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  info(tag, ...args) {\n    this.msg_(tag, LogLevel.INFO, args);\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} args\n   */\n  warn(tag, ...args) {\n    this.msg_(tag, LogLevel.WARN, args);\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, ...args) {\n    if (!this.msg_(tag, LogLevel.ERROR, args)) {\n      return this.createError.apply(this, args);\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // TODO(rcebulko): Determine if/how this Error#name property is used.\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n\n    return assertions.assert.apply(\n      null,\n      [this.suffix_].concat(Array.prototype.slice.call(arguments))\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    return assertions.assertElement(\n      this.boundAssertFn_,\n      shouldBeElement,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    return assertions.assertString(\n      this.boundAssertFn_,\n      shouldBeString,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    return assertions.assertNumber(\n      this.boundAssertFn_,\n      shouldBeNumber,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    return assertions.assertArray(\n      this.boundAssertFn_,\n      shouldBeArray,\n      opt_message\n    );\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    return assertions.assertBoolean(\n      this.boundAssertFn_,\n      shouldBeBoolean,\n      opt_message\n    );\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  if (self.__AMP_ASSERTION_CHECK) {\n    // This will never execute regardless, but will be included on unminified\n    // builds. It will be DCE'd away from minified builds, and so can be used to\n    // validate that Babel is properly removing dev assertions in minified\n    // builds.\n    console /*OK*/\n      .log('__devAssert_sentinel__');\n  }\n\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {?Window} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './core/window';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (function(new:Object, !Window)|\n *          function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n    getService(win, 'ampdoc')\n  );\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_sharedInstance\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_sharedInstance\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      sharedInstance: opt_sharedInstance || false,\n    };\n  }\n\n  if (!opt_override && s.ctor) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.sharedInstance = opt_sharedInstance || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.sharedInstance) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * This adopts the service **instance** from the parent.\n *\n * This function is dangerous! Sharing an instance means data can leak to and\n * from a child ampdoc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* sharedInstance */ true\n  );\n}\n\n/**\n * This adopts the service **factory** from the parent.\n *\n * This function is safer than sharing the service instance, since each ampdoc\n * will create its own instance of the factory (and each instance will have its\n * own instance data). Note that static data is still shared, so it's not 100%\n * foolproof.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceFactoryForEmbedDoc(ampdoc, id) {\n  const parentHolder = getAmpdocServiceHolder(devAssert(ampdoc.getParent()));\n  devAssert(\n    isServiceRegistered(parentHolder, id),\n    `Expected service ${id} to be registered`\n  );\n  const service = getServices(parentHolder)[id];\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    devAssert(service.ctor)\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have a constructor.\n  return !!(service && service.ctor);\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, reject, resolve} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../assert';\nimport {isScopeSelectorSupported, prependSelectorsWith} from './css-selectors';\n\n/** @fileoverview Helper functions for DOM queries. */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  devAssert(\n    /^[\\w-]+$/.test(name),\n    `Expected \"${name}\" to be a CSS name composed of alphanumerics and hyphens.`\n  );\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n *\n * @suppress {suspiciousCode}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  return element.closest\n    ? element.closest(selector)\n    : closest(element, (el) => matches(el, selector));\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => el.tagName == tagName);\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * TODO(rcebulko): Can we start using generators in childElements and defer to\n * that here?\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {dev, devAssert} from './log';\nimport {dict} from './core/types/object';\nimport {includes} from './core/types/string';\nimport {matches} from './core/dom/query';\nimport {toWin} from './core/window';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n * @suppress {suspiciousCode}\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (\n    n = node;\n    !!n.parentNode && !isShadowRoot(/** @type {HTMLElement} */ (n));\n    n = n.parentNode\n  ) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {HTMLElement} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!HTMLElement} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!HTMLElement} element\n * @return {!Promise<!AmpElement>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(/**@type {!AmpElement} */ (element));\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!HTMLInputElement} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n\n  // Technically .data is not a property of Event.\n  /**@type {?}*/ (event).data = data;\n\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n\n/**\n * Ensures the child is contained by the parent, but not the parent itself.\n *\n * @param {!Node} parent\n * @param {!Node} child\n * @return {boolean}\n */\nexport function containsNotSelf(parent, child) {\n  return child !== parent && parent.contains(child);\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from '../mode';\nimport {urls} from '../config';\n\nconst CUSTOM_TEMPLATES = ['amp-mustache'];\nconst LATEST_VERSION = 'latest';\n\n/**\n * Calculate the base url for any scripts.\n * @param {!Location} location The window's location\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateScriptBaseUrl(location, opt_isLocalDev) {\n  if (opt_isLocalDev) {\n    let prefix = `${location.protocol}//${location.host}`;\n    if (\n      location.protocol == 'about:' ||\n      location.protocol == 'blob:' ||\n      location.protocol == 'data:'\n    ) {\n      prefix = '';\n    }\n    return `${prefix}/dist`;\n  }\n  return urls.cdn;\n}\n\n/**\n * Calculate script url for an extension.\n * @param {!Location} location The window's location\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean=} opt_isLocalDev\n * @return {string}\n */\nexport function calculateExtensionScriptUrl(\n  location,\n  extensionId,\n  version,\n  opt_isLocalDev\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, opt_isLocalDev);\n  const rtv = getMode().rtvVersion;\n  const extensionVersion = version ? '-' + version : '';\n  return `${base}/rtv/${rtv}/v0/${extensionId}${extensionVersion}${fileExtension}`;\n}\n\n/**\n * Calculate script url for an entry point.\n * If `opt_rtv` is true, returns the URL matching the current RTV.\n * @param {!Location} location The window's location\n * @param {string} entryPoint\n * @param {boolean=} isLocalDev\n * @param {boolean=} opt_rtv\n * @return {string}\n */\nexport function calculateEntryPointScriptUrl(\n  location,\n  entryPoint,\n  isLocalDev,\n  opt_rtv\n) {\n  const fileExtension = getMode().esm ? '.mjs' : '.js';\n  const base = calculateScriptBaseUrl(location, isLocalDev);\n  if (isLocalDev) {\n    return `${base}/${entryPoint}${fileExtension}`;\n  }\n  if (opt_rtv) {\n    return `${base}/rtv/${getMode().rtvVersion}/${entryPoint}${fileExtension}`;\n  }\n  return `${base}/${entryPoint}${fileExtension}`;\n}\n\n/**\n * Parse the extension version from a given script URL.\n * @param {string} scriptUrl\n * @return {?{extensionId: string, extensionVersion: string}}\n */\nexport function parseExtensionUrl(scriptUrl) {\n  if (!scriptUrl) {\n    return null;\n  }\n  // Note that the \"(\\.max)?\" group only applies to local dev.\n  const matches = scriptUrl.match(\n    /^(.*)\\/(.*)-([0-9.]+|latest)(\\.max)?\\.(?:js|mjs)$/i\n  );\n  const extensionId = matches ? matches[2] : undefined;\n  const extensionVersion = matches ? matches[3] : undefined;\n  if (!extensionId || !extensionVersion) {\n    return null;\n  }\n  return {extensionId, extensionVersion};\n}\n\n/**\n * Create the missing amp extension HTML script element.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @return {!Element} Script object\n */\nexport function createExtensionScript(win, extensionId, version) {\n  const scriptElement = win.document.createElement('script');\n  scriptElement.async = true;\n  if (isIntermediateExtension(extensionId)) {\n    version = '';\n  } else {\n    scriptElement.setAttribute(\n      CUSTOM_TEMPLATES.indexOf(extensionId) >= 0\n        ? 'custom-template'\n        : 'custom-element',\n      extensionId\n    );\n  }\n  scriptElement.setAttribute('data-script', extensionId);\n  scriptElement.setAttribute('i-amphtml-inserted', '');\n  if (getMode().esm) {\n    scriptElement.setAttribute('type', 'module');\n  }\n\n  // Propagate nonce to all generated script tags.\n  const currentScript = win.document.head.querySelector('script[nonce]');\n  if (currentScript) {\n    scriptElement.setAttribute('nonce', currentScript.getAttribute('nonce'));\n  }\n\n  // Allow error information to be collected\n  // https://github.com/ampproject/amphtml/issues/7353\n  scriptElement.setAttribute('crossorigin', 'anonymous');\n  let loc = win.location;\n  if (getMode(win).test && win.testLocation) {\n    loc = win.testLocation;\n  }\n  const scriptSrc = calculateExtensionScriptUrl(\n    loc,\n    extensionId,\n    version,\n    getMode(win).localDev\n  );\n  scriptElement.src = scriptSrc;\n  return scriptElement;\n}\n\n/**\n * Returns the extension <script> element and attribute for the given\n * extension ID, if it exists. Otherwise, returns null.\n * @param {!Window} win\n * @param {string} extensionId\n * @param {string} version\n * @param {boolean} latest\n * @param {boolean=} includeInserted If true, includes script elements that\n *   are inserted by the runtime dynamically. Default is true.\n * @return {!Array<!Element>}\n */\nexport function getExtensionScripts(\n  win,\n  extensionId,\n  version,\n  latest,\n  includeInserted = true\n) {\n  // Always ignore <script> elements that have a mismatched RTV.\n  const modifier =\n    ':not([i-amphtml-loaded-new-version])' +\n    (includeInserted ? '' : ':not([i-amphtml-inserted])');\n  // We have to match against \"src\" because a few extensions, such as\n  // \"amp-viewer-integration\", do not have \"custom-element\" attribute.\n  const matches = win.document.head./*OK*/ querySelectorAll(\n    `script[src*=\"/${extensionId}-\"]${modifier}`\n  );\n  const filtered = [];\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    const urlParts = parseExtensionUrl(match.src);\n    if (!urlParts) {\n      continue;\n    }\n    const {\n      extensionId: scriptExtensionId,\n      extensionVersion: scriptExtensionVersion,\n    } = urlParts;\n    if (\n      scriptExtensionId == extensionId &&\n      (isIntermediateExtension(extensionId) ||\n        scriptExtensionVersion == version ||\n        (scriptExtensionVersion == LATEST_VERSION && latest))\n    ) {\n      filtered.push(match);\n    }\n  }\n  return filtered;\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot|Document} head\n * @return {!Array<{extensionId: string, extensionVersion: string}>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  const scripts = [];\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const extensionId =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    const urlParts = parseExtensionUrl(script.src);\n    if (extensionId && urlParts) {\n      scripts.push({extensionId, extensionVersion: urlParts.extensionVersion});\n    }\n  }\n  return scripts;\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {!Window} win\n * @param {string} id\n * @param {string} version\n * @return {boolean}\n */\nexport function extensionScriptInNode(win, id, version) {\n  return extensionScriptsInNode(win.document.head).some(\n    ({extensionId, extensionVersion}) =>\n      id == extensionId && version == extensionVersion\n  );\n}\n\n/**\n * @param {string} extensionId\n * @return {boolean}\n */\nfunction isIntermediateExtension(extensionId) {\n  return extensionId.startsWith('_');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {extensionScriptInNode} from './service/extension-script';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {string} version The extension version.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(\n    win,\n    id,\n    extension,\n    version,\n    opt_element\n  );\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .whenExtensionsKnown()\n    .then(() => {\n      const version = ampdoc.getExtensionVersion(extension);\n      if (!version) {\n        return null;\n      }\n      const extensions = getService(ampdoc.win, 'extensions');\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      }\n      return getServicePromiseForDoc(element, id);\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (\n    userAssert(\n      service,\n      'Service %s was requested to be provided through %s, ' +\n        'but %s is not loaded in the current page. To fix this ' +\n        'problem load the JavaScript file for %s in this page.',\n      id,\n      extension,\n      extension,\n      extension\n    )\n  );\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {string} version\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(\n  win,\n  id,\n  extension,\n  version,\n  opt_element\n) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => {\n      // If there is an extension script wait for it to load before trying\n      // to get the service. Prevents a race condition when everything but\n      // the extensions is in cache. If there is no script then it's either\n      // not present, or the service was defined by a test. In those cases\n      // we don't wait around for an extension that does not exist.\n      const extensions = getService(win, 'extensions');\n\n      // TODO(jpettitt) investigate registerExtension to short circuit\n      // the dom call in extensionScriptsInNode()\n      if (!extensionScriptInNode(extensions.win, extension, version)) {\n        return null;\n      }\n      return extensions.waitForExtension(extension, version);\n    })\n    .then((ext) => {\n      if (!ext) {\n        return null;\n      }\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      }\n      return getServicePromise(win, id);\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'access', 'amp-access')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (\n      getElementServiceForDoc(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'subscriptions',\n        'amp-subscriptions'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (\n      getServiceForDocOrNull(element, 'action')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (\n      getServiceForDocOrNull(element, 'standard-actions')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (\n      getElementServiceForDoc(element, 'activity', 'amp-analytics')\n    );\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (\n      getService(window, 'ampdoc')\n    );\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'amp-analytics-instrumentation',\n        'amp-analytics'\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (\n      getService(window, 'batched-xhr')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'bind',\n        'amp-bind'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (\n      getElementServiceIfAvailableForDocInEmbedScope(\n        element,\n        'amp-script',\n        'amp-script'\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cid')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (\n      getServiceForDoc(elementOrAmpDoc, 'navigation')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (\n      getElementServiceForDoc(element, 'loader', 'amp-loader')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (\n      getElementServiceForDoc(element, 'standalone', 'amp-standalone')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (\n      getService(window, 'crypto')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (\n      getServiceForDoc(elementOrAmpDoc, 'documentInfo')\n    ).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (\n      getService(window, 'extensions')\n    );\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (\n      getServiceForDocOrNull(element, 'hidden-observer')\n    );\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (\n      getServiceForDoc(elementOrAmpDoc, 'history')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (\n      getElementServiceIfAvailableForDoc(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (\n      getServiceForDocOrNull(elementOrAmpDoc, 'loadingIndicator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'next-page')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'mutator')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'owners')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getService(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (\n      getExistingServiceOrNull(window, 'performance')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (\n      getService(window, 'platform')\n    );\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (\n      getServiceForDoc(element, 'position-observer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'resources')\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story', '1.0'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (\n      getServicePromiseForDoc(el, 'localization')\n    );\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (\n      getServiceForDocOrNull(element, 'localization')\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (\n        getElementServiceIfAvailable(\n          win,\n          'story-analytics',\n          'amp-story',\n          '1.0',\n          true\n        )\n      )\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/real-time-config/real-time-config-impl.RealTimeConfigManager>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'real-time-config')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (\n      getServicePromiseForDoc(ampdoc, 'storage')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (\n      getServiceForDoc(elementOrAmpDoc, 'templates')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (\n      getServiceInEmbedWin(window, 'timer')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (\n      getServiceForDocOrNull(element, 'url-replace')\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (\n        getElementServiceForDoc(\n          element,\n          'userNotificationManager',\n          'amp-user-notification'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (\n        getElementServiceIfAvailableForDoc(\n          element,\n          'consentPolicyManager',\n          'amp-consent'\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (\n      getElementServiceIfAvailableForDoc(element, 'geo', 'amp-geo', true)\n    );\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (\n      getServiceForDocOrNull(element, 'url')\n    );\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (\n      getElementServiceIfAvailableForDoc(\n        element,\n        'variant',\n        'amp-experiment',\n        true\n      )\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (\n      getServiceForDoc(elementOrAmpDoc, 'video-manager')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'viewer')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (\n      getService(window, 'vsync')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (\n      getServiceForDoc(elementOrAmpDoc, 'viewport')\n    );\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-frame-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-google-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (\n      getServiceForDoc(elementOrAmpDoc, 'assistjs-config-service')\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../amp-cache-url/amp-cache-url.AmpCacheUrlService>}\n   */\n  static cacheUrlServicePromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<?../amp-cache-url/amp-cache-url.AmpCacheUrlService>} */ (\n      getServicePromiseForDoc(elementOrAmpDoc, 'cache-url')\n    );\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './core/data-structures/promise';\nimport {NormTimeDef, getCurve} from './core/data-structures/curve';\nimport {Services} from './services';\nimport {TimestampDef} from './core/types/date';\nimport {dev} from './log';\n\nconst TAG_ = 'Animation';\n\nconst NOOP_CALLBACK = function () {};\n\n/**\n * The animation class allows construction of arbitrary animation processes.\n * The main method is \"add\" that adds a segment of animation at particular\n * time offset (delay) and duration. All animation segments are simply functions\n * of type Transition which are iterated from 0 to 1 in animation frames to\n * achieve the desired effect.\n */\nexport class Animation {\n  /**\n   * Creates and starts animation with a single segment. Returns AnimationPlayer\n   * object that can be used to monitor or control animation.\n   *\n   * @param {!Node} contextNode The context node.\n   * @param {!TransitionDef<?>} transition Transition to animate.\n   * @param {TimestampDef} duration Duration in milliseconds.\n   * @param {(!./core/data-structures/curve.CurveDef|string)=} opt_curve Optional curve to use for\n   *   animation. Default is the linear animation.\n   * @return {!AnimationPlayer}\n   */\n  static animate(contextNode, transition, duration, opt_curve) {\n    return new Animation(contextNode)\n      .setCurve(opt_curve)\n      .add(0, transition, 1)\n      .start(duration);\n  }\n\n  /**\n   * @param {!Node} contextNode\n   * @param {!./service/vsync-impl.Vsync=} opt_vsync\n   */\n  constructor(contextNode, opt_vsync) {\n    /** @private @const {!Node} */\n    this.contextNode_ = contextNode;\n\n    /** @private @const {!./service/vsync-impl.Vsync} */\n    this.vsync_ = opt_vsync || Services.vsyncFor(self);\n\n    /** @private {?./core/data-structures/curve.CurveDef} */\n    this.curve_ = null;\n\n    /**\n     * @private @const {!Array<!SegmentDef>}\n     */\n    this.segments_ = [];\n  }\n\n  /**\n   * Sets the default curve for the animation. Each segment is allowed to have\n   * its own curve, but this curve will be used if a segment doesn't specify\n   * its own.\n   * @param {!./core/data-structures/curve.CurveDef|string|undefined} curve\n   * @return {!Animation}\n   */\n  setCurve(curve) {\n    if (curve) {\n      this.curve_ = getCurve(curve);\n    }\n    return this;\n  }\n\n  /**\n   * Adds a segment to the animation. Each segment starts at offset (delay) and\n   * runs for a portion of the overall animation (duration). Note that both\n   * delay and duration and NormTimeDef types which accept values from 0 to 1.\n   * Optionally, the time is pushed through a curve. If curve is not specified,\n   * the default animation curve will be used. The specified transition is\n   * animated over the specified duration from 0 to 1.\n   *\n   * @param {!NormTimeDef} delay\n   * @param {!TransitionDef<?>} transition\n   * @param {!NormTimeDef} duration\n   * @param {(!./core/data-structures/curve.CurveDef|string)=} opt_curve\n   * @return {!Animation}\n   */\n  add(delay, transition, duration, opt_curve) {\n    this.segments_.push({\n      delay,\n      func: transition,\n      duration,\n      curve: getCurve(opt_curve),\n    });\n    return this;\n  }\n\n  /**\n   * Starts the animation and returns the AnimationPlayer object that can be\n   * used to monitor and control the animation.\n   *\n   * @param {!TimestampDef} duration Absolute time in milliseconds.\n   * @return {!AnimationPlayer}\n   */\n  start(duration) {\n    const player = new AnimationPlayer(\n      this.vsync_,\n      this.contextNode_,\n      this.segments_,\n      this.curve_,\n      duration\n    );\n    return player;\n  }\n}\n\n/**\n * AnimationPlayer allows tracking and monitoring of the running animation.\n * Most importantly it exposes methods \"then\" and \"thenAlways\" that have the\n * semantics of a Promise and signal when the animation completed or failed.\n * Additionally, it exposes the method \"halt\" which allows to stop/reset the\n * animation.\n * // TODO(@cramforce) Actually fully implement.\n * implements {IThenable}\n */\nclass AnimationPlayer {\n  /**\n   * @param {!./service/vsync-impl.Vsync} vsync\n   * @param {!Node} contextNode\n   * @param {!Array<!SegmentDef>} segments\n   * @param {?./core/data-structures/curve.CurveDef} defaultCurve\n   * @param {!TimestampDef} duration\n   */\n  constructor(vsync, contextNode, segments, defaultCurve, duration) {\n    /** @private @const {!./service/vsync-impl.Vsync} */\n    this.vsync_ = vsync;\n\n    /** @private @const {!Node} */\n    this.contextNode_ = contextNode;\n\n    /** @private @const {!Array<!SegmentRuntimeDef>} */\n    this.segments_ = [];\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      this.segments_.push({\n        delay: segment.delay,\n        func: segment.func,\n        duration: segment.duration,\n        curve: segment.curve || defaultCurve,\n        started: false,\n        completed: false,\n      });\n    }\n\n    /** @private @const */\n    this.duration_ = duration;\n\n    /** @private {!TimestampDef} */\n    this.startTime_ = Date.now();\n\n    /** @private {!NormTimeDef} */\n    // this.normLinearTime_ = 0;\n\n    /** @private {!NormTimeDef} */\n    // this.normTime_ = 0;\n\n    /** @private {boolean} */\n    this.running_ = true;\n\n    /** @private {!Object<string, *>} */\n    this.state_ = {};\n\n    const deferred = new Deferred();\n\n    /** @const @private */\n    this.promise_ = deferred.promise;\n\n    /** @const @private */\n    this.resolve_ = deferred.resolve;\n\n    /** @const @private */\n    this.reject_ = deferred.reject;\n\n    /** @const */\n    this.task_ = this.vsync_.createAnimTask(this.contextNode_, {\n      mutate: this.stepMutate_.bind(this),\n    });\n\n    if (this.vsync_.canAnimate(this.contextNode_)) {\n      this.task_(this.state_);\n    } else {\n      dev().warn(TAG_, 'cannot animate');\n      this.complete_(/* success */ false, /* dir */ 0);\n    }\n  }\n\n  /**\n   * Chains to the animation's promise that will resolve when the animation has\n   * completed or will reject if animation has failed or was interrupted.\n   * @param {!Function=} opt_resolve\n   * @param {!Function=} opt_reject\n   * @return {!Promise}\n   */\n  then(opt_resolve, opt_reject) {\n    if (!opt_resolve && !opt_reject) {\n      return this.promise_;\n    }\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n\n  /**\n   * Callback for regardless whether the animation succeeds or fails.\n   * @param {!Function=} opt_callback\n   * @return {!Promise}\n   */\n  thenAlways(opt_callback) {\n    const callback = opt_callback || NOOP_CALLBACK;\n    return this.then(callback, callback);\n  }\n\n  /**\n   * Halts the animation. Depending on the opt_dir value, the following actions\n   * can be performed:\n   * 0: No action. The state will be as at the moment of halting (default)\n   * 1: Final state. Transitionable will be set to state = 1.\n   * -1: Reset state. Transitionable will be reset to state = 0.\n   * The animation's promise will be rejected since the transition has been\n   * interrupted.\n   * @param {number=} opt_dir\n   */\n  halt(opt_dir) {\n    this.complete_(/* success */ false, /* dir */ opt_dir || 0);\n  }\n\n  /**\n   * @param {boolean} success\n   * @param {number} dir\n   * @private\n   */\n  complete_(success, dir) {\n    if (!this.running_) {\n      return;\n    }\n    this.running_ = false;\n    if (dir != 0) {\n      // Sort in the completion order.\n      if (this.segments_.length > 1) {\n        this.segments_.sort((s1, s2) => {\n          return s1.delay + s1.duration - (s2.delay + s2.duration);\n        });\n      }\n      try {\n        if (dir > 0) {\n          // Natural order - all set to 1.\n          for (let i = 0; i < this.segments_.length; i++) {\n            this.segments_[i].func(1, true);\n          }\n        } else {\n          // Reverse order - all set to 0.\n          for (let i = this.segments_.length - 1; i >= 0; i--) {\n            this.segments_[i].func(0, false);\n          }\n        }\n      } catch (e) {\n        dev().error(TAG_, 'completion failed: ' + e, e);\n        success = false;\n      }\n    }\n    if (success) {\n      this.resolve_();\n    } else {\n      this.reject_();\n    }\n  }\n\n  /**\n   * @param {!Object<string, *>} unusedState\n   * @private\n   */\n  stepMutate_(unusedState) {\n    if (!this.running_) {\n      return;\n    }\n    const currentTime = Date.now();\n    const normLinearTime = Math.min(\n      (currentTime - this.startTime_) / this.duration_,\n      1\n    );\n\n    // Start segments due to be started\n    for (let i = 0; i < this.segments_.length; i++) {\n      const segment = this.segments_[i];\n      if (!segment.started && normLinearTime >= segment.delay) {\n        segment.started = true;\n      }\n    }\n\n    // Execute all pending segments.\n    for (let i = 0; i < this.segments_.length; i++) {\n      const segment = this.segments_[i];\n      if (!segment.started || segment.completed) {\n        continue;\n      }\n      this.mutateSegment_(segment, normLinearTime);\n    }\n\n    // Complete or start next cycle.\n    if (normLinearTime == 1) {\n      this.complete_(/* success */ true, /* dir */ 0);\n    } else {\n      if (this.vsync_.canAnimate(this.contextNode_)) {\n        this.task_(this.state_);\n      } else {\n        dev().warn(TAG_, 'cancel animation');\n        this.complete_(/* success */ false, /* dir */ 0);\n      }\n    }\n  }\n\n  /**\n   * @param {!SegmentRuntimeDef} segment\n   * @param {number} totalLinearTime\n   */\n  mutateSegment_(segment, totalLinearTime) {\n    let normLinearTime;\n    let normTime;\n    if (segment.duration > 0) {\n      normLinearTime = Math.min(\n        (totalLinearTime - segment.delay) / segment.duration,\n        1\n      );\n      normTime = normLinearTime;\n      if (segment.curve && normTime != 1) {\n        try {\n          normTime = segment.curve(normLinearTime);\n        } catch (e) {\n          dev().error(TAG_, 'step curve failed: ' + e, e);\n          this.complete_(/* success */ false, /* dir */ 0);\n          return;\n        }\n      }\n    } else {\n      normLinearTime = 1;\n      normTime = 1;\n    }\n    if (normLinearTime == 1) {\n      segment.completed = true;\n    }\n    try {\n      segment.func(normTime, segment.completed);\n    } catch (e) {\n      dev().error(TAG_, 'step mutate failed: ' + e, e);\n      this.complete_(/* success */ false, /* dir */ 0);\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {{\n *   delay: NormTimeDef,\n *   func: !TransitionDef,\n *   duration: NormTimeDef,\n *   curve: ?./core/data-structures/curve.CurveDef\n * }}\n */\nlet SegmentDef;\n\n/**\n * @typedef {{\n *   delay: NormTimeDef,\n *   func: !TransitionDef,\n *   duration: NormTimeDef,\n *   curve: ?./core/data-structures/curve.CurveDef,\n *   started: boolean,\n *   completed: boolean\n * }}\n */\nlet SegmentRuntimeDef;\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\n\n/**\n * Pass class helps to manage single-pass process. A pass is scheduled using\n * delay method. Only one pass can be pending at a time. If no pass is pending\n * the process is considered to be \"idle\".\n */\nexport class Pass {\n  /**\n   * Creates a new Pass instance.\n   * @param {!Window} win\n   * @param {function()} handler Handler to be executed when pass is triggered.\n   * @param {number=} opt_defaultDelay Default delay to be used when schedule\n   *   is called without one.\n   */\n  constructor(win, handler, opt_defaultDelay) {\n    this.timer_ = Services.timerFor(win);\n\n    /** @private @const {function()} */\n    this.handler_ = handler;\n\n    /** @private @const {number} */\n    this.defaultDelay_ = opt_defaultDelay || 0;\n\n    /** @private {number|string} */\n    this.scheduled_ = -1;\n\n    /** @private {number} */\n    this.nextTime_ = 0;\n\n    /** @private {boolean} */\n    this.running_ = false;\n\n    /**\n     * @private\n     * @const {function()}\n     */\n    this.boundPass_ = () => {\n      this.pass_();\n    };\n  }\n\n  /**\n   * Whether or not a pass is currently pending.\n   * @return {boolean}\n   */\n  isPending() {\n    return this.scheduled_ != -1;\n  }\n\n  /**\n   * Tries to schedule a new pass optionally with specified delay. If the new\n   * requested pass is requested before the pending pass, the pending pass is\n   * canceled. If the new pass is requested after the pending pass, the newly\n   * requested pass is ignored.\n   *\n   * Returns {@code true} if the pass has been scheduled and {@code false} if\n   * ignored.\n   *\n   * @param {number=} opt_delay Delay to schedule the pass. If not specified\n   *   the default delay is used, falling back to 0.\n   * @return {boolean}\n   */\n  schedule(opt_delay) {\n    let delay = opt_delay || this.defaultDelay_;\n    if (this.running_ && delay < 10) {\n      // If we get called recursively, wait at least 10ms for the next\n      // execution.\n      delay = 10;\n    }\n\n    const nextTime = Date.now() + delay;\n    // Schedule anew if nothing is scheduled currently or if the new time is\n    // sooner then previously requested.\n    if (!this.isPending() || nextTime - this.nextTime_ < -10) {\n      this.cancel();\n      this.nextTime_ = nextTime;\n      this.scheduled_ = this.timer_.delay(this.boundPass_, delay);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   *\n   */\n  pass_() {\n    this.scheduled_ = -1;\n    this.nextTime_ = 0;\n    this.running_ = true;\n    this.handler_();\n    this.running_ = false;\n  }\n\n  /**\n   * Cancels the pending pass if any.\n   */\n  cancel() {\n    if (this.isPending()) {\n      this.timer_.cancel(this.scheduled_);\n      this.scheduled_ = -1;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './core/types/object';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\nconst EMPTY_CSS_DECLARATION = /** @type {!CSSStyleDeclaration} */ ({\n  'getPropertyPriority': () => '',\n  'getPropertyValue': () => '',\n});\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      String(styles[k]),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (\n    opt_units ? value + opt_units : value\n  );\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!CSSStyleDeclaration}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return style || EMPTY_CSS_DECLARATION;\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Animation} from '../animation';\nimport {Pass} from '../pass';\nimport {Services} from '../services';\nimport {\n  assertDoesNotContainDisplay,\n  computedStyle,\n  getStyle,\n  getVendorJsPropertyName,\n  setImportantStyles,\n  setInitialDisplay,\n  setStyle,\n  setStyles,\n  toggle,\n} from '../style';\nimport {closest, matches} from '../core/dom/query';\nimport {dev, user} from '../log';\nimport {domOrderComparator} from '../dom';\nimport {endsWith} from '../core/types/string';\nimport {getMode} from '../mode';\n\nimport {remove} from '../core/types/array';\n\nconst TAG = 'FixedLayer';\n\nconst DECLARED_FIXED_PROP = '__AMP_DECLFIXED';\nconst DECLARED_STICKY_PROP = '__AMP_DECLSTICKY';\n\nconst LIGHTBOX_MODE_ATTR = 'i-amphtml-lightbox';\nconst LIGHTBOX_ELEMENT_CLASS = 'i-amphtml-lightbox-element';\n\n/**\n * @param {!Element} el\n * @return {boolean}\n */\nfunction isLightbox(el) {\n  return el.tagName.indexOf('LIGHTBOX') !== -1;\n}\n\n/**\n * The fixed layer is a *sibling* of the body element. I.e. it's a direct\n * child of documentElement. It's used to manage the `position:fixed` and\n * `position:sticky` elements in iOS-iframe case due to the\n * https://bugs.webkit.org/show_bug.cgi?id=154399 bug, which is itself\n * a result of workaround for the issue where scrolling is not supported\n * in iframes (https://bugs.webkit.org/show_bug.cgi?id=149264).\n * This implementation finds all elements that could be `fixed` or `sticky`\n * and checks on major relayouts if they are indeed `fixed`/`sticky`.\n * Some `fixed` elements may be moved into the \"transfer layer\".\n */\nexport class FixedLayer {\n  /**\n   * @param {!./ampdoc-impl.AmpDoc} ampdoc\n   * @param {!./vsync-impl.Vsync} vsync\n   * @param {number} borderTop\n   * @param {number} paddingTop\n   * @param {boolean} transfer\n   */\n  constructor(ampdoc, vsync, borderTop, paddingTop, transfer) {\n    /** @const {!./ampdoc-impl.AmpDoc} */\n    this.ampdoc = ampdoc;\n\n    /** @private @const */\n    this.vsync_ = vsync;\n\n    /** @const @private {number} */\n    this.borderTop_ = borderTop;\n\n    /** @private {number} */\n    this.paddingTop_ = paddingTop;\n\n    /** @private {number} */\n    this.committedPaddingTop_ = paddingTop;\n\n    /** @private @const {boolean} */\n    this.transfer_ = transfer && ampdoc.isSingleDoc();\n\n    /** @private {?TransferLayerDef} */\n    this.transferLayer_ = null;\n\n    /** @private {number} */\n    this.counter_ = 0;\n\n    /** @const @private {!Array<!ElementDef>} */\n    this.elements_ = [];\n\n    /** @const @private {!Pass} */\n    this.updatePass_ = new Pass(ampdoc.win, () => this.update());\n\n    /** @private {?function()} */\n    this.hiddenObserverUnlistener_ = null;\n\n    /** @private {!Array<string>} */\n    this.fixedSelectors_ = [];\n\n    /** @private {!Array<string>} */\n    this.stickySelectors_ = [];\n  }\n\n  /**\n   * Informs FixedLayer that a lightbox was opened.\n   *\n   * - FixedLayer hides any transfer layer elements that may be overlayed on\n   *   top of the lightbox, which is confusing UX.\n   * - When `onComplete` resolves, FixedLayer scans and transfers any fixed\n   *   descendants of `lightbox`. This enables unjanky fixed elements in\n   *   lightboxes on iOS.\n   *\n   * @param {!Element=} opt_lightbox\n   * @param {!Promise=} opt_onComplete Promise that resolves when lightbox\n   *   UX completes e.g. open transition animation.\n   */\n  enterLightbox(opt_lightbox, opt_onComplete) {\n    const transferLayer = this.getTransferLayer_();\n    if (transferLayer) {\n      transferLayer.setLightboxMode(true);\n    }\n\n    if (opt_lightbox && opt_onComplete) {\n      opt_onComplete.then(() =>\n        this.scanNode_(\n          dev().assertElement(opt_lightbox),\n          /* lightboxMode */ true\n        )\n      );\n    }\n  }\n\n  /**\n   * Reverses the actions performed by `enterLightbox()`.\n   */\n  leaveLightbox() {\n    const transferLayer = this.getTransferLayer_();\n    if (transferLayer) {\n      transferLayer.setLightboxMode(false);\n    }\n\n    const fes = remove(this.elements_, (fe) => !!fe.lightboxed);\n    this.returnFixedElements_(fes);\n    if (!this.elements_.length) {\n      this.unobserveHiddenMutations_();\n    }\n  }\n\n  /**\n   * Must be always called after DOMReady.\n   * @return {boolean}\n   */\n  setup() {\n    const viewer = Services.viewerForDoc(this.ampdoc);\n    if (!getMode().localDev && !viewer.isEmbedded()) {\n      // FixedLayer is not needed for standalone documents.\n      return false;\n    }\n\n    const root = this.ampdoc.getRootNode();\n    const stylesheets = root.styleSheets;\n    if (!stylesheets) {\n      return true;\n    }\n\n    this.fixedSelectors_.length = 0;\n    this.stickySelectors_.length = 0;\n\n    for (let i = 0; i < stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      // Rare but may happen if the document is being concurrently disposed.\n      if (!stylesheet) {\n        dev().error(TAG, 'Aborting setup due to null stylesheet.');\n        return true;\n      }\n      const {disabled, ownerNode} = stylesheet;\n      if (\n        disabled ||\n        !ownerNode ||\n        ownerNode.tagName != 'STYLE' ||\n        ownerNode.hasAttribute('amp-boilerplate') ||\n        ownerNode.hasAttribute('amp-runtime') ||\n        ownerNode.hasAttribute('amp-extension')\n      ) {\n        continue;\n      }\n      // Don't dereference cssRules early to avoid \"Cannot access rules\"\n      // DOMException due to reading a CORS stylesheet e.g. font.\n      this.discoverSelectors_(stylesheet.cssRules);\n    }\n\n    this.scanNode_(root);\n\n    if (this.elements_.length > 0) {\n      this.observeHiddenMutations();\n    }\n\n    const platform = Services.platformFor(this.ampdoc.win);\n    if (this.elements_.length > 0 && !this.transfer_ && platform.isIos()) {\n      user().warn(\n        TAG,\n        'Please test this page inside of an AMP Viewer such' +\n          \" as Google's because the fixed or sticky positioning might have\" +\n          ' slightly different layout.'\n      );\n    }\n\n    return true;\n  }\n\n  /**\n   * @param {!Node} node\n   * @param {boolean=} opt_lightboxMode\n   * @private\n   */\n  scanNode_(node, opt_lightboxMode) {\n    this.trySetupSelectors_(node, opt_lightboxMode);\n\n    // Sort tracked elements in document order.\n    this.sortInDomOrder_();\n\n    this.update();\n  }\n\n  /**\n   * Begin observing changes to the hidden attribute.\n   * @visibleForTesting\n   */\n  observeHiddenMutations() {\n    this.initHiddenObserver_();\n  }\n\n  /**\n   * Stop observing changes to the hidden attribute.\n   */\n  unobserveHiddenMutations_() {\n    this.updatePass_.cancel();\n    const unlisten = this.hiddenObserverUnlistener_;\n    if (unlisten) {\n      unlisten();\n      this.hiddenObserverUnlistener_ = null;\n    }\n  }\n\n  /**\n   * Start observing changes to the hidden attribute, if we haven't already\n   * started.\n   */\n  initHiddenObserver_() {\n    if (this.hiddenObserverUnlistener_) {\n      return;\n    }\n\n    const root = this.ampdoc.getRootNode();\n    const element = root.documentElement || root;\n    const hiddenObserver = Services.hiddenObserverForDoc(element);\n    this.hiddenObserverUnlistener_ = hiddenObserver.add(() => {\n      if (!this.updatePass_.isPending()) {\n        // Wait one animation frame so that other mutations may arrive.\n        this.updatePass_.schedule(16);\n      }\n    });\n  }\n\n  /**\n   * Updates the viewer's padding-top position and recalculates offsets of\n   * all elements. The padding update can be transient, in which case the\n   * UI itself is not updated leaving the blank space up top, which is invisible\n   * due to scroll position. This mode saves significant resources. However,\n   * eventhough layout is not updated, the fixed/sticky coordinates still need\n   * to be recalculated.\n   * @param {number} paddingTop\n   * @param {boolean} opt_transient\n   */\n  updatePaddingTop(paddingTop, opt_transient) {\n    this.paddingTop_ = paddingTop;\n    if (!opt_transient) {\n      this.committedPaddingTop_ = paddingTop;\n    }\n    this.update();\n  }\n\n  /**\n   * Apply or reset transform style to fixed elements. The existing transition,\n   * if any, is disabled when custom transform is supplied.\n   * @param {?string} transform\n   */\n  transformMutate(transform) {\n    // Unfortunately, we can't do anything with sticky elements here. Updating\n    // `top` in animation frames causes reflow on all platforms and we can't\n    // determine whether an element is currently docked to apply transform.\n    if (transform) {\n      // Apply transform style to all fixed elements\n      this.elements_.forEach((e) => {\n        if (e.fixedNow && e.top) {\n          setStyle(e.element, 'transition', 'none');\n          if (e.transform && e.transform != 'none') {\n            setStyle(e.element, 'transform', e.transform + ' ' + transform);\n          } else {\n            setStyle(e.element, 'transform', transform);\n          }\n        }\n      });\n    } else {\n      // Reset transform style to all fixed elements\n      this.elements_.forEach((e) => {\n        if (e.fixedNow && e.top) {\n          setStyles(e.element, {\n            transform: '',\n            transition: '',\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Adds the element directly into the fixed/sticky layer, bypassing discovery.\n   * @param {!Element} element\n   * @param {boolean=} opt_forceTransfer If set to true, then the element needs\n   *    to be forcefully transferred to the transfer layer. If false, then it\n   *    will only receive top-padding compensation for the header and never be\n   *    transferred.\n   * @return {!Promise}\n   */\n  addElement(element, opt_forceTransfer) {\n    const added = this.setupElement_(\n      element,\n      /* selector */ '*',\n      /* position */ 'fixed',\n      opt_forceTransfer\n    );\n    if (!added) {\n      return Promise.resolve();\n    }\n    this.sortInDomOrder_();\n\n    // If this is the first element, we need to start the mutation observer.\n    // This'll only be created once.\n    this.observeHiddenMutations();\n\n    return this.update();\n  }\n\n  /**\n   * Removes the element from the fixed/sticky layer.\n   * @param {!Element} element\n   */\n  removeElement(element) {\n    const fes = this.tearDownElement_(element);\n    this.returnFixedElements_(fes);\n  }\n\n  /**\n   * Returns fixed elements from the transfer layer.\n   * @param {!Array<ElementDef>} fes\n   * @private\n   */\n  returnFixedElements_(fes) {\n    if (fes.length > 0 && this.transferLayer_) {\n      this.vsync_.mutate(() => {\n        for (let i = 0; i < fes.length; i++) {\n          const fe = fes[i];\n          if (fe.position == 'fixed') {\n            this.transferLayer_.returnFrom(fe);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Whether the element is declared as fixed in any of the user's stylesheets.\n   * Will include any matches, not necessarily currently fixed elements.\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  isDeclaredFixed(element) {\n    return !!element[DECLARED_FIXED_PROP];\n  }\n\n  /**\n   * Whether the element is declared as sticky in any of the user's stylesheets.\n   * Will include any matches, not necessarily currently sticky elements.\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  isDeclaredSticky(element) {\n    return !!element[DECLARED_STICKY_PROP];\n  }\n\n  /**\n   * Performs fixed/sticky actions.\n   * 1. Updates `top` styling if necessary.\n   * 2. On iOS/Iframe moves elements between fixed layer and BODY depending on\n   * whether they are currently visible and fixed\n   * @return {!Promise}\n   */\n  update() {\n    // Some of the elements may no longer be in DOM.\n    /** @type {!Array<!ElementDef>} */\n    const toRemove = this.elements_.filter(\n      (fe) => !this.ampdoc.contains(fe.element)\n    );\n    toRemove.forEach((fe) => this.tearDownElement_(fe.element));\n\n    if (this.elements_.length == 0) {\n      return Promise.resolve();\n    }\n\n    // Clear out the update pass since we're doing the work now.\n    this.updatePass_.cancel();\n\n    // Next, the positioning-related properties will be measured. If a\n    // potentially fixed/sticky element turns out to be actually fixed/sticky,\n    // it will be decorated and possibly moved to a separate layer.\n    let hasTransferables = false;\n    return this.vsync_\n      .runPromise(\n        {\n          measure: (state) => {\n            const elements = this.elements_;\n            const autoTops = [];\n            const {win} = this.ampdoc;\n\n            // Notice that this code intentionally breaks vsync contract.\n            // Unfortunately, there's no way to reliably test whether or not\n            // `top` has been set to a non-auto value on all platforms. To work\n            // this around, this code compares `style.top` values with a new\n            // `style.bottom` value.\n            // 1. Unset top from previous mutates and set bottom to an extremely\n            // large value (to catch cases where sticky-tops are in a long way\n            // down inside a scroller).\n            for (let i = 0; i < elements.length; i++) {\n              setImportantStyles(elements[i].element, {\n                top: '',\n                bottom: '-9999vh',\n                transition: 'none',\n              });\n            }\n            // 2. Capture the `style.top` with this new `style.bottom` value. If\n            // this element has a non-auto top, this value will remain constant\n            // regardless of bottom.\n            for (let i = 0; i < elements.length; i++) {\n              autoTops.push(computedStyle(win, elements[i].element).top);\n            }\n            // 3. Cleanup the `style.bottom`.\n            for (let i = 0; i < elements.length; i++) {\n              setStyle(elements[i].element, 'bottom', '');\n            }\n\n            for (let i = 0; i < elements.length; i++) {\n              const fe = elements[i];\n              const {element, forceTransfer} = fe;\n              const style = computedStyle(win, element);\n\n              const {offsetHeight, offsetTop, offsetWidth} = element;\n              const {bottom, display = '', position = '', zIndex} = style;\n              const opacity = parseFloat(style.opacity);\n              const transform =\n                style[getVendorJsPropertyName(style, 'transform')];\n              let {top} = style;\n\n              const isFixed =\n                position === 'fixed' &&\n                (forceTransfer || (offsetWidth > 0 && offsetHeight > 0));\n              const isSticky = endsWith(position, 'sticky');\n              const isDisplayed = display !== 'none';\n\n              if (!isDisplayed || !(isFixed || isSticky)) {\n                state[fe.id] = {\n                  fixed: false,\n                  sticky: false,\n                  transferrable: false,\n                  top: '',\n                  zIndex: '',\n                };\n                continue;\n              }\n\n              if (top === 'auto' || autoTops[i] !== top) {\n                if (\n                  isFixed &&\n                  offsetTop === this.committedPaddingTop_ + this.borderTop_\n                ) {\n                  top = '0px';\n                } else {\n                  top = '';\n                }\n              }\n\n              // Transferability requires an element to be:\n              // 1. Greater than 0% opacity. That's a lot of work for no benefit.\n              //    Additionally, transparent elements used for \"service\" needs and\n              //    thus best kept in the original tree. The visibility, however,\n              //    is not considered because `visibility` CSS is inherited.\n              // 2. Height < 300. This avoids transferring large sections of UI,\n              //    e.g. publisher-customized amp-consent UI (#17995).\n              // 3. Has `top` or `bottom` CSS set. This ensures we only transfer\n              //    fixed elements that are _not_ auto-positioned to avoid jumping\n              //    position after transferring to the fixed layer (due to loss of\n              //    parent positioning context). We could calculate this offset, but\n              //    we don't (yet).\n              let isTransferrable = false;\n              if (isFixed) {\n                if (forceTransfer === true) {\n                  isTransferrable = true;\n                } else if (forceTransfer === false) {\n                  isTransferrable = false;\n                } else {\n                  isTransferrable =\n                    opacity > 0 && offsetHeight < 300 && !!(top || bottom);\n                }\n              }\n              if (isTransferrable) {\n                hasTransferables = true;\n              }\n              state[fe.id] = {\n                fixed: isFixed,\n                sticky: isSticky,\n                transferrable: isTransferrable,\n                top,\n                zIndex,\n                transform,\n              };\n            }\n          },\n          mutate: (state) => {\n            if (hasTransferables && this.transfer_) {\n              this.getTransferLayer_().update();\n            }\n            const elements = this.elements_;\n            for (let i = 0; i < elements.length; i++) {\n              const fe = elements[i];\n              const feState = state[fe.id];\n\n              // Fix a bug with Safari. For some reason, you cannot unset\n              // transition when it's important. You can, however, set it to a valid\n              // non-important value, then unset it.\n              setStyle(fe.element, 'transition', 'none');\n              // Note: This MUST be done after measurements are taken.\n              // Transitions will mess up everything and, depending on when paints\n              // happen, mutates of transition and bottom at the same time may be\n              // make the transition active.\n              setStyle(fe.element, 'transition', '');\n\n              if (feState) {\n                this.mutateElement_(fe, i, feState);\n              }\n            }\n          },\n        },\n        {}\n      )\n      .catch((error) => {\n        // Fail silently.\n        dev().error(TAG, 'Failed to mutate fixed elements:', error);\n      });\n  }\n\n  /**\n   * Calls `setupSelectors_` in a try-catch.\n   * Fails quietly with a dev error if call fails.\n   * This method should not be inlined to prevent TryCatch deoptimization.\n   * @param {!Node} root\n   * @param {boolean=} opt_lightboxMode\n   * @private\n   */\n  trySetupSelectors_(root, opt_lightboxMode) {\n    try {\n      this.setupSelectors_(root, opt_lightboxMode);\n    } catch (e) {\n      // Fail quietly.\n      dev().error(TAG, 'Failed to setup fixed elements:', e);\n    }\n  }\n\n  /**\n   * Calls `setupElement_` for up to 10 elements matching each selector\n   * in `fixedSelectors` and for all selectors in `stickySelectors`.\n   * @param {!Node} root\n   * @param {boolean=} opt_lightboxMode\n   * @private\n   */\n  setupSelectors_(root, opt_lightboxMode) {\n    for (let i = 0; i < this.fixedSelectors_.length; i++) {\n      const fixedSelector = this.fixedSelectors_[i];\n      const elements = root.querySelectorAll(fixedSelector);\n      for (let j = 0; j < elements.length; j++) {\n        if (this.elements_.length > 10) {\n          // We shouldn't have too many of `fixed` elements.\n          break;\n        }\n        this.setupElement_(\n          elements[j],\n          fixedSelector,\n          'fixed',\n          /* opt_forceTransfer */ undefined,\n          opt_lightboxMode\n        );\n      }\n    }\n    for (let i = 0; i < this.stickySelectors_.length; i++) {\n      const stickySelector = this.stickySelectors_[i];\n      const elements = root.querySelectorAll(stickySelector);\n      for (let j = 0; j < elements.length; j++) {\n        this.setupElement_(\n          elements[j],\n          stickySelector,\n          'sticky',\n          /* opt_forceTransfer */ undefined,\n          opt_lightboxMode\n        );\n      }\n    }\n  }\n\n  /**\n   * If the given element has a `style` attribute with a top/bottom CSS rule,\n   * display a user error. FixedLayer's implementation currently overrides\n   * top, bottom and a few other CSS rules.\n   * @param {!Element} element\n   * @private\n   */\n  warnAboutInlineStylesIfNecessary_(element) {\n    if (\n      element.hasAttribute('style') &&\n      (getStyle(element, 'top') || getStyle(element, 'bottom'))\n    ) {\n      user().error(\n        TAG,\n        'Inline styles with `top`, `bottom` and other ' +\n          'CSS rules are not supported yet for fixed or sticky elements ' +\n          '(#14186). Unexpected behavior may occur.',\n        element\n      );\n    }\n  }\n\n  /**\n   * This method records the potentially fixed or sticky element. One of a more\n   * critical functions - it records all selectors that may apply \"fixed\"\n   * or \"sticky\" to this element to check them later.\n   *\n   * @param {!Element} element\n   * @param {string} selector\n   * @param {string} position\n   * @param {boolean=} opt_forceTransfer If true, then the element will\n   *    be forcibly transferred to the transfer layer.\n   * @param {boolean=} opt_lightboxMode If true, then descendants of lightboxes\n   *    are allowed to be set up. Default is false.\n   * @return {boolean}\n   * @private\n   */\n  setupElement_(\n    element,\n    selector,\n    position,\n    opt_forceTransfer,\n    opt_lightboxMode\n  ) {\n    // Warn that pub-authored inline styles may be overriden by FixedLayer.\n    if (!opt_forceTransfer) {\n      this.warnAboutInlineStylesIfNecessary_(element);\n    }\n\n    // Ignore lightboxes because FixedLayer can interfere with their\n    // opening/closing animations (#19149).\n    if (isLightbox(element)) {\n      return false;\n    }\n    const isLightboxDescendant = closest(element, isLightbox);\n    if (!opt_lightboxMode && isLightboxDescendant) {\n      return false;\n    }\n\n    const elements = this.elements_;\n\n    // Avoid ancestor-descendant relationships in tracked elements to prevent\n    // \"double top-offset\" (#22860).\n    const removals = [];\n    for (let i = 0; i < elements.length; i++) {\n      const el = elements[i].element;\n      if (el === element) {\n        break;\n      }\n      // Early exit if element is a child of an already-tracked element...\n      if (el.contains(element)) {\n        return false;\n      }\n      // Remove the already-tracked element if it is a child of the new\n      // element...\n      if (element.contains(el)) {\n        removals.push(el);\n      }\n    }\n    for (let i = 0; i < removals.length; i++) {\n      this.removeElement(removals[i]);\n    }\n\n    let fe = null;\n    for (let i = 0; i < elements.length; i++) {\n      const el = elements[i];\n      if (el.element == element && el.position == position) {\n        fe = el;\n        break;\n      }\n    }\n    const isFixed = position == 'fixed';\n    if (fe) {\n      if (!fe.selectors.includes(selector)) {\n        // Already seen.\n        fe.selectors.push(selector);\n      }\n    } else {\n      // A new entry.\n      const id = 'F' + this.counter_++;\n      element.setAttribute('i-amphtml-fixedid', id);\n      if (isFixed) {\n        element[DECLARED_FIXED_PROP] = true;\n      } else {\n        element[DECLARED_STICKY_PROP] = true;\n      }\n      fe = {\n        id,\n        element,\n        position,\n        selectors: [selector],\n        fixedNow: false,\n        stickyNow: false,\n        lightboxed: !!isLightboxDescendant,\n      };\n      elements.push(fe);\n    }\n\n    fe.forceTransfer = isFixed ? opt_forceTransfer : false;\n    return true;\n  }\n\n  /**\n   * Undoes set up by removing element record and and resets `top` style.\n   * Does _not_ return the element from the transfer layer.\n   *\n   * @param {!Element} element\n   * @return {!Array<!ElementDef>}\n   * @private\n   */\n  tearDownElement_(element) {\n    const removed = [];\n    for (let i = 0; i < this.elements_.length; i++) {\n      const fe = this.elements_[i];\n      if (fe.element === element) {\n        if (!fe.lightboxed) {\n          this.vsync_.mutate(() => {\n            setStyle(element, 'top', '');\n          });\n        }\n        this.elements_.splice(i, 1);\n        removed.push(fe);\n      }\n    }\n    if (!this.elements_.length) {\n      this.unobserveHiddenMutations_();\n    }\n    return removed;\n  }\n\n  /**\n   * @private\n   */\n  sortInDomOrder_() {\n    this.elements_.sort((fe1, fe2) => {\n      return domOrderComparator(fe1.element, fe2.element);\n    });\n  }\n\n  /**\n   * Mutates the fixed/sticky element. At this point it's determined that the\n   * element is indeed fixed/sticky. There are two main functions here:\n   *  1. `top` has to be updated to reflect viewer's paddingTop.\n   *  2. The element may need to be transfered to the separate fixed layer.\n   *\n   * @param {!ElementDef} fe\n   * @param {number} index\n   * @param {!ElementStateDef} state\n   * @private\n   */\n  mutateElement_(fe, index, state) {\n    const {element, fixedNow: oldFixed} = fe;\n\n    fe.fixedNow = state.fixed;\n    fe.stickyNow = state.sticky;\n    fe.top = state.fixed || state.sticky ? state.top : '';\n    fe.transform = state.transform;\n\n    // Move back to the BODY layer and reset transfer z-index.\n    if (\n      oldFixed &&\n      (!state.fixed || !state.transferrable) &&\n      this.transferLayer_\n    ) {\n      this.transferLayer_.returnFrom(fe);\n    }\n\n    // Update `top` to adjust position to the viewer's paddingTop. However,\n    // ignore lightboxed elements since lightboxes ignore the viewer header.\n    if (state.top && (state.fixed || state.sticky) && !fe.lightboxed) {\n      if (state.fixed || !this.transfer_) {\n        // Fixed positions always need top offsetting, as well as stickies on\n        // non iOS Safari.\n        setStyle(element, 'top', `calc(${state.top} + ${this.paddingTop_}px)`);\n      } else {\n        // On iOS Safari (this.transfer_ = true), stickies cannot\n        // have an offset because they are already offset by the padding-top.\n        if (this.committedPaddingTop_ === this.paddingTop_) {\n          // So, when the header is shown, just use top.\n          setStyle(element, 'top', state.top);\n        } else {\n          // When the header is not shown, we need to subtract the padding top.\n          setStyle(\n            element,\n            'top',\n            `calc(${state.top} - ${this.committedPaddingTop_}px)`\n          );\n        }\n      }\n    }\n\n    // Move element to the fixed layer.\n    if (this.transfer_ && state.fixed && state.transferrable) {\n      this.getTransferLayer_().transferTo(fe, index, state);\n    }\n  }\n\n  /**\n   * @return {?TransferLayerDef}\n   */\n  getTransferLayer_() {\n    // This mode is only allowed for a single-doc case.\n    if (!this.transfer_ || this.transferLayer_) {\n      return this.transferLayer_;\n    }\n    const doc = this.ampdoc.win.document;\n    this.transferLayer_ = new TransferLayerBody(doc, this.vsync_);\n    return this.transferLayer_;\n  }\n\n  /**\n   * Find all `position:fixed` and `position:sticky` elements.\n   * @param {!Array<CSSRule>} rules\n   * @private\n   */\n  discoverSelectors_(rules) {\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i];\n      if (\n        rule.type == /* CSSMediaRule */ 4 ||\n        rule.type == /* CSSSupportsRule */ 12\n      ) {\n        this.discoverSelectors_(rule.cssRules);\n        continue;\n      }\n\n      if (rule.type == /* CSSStyleRule */ 1) {\n        const {selectorText} = rule;\n        const {position} = rule.style;\n        if (selectorText === '*' || !position) {\n          continue;\n        }\n        if (position === 'fixed') {\n          this.fixedSelectors_.push(selectorText);\n        } else if (endsWith(position, 'sticky')) {\n          this.stickySelectors_.push(selectorText);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {number} paddingTop\n   * @param {number} lastPaddingTop\n   * @param {number} duration\n   * @param {string} curve\n   * @param {boolean} transient\n   * @return {!Promise}\n   */\n  animateFixedElements(paddingTop, lastPaddingTop, duration, curve, transient) {\n    this.updatePaddingTop(paddingTop, transient);\n    if (duration <= 0) {\n      return Promise.resolve();\n    }\n    // Add transit effect on position fixed element\n    const tr = (time) => {\n      return lastPaddingTop - paddingTop + (paddingTop - lastPaddingTop) * time;\n    };\n    return Animation.animate(\n      this.ampdoc.getRootNode(),\n      (time) => {\n        const p = tr(time);\n        this.transformMutate(`translateY(${p}px)`);\n      },\n      duration,\n      curve\n    ).thenAlways(() => {\n      this.transformMutate(null);\n    });\n  }\n}\n\n/**\n * @typedef {{\n *   id: string,\n *   selectors: !Array,\n *   element: !Element,\n *   position: string,\n *   placeholder: (?Element|undefined),\n *   fixedNow: boolean,\n *   stickyNow: boolean,\n *   top: (string|undefined),\n *   transform: (string|undefined),\n *   forceTransfer: (boolean|undefined),\n *   lightboxed: (boolean|undefined),\n * }}\n */\nlet ElementDef;\n\n/**\n * @typedef {{\n *   fixed: boolean,\n *   sticky: boolean,\n *   transferrable: boolean,\n *   top: string,\n *   zIndex: string,\n * }}\n */\nlet ElementStateDef;\n\n/**\n * The contract for transfer layer.\n * @interface\n */\nclass TransferLayerDef {\n  /**\n   * @return {!Element}\n   */\n  getRoot() {}\n\n  /**\n   * Update most current styles for the transfer layer.\n   */\n  update() {}\n\n  /**\n   * Toggles internal state after entering or leaving lightbox mode.\n   * @param {boolean} unusedOn\n   */\n  setLightboxMode(unusedOn) {}\n\n  /**\n   * Transfer the element from the body into the transfer layer.\n   * @param {!ElementDef} unusedFe\n   * @param {number} unusedIndex\n   * @param {!ElementStateDef} unusedState\n   */\n  transferTo(unusedFe, unusedIndex, unusedState) {}\n\n  /**\n   * Return the element from the transfer layer back to the body.\n   * @param {!ElementDef} unusedFe\n   */\n  returnFrom(unusedFe) {}\n}\n\n/**\n * The parallel `<body>` element is created and fixed elements are moved into\n * this element.\n * @implements {TransferLayerDef}\n */\nclass TransferLayerBody {\n  /**\n   * @param {!Document} doc\n   * @param {!./vsync-impl.Vsync} vsync\n   */\n  constructor(doc, vsync) {\n    /** @private @const {!Document} */\n    this.doc_ = doc;\n\n    /** @private @const {!./vsync-impl.Vsync} */\n    this.vsync_ = vsync;\n\n    /** @private @const {!Element} */\n    this.layer_ = doc.body.cloneNode(/* deep */ false);\n    this.layer_.removeAttribute('style');\n    const styles = {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      height: 0,\n      width: 0,\n      pointerEvents: 'none',\n      overflow: 'hidden',\n      // Reset possible BODY styles.\n      animation: 'none',\n      background: 'none',\n      border: 'none',\n      borderImage: 'none',\n      boxSizing: 'border-box',\n      boxShadow: 'none',\n      float: 'none',\n      margin: 0,\n      opacity: 1,\n      outline: 'none',\n      padding: 'none',\n      transform: 'none',\n      transition: 'none',\n    };\n    setStyles(this.layer_, assertDoesNotContainDisplay(styles));\n    setInitialDisplay(this.layer_, 'block');\n    doc.documentElement.appendChild(this.layer_);\n  }\n\n  /** @override */\n  getRoot() {\n    return this.layer_;\n  }\n\n  /** @override */\n  setLightboxMode(on) {\n    this.vsync_.mutate(() => {\n      const root = this.getRoot();\n      if (on) {\n        root.setAttribute(LIGHTBOX_MODE_ATTR, '');\n      } else {\n        root.removeAttribute(LIGHTBOX_MODE_ATTR);\n      }\n    });\n  }\n\n  /**\n   * Synchronizes any attribute mutations done on the real body to the layer.\n   * This is to better simulate the body in CSS selectors.\n   * @override\n   */\n  update() {\n    const {body} = this.doc_;\n    const layer = this.layer_;\n    const bodyAttrs = body.attributes;\n    const layerAttrs = layer.attributes;\n    for (let i = 0; i < bodyAttrs.length; i++) {\n      const attr = bodyAttrs[i];\n      // Style is not copied because the fixed-layer must have very precise\n      // styles to enable smooth scrolling.\n      if (attr.name === 'style') {\n        continue;\n      }\n      // Use cloneNode to get around invalid attribute names. Ahem, amp-bind.\n      layerAttrs.setNamedItem(attr.cloneNode(false));\n    }\n    for (let i = 0; i < layerAttrs.length; i++) {\n      const {name} = layerAttrs[i];\n      if (\n        name === 'style' ||\n        name === LIGHTBOX_MODE_ATTR ||\n        body.hasAttribute(name)\n      ) {\n        continue;\n      }\n      layer.removeAttribute(name);\n      i--;\n    }\n  }\n\n  /** @override */\n  transferTo(fe, index, state) {\n    const {element} = fe;\n    if (element.parentElement == this.layer_) {\n      return;\n    }\n\n    dev().fine(TAG, 'transfer to fixed:', fe.id, fe.element);\n    user().warn(\n      TAG,\n      'In order to improve scrolling performance in Safari,' +\n        ' we now move the element to a fixed positioning layer:',\n      fe.element\n    );\n\n    if (!fe.placeholder) {\n      // Never been transfered before: ensure that it's properly configured.\n      setStyle(element, 'pointer-events', 'initial');\n      const placeholder = (fe.placeholder =\n        this.doc_.createElement('i-amphtml-fpa'));\n      toggle(placeholder, false);\n      placeholder.setAttribute('i-amphtml-fixedid', fe.id);\n    }\n\n    // Calculate z-index based on the declared z-index and DOM position.\n    setStyle(\n      element,\n      'zIndex',\n      `calc(${10000 + index} + ${state.zIndex || 0})`\n    );\n\n    // Identify lightboxed elements so they can be visible when the transfer\n    // layer is \"hidden\", and hidden with the transfer layer is \"visible\".\n    if (fe.lightboxed) {\n      element.classList.add(LIGHTBOX_ELEMENT_CLASS);\n    }\n\n    element.parentElement.replaceChild(fe.placeholder, element);\n    this.layer_.appendChild(element);\n\n    // Test if the element still matches one of the `fixed` selectors. If not\n    // return it back to BODY.\n    const matches = fe.selectors.some((selector) =>\n      this.matches_(element, selector)\n    );\n    if (!matches) {\n      user().warn(\n        TAG,\n        'Failed to move the element to the fixed position layer.' +\n          ' This is most likely due to the compound CSS selector:',\n        fe.element\n      );\n      this.returnFrom(fe);\n    }\n  }\n\n  /** @override */\n  returnFrom(fe) {\n    if (!fe.placeholder || !this.doc_.contains(fe.placeholder)) {\n      return;\n    }\n    const {element, placeholder} = fe;\n    dev().fine(TAG, 'return from fixed:', fe.id, element);\n\n    if (fe.lightboxed) {\n      element.classList.remove(LIGHTBOX_ELEMENT_CLASS);\n    }\n\n    if (this.doc_.contains(element)) {\n      setStyle(fe.element, 'zIndex', '');\n      placeholder.parentElement.replaceChild(element, placeholder);\n    } else {\n      placeholder.parentElement.removeChild(placeholder);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} selector\n   * @return {boolean}\n   * @private\n   */\n  matches_(element, selector) {\n    try {\n      return matches(element, selector);\n    } catch (e) {\n      // Fail silently.\n      dev().error(TAG, 'Failed to test query match:', e);\n      return false;\n    }\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Whether addEventListener supports options or only takes passive as a boolean\n * @type {boolean|undefined}\n */\nlet passiveSupported;\n\n/**\n * Options supported by addEventListener\n * @typedef AddEventListenerOptsDef\n * @property {undefined|boolean} [capture]\n * @property {undefined|boolean} [once]\n * @property {undefined|boolean} [passive]\n * @property {undefined|!AbortSignal} [signal]\n * }}\n */\nlet AddEventListenerOptsDef;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {!AddEventListenerOptsDef=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /** @type {?function(!Event)} */\n  let wrapped = (event) => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR?.(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  const capture = !!opt_evtListenerOpts?.capture;\n\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    localElement?.removeEventListener(\n      eventType,\n      wrapped,\n      optsSupported ? opt_evtListenerOpts : capture\n    );\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n/**\n * Return boolean. if listener option is supported, return `true`.\n * if not supported, return `false`\n * @param {!Window} win\n * @return {boolean}\n */\nexport function supportsPassiveEventListener(win) {\n  if (passiveSupported !== undefined) {\n    return passiveSupported;\n  }\n\n  passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      },\n    };\n\n    win.addEventListener('test-options', null, options);\n    win.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return passiveSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports passive options or not.\n */\nexport function resetPassiveSupportedForTesting() {\n  passiveSupported = undefined;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './core/dom/event-helper-listen';\nimport {lastChildElement} from './core/dom/query';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dict} from '../../../src/core/types/object';\nimport {listen} from '../../../src/event-helper';\n\n/**\n * Forward focus events' related data from the AMP doc to the\n * viewer.\n */\nexport class FocusHandler {\n  /**\n   * @param {!Window} win\n   * @param {!./messaging/messaging.Messaging} messaging\n   */\n  constructor(win, messaging) {\n    /** @const {!Window} */\n    this.win = win;\n    /** @const @private {!./messaging/messaging.Messaging} */\n    this.messaging_ = messaging;\n\n    this.listenForFocusEvents_();\n  }\n\n  /**\n   * @private\n   */\n  listenForFocusEvents_() {\n    const doc = this.win.document;\n    listen(doc, 'focusin', this.forwardEventToViewer_.bind(this), {\n      capture: false,\n    });\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  forwardEventToViewer_(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    this.messaging_.sendRequest(\n      e.type,\n      dict({'focusTargetRect': e.target./*OK*/ getBoundingClientRect()}),\n      /* awaitResponse */ false\n    );\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {computedStyle} from '../../../src/style';\nimport {devAssert} from '../../../src/log';\n\n/**\n * Simple implementation of CircularBuffer.\n * Exported for test only.\n * @template T\n */\nexport class CircularBuffer {\n  /**\n   * Creates an instance of CircularBuffer.\n   * @param {number} max\n   */\n  constructor(max) {\n    this.max_ = max;\n    this.buff_ = [];\n    this.next_ = 0;\n  }\n\n  /**\n   * Add one element to the end.\n   * @param {T} item\n   */\n  push(item) {\n    this.buff_[this.next_] = item;\n    this.next_ = (this.next_ + 1) % this.max_;\n  }\n\n  /**\n   * @param {number} index The index of an element to get.\n   * @return {T}\n   */\n  get(index) {\n    if (this.buff_.length >= this.max_) {\n      index = (this.next_ + index) % this.max_;\n    }\n    return this.buff_[index];\n  }\n\n  /**\n   * The current buffer size.\n   * @return {number}\n   */\n  size() {\n    return this.buff_.length;\n  }\n}\n\n/**\n * TextPosDef is a pointer to a character in a Text node.\n * @typedef {{node: !Text, offset: number}}\n */\nlet TextPosDef;\n\n/**\n * Returns a char pointed by pos.\n * @param {!TextPosDef} pos\n * @return {string}\n */\nexport function textPosChar(pos) {\n  return pos.node.wholeText[pos.offset];\n}\n\n/**\n * TextRangeDef represents a text range.\n * @typedef {{start: !TextPosDef, end: !TextPosDef}}\n */\nlet TextRangeDef;\n\n/**\n * TextPosAndIdxDef represents a pair of TextPosDef and index.\n * @typedef {{pos: !TextPosDef, idx: number}}\n */\nlet TextPosAndIdxDef;\n\n/**\n * TextRangeWithIdxDef represents a text range with TextPosAndIdxDef.\n * @typedef {{start: !TextPosAndIdxDef, end: !TextPosAndIdxDef}}\n */\nlet TextRangeWithIdxDef;\n\nconst skipCharRe = /[,.\\s\\u2022()]/;\n\n/**\n * Canonicalizes a char to emulate the canonicalizion applied in backends\n * where texts to highlight are generated.\n * @param {string} c input char to canonicalize.\n * @return {string}\n */\nfunction canonicalizeChar(c) {\n  if (c == '\\u2019' || c == '\\u2018') {\n    return \"'\";\n  }\n  if (c == '\\u201c' || c == '\\u201d') {\n    return '\"';\n  }\n  return c.toLowerCase();\n}\n\n/**\n * Canonicalizes a string to emulate the canonicalizion applied in backends\n * where texts to highlight are generated.\n * @param {string} s input string to canonicalize.\n * @return {string}\n */\nexport function canonicalizeString(s) {\n  const buf = [];\n  for (let i = 0; i < s.length; i++) {\n    const c = s[i];\n    if (skipCharRe.test(c)) {\n      continue;\n    }\n    buf.push(canonicalizeChar(c));\n  }\n  return buf.join('');\n}\n\n/**\n * Canonicalizes strings in sentences and remove empty strings.\n * @param {!Array<string>} sentences\n * @return {!Array<string>}\n */\nfunction canonicalizeSentences(sentences) {\n  const ret = [];\n  for (let i = 0; i < sentences.length; i++) {\n    const sen = canonicalizeString(sentences[i]);\n    if (sen) {\n      ret.push(sen);\n    }\n  }\n  return ret;\n}\n\n/**\n * Matcher finds occurrences of a sentence with the bad character rule of\n * BM-algorithm.\n */\nclass Matcher {\n  /**\n   * @param {string} sen\n   * @param {!CircularBuffer<!TextPosAndIdxDef>} buf\n   */\n  constructor(sen, buf) {\n    this.sen_ = sen;\n    this.buf_ = buf;\n    /** @type {!Array<!TextRangeWithIdxDef>} */\n    this.matches = [];\n    // Precomputed table for the bad character rule.\n    this.skipTable_ = {};\n    this.skip_ = sen.length - 1;\n    for (let i = 0; i < sen.length; i++) {\n      const c = sen[i];\n      this.skipTable_[c] = sen.length - 1 - i;\n    }\n  }\n\n  /**\n   * Peaks the current char and update internal matches.\n   */\n  update() {\n    if (this.skip_ > 0) {\n      this.skip_--;\n      return;\n    }\n    const {buf_: buf, sen_: sen} = this;\n    const bufSize = buf.size();\n    for (let j = 0; j < sen.length; j++) {\n      const c = canonicalizeChar(textPosChar(buf.get(bufSize - 1 - j).pos));\n      if (sen[sen.length - 1 - j] == c) {\n        continue;\n      }\n      let skip = this.skipTable_[c];\n      if (skip == null) {\n        skip = sen.length;\n      }\n      skip -= j;\n      if (skip < 1) {\n        skip = 1;\n      }\n      this.skip_ = skip - 1;\n      return;\n    }\n    const endPosIdx = buf.get(bufSize - 1);\n    const endPos = endPosIdx.pos;\n    this.matches.push({\n      start: buf.get(bufSize - sen.length),\n      end: {\n        pos: {node: endPos.node, offset: endPos.offset + 1},\n        idx: endPosIdx.idx + 1,\n      },\n    });\n  }\n}\n\n/**\n * findSentences find sentences from node and returns a list of TextRangeDef.\n * @param {!Window} win\n * @param {!Node} node\n * @param {!Array<string>} sentences\n * @return {?Array<!TextRangeDef>}\n */\nexport function findSentences(win, node, sentences) {\n  sentences = canonicalizeSentences(sentences);\n  if (sentences.length <= 0) {\n    return null;\n  }\n  const scanner = new TextScanner(win, node);\n  // Creates a circular buffer with capacity = max(size of sentence).\n  // Don't pass Math.max to reduce directly because reduce passes idx and src\n  // to the callback.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\n  /** @type {!CircularBuffer<!TextPosAndIdxDef>} */\n  const buf = new CircularBuffer(\n    sentences.map((sen) => sen.length).reduce((x, y) => Math.max(x, y))\n  );\n\n  // First, create a matcher for the first sentence to find only the first\n  // sentence.\n  /** @type {!Array<!Matcher>} */\n  const matchers = [new Matcher(sentences[0], buf)];\n  let posIdx = -1;\n  while (true) {\n    posIdx++;\n    const pos = scanner.next();\n    if (pos == null) {\n      // Reached to the end of the doc. mismatch.\n      return null;\n    }\n    if (skipCharRe.test(textPosChar(pos))) {\n      continue;\n    }\n    buf.push({pos, idx: posIdx});\n    for (let i = 0; i < matchers.length; i++) {\n      matchers[i].update();\n    }\n    const lastMatcher = matchers[matchers.length - 1];\n    if (lastMatcher.matches.length == 0) {\n      // Continues to find a match for the last matcher.\n      continue;\n    }\n    if (matchers.length == sentences.length) {\n      // Found matches for all sentences.\n      break;\n    }\n    // Found a match for the last matcher. Starts to find the next sentence.\n    matchers.push(new Matcher(sentences[matchers.length], buf));\n  }\n  const matches = /** @type {!Array<!TextRangeWithIdxDef>} */ ([]);\n  // Looking back all matches to the smallest range from the last match.\n  outerLoop: for (let i = sentences.length - 1; i >= 0; i--) {\n    const mm = matchers[i].matches;\n    if (matches.length == 0) {\n      matches.push(mm[mm.length - 1]);\n      continue;\n    }\n    const prev = matches[matches.length - 1];\n    for (let j = mm.length - 1; j >= 0; j--) {\n      const match = mm[j];\n      if (prev.start.idx >= match.end.idx) {\n        matches.push(match);\n        continue outerLoop;\n      }\n    }\n    // This must not happen.\n    devAssert(false, 'missing valid match');\n  }\n  const ret = /** @type {!Array<!TextRangeDef>} */ ([]);\n  for (let i = matches.length - 1; i >= 0; i--) {\n    const match = matches[i];\n    ret.push({\n      start: match.start.pos,\n      end: match.end.pos,\n    });\n  }\n  return ret;\n}\n\n/**\n * @param {!Window} win\n * @param {!Array<!TextRangeDef>} ranges\n * @return {!Array<!Element>} A list of marked nodes.\n */\nexport function markTextRangeList(win, ranges) {\n  ranges = concatContinuousRanges(ranges);\n  const marked = [];\n  for (let i = 0; i < ranges.length; i++) {\n    const r = ranges[i];\n    markTextRange(win, r.start, r.end, ranges, i, marked);\n  }\n  return marked;\n}\n\n/**\n * @param {!Array<!TextRangeDef>} ranges\n * @return {!Array<!TextRangeDef>}\n */\nfunction concatContinuousRanges(ranges) {\n  const ret = [];\n  let prev = null;\n  for (let i = 0; i < ranges.length; i++) {\n    const r = ranges[i];\n    if (\n      prev &&\n      prev.end.node == r.start.node &&\n      prev.end.offset == r.start.offset\n    ) {\n      prev.end = r.end;\n      continue;\n    }\n    prev = r;\n    ret.push(r);\n    continue;\n  }\n  return ret;\n}\n\n/**\n * Fixes text ranges that point a text node removed when pos is marked.\n * @param {!TextPosDef} pos\n * @param {!Text} newText\n * @param {number} from\n * @param {!Array<TextRangeDef>} ranges\n */\nfunction fixTextRangesWithRemovedText(pos, newText, from, ranges) {\n  for (let i = from; i < ranges.length; i++) {\n    const r = ranges[i];\n    if (pos.node != r.start.node) {\n      return;\n    }\n    r.start.node = newText;\n    r.start.offset -= pos.offset;\n    if (pos.node != r.end.node) {\n      return;\n    }\n    r.end.node = newText;\n    r.end.offset -= pos.offset;\n  }\n}\n\n/**\n * @param {!Window} win\n * @param {!TextPosDef} start\n * @param {!TextPosDef} end\n * @param {!Array<TextRangeDef>} ranges Other ranges\n * @param {number} idx\n * @param {!Array<!Element>} marked\n */\nfunction markTextRange(win, start, end, ranges, idx, marked) {\n  while (true) {\n    if (start.node == end.node) {\n      const newText = markSingleTextNode(\n        win,\n        start.node,\n        start.offset,\n        end.offset,\n        marked\n      );\n      if (newText) {\n        fixTextRangesWithRemovedText(end, newText, idx + 1, ranges);\n      }\n      return;\n    }\n    const next = nextTextNode(win, start.node);\n    markSingleTextNode(\n      win,\n      start.node,\n      start.offset,\n      start.node.wholeText.length,\n      marked\n    );\n    if (!next) {\n      break;\n    }\n    start = {node: next, offset: 0};\n  }\n}\n\n/**\n * Wraps a text range [start, end) in a single text node.\n * Returns a text node for the suffix text if it exists.\n * @param {!Window} win\n * @param {!Text} node\n * @param {number} start\n * @param {number} end\n * @return {?Text}\n * @param {!Array<!Element>} marked\n */\nfunction markSingleTextNode(win, node, start, end, marked) {\n  if (start >= end) {\n    // Do nothing\n    return null;\n  }\n  const doc = win.document;\n  const {parentNode: parent, wholeText: text} = node;\n  if (start > 0) {\n    parent.insertBefore(doc.createTextNode(text.substring(0, start)), node);\n  }\n  const span = doc.createElement('span');\n  span.appendChild(doc.createTextNode(text.substring(start, end)));\n  parent.insertBefore(span, node);\n  marked.push(span);\n\n  let endText = null;\n  if (end < text.length) {\n    endText = doc.createTextNode(text.substring(end));\n    parent.insertBefore(endText, node);\n  }\n  parent.removeChild(node);\n  return endText;\n}\n\n/**\n * nextTextNode finds the next sibling text node or\n *   the next text node in the siblings of the parent.\n * @param {!Window} win\n * @param {!Text} textNode The node to start to find the next text node.\n * @return {?Text}\n */\nfunction nextTextNode(win, textNode) {\n  // If leaving is true, find the next node from siblings or the parent.\n  // If leaving is false, find the next node from childrens.\n  let leaving = true;\n  /** @type {Node} */\n  let node = textNode;\n  while (true) {\n    if (node == null) {\n      // No more parent.\n      return null;\n    }\n    if (leaving) {\n      const next = node.nextSibling;\n      if (next) {\n        node = next;\n        // visits childrens of node.\n        leaving = false;\n      } else {\n        // back to the parent.\n        node = node.parentNode;\n      }\n      continue;\n    }\n    if (node instanceof win.Text) {\n      return node;\n    }\n    if (!node.firstChild) {\n      leaving = true;\n    } else {\n      node = node.firstChild;\n    }\n  }\n}\n\n/**\n * TextScanner visits text nodes under a root node and\n *   returns charcter positions respectively.\n */\nexport class TextScanner {\n  /**\n   * @param {!Window} win\n   * @param {!Node} node The root node to visit.\n   */\n  constructor(win, node) {\n    /** @const */\n    this.win_ = win;\n    /** @const */\n    this.node_ = node;\n\n    this.textIdx_ = -1;\n    this.child_ = null;\n    if (node instanceof win.Text) {\n      this.textIdx_ = 0;\n    } else if (node instanceof win.Element) {\n      // Accessing display of computed styles does not force layout/reflow\n      // unless media queries that require relayout are used.\n      // https://jsfiddle.net/7c7rq2ot/\n      //\n      // Note this does not eliminate all hidden elements\n      // (e.g. visibility:hidden).\n      // TODO(yunabe): Support more hidden element patterns if necessary.\n      const {display} = computedStyle(win, node);\n      if (display == 'none') {\n        return;\n      }\n      const child = node.firstChild;\n      if (child != null) {\n        this.child_ = new TextScanner(win, child);\n      }\n    }\n  }\n\n  /**\n   * Returns the next TextPosDef.\n   * Returns null when the scanner reaches the end of the text.\n   * @return {?TextPosDef}\n   */\n  next() {\n    if (this.textIdx_ >= 0) {\n      return this.nextTextPos_();\n    }\n    while (this.child_ != null) {\n      const pos = this.child_.next();\n      if (pos != null) {\n        return pos;\n      }\n      const sibling = this.child_.node_.nextSibling;\n      this.child_ =\n        sibling != null ? new TextScanner(this.win_, sibling) : null;\n    }\n    return null;\n  }\n\n  /**\n   * @return {?TextPosDef}\n   */\n  nextTextPos_() {\n    const text = this.node_.wholeText;\n    if (this.textIdx_ < text.length) {\n      const idx = this.textIdx_;\n      this.textIdx_++;\n      return {node: /**@type {!Text}*/ (this.node_), offset: idx};\n    }\n    return null;\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from '../log';\nimport {getMode} from '../mode';\nimport {getTopWindow} from '../service';\nimport {hasOwn, map} from '../core/types/object';\nimport {isArray} from '../core/types';\nimport {parseQueryString} from '../core/types/string/url';\n\n// typedef imports\nimport {ExperimentInfoDef} from './experiments.type';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!win.AMP_CONFIG?.canary;\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG?.type || 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = opt_on ?? !currentlyOn;\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = map();\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  const allowedDocOptIn = win.AMP_CONFIG?.['allow-doc-opt-in'];\n  if (isArray(allowedDocOptIn) && allowedDocOptIn.length) {\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (const experiment of optedInExperiments) {\n        if (dev().assertArray(allowedDocOptIn).includes(experiment)) {\n          toggles[experiment] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  const allowedUrlOptIn = win.AMP_CONFIG?.['allow-url-opt-in'];\n  if (isArray(allowedUrlOptIn) && allowedUrlOptIn.length) {\n    const hash = win.location['originalHash'] || win.location.hash;\n    const params = parseQueryString(hash);\n    for (const experiment of allowedUrlOptIn) {\n      const param = params[`e-${experiment}`];\n      if (param == '1') {\n        toggles[experiment] = true;\n      }\n      if (param == '0') {\n        toggles[experiment] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {?Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString?.split(/\\s*,\\s*/g) || [];\n\n  const toggles = map();\n  for (const token of tokens) {\n    if (!token) {\n      continue;\n    }\n    if (token[0] == '-') {\n      toggles[token.substr(1)] = false;\n    } else {\n      toggles[token] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    win.localStorage?.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfoDef>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experiment of experiments) {\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible?.(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TODO(rcebulko): Migrate the actual ViewportInterface into core or an extern.\n * @typedef {{\n *   getHeight: function(this:ViewportInterfaceDef):number,\n *   getWidth: function(this:ViewportInterfaceDef):number,\n * }}\n */\nlet ViewportInterfaceDef;\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nexport let LayoutRectDef;\n\n/**\n * The structure that contains the size for an element. The exact\n * interpretation of the size depends on the use case.\n *\n * @typedef {{\n *   width: number,\n *   height: number,\n * }}\n */\nexport let LayoutSizeDef;\n\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nexport let LayoutMarginsDef;\n\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\nexport let LayoutMarginsChangeDef;\n\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\nexport const RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n};\n\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\nexport function layoutRectLtwh(left, top, width, height) {\n  return {\n    left,\n    top,\n    width,\n    height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top,\n  };\n}\n\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\nexport function layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(\n    Number(rect.left),\n    Number(rect.top),\n    Number(rect.width),\n    Number(rect.height)\n  );\n}\n\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef|!ClientRect} r1\n * @param {!LayoutRectDef|!ClientRect} r2\n * @return {boolean}\n */\nexport function rectsOverlap(r1, r2) {\n  return (\n    r1.top <= r2.bottom &&\n    r2.top <= r1.bottom &&\n    r1.left <= r2.right &&\n    r2.left <= r1.right\n  );\n}\n\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\nexport function rectIntersection(var_args) {\n  let x0 = -Infinity;\n  let x1 = Infinity;\n  let y0 = -Infinity;\n  let y1 = Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    const current = arguments[i];\n    if (!current) {\n      continue;\n    }\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n  if (x1 == Infinity) {\n    return null;\n  }\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {!RelativePositions}\n */\nexport function layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!ViewportInterfaceDef} viewport\n * @param {number} scrollPos\n * @return {!RelativePositions}\n */\nexport function layoutPositionRelativeToScrolledViewport(\n  layoutBox,\n  viewport,\n  scrollPos\n) {\n  const scrollLayoutBox = layoutRectFromDomRect(\n    /** @type {!ClientRect} */ ({\n      top: scrollPos,\n      bottom: scrollPos + viewport.getHeight(),\n      left: 0,\n      right: viewport.getWidth(),\n    })\n  );\n  if (rectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\nexport function expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(\n    rect.left - rect.width * dw,\n    rect.top - rect.height * dh,\n    rect.width * (1 + dw * 2),\n    rect.height * (1 + dh * 2)\n  );\n}\n\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\nexport function moveLayoutRect(rect, dx, dy) {\n  if ((dx == 0 && dy == 0) || (rect.width == 0 && rect.height == 0)) {\n    return rect;\n  }\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\nexport function areMarginsChanged(margins, change) {\n  return (\n    (change.top !== undefined && change.top != margins.top) ||\n    (change.right !== undefined && change.right != margins.right) ||\n    (change.bottom !== undefined && change.bottom != margins.bottom) ||\n    (change.left !== undefined && change.left != margins.left)\n  );\n}\n\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\nexport function layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n  return (\n    r1.left == r2.left &&\n    r1.top == r2.top &&\n    r1.width == r2.width &&\n    r1.height == r2.height\n  );\n}\n\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\nexport function cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right,\n  };\n}\n\n/**\n * @param {!LayoutRectDef|!ClientRect|!DOMRect} rect\n * @return {!LayoutSizeDef}\n */\nexport function layoutSizeFromRect(rect) {\n  const {height, width} = rect;\n  return {width, height};\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isArray} from '../array';\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {string|number|boolean|null}\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {!Object<string, ?*>} (* should be JSONValueDef)\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {!Array<?*>} (* should be JSONValueDef)\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {!JSONScalarDef|!JSONObjectDef|!JSONArrayDef}\n */\nlet JSONValueDef;\n\n/**\n * @typedef {{\n *   YOU_MUST_USE: string,\n *   jsonLiteral: function(),\n *   TO_MAKE_THIS_TYPE: string,\n * }}\n */\nlet InternalJsonLiteralTypeDef;\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {string} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(json));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {string} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    opt_onFailed?.(e);\n    return null;\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (const k of keysA) {\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {?JSONValueDef} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether the document is ready.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isDocumentReady(doc) {\n  return doc.readyState != 'loading' && doc.readyState != 'uninitialized';\n}\n\n/**\n * Whether the document has loaded all the css and sub-resources.\n * @param {!Document} doc\n * @return {boolean}\n */\nfunction isDocumentComplete(doc) {\n  return doc.readyState == 'complete';\n}\n\n/**\n * Calls the callback when document is ready.\n * @param {!Document} doc\n * @param {function(!Document)} callback\n */\nexport function onDocumentReady(doc, callback) {\n  onDocumentState(doc, isDocumentReady, callback);\n}\n\n/**\n * Calls the callback when document's state satisfies the stateFn.\n * @param {!Document} doc\n * @param {function(!Document):boolean} stateFn\n * @param {function(!Document)} callback\n */\nfunction onDocumentState(doc, stateFn, callback) {\n  let ready = stateFn(doc);\n  if (ready) {\n    callback(doc);\n  } else {\n    const readyListener = () => {\n      if (stateFn(doc)) {\n        if (!ready) {\n          ready = true;\n          callback(doc);\n        }\n        doc.removeEventListener('readystatechange', readyListener);\n      }\n    };\n    doc.addEventListener('readystatechange', readyListener);\n  }\n}\n\n/**\n * Returns a promise that is resolved when document is ready.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\nexport function whenDocumentReady(doc) {\n  return new Promise((resolve) => {\n    onDocumentReady(doc, resolve);\n  });\n}\n\n/**\n * Returns a promise that is resolved when document is complete.\n * @param {!Document} doc\n * @return {!Promise<!Document>}\n */\nexport function whenDocumentComplete(doc) {\n  return new Promise((resolve) => {\n    onDocumentState(doc, isDocumentComplete, resolve);\n  });\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from '../../../src/services';\nimport {dict} from '../../../src/core/types/object';\nimport {findSentences, markTextRangeList} from './findtext';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {listenOnce} from '../../../src/event-helper';\nimport {moveLayoutRect} from '../../../src/core/math/layout-rect';\nimport {once} from '../../../src/core/types/function';\nimport {parseJson} from '../../../src/core/types/object/json';\nimport {parseQueryString} from '../../../src/core/types/string/url';\nimport {resetStyles, setInitialDisplay, setStyles} from '../../../src/style';\nimport {whenDocumentReady} from '../../../src/core/document-ready';\n\n/**\n * The message name sent by viewers to dismiss highlights.\n * @type {string}\n */\nconst HIGHLIGHT_DISMISS = 'highlightDismiss';\n\n/**\n * The message name sent by AMP doc to notify the change of the state of text\n * highlighting.\n * @type {string}\n */\nconst HIGHLIGHT_STATE = 'highlightState';\n\n/**\n *\n * @type {string}\n */\nconst PARAM_OLD_TOP_DISCREPANCY = 'od';\n\n/**\n * @type {string}\n */\nconst PARAM_NEW_TOP_DISCREPANCY = 'nd';\n\n/**\n * The length limit of highlight param to avoid parsing\n * a incredibley large string as JSON. The limit is 100kB.\n * @type {number}\n */\nconst HIGHLIGHT_PARAM_LENGTH_LIMIT = 100 << 10;\n\n/**\n * The limit of # of sentences to highlight.\n * @type {number}\n */\nconst NUM_SENTENCES_LIMIT = 15;\n\n/**\n * The length limit of one sentence to highlight.\n * @type {number}\n */\nconst NUM_ALL_CHARS_LIMIT = 1500;\n\n/** @typedef {{sentences: !Array<string>, skipScrollAnimation: boolean, skipRendering: boolean}} */\nexport let HighlightInfoDef;\n\n/**\n * The height of scrolling-down animation to highlighted texts.\n * @type {number}\n */\nconst SCROLL_ANIMATION_HEIGHT = 500;\n\n/**\n * The height of the margin placed before highlighted texts.\n * This margin is necessary to avoid the overlap with the common floating\n * header UI.\n * TODO(yunabe): Calculate this dynamically using elements in FixedLayer.\n * @type {number}\n */\nconst PAGE_TOP_MARGIN = 80;\n\n/**\n * Text fragment prefix to add to the URL\n * @type {string}\n */\nconst TEXT_FRAGMENT_PREFIX = ':~:';\n\n/**\n * Returns highlight param in the URL hash.\n * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n * @return {?HighlightInfoDef}\n */\nexport function getHighlightParam(ampdoc) {\n  const param = parseQueryString(ampdoc.win.location.hash)['highlight'];\n  if (!param || param.length > HIGHLIGHT_PARAM_LENGTH_LIMIT) {\n    return null;\n  }\n  const highlight = parseJson(param);\n  const sens = highlight['s'];\n  if (!(sens instanceof Array) || sens.length > NUM_SENTENCES_LIMIT) {\n    // Too many sentences, do nothing for safety.\n    return null;\n  }\n  let sum = 0;\n  for (let i = 0; i < sens.length; i++) {\n    const sen = sens[i];\n    if (typeof sen != 'string' || !sen) {\n      // Invalid element in sens.\n      return null;\n    }\n    sum += sen.length;\n    if (sum > NUM_ALL_CHARS_LIMIT) {\n      // Too many chars, do nothing for safety.\n      return null;\n    }\n  }\n  let skipRendering = false;\n  if (highlight['n']) {\n    skipRendering = true;\n  }\n  let skipScrollAnimation = false;\n  if (highlight['na']) {\n    skipScrollAnimation = true;\n  }\n  return {\n    sentences: sens,\n    skipScrollAnimation,\n    skipRendering,\n  };\n}\n\n/**\n * HighlightHandler reads highlight parameter from URL and\n * highlights specified text in AMP documents.\n */\nexport class HighlightHandler {\n  /**\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {!HighlightInfoDef} highlightInfo The highlighting info in JSON.\n   */\n  constructor(ampdoc, highlightInfo) {\n    /** @private @const {!../../../src/service/ampdoc-impl.AmpDoc} */\n    this.ampdoc_ = ampdoc;\n    /** @private @const {!../../../src/service/viewer-interface.ViewerInterface} */\n    this.viewer_ = Services.viewerForDoc(ampdoc);\n    /** @private @const {!../../../src/service/viewport/viewport-interface.ViewportInterface} */\n    this.viewport_ = Services.viewportForDoc(this.ampdoc_);\n\n    /** @private {?Array<!Element>} */\n    this.highlightedNodes_ = null;\n\n    if (\n      'fragmentDirective' in document &&\n      isExperimentOn(ampdoc.win, 'use-text-fragments-for-highlights')\n    ) {\n      ampdoc\n        .whenFirstVisible()\n        .then(() => this.highlightUsingTextFragments_(highlightInfo));\n    } else {\n      whenDocumentReady(ampdoc.win.document).then(() => {\n        this.initHighlight_(highlightInfo);\n      });\n    }\n  }\n\n  /**\n   * @param {!HighlightInfoDef} highlightInfo\n   * @private\n   */\n  highlightUsingTextFragments_(highlightInfo) {\n    const {sentences} = highlightInfo;\n    if (!sentences?.length) {\n      return;\n    }\n    const fragment = sentences\n      .map((text) => 'text=' + encodeURIComponent(text))\n      .join('&');\n    this.updateUrlWithTextFragment_(fragment);\n  }\n\n  /**\n   * @param {string} fragment\n   * @private\n   */\n  updateUrlWithTextFragment_(fragment) {\n    const {hash} = this.ampdoc_.win.location;\n    if (hash) {\n      this.ampdoc_.win.location.replace(hash + TEXT_FRAGMENT_PREFIX + fragment);\n    } else {\n      this.ampdoc_.win.location.replace('#' + TEXT_FRAGMENT_PREFIX + fragment);\n    }\n  }\n\n  /**\n   * @param {string} state\n   * @param {JsonObject=} opt_params\n   * @private\n   */\n  sendHighlightState_(state, opt_params) {\n    const params = dict({'state': state});\n    for (const key in opt_params) {\n      params[key] = opt_params[key];\n    }\n    this.viewer_.sendMessage(HIGHLIGHT_STATE, params);\n  }\n\n  /**\n   * @param {!HighlightInfoDef} highlightInfo\n   * @private\n   */\n  findHighlightedNodes_(highlightInfo) {\n    const {win} = this.ampdoc_;\n    const sens = findSentences(\n      win,\n      this.ampdoc_.getBody(),\n      highlightInfo.sentences\n    );\n    if (!sens) {\n      return;\n    }\n    const nodes = markTextRangeList(win, sens);\n    if (!nodes || nodes.length == 0) {\n      return;\n    }\n    this.highlightedNodes_ = nodes;\n  }\n\n  /**\n   * Registers a callback invoked once when the doc becomes visible.\n   * @param {function()} handler\n   */\n  onVisibleOnce(handler) {\n    // TODO(yunabe): Unregister the handler.\n    handler = once(handler);\n    this.ampdoc_.onVisibilityChanged(() => {\n      if (this.ampdoc_.getVisibilityState() != 'visible') {\n        return;\n      }\n      handler();\n    });\n  }\n\n  /**\n   * @param {!HighlightInfoDef} highlightInfo\n   * @private\n   */\n  initHighlight_(highlightInfo) {\n    if (this.ampdoc_.win.document.querySelector('script[id=\"amp-access\"]')) {\n      // Disable highlighting if <amp-access> is used because highlighting\n      // interacts badily with UI reflows by <amp-access>.\n      // TODO(yunabe): Remove this once <amp-access> provides an API to delay\n      // code execution after DOM manipulation by <amp-access>.\n      this.sendHighlightState_('has_amp_access');\n      return;\n    }\n    this.findHighlightedNodes_(highlightInfo);\n    if (!this.highlightedNodes_) {\n      this.sendHighlightState_('not_found');\n      return;\n    }\n    const scrollTop = this.calcTopToCenterHighlightedNodes_();\n    this.sendHighlightState_('found', dict({'scroll': scrollTop}));\n    if (highlightInfo.skipRendering) {\n      return;\n    }\n\n    for (let i = 0; i < this.highlightedNodes_.length; i++) {\n      const n = this.highlightedNodes_[i];\n      // The background color is same as Android Chrome text finding (yellow).\n      setStyles(n, {\n        backgroundColor: '#fcff00',\n        color: '#000',\n      });\n    }\n\n    const visibility = this.ampdoc_.getVisibilityState();\n    if (!highlightInfo.skipScrollAnimation) {\n      if (visibility == 'visible') {\n        this.animateScrollToTop_(scrollTop);\n      } else {\n        // Scroll to the animation start position before the page becomes visible\n        // so that the top of the page is not painted when it becomes visible.\n        this.scrollToAnimationStart_(scrollTop);\n        this.onVisibleOnce(() => {\n          this.animateScrollToTop_(this.calcTopToCenterHighlightedNodes_());\n        });\n      }\n    } else {\n      if (visibility == 'visible') {\n        this.scrollToTopWitoutAnimation_(scrollTop);\n      } else {\n        this.viewport_.setScrollTop(scrollTop);\n        this.onVisibleOnce(() => {\n          this.scrollToTopWitoutAnimation_(\n            this.calcTopToCenterHighlightedNodes_()\n          );\n        });\n      }\n    }\n    listenOnce(\n      this.ampdoc_.getBody(),\n      'click',\n      this.dismissHighlight_.bind(this)\n    );\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  calcTopToCenterHighlightedNodes_() {\n    const nodes = this.highlightedNodes_;\n    if (!nodes) {\n      return 0;\n    }\n    const viewport = this.viewport_;\n    let minTop = Number.MAX_VALUE;\n    let maxBottom = 0;\n    const paddingTop = viewport.getPaddingTop();\n    for (let i = 0; i < nodes.length; i++) {\n      // top and bottom returned by getLayoutRect includes the header padding\n      // size. We need to cancel the padding to calculate the positions in\n      // document.body like Viewport.animateScrollIntoView does.\n      const {bottom, top} = moveLayoutRect(\n        viewport.getLayoutRect(nodes[i]),\n        0,\n        -paddingTop\n      );\n      minTop = Math.min(minTop, top);\n      maxBottom = Math.max(maxBottom, bottom);\n    }\n    if (minTop >= maxBottom) {\n      return 0;\n    }\n    const height = viewport.getHeight() - paddingTop;\n    let pos = (maxBottom + minTop - height) / 2;\n    if (pos > minTop - PAGE_TOP_MARGIN) {\n      pos = minTop - PAGE_TOP_MARGIN;\n    }\n    return pos > 0 ? pos : 0;\n  }\n\n  /**\n   * Equivalent to animateScrollToTop_ without scroll animation.\n   * @param {number} top\n   * @private\n   */\n  scrollToTopWitoutAnimation_(top) {\n    this.sendHighlightState_('auto_scroll');\n    this.viewport_.setScrollTop(top);\n    this.sendHighlightState_('shown');\n  }\n\n  /**\n   * @param {number} top\n   * @private\n   */\n  scrollToAnimationStart_(top) {\n    const start = Math.max(0, top - SCROLL_ANIMATION_HEIGHT);\n    this.viewport_.setScrollTop(start);\n  }\n\n  /**\n   * Adjust scroll-top if the right scroll position is changed or\n   * the final scroll position is wrong after animation.\n   * This is necessary to center highlighted texts properly in pages reported\n   * in #18917\n   * @param {number} oldTop\n   * @return {?JsonObject}\n   */\n  mayAdjustTop_(oldTop) {\n    // Double-check the highlighted nodes are centered after animation.\n    const newTop = this.calcTopToCenterHighlightedNodes_();\n    const current = this.viewport_.getScrollTop();\n    if (current == newTop && current == oldTop) {\n      return null;\n    }\n    const shownParam = dict();\n    if (current != newTop) {\n      this.viewport_.setScrollTop(newTop);\n      shownParam[PARAM_NEW_TOP_DISCREPANCY] = current - newTop;\n    }\n    if (current != oldTop) {\n      shownParam[PARAM_OLD_TOP_DISCREPANCY] = current - oldTop;\n    }\n    return shownParam;\n  }\n\n  /**\n   * @param {number} top\n   * @private\n   */\n  animateScrollToTop_(top) {\n    // First, move to the start position of scroll animation.\n    this.scrollToAnimationStart_(top);\n\n    const sentinel = this.ampdoc_.win.document.createElement('div');\n    // Notes:\n    // The CSS of sentinel can be overwritten by user custom CSS.\n    // We need to set display:block and other CSS fields explicitly here\n    // so that these CSS won't be overwritten.\n    // We use top and height here because they precede bottom\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/bottom\n    //\n    // TODO(yunabe): Revisit the safer way to implement scroll-animation.\n    setInitialDisplay(sentinel, 'block');\n    setStyles(sentinel, {\n      'position': 'absolute',\n      'top': Math.floor(top) + 'px',\n      'height': '1px',\n      'left': '0',\n      'width': '1px',\n      'pointer-events': 'none',\n    });\n    const body = this.ampdoc_.getBody();\n    body.appendChild(sentinel);\n    this.sendHighlightState_('auto_scroll');\n    this.viewport_.animateScrollIntoView(sentinel).then(() => {\n      body.removeChild(sentinel);\n      this.sendHighlightState_('shown', this.mayAdjustTop_(top));\n    });\n  }\n\n  /**\n   * @param {!./messaging/messaging.Messaging} messaging\n   */\n  setupMessaging(messaging) {\n    messaging.registerHandler(\n      HIGHLIGHT_DISMISS,\n      this.dismissHighlight_.bind(this)\n    );\n  }\n\n  /**\n   * @private\n   */\n  dismissHighlight_() {\n    if (!this.highlightedNodes_) {\n      return;\n    }\n    for (let i = 0; i < this.highlightedNodes_.length; i++) {\n      resetStyles(this.highlightedNodes_[i], ['backgroundColor', 'color']);\n    }\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @enum {number}\n */\nexport const KeyCodes = {\n  ENTER: 13,\n  ESCAPE: 27,\n  SPACE: 32,\n  LEFT_ARROW: 37,\n  UP_ARROW: 38,\n  RIGHT_ARROW: 39,\n  DOWN_ARROW: 40,\n};\n\n/**\n * @enum {string}\n */\nexport const Keys = {\n  ENTER: 'Enter',\n  ESCAPE: 'Escape',\n  SPACE: ' ',\n  LEFT_ARROW: 'ArrowLeft',\n  UP_ARROW: 'ArrowUp',\n  RIGHT_ARROW: 'ArrowRight',\n  DOWN_ARROW: 'ArrowDown',\n  TAB: 'Tab',\n  BACKSPACE: 'Backspace',\n  HOME: 'Home',\n  END: 'End',\n};\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Keys} from '../../../src/core/constants/key-codes';\nimport {dict} from '../../../src/core/types/object';\nimport {listen} from '../../../src/event-helper';\n\n/**\n * The list of keyboard event properites to forward to the viewer. This should\n * be kept up-to-date with\n * https://www.w3.org/TR/uievents/#keyboardevent-keyboardevent.\n *\n * @type {!Array<string>}\n */\nconst eventProperties = [\n  'key',\n  'code',\n  'location',\n\n  'ctrlKey',\n  'shiftKey',\n  'altKey',\n  'metaKey',\n\n  'repeat',\n  'isComposing',\n\n  // Properties for legacy user agents.\n  'charCode',\n  'keyCode',\n  'which',\n];\n\n/**\n * Forwards keyboard events from the AMP doc to the viewer in the format of a\n * `KeyboardEventInit` object (http://mdn.io/KeyboardEvent/KeyboardEvent).\n * `JsonObject`.\n *\n * Keyboard events that are forwarded must meet the *one* of the following\n * conditions:\n *\n * - The key is the escape key\n * - The focus is on a checkbox and the key is not the space key\n * - The focus is not on any input control, including elements with the\n *   `contenteditable` attribute\n *\n * @package @final\n */\nexport class KeyboardHandler {\n  /**\n   * @param {!Window} win\n   * @param {!./messaging/messaging.Messaging} messaging\n   */\n  constructor(win, messaging) {\n    /** @const {!Window} */\n    this.win = win;\n\n    /** @const @private {!./messaging/messaging.Messaging} */\n    this.messaging_ = messaging;\n\n    this.listenForKeyboardEvents_();\n  }\n\n  /** @private */\n  listenForKeyboardEvents_() {\n    const handleEvent = this.handleEvent_.bind(this);\n    listen(this.win, 'keydown', handleEvent);\n    listen(this.win, 'keypress', handleEvent);\n    listen(this.win, 'keyup', handleEvent);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  handleEvent_(e) {\n    if (isHandledByEventTarget(e)) {\n      return;\n    }\n    this.forwardEventToViewer_(e);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  forwardEventToViewer_(e) {\n    this.messaging_.sendRequest(\n      e.type,\n      getKeyboardEventInit(e),\n      /* awaitResponse */ false\n    );\n  }\n}\n\n/**\n * Checks whether the given keyboard event is expected to be handled by its\n * event target.\n *\n * @param {!Event} e\n * @return {boolean}\n */\nfunction isHandledByEventTarget(e) {\n  if (e.defaultPrevented) {\n    // Various AMP components consume keyboard events by preventing the default.\n    return true;\n  }\n  if (e.key == Keys.ESCAPE) {\n    // ESC is always a valid key for things like keyboard shortcuts, even if the\n    // focus is on an input control, for example.\n    return false;\n  }\n  switch (e.target.nodeName) {\n    case 'INPUT':\n      // For checkboxes, only allow swallowing the space key event.\n      return e.target.type != 'checkbox' || e.key == Keys.SPACE;\n    case 'TEXTAREA':\n    case 'BUTTON':\n    case 'SELECT':\n    case 'OPTION':\n      return true;\n  }\n\n  // Top-level event targets like `window` and `document` are not instance\n  // of `Element` and do not have a `hasAttribute` function.\n  return e.target.hasAttribute && e.target.hasAttribute('contenteditable');\n}\n\n/**\n * @param {!Event} e\n * @return {!JsonObject}\n */\nfunction getKeyboardEventInit(e) {\n  const copiedEvent = dict();\n  eventProperties.forEach((eventProperty) => {\n    if (e[eventProperty] !== undefined) {\n      copiedEvent[eventProperty] = e[eventProperty];\n    }\n  });\n  return copiedEvent;\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst TAG = 'amp-viewer-messaging';\nconst CHANNEL_OPEN_MSG = 'channelOpen';\nconst HANDSHAKE_POLL_MSG = 'handshake-poll';\nconst APP = '__AMPHTML__';\n\n/**\n * @enum {string}\n */\nconst MessageType = {\n  REQUEST: 'q',\n  RESPONSE: 's',\n};\n\n/**\n * @typedef {function(string, *, boolean):(!Promise<*>|undefined)}\n */\nlet RequestHandler; // eslint-disable-line no-unused-vars\n\n/**\n * @param {*} message\n * @return {?AmpViewerMessage}\n */\nexport function parseMessage(message) {\n  if (typeof message != 'string') {\n    return /** @type {AmpViewerMessage} */ (message);\n  }\n  if (message.charAt(0) != '{') {\n    return null;\n  }\n\n  try {\n    return /** @type {?AmpViewerMessage} */ (\n      JSON.parse(/** @type {string} */ (message))\n    );\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * @fileoverview This class is a de-facto implementation of MessagePort\n * from Channel Messaging API:\n * https://developer.mozilla.org/en-US/docs/Web/API/Channel_Messaging_API\n */\nexport class WindowPortEmulator {\n  /**\n   * @param {!Window} win\n   * @param {string} origin\n   * @param {!Window} target\n   */\n  constructor(win, origin, target) {\n    /** @const @private {!Window} */\n    this.win_ = win;\n    /** @const @private {string} */\n    this.origin_ = origin;\n    /** @const @private {!Window} */\n    this.target_ = target;\n  }\n\n  /**\n   * @param {string} eventType\n   * @param {function(!Event):*} handler\n   */\n  addEventListener(eventType, handler) {\n    this.win_.addEventListener('message', (event) => {\n      if (event.origin == this.origin_ && event.source == this.target_) {\n        handler(event);\n      }\n    });\n  }\n\n  /**\n   * @param {JsonObject} data\n   */\n  postMessage(data) {\n    // Opaque (null) origin can only receive messages sent to \"*\"\n    const targetOrigin = this.origin_ === 'null' ? '*' : this.origin_;\n\n    this.target_./*OK*/ postMessage(data, targetOrigin);\n  }\n\n  /**\n   * Starts the sending of messages queued on the port.\n   */\n  start() {}\n}\n\n/**\n * @fileoverview This is used in amp-viewer-integration.js for the\n * communication protocol between AMP and the viewer. In the comments, I will\n * refer to the communication as a conversation between me and Bob. The\n * messaging protocol should support both sides, but at this point I'm the\n * ampdoc and Bob is the viewer.\n */\nexport class Messaging {\n  /**\n   * Performs a handshake and initializes messaging.\n   *\n   * Requires the `handshakepoll` viewer capability and the `origin` viewer parameter to be specified.\n   * @param {!Window} target - window containing AMP document to perform handshake with\n   * @param {?string=} opt_token - message token to verify on incoming messages (must be provided as viewer parameter)\n   * @return {!Promise<!Messaging>}\n   */\n  static initiateHandshakeWithDocument(target, opt_token) {\n    return new Promise((resolve) => {\n      const intervalRef = setInterval(() => {\n        const channel = new MessageChannel();\n        const pollMessage = /** @type {JsonObject} */ ({\n          app: APP,\n          name: HANDSHAKE_POLL_MSG,\n        });\n        target./*OK*/ postMessage(pollMessage, '*', [channel.port2]);\n\n        const port = channel.port1;\n        const listener = (event) => {\n          const message = parseMessage(event.data);\n          if (!message) {\n            return;\n          }\n          if (message.app === APP && message.name === CHANNEL_OPEN_MSG) {\n            clearInterval(intervalRef);\n            port.removeEventListener('message', listener);\n            const messaging = new Messaging(\n              null,\n              port,\n              /* opt_isWebview */ false,\n              opt_token,\n              /* opt_verifyToken */ true\n            );\n            messaging.sendResponse_(message.requestid, CHANNEL_OPEN_MSG, null);\n            resolve(messaging);\n          }\n        };\n        port.addEventListener('message', listener);\n        port.start();\n      }, 1000);\n    });\n  }\n\n  /**\n   * Waits for handshake from iframe and initializes messaging.\n   *\n   * Requires the `origin` viewer parameter to be specified.\n   * @param {!Window} source - the source window containing the viewer\n   * @param {!Window} target - window containing AMP document to perform handshake with (usually contentWindow of iframe)\n   * @param {string} origin - origin of target window (use \"null\" if opaque)\n   * @param {?string=} opt_token - message token to verify on incoming messages (must be provided as viewer parameter)\n   * @param {?RegExp=} opt_cdnProxyRegex\n   * @return {!Promise<!Messaging>}\n   */\n  static waitForHandshakeFromDocument(\n    source,\n    target,\n    origin,\n    opt_token,\n    opt_cdnProxyRegex\n  ) {\n    return new Promise((resolve) => {\n      const listener = (event) => {\n        const message = parseMessage(event.data);\n        if (!message) {\n          return;\n        }\n        if (\n          (event.origin == origin ||\n            (opt_cdnProxyRegex && opt_cdnProxyRegex.test(event.origin))) &&\n          (!event.source || event.source == target) &&\n          message.app === APP &&\n          message.name === CHANNEL_OPEN_MSG\n        ) {\n          source.removeEventListener('message', listener);\n          const port = new WindowPortEmulator(source, event.origin, target);\n          const messaging = new Messaging(\n            null,\n            port,\n            /* opt_isWebview */ false,\n            opt_token,\n            /* opt_verifyToken */ true\n          );\n          messaging.sendResponse_(message.requestid, CHANNEL_OPEN_MSG, null);\n          resolve(messaging);\n        }\n      };\n      source.addEventListener('message', listener);\n    });\n  }\n\n  /**\n   * Conversation (messaging protocol) between me and Bob.\n   * @param {?Window} win\n   * @param {!MessagePort|!WindowPortEmulator} port\n   * @param {boolean=} opt_isWebview\n   * @param {?string=} opt_token\n   * @param {boolean=} opt_verifyToken\n   */\n  constructor(win, port, opt_isWebview, opt_token, opt_verifyToken) {\n    /** @const @private {?Window} */\n    this.win_ = win;\n    /** @const @private {!MessagePort|!WindowPortEmulator} */\n    this.port_ = port;\n    /** @const @private {boolean} */\n    this.isWebview_ = !!opt_isWebview;\n\n    /**\n     * A token that the viewer may include as an init parameter to enhance\n     * security for communication to opaque origin (a.k.a. null origin) AMP\n     * documents.\n     *\n     * For an AMP document embedded inside a sandbox iframe, the origin of the\n     * document would be \"null\", which defeats the purpose of an origin check.\n     * An attacker could simply create a sandboxed, malicious iframe (therefore\n     * having null origin), walk on the DOM frame tree to find a reference to\n     * the viewer iframe (this is not constrained by the same origin policy),\n     * and then send postMessage() calls to the viewer frame and pass the\n     * viewer's origin checks, if any.\n     *\n     * The viewer could also check the source of the message to be a legitimate\n     * AMP iframe window, but the attacker could bypass that by navigating the\n     * legitimate AMP iframe window away to a malicious document. Recent\n     * browsers have banned this kind of attack, but it's tricky to rely on it.\n     *\n     * To prevent the above attack in a null origin AMP document, the viewer\n     * should include this token in an init parameter, either in the `src` or\n     * `name` attribute of the iframe, and then verify that this token is\n     * included in all the messages sent from AMP to the viewer. The attacker\n     * would not be able to steal this token under the same origin policy,\n     * because the token is inside the viewer document at a different origin\n     * and the attacker can't access it.\n     * @const @private {?string}\n     */\n    this.token_ = opt_token || null;\n\n    /**\n     * If true, the token above is verified on incoming messages instead of\n     * being attached to outgoing messages.\n     * @const @private {boolean}\n     */\n    this.verifyToken_ = !!opt_verifyToken;\n\n    /** @private {number} */\n    this.requestIdCounter_ = 0;\n    /** @private {!Object<number, {resolve: function(*), reject: function(!Error)}>} */\n    this.waitingForResponse_ = {};\n    /**\n     * A map from message names to request handlers.\n     * @private {!Object<string, !RequestHandler>}\n     */\n    this.messageHandlers_ = {};\n\n    /** @private {?RequestHandler} */\n    this.defaultHandler_ = null;\n\n    this.port_.addEventListener('message', this.handleMessage_.bind(this));\n    this.port_.start();\n  }\n\n  /**\n   * Registers a method that will handle requests sent to the specified\n   * message name.\n   * @param {string} messageName The name of the message to handle.\n   * @param {!RequestHandler} requestHandler\n   */\n  registerHandler(messageName, requestHandler) {\n    this.messageHandlers_[messageName] = requestHandler;\n  }\n\n  /**\n   * Unregisters the handler for the specified message name.\n   * @param {string} messageName The name of the message to unregister.\n   */\n  unregisterHandler(messageName) {\n    delete this.messageHandlers_[messageName];\n  }\n\n  /**\n   * @param {?RequestHandler} requestHandler\n   */\n  setDefaultHandler(requestHandler) {\n    this.defaultHandler_ = requestHandler;\n  }\n\n  /**\n   * Bob sent me a message. I need to decide if it's a new request or\n   * a response to a previous 'conversation' we were having.\n   * @param {!Event} event\n   * @private\n   */\n  handleMessage_(event) {\n    const message = parseMessage(event.data);\n    if (!message || message.app !== APP) {\n      return;\n    }\n    if (\n      this.token_ &&\n      this.verifyToken_ &&\n      message.messagingToken !== this.token_\n    ) {\n      // We received a message with an invalid token - dismiss it.\n      this.logError_(TAG + ': handleMessage_ error: ', 'invalid token');\n      return;\n    }\n    if (message.type === MessageType.REQUEST) {\n      this.handleRequest_(message);\n    } else if (message.type === MessageType.RESPONSE) {\n      this.handleResponse_(message);\n    }\n  }\n\n  /**\n   * I'm sending Bob a new outgoing request.\n   * @param {string} messageName\n   * @param {?JsonObject|string|undefined} messageData\n   * @param {boolean} awaitResponse\n   * @return {!Promise<*>|undefined}\n   */\n  sendRequest(messageName, messageData, awaitResponse) {\n    const requestId = ++this.requestIdCounter_;\n    let promise = undefined;\n    if (awaitResponse) {\n      promise = new Promise((resolve, reject) => {\n        this.waitingForResponse_[requestId] = {resolve, reject};\n      });\n    }\n    this.sendMessage_(\n      /** @type {!AmpViewerMessage} */ ({\n        app: APP,\n        requestid: requestId,\n        type: MessageType.REQUEST,\n        name: messageName,\n        data: messageData,\n        rsvp: awaitResponse,\n      })\n    );\n    return promise;\n  }\n\n  /**\n   * I'm responding to a request that Bob made earlier.\n   * @param {number} requestId\n   * @param {string} messageName\n   * @param {*} messageData\n   * @private\n   */\n  sendResponse_(requestId, messageName, messageData) {\n    this.sendMessage_(\n      /** @type {!AmpViewerMessage} */ ({\n        app: APP,\n        requestid: requestId,\n        type: MessageType.RESPONSE,\n        name: messageName,\n        data: messageData,\n      })\n    );\n  }\n\n  /**\n   * @param {number} requestId\n   * @param {string} messageName\n   * @param {*} reason !Error most of time, string sometimes, * rarely.\n   * @private\n   */\n  sendResponseError_(requestId, messageName, reason) {\n    const errString = this.errorToString_(reason);\n    this.logError_(\n      TAG + ': sendResponseError_, message name: ' + messageName,\n      errString\n    );\n    this.sendMessage_(\n      /** @type {!AmpViewerMessage} */ ({\n        app: APP,\n        requestid: requestId,\n        type: MessageType.RESPONSE,\n        name: messageName,\n        data: null,\n        error: errString,\n      })\n    );\n  }\n\n  /**\n   * @param {!AmpViewerMessage} message\n   * @private\n   */\n  sendMessage_(message) {\n    const /** Object<string, *> */ finalMessage = Object.assign(message, {});\n    if (this.token_ && !this.verifyToken_) {\n      finalMessage.messagingToken = this.token_;\n    }\n    this.port_./*OK*/ postMessage(\n      this.isWebview_\n        ? JSON.stringify(/** @type {!JsonObject} */ (finalMessage))\n        : finalMessage\n    );\n  }\n\n  /**\n   * I'm handling an incoming request from Bob. I'll either respond normally\n   * (ex: \"got it Bob!\") or with an error (ex: \"I didn't get a word of what\n   * you said!\").\n   * @param {!AmpViewerMessage} message\n   * @private\n   */\n  handleRequest_(message) {\n    let handler = this.messageHandlers_[message.name];\n    if (!handler) {\n      handler = this.defaultHandler_;\n    }\n    if (!handler) {\n      const error = new Error(\n        'Cannot handle request because no default handler is set!'\n      );\n      error.args = message.name;\n      throw error;\n    }\n\n    const promise = handler(message.name, message.data, !!message.rsvp);\n    if (message.rsvp) {\n      const requestId = message.requestid;\n      if (!promise) {\n        this.sendResponseError_(\n          requestId,\n          message.name,\n          new Error('no response')\n        );\n        throw new Error('expected response but none given: ' + message.name);\n      }\n      promise.then(\n        (data) => {\n          this.sendResponse_(requestId, message.name, data);\n        },\n        (reason) => {\n          this.sendResponseError_(requestId, message.name, reason);\n        }\n      );\n    }\n  }\n\n  /**\n   * I sent out a request to Bob. He responded. And now I'm handling that\n   * response.\n   * @param {!AmpViewerMessage} message\n   * @private\n   */\n  handleResponse_(message) {\n    const requestId = message.requestid;\n    const pending = this.waitingForResponse_[requestId];\n    if (pending) {\n      delete this.waitingForResponse_[requestId];\n      if (message.error) {\n        this.logError_(TAG + ': handleResponse_ error: ', message.error);\n        pending.reject(\n          new Error(`Request ${message.name} failed: ${message.error}`)\n        );\n      } else {\n        pending.resolve(message.data);\n      }\n    }\n  }\n\n  /**\n   * @param {string} state\n   * @param {!Error|string=} opt_data\n   * @private\n   */\n  logError_(state, opt_data) {\n    if (!this.win_) {\n      return;\n    }\n    let stateStr = 'amp-messaging-error-logger: ' + state;\n    const dataStr = ' data: ' + this.errorToString_(opt_data);\n    stateStr += dataStr;\n    this.win_['viewerState'] = stateStr;\n  }\n\n  /**\n   * @param {*} err !Error most of time, string sometimes, * rarely.\n   * @return {string}\n   * @private\n   */\n  errorToString_(err) {\n    return err ? (err.message ? err.message : String(err)) : 'unknown error';\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dict} from '../../../src/core/types/object';\nimport {listen} from '../../../src/event-helper';\n\n/**\n * The list of touch event properites to copy.\n * @const {!Array<string>}\n */\nconst EVENT_PROPERTIES = [\n  'altKey',\n  'charCode',\n  'ctrlKey',\n  'detail',\n  'eventPhase',\n  'key',\n  'layerX',\n  'layerY',\n  'metaKey',\n  'pageX',\n  'pageY',\n  'returnValue',\n  'shiftKey',\n  'timeStamp',\n  'type',\n  'which',\n];\n\n/**\n * The list of touch properties to copy.\n * @const {!Array<string>}\n */\nconst TOUCH_PROPERTIES = [\n  'clientX',\n  'clientY',\n  'force',\n  'identifier',\n  'pageX',\n  'pageY',\n  'radiusX',\n  'radiusY',\n  'screenX',\n  'screenY',\n];\n\n/**\n * @const {string} Request name to enable/disable scrolling.\n */\nconst SCROLL_LOCK = 'scrollLock';\n\n/**\n * Forward touch events from the AMP doc to the viewer.\n */\nexport class TouchHandler {\n  /**\n   * @param {!Window} win\n   * @param {!./messaging/messaging.Messaging} messaging\n   */\n  constructor(win, messaging) {\n    /** @const {!Window} */\n    this.win = win;\n    /** @const @private {!./messaging/messaging.Messaging} */\n    this.messaging_ = messaging;\n    /**\n     * When true, prevent default to prevent scrolling.\n     * @private {boolean}\n     */\n    this.scrollLocked_ = false;\n    /**\n     * @const @private {!Array<function()>}\n     */\n    this.unlistenHandlers_ = [];\n\n    messaging.registerHandler(SCROLL_LOCK, this.scrollLockHandler_.bind(this));\n    this.listenForTouchEvents_();\n  }\n\n  /**\n   * @private\n   */\n  listenForTouchEvents_() {\n    const handleEvent = this.handleEvent_.bind(this);\n    const doc = this.win.document;\n\n    const options = {\n      capture: false,\n      // Use higher performance passive handlers (that cannot call\n      // preventDefault) when scroll locking is not active.\n      passive: !this.scrollLocked_,\n    };\n    this.unlistenHandlers_.push(\n      listen(doc, 'touchstart', handleEvent, options),\n      listen(doc, 'touchend', handleEvent, options),\n      listen(doc, 'touchmove', handleEvent, options)\n    );\n  }\n\n  /**\n   * @private\n   */\n  unlisten_() {\n    this.unlistenHandlers_.forEach((unlisten) => unlisten());\n    this.unlistenHandlers_.length = 0;\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  handleEvent_(e) {\n    switch (e.type) {\n      case 'touchstart':\n      case 'touchend':\n      case 'touchmove':\n        this.forwardEvent_(e);\n        break;\n      default:\n        return;\n    }\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  forwardEvent_(e) {\n    // Check if an AMP component is signaling that we should\n    // stop propagation of the event from bubbling up to the viewer\n    if (e?.shouldViewerCancelPropagation) {\n      e.stopImmediatePropagation();\n      return;\n    }\n    if (e && e.type) {\n      const msg = this.copyTouchEvent_(e);\n      this.messaging_.sendRequest(e.type, msg, false);\n    }\n    if (this.scrollLocked_ && e.cancelable) {\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * Makes a partial copy of the event.\n   * @param {!Event} e The event object to be copied.\n   * @return {!JsonObject}\n   * @private\n   */\n  copyTouchEvent_(e) {\n    const copiedEvent = this.copyProperties_(e, EVENT_PROPERTIES);\n    if (e.touches) {\n      copiedEvent['touches'] = this.copyTouches_(e.touches);\n    }\n    if (e.changedTouches) {\n      copiedEvent['changedTouches'] = this.copyTouches_(e.changedTouches);\n    }\n    return copiedEvent;\n  }\n\n  /**\n   * Copies an array of touches.\n   * @param {!Array<!Object>} touchList\n   * @return {!Array<!Object>}\n   * @private\n   */\n  copyTouches_(touchList) {\n    const copiedTouches = [];\n    for (let i = 0; i < touchList.length; i++) {\n      copiedTouches.push(this.copyProperties_(touchList[i], TOUCH_PROPERTIES));\n    }\n    return copiedTouches;\n  }\n\n  /**\n   * Copies specified properties of o to a new object.\n   * @param {!Object} o The source object.\n   * @param {!Array<string>} properties The properties to copy.\n   * @return {!JsonObject} The copy of o.\n   * @private\n   */\n  copyProperties_(o, properties) {\n    const copy = dict();\n    for (let i = 0; i < properties.length; i++) {\n      const p = properties[i];\n      if (o[p] !== undefined) {\n        copy[p] = o[p];\n      }\n    }\n    return copy;\n  }\n\n  /**\n   * Handles scrollLock requests from the viewer to change the scrollLock state.\n   * @param {string} type Unused.\n   * @param {*} payload True to disable event forwarding / lock scrolling.\n   * @param {boolean} awaitResponse\n   * @return {!Promise<?>|undefined}\n   * @private\n   */\n  scrollLockHandler_(type, payload, awaitResponse) {\n    this.scrollLocked_ = !!payload;\n    // Depending on scroll lock state re-register touch events.\n    // Passive events are used when scroll lock is not active.\n    this.unlisten_();\n    this.listenForTouchEvents_();\n    return awaitResponse ? Promise.resolve({}) : undefined;\n  }\n}\n", "/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {map} from '../types/object';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = map();\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './core/data-structures/lru-cache';\nimport {dict, hasOwn} from './core/types/object';\nimport {endsWith} from './core/types/string';\nimport {getMode} from './mode';\nimport {isArray} from './core/types';\nimport {parseQueryString} from './core/types/string/url';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {?} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * @param {string} uri\n * @return {boolean}\n */\nexport function isAmpScriptUri(uri) {\n  return uri.startsWith('amp-script:');\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FixedLayer} from '../../../src/service/fixed-layer';\nimport {FocusHandler} from './focus-handler';\nimport {\n  HighlightHandler,\n  HighlightInfoDef,\n  getHighlightParam,\n} from './highlight-handler';\nimport {KeyboardHandler} from './keyboard-handler';\nimport {\n  Messaging,\n  WindowPortEmulator,\n  parseMessage,\n} from './messaging/messaging';\nimport {Services} from '../../../src/services';\nimport {TouchHandler} from './touch-handler';\nimport {dev} from '../../../src/log';\nimport {dict} from '../../../src/core/types/object';\nimport {getAmpdoc} from '../../../src/service';\nimport {getData, listen, listenOnce} from '../../../src/event-helper';\nimport {getSourceUrl} from '../../../src/url';\nimport {isIframed} from '../../../src/dom';\n\nconst TAG = 'amp-viewer-integration';\nconst APP = '__AMPHTML__';\n\n/**\n * @enum {string}\n */\nconst RequestNames = {\n  CHANNEL_OPEN: 'channelOpen',\n  UNLOADED: 'unloaded',\n};\n\n/**\n * @fileoverview This is the communication protocol between AMP and the viewer.\n * This should be included in an AMP html file to communicate with the viewer.\n */\nexport class AmpViewerIntegration {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @const {!Window} win */\n    this.win = win;\n\n    /** @private {boolean} */\n    this.isWebView_ = false;\n\n    /** @private {boolean} */\n    this.isHandShakePoll_ = false;\n\n    /**\n     * @private {?HighlightHandler}\n     */\n    this.highlightHandler_ = null;\n  }\n\n  /**\n   * Initiate the handshake. If handshake confirmed, start listening for\n   * messages. The service is disabled if the viewerorigin parameter is\n   * absent.\n   * @return {!Promise<undefined>}\n   */\n  init() {\n    dev().fine(TAG, 'handshake init()');\n    const ampdoc = getAmpdoc(this.win.document);\n    const viewer = Services.viewerForDoc(ampdoc);\n    this.isWebView_ = viewer.getParam('webview') == '1';\n    this.isHandShakePoll_ = viewer.hasCapability('handshakepoll');\n    const messagingToken = viewer.getParam('messagingToken');\n    const origin = viewer.getParam('origin') || '';\n\n    if (!this.isWebView_ && !origin) {\n      return Promise.resolve();\n    }\n\n    const viewport = Services.viewportForDoc(ampdoc);\n    viewport.createFixedLayer(FixedLayer);\n\n    if (this.isWebView_ || this.isHandShakePoll_) {\n      const source = isIframed(this.win) ? this.win.parent : null;\n      return this.webviewPreHandshakePromise_(source, origin).then(\n        (receivedPort) => {\n          return this.openChannelAndStart_(\n            viewer,\n            ampdoc,\n            origin,\n            new Messaging(\n              this.win,\n              receivedPort,\n              this.isWebView_,\n              messagingToken\n            )\n          );\n        }\n      );\n    }\n    /** @type {?HighlightInfoDef} */\n    const highlightInfo = getHighlightParam(ampdoc);\n    if (highlightInfo) {\n      this.highlightHandler_ = new HighlightHandler(ampdoc, highlightInfo);\n    }\n\n    const port = new WindowPortEmulator(\n      this.win,\n      origin,\n      this.win.parent /* target */\n    );\n    return this.openChannelAndStart_(\n      viewer,\n      ampdoc,\n      origin,\n      new Messaging(this.win, port, this.isWebView_, messagingToken)\n    );\n  }\n\n  /**\n   * @param {?Window} source\n   * @param {string} origin\n   * @return {!Promise}\n   * @private\n   */\n  webviewPreHandshakePromise_(source, origin) {\n    return new Promise((resolve) => {\n      const unlisten = listen(this.win, 'message', (e) => {\n        dev().fine(\n          TAG,\n          'AMPDOC got a pre-handshake message:',\n          e.type,\n          getData(e)\n        );\n        const data = parseMessage(getData(e));\n        if (!data) {\n          return;\n        }\n        // Viewer says: \"I'm ready for you\"\n        if (\n          e.origin === origin &&\n          e.source === source &&\n          data.app == APP &&\n          data.name == 'handshake-poll'\n        ) {\n          if (this.isWebView_ && (!e.ports || !e.ports.length)) {\n            throw new Error(\n              'Did not receive communication port from the Viewer!'\n            );\n          }\n          const port =\n            e.ports && e.ports.length > 0\n              ? e.ports[0]\n              : new WindowPortEmulator(this.win, origin, this.win.parent);\n          resolve(port);\n          unlisten();\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {!../../../src/service/viewer-interface.ViewerInterface} viewer\n   * @param {!../../../src/service/ampdoc-impl.AmpDoc} ampdoc\n   * @param {string} origin\n   * @param {!Messaging} messaging\n   * @return {!Promise<undefined>}\n   * @private\n   */\n  openChannelAndStart_(viewer, ampdoc, origin, messaging) {\n    dev().fine(TAG, 'Send a handshake request');\n    const ampdocUrl = ampdoc.getUrl();\n    const srcUrl = getSourceUrl(ampdocUrl);\n    return messaging\n      .sendRequest(\n        RequestNames.CHANNEL_OPEN,\n        dict({\n          'url': ampdocUrl,\n          'sourceUrl': srcUrl,\n        }),\n        true /* awaitResponse */\n      )\n      .then(() => {\n        dev().fine(TAG, 'Channel has been opened!');\n        this.setup_(messaging, viewer, origin);\n      });\n  }\n\n  /**\n   * @param {!Messaging} messaging\n   * @param {!../../../src/service/viewer-interface.ViewerInterface} viewer\n   * @param {string} origin\n   * @return {Promise<*>|undefined}\n   * @private\n   */\n  setup_(messaging, viewer, origin) {\n    messaging.setDefaultHandler((type, payload, awaitResponse) => {\n      return viewer.receiveMessage(\n        type,\n        /** @type {!JsonObject} */ (payload),\n        awaitResponse\n      );\n    });\n\n    viewer.setMessageDeliverer(messaging.sendRequest.bind(messaging), origin);\n\n    // Unloading inside a viewer is considered an error so the viewer must be notified\n    // in order to display an error message.\n    // Note: This does not affect the BFCache since it is only installed for pages running\n    // within a viewer (which do no support B/F anyway).\n    listenOnce(\n      this.win,\n      /*OK*/ 'unload',\n      this.handleUnload_.bind(this, messaging)\n    );\n\n    if (viewer.hasCapability('swipe') || viewer.hasCapability('touch')) {\n      this.initTouchHandler_(messaging);\n    }\n    if (viewer.hasCapability('keyboard')) {\n      this.initKeyboardHandler_(messaging);\n    }\n    if (viewer.hasCapability('focus-rect')) {\n      this.initFocusHandler_(messaging);\n    }\n    if (this.highlightHandler_ != null) {\n      this.highlightHandler_.setupMessaging(messaging);\n    }\n  }\n\n  /**\n   * Notifies the viewer when this document is unloaded.\n   * @param {!Messaging} messaging\n   * @return {Promise<*>|undefined}\n   * @private\n   */\n  handleUnload_(messaging) {\n    return messaging.sendRequest(RequestNames.UNLOADED, dict(), true);\n  }\n\n  /**\n   * @param {!Messaging} messaging\n   * @private\n   */\n  initFocusHandler_(messaging) {\n    new FocusHandler(this.win, messaging);\n  }\n\n  /**\n   * @param {!Messaging} messaging\n   * @private\n   */\n  initTouchHandler_(messaging) {\n    new TouchHandler(this.win, messaging);\n  }\n\n  /**\n   * @param {!Messaging} messaging\n   * @private\n   */\n  initKeyboardHandler_(messaging) {\n    new KeyboardHandler(this.win, messaging);\n  }\n}\n\nAMP.extension(TAG, '0.1', function (AMP) {\n  new AmpViewerIntegration(AMP.win).init();\n});\n"],
  "mappings": "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",
  "names": []
}
